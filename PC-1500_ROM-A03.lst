0001   0000             ; PC-1500_ROM-A03.lh5801.asm
0002   0000             ; PEEK &C443=59 (&3B). PEEK &C5BD=129 (&81). 
0003   0000             ; Disassembly of ROM version 
0004   0000             ; To fold: Hightlight Ctrl+K Ctrl+,
0005   0000             ;
0006   0000             
0007   0000             ; PC-1500 versions via CGH
0008   0000             ; Checksum  Peeks     : Version    - Notes
0009   0000             ; &B1D9     {56, 129} : A01 = ROM0 - PC1500 (early-mid 1982) -> PEEK &E2B9 <> 56, 
0010   0000             ; which makes the keyboard driver unusable.
0011   0000             ; &NNNN     {xx, yy}  : A02 = ROM? - No information or to be specified.
0012   0000             ; &AE48     {59, 129} : A03 = ROM1 - PC1500 (12/1982) = PC2
0013   0000             ; &AA1E     {59, 74}  : A04 = ROM2 - PC1500 = PC1500A = PC2
0014   0000             ; &7CCD     {xx, yy}  : A0x = ROM(3) ? PC1600 (A priori the ROM1500 in the PC1600 is different)
0015   0000             ; (NB: the values in curly brackets are the results of PEEK &C443 and PEEK &C5BD respectively).
0016   0000             
0017   0000             ; The code to calculate the ROM checksum:
0018   0000             ; POKE &78C0,&34,&08,&0A,&2A,&68,&C0,&65,&FD,&CA,&6C,&00,&99,&07,&FB,&9A
0019   0000             ; Then do CALL &78C0,X as an output, the checksum is in X. If X is negative, press 65536-X
0020   0000             
0021   0000             #INCLUDE    "lib/PC-1500.lib"
0001+  0000              ; PC-1500 library file
0002+  0000             RAM_ST            = $4000 ; Start of RAM w/o RAM expansion
0003+  0000             RESMEM_ST         = $4008 ; Reserve memroy area area w/o RAM expansion (4008-40C4)
0004+  0000             PRGMEM_ST         = $40C5 ; Start of program memory w/o RAM expansion
0005+  0000             RAM_END           = $47FF ; End of RAM for stock, CE-151, CE-159
0006+  0000             SHADOW_RAM        = $7000 ; Shadow RAM. 7600-77FF mirrored at 7000-71FF, 7200-73FF, 7400-75FF
0007+  0000             SHADOW_RAM_SIZE   = $0600 ; 
0008+  0000             DISP_BUFF         = $7600 ; Display Buffer (7600-774F)
0009+  0000             DISP_BUFF_SIZE    = $0150 ; 
0010+  0000             STRING_VARS       = $7650 ; Fixed String variables (7650-77AF)
0011+  0000             STRING_VARS_SIZE  = $01AF ; 
0012+  0000             CPU_STACK         = $7800 ; CPU stack (7800-784F)
0013+  0000             CPU_STACK_SIZE    = $50   ; 
0014+  0000             KATAFLAGS         = $785D ; Katakana displayed flags
0015+  0000             KATACHAR          = $785E ; Address of Katakana character codes (H)
0016+  0000             ST_ROM_MOD        = $7860 ; 
0017+  0000             ROM_ST_H          = $7861 ; Start of Basic program in ROM module (H)
0018+  0000             ROM_ST_L          = $7862 ; Start of Basic program in ROM module (L)
0019+  0000             RAM_ST_H          = $7863 ; Start of RAM pointer (H)
0020+  0000             RAM_END_H         = $7864 ; End of RAM pointer (H)
0021+  0000             BASPRG_ST_H       = $7865 ; Start of Basic program in RAM (H)
0022+  0000             BASPRG_ST_L       = $7866 ; Start of Basic program in RAM (L)
0023+  0000             BASPRG_END_H      = $7867 ; End of Basic program in RAM (H)
0024+  0000             BASPRG_END_L      = $7868 ; End of Basic program in RAM (L)
0025+  0000             BASPRG_EDT_H      = $7869 ; Start of Basic program edit (H)
0026+  0000             BASPRG_EDT_L      = $786A ; Start of Basic program edit (L)
0027+  0000             BEEP_PTR          = $786B ; BEEP and RMT flags
0028+  0000             RCLTEMPBUFF       = $786C ; RCL Temp buffer (786C-7870)
0029+  0000             RCLTEMPBUFF_SIZE  = $05   ; 
0030+  0000             WAIT_CFG          = $7871 ; WAIT setting
0031+  0000             WAIT_CTR_H        = $7872 ; WAIT time counter (H)
0032+  0000             WAIT_CTR_L        = $7873 ; WAIT time counter (L)
0033+  0000             CURSOR_ENA        = $7874 ; Flags: 01=Cursor enabled, 80=display currently saved 7B10-7BAB
0034+  0000             CURSOR_PTR        = $7875 ; CURSOR POINTER (current display column number)
0035+  0000             CHARPOS_LCD       = $7876 ; Character position number in display, with INPUT statement
0036+  0000             BEEP_FREQ         = $7878 ; BEEP frequency
0037+  0000             CASS_FLAG         = $7879 ; Cassette Operation Parameter (tape interface flag)
0038+  0000             CURSOR_BLNK       = $787C ; Flags: 01=blink cursor enabled, 80=a character is now blinked
0039+  0000             BLNKD_CHAR_CODE   = $787D ; Code of character blinked
0040+  0000             CURS_POS_NBUF_H   = $787E ; Position of blink cursor in buffer (H)
0041+  0000             CURS_POS_NBUF_L   = $787F ; Position of blink cursor in buffer (L)
0042+  0000             DISPARAM          = $7880 ; Display Parameter: determines display at READY
0043+  0000             STK_PTR_GSB_FOR   = $7882 ; Stack pointer for GOSUB and FOR
0044+  0000             CURVARADD_H       = $7883 ; Current variable address (H)
0045+  0000             CURVARADD_L       = $7884 ; Current variable address (L)
0046+  0000             CURVARTYPE        = $7885 ; Current variable type
0047+  0000             LASTVARADD_H      = $7886 ; Last variable address (H)
0048+  0000             LASTVARADD_L      = $7887 ; Last variable address (L)
0049+  0000             LASTVARTYPE       = $7888 ; Last variable type
0050+  0000             BREAKPARAM        = $788A ; BREAK flag parameter
0051+  0000             INBUFPTR_L        = $788B ; Input Buffer pointer (L)
0052+  0000             NUMARGS           = $788C ; Number of function input arguments, array dim 1/2
0053+  0000             TRACE_ON          = $788D ; TRACE ON/OFF pointer: 00=OFF, >0=ON 
0054+  0000             TRACE_PARAM       = $788E ; TRACE Parameter
0055+  0000             FORNXT_STK_PTR    = $7890 ; FOR/NEXT stack pointer (L)
0056+  0000             GOSB_STK_PTR_L    = $7891 ; GOSUB stack pointer (L)
0057+  0000             BAS_DATA_STK_L    = $7892 ; BASIC DATA STACK pointer (L)
0058+  0000             BAS_PENOP_STK_L   = $7893 ; BASIC PENDING OP STACK pointer (L)
0059+  0000             STR_BUF_PTR_L     = $7894 ; String Buffer Pointer (L)
0060+  0000             USINGF            = $7895 ; USING F/F (format, decimal, comma, etc.)
0061+  0000             USINGM            = $7896 ; USING M integer part
0062+  0000             USING_CHR         = $7897 ; USING & character string
0063+  0000             USINGMD           = $7898 ; USING m decimal part
0064+  0000             VAR_START_H       = $7899 ; START OF VARIABLES in main memory (H)
0065+  0000             VAR_START_L       = $789A ; START OF VARIABLES in main memory (L)
0066+  0000             ERL               = $789B ; ERL, Error code
0067+  0000             CURR_LINE_H       = $789C ; Current line number (H)
0068+  0000             CURR_LINE_L       = $789D ; Current line number (L)
0069+  0000             CURR_TOP_H        = $789E ; Beginning address of current program (H)
0070+  0000             CURR_TOP_L        = $789F ; Beginning address of current program (L)
0071+  0000             PREV_ADD_H        = $78A0 ; Previous address (of preceeding line) (H)
0072+  0000             PREV_ADD_L        = $78A1 ; Previous address (of preceeding line) (L)
0073+  0000             PREV_LINE_H       = $78A2 ; Previous line number (H)
0074+  0000             PREV_LINE_L       = $78A3 ; Previous line number (L)
0075+  0000             PREV_TOP_H        = $78A4 ; Begginning of program containing previous line (H)
0076+  0000             PREV_TOP_L        = $78A5 ; Begginning of program containing previous line (L)
0077+  0000             SRCH_ADD_H        = $78A6 ; Address of linefound during search (H)
0078+  0000             SRCH_ADD_L        = $78A7 ; Address of linefound during search (L)
0079+  0000             SRCH_LINE_H       = $78A8 ; Line number found after search (H)
0080+  0000             SRCH_LINE_L       = $78A9 ; Line number found after search (L)
0081+  0000             SRCH_TOP_H        = $78AA ; Beginning of program containing SEARCH line (H)
0082+  0000             SRCH_TOP_L        = $78AB ; Beginning of program containing SEARCH line (L)
0083+  0000             BRK_ADD_H         = $78AC ; Break address (H)
0084+  0000             BRK_ADD_L         = $78AD ; Break address (L)
0085+  0000             BRK_LINE_H        = $78AE ; Break line number (H)
0086+  0000             BRK_LINE_L        = $78AF ; Break line number (L)
0087+  0000             BRK_TOP_H         = $78B0 ; Beginning of program containing BREAK line
0088+  0000             BRK_TOP_L         = $78B1 ; Beginning of program containing BREAK line
0089+  0000             ERR_ADD_H         = $78B2 ; Error address (H)
0090+  0000             ERR_ADD_L         = $78B3 ; Error address (L)
0091+  0000             ERR_LINE_H        = $78B4 ; Error line number (H)
0092+  0000             ERR_LINE_L        = $78B5 ; Error line number (L)
0093+  0000             ERR_TOP_H         = $78B6 ; Beginning address of program containing ERROR line (H)
0094+  0000             ERR_TOP_L         = $78B7 ; Beginning address of program containing ERROR line (L)
0095+  0000             ON_ERR_ADD_H      = $78B8 ; Address jumped to when error occures (H)
0096+  0000             ON_ERR_ADD_L      = $78B9 ; Address jumped to when error occures (L)
0097+  0000             ON_ERR_LINE_H     = $78BA ; Line number jumped to when error occures (H)
0098+  0000             ON_ERR_LINE_L     = $78BB ; Line number jumped to when error occures (L)
0099+  0000             ON_ERR_TOP_H      = $78BC ; Beginning of program containing ON ERROR line (H)
0100+  0000             ON_ERR_TOP_L      = $78BD ; Beginning of program containing ON ERROR line (L)
0101+  0000             DATA_PTR_H        = $78BE ; Pointer for data statement (H)
0102+  0000             DATA_PTR_L        = $78BF ; Pointer for data statement (H)
0103+  0000             FIXED_VARS        = $78C0 ; Fixed Variables (78C0-79CF)
0104+  0000             FIXED_VARS_SIZE   = $0110 ; 
0105+  0000             PU_PV             = $79D0 ; PU/PV flag, ROM Bank: 00=ROM 1, 01=ROM 2
0106+  0000             OPN               = $79D1 ; OPN device code: 60=LCD, 5C=CMT, 58=MGP. C4=LPRT, C0=COM
0107+  0000             UNDEF_REG_79FF    = $79FF ; LOCK mode: 00=LOCK, FF=UNLOCK
0108+  0000             ARX               = $7A00 ; Floating-Point accumulator
0109+  0000             ARX_SIZE          = $08   ; 
0110+  0000             ARZ               = $7A08 ; Scratch register (7A00-7A07)
0111+  0000             ARZ_SIZE          = $08   ; 
0112+  0000             ARY               = $7A10 ; Second operand (7A10-7A17)
0113+  0000             ARY_SIZE          = $08   ; 
0114+  0000             ARU               = $7A18 ; Scratch register (7A18-7A1F)
0115+  0000             ARU_SIZE          = $08   ; 
0116+  0000             ARV               = $7A20 ; Scratch register (7A2-7A27)
0117+  0000             ARV_SIZE          = $08   ; 
0118+  0000             ARW               = $7A28 ; Scratch register (7A28-7A2F)
0119+  0000             ARW_SIZE          = $08   ; 
0120+  0000             ARS               = $7A30 ; Temporary storage register (7A30-7A37)
0121+  0000             ARS_SIZE          = $08   ; 
0122+  0000             B_STACK           = $7A38 ; Basic Stack (7838-7AFF)
0123+  0000             B_STACK_SIZE      = $C8   ; 
0124+  0000             RND_VAL           = $7B00 ; Contain Random number value (7B00-7B07)
0125+  0000             RND_VAL_SIZE      =       ; S
0126+  0000             KEY_REPEAT        = $7B09 ; Key repeat speed
0127+  0000             APOW_CTR_H        = $7B0A ; Auto power down counter (H)
0128+  0000             APOW_CTR_M        = $7B0B ; Auto power down counter (M)
0129+  0000             APOW_CTR_L        = $7B0C ; Auto power down counter (L)
0130+  0000             CURS_BLNK_CTR     = $7B0D ; Cursor blink counter
0131+  0000             CURS_CTRL         = $7B0E ; Cursor Control Parameter
0132+  0000             KEY_LAST          = $7B0F ; Last pressed key code
0133+  0000             STR_BUF           = $7B10 ; String Buffer (7B10-7B5F)
0134+  0000             STR_BUF_SIZE      = $50   ; 
0135+  0000             OUT_BUF           = $7B60 ; Output Buffer (7B60-7BAF)
0136+  0000             OUT_BUF_SIZE      = $50   ; 
0137+  0000             IN_BUF            = $7BB0 ; Input Buffer (7BB0-7BFF)
0138+  0000             IN_BUF_SIZE       = $80   ; 
0139+  0000             
0140+  0000             PC1500_DIV_RESET  = $F004 ; PC1500_DIVIDER_RESET (CE1)
0141+  0000             PC1500_UREG_OUTP  = $F005 ; PC1500_U_REG_OUTPUT (CE1)
0142+  0000             PC1500_SER_XFR    = $F006 ; PC1500_SERIAL_XFR (CE1)
0143+  0000             PC1500_F_REG      = $F007 ; PC1500_F_REG_LD/DIV (CE1)
0144+  0000             PC1500_PRT_C      = $F008 ; PC1500_PRT_C (CE1)
0145+  0000             PC1500_G_REG      = $F009 ; PC1500_G_REG (CE1)
0146+  0000             PC1500_MSK_REG    = $F00A ; PC1500_MSK_REG (CE1)
0147+  0000             PC1500_IF_REG     = $F00B ; PC1500_IF_REG (CE1)
0148+  0000             PC1500_PRT_A_DIR  = $F00C ; PC1500_PRT_A_DIR (CE1)
0149+  0000             PC1500_PRT_B_DIR  = $F00D ; PC1500_PRT_B_DIR (CE1)
0150+  0000             PC1500_PRT_A      = $F00E ; PC1500_PRT_A (CE1)
0151+  0000             PC1500_PRT_B      = $F00F ; PC1500_PRT_B (CE1)0022   0000             #INCLUDE    "lib/CE-150.lib"
0001+  0000              ; CE-150 library file
0002+  0000             USER_CTRX_H       = $79E0 ; CE-150, USER COUNTER X (Counter for X coord. of pen) (H)
0003+  0000             USER_CTRX_L       = $79E1 ; CE-150, USER COUNTER X (Counter for X coord. of pen) (L)
0004+  0000             USER_CTRY_H       = $79E2 ; CE-150, USER COUNTER Y (Counter for Y coord. of pen) (H)
0005+  0000             USER_CTRY_L       = $79E3 ; CE-150, USER COUNTER Y (Counter for Y coord. of pen) (L)
0006+  0000             SCIS_CTRY_H       = $79E4 ; CE-150, SCISSORING COUNTER Y (Y dir scissoring counter) (H)
0007+  0000             SCIS_CTRY_L       = $79E5 ; CE-150, SCISSORING COUNTER Y (Y dir scissoring counter) (L)
0008+  0000             ABS_POSX          = $79E6 ; CE-150, ABSOLUTE POSITION X (X dir absolute point counter)
0009+  0000             SCIS_EXTY_H       = $79E7 ; CE-150, SCISSORING COUNTER X (X dir scissoring counter) (H)
0010+  0000             SCIS_EXTY_L       = $79E8 ; CE-150, SCISSORING COUNTER X (X dir scissoring counter) (L)
0011+  0000             PEN_UPDOWN        = $79E9 ; CE-150, Pen UP/DOWN
0012+  0000             LINE_TYPE         = $79EA ; CE-150, LINE TYPE (0 to 9), GRAPH mode
0013+  0000             DOT_LINE_CTR      = $79EB ; CE-150, Dotted line counter
0014+  0000             CURR_PEN          = $79EC ; CE-150, Current Pen position: 00=up, 01=down
0015+  0000             XMTR_HLD_CTR      = $79ED ; CE-150, X-motor hold counter
0016+  0000             MTR_PHASE         = $79EE ; CE-150, Motor Phase: stored in Port C
0017+  0000             YMTR_HLD_CTR      = $79EF ; CE-150, Y-Motor hold counter
0018+  0000             PRNT_MODE         = $79F0 ; CE-150, Print Mode: 00=TEXT, FF=GRAPH
0019+  0000             PRNT_DISABLE      = $79F1 ; CE-150, Printer disable
0020+  0000             PRNT_ROTATE       = $79F2 ; CE-150, ROTATE setting (0 to 3)
0021+  0000             PRNT_COLOR        = $79F3 ; CE-150, COLOR setting (0 to 3)
0022+  0000             PRNT_CSIZE        = $79F4 ; CE-150, CSIZE setting (0 to 3)
0023+  0000             PRNT_LLPARAM      = $79F5 ; CE-150, LPRINT/LLIST Parameter
0024+  0000             PRNT_TEMPM        = $79F6 ; CE-150, LINE=dir. param. LLIST=determine LF. COLOR=Pen location.
0025+  0000             PRNT_DTYPE        = $79F7 ; CE-150, Type of data LRPINTed: 00=numeric, FF=character string
0026+  0000             PRNT_TEMPP        = $79F8 ; CE-150, Temp storage of Pen location during paper feed
0027+  0000             PRNT_PWRINT       = $79F9 ; CE-150, Flag indicating power up/interrupt in progress
0028+  0000             PRNT_VEC          = $A000 ; CE-150 Character vectors (A000-A28A)
0029+  0000             PRNT_VEC_SIZE     = $028B ; 
0030+  0000             MGP1_150          = $A28B ; Start of MGP 1 program block
0031+  0000             COLDES            = $A519 ; CE-150 Color Designation
0032+  0000             MOTOFF            = $A769 ; CE-150 Printer motor OFF
0033+  0000             PRINT_150         = $A781 ; CE-150 Print ASCII character (no LF)
0034+  0000             MOTDRV            = $A8DD ; CE-150 Motor Drive, move pen
0035+  0000             LFEED             = $A951 ; CE-150 Line Feed
0036+  0000             NLFEED            = $AA04 ; CE-150 send #n line feeds to printer
0037+  0000             PENUPDOWN         = $AAE3 ; CE-150 Pen Up/Down
0038+  0000             GRPHPREP          = $ABEF ; CE-150 Switch from tect to graphics mode
0039+  0000             TEXT              = $ACA6 ; CE-150 TEXT
0040+  0000             TEXTPREP          = $ACD3 ; CE-150 Text mode preperation
0041+  0000             GRAPH             = $ACD3 ; CE-150 GRAPH
0042+  0000             CE150_MSK_REG     = $B00A ; (ME1)
0043+  0000             CE150_IF_REG      = $B00B ; (ME1)
0044+  0000             CE150_PRT_A_DIR   = $B00C ; (ME1)
0045+  0000             CE150_PRT_B_DIR   = $B00D ; (ME1)
0046+  0000             CE150_PRT_A       = $B00E ; (ME1)
0047+  0000             CE150_PRT_B       = $B00F ; (ME1)
0048+  0000             SORGN             = $B153 ; CE-150 SORGN
0049+  0000             ROTATE            = $B15A ; CE-150 ROTATE
0050+  0000             COLOR             = $B16A ; CE-150 COLOR
0051+  0000             CSIZE             = $B180 ; CE-150 CSIZE
0052+  0000             GLCURSOR          = $B191 ; CE-150 GLCURSOR
0053+  0000             LF                = $B1B4 ; CE-150 LF
0054+  0000             LINE              = $B222 ; CE-150 LINE
0055+  0000             RLINE             = $B224 ; CE-150 RLINE
0056+  0000             LPRINT_150        = $B2EC ; CE-150 LPRINT
0057+  0000             LLIST_150         = $B754 ; CE-150 LLIST
0058+  0000             SBRA4             = $B888 ; SBR A4 Start of program block CMT 2
0059+  0000             SBRA8             = $B88B ; SBR A8
0060+  0000             SBRAA             = $B88E ; SBR AA
0061+  0000             SBRAE             = $B891 ; SBR AE
0062+  0000             SBRB0             = $B894 ; SBR B0
0063+  0000             SBRB2             = $B897 ; SBR B2
0064+  0000             SBRB4             = $B89A ; SBR B4
0065+  0000             SBRB6             = $B89D ; SBR B6
0066+  0000             SBRB8             = $B8A0 ; SBR B8
0067+  0000             PCJUMP01          = $B8A3 ; Direct PC load from &E524
0068+  0000             CSAVE_150         = $B8A6 ; CE-150 CSAVE
0069+  0000             CLOAD_150         = $B8F9 ; CE-150 CLOAD
0070+  0000             MERGE_150         = $B994 ; CE-150 MERGE
0071+  0000             CHAIN_150         = $BB6A ; CE-150 CHAIN
0072+  0000             HEADERCREATE      = $BBD6 ; CE-150 Write tape synchronisation header
0073+  0000             TERMCMTIO         = $BBF5 ; CE-150 Finalisation of tape I/O control
0074+  0000             HEADERIO          = $BCE8 ; CE-150 Read tape synchronisation feader / Searh for filename
0075+  0000             FILETRSF          = $BD3C ; CE-150 Read / Write file to tape
0076+  0000             SAVEONECHR        = $BDCC ; CE-150 Send a character to tape
0077+  0000             LOADONECHR        = $BDF0 ; CE-150 Read a character from tape
0078+  0000             RMT               = $BEF9 ; CE-150 RMT
0079+  0000             REMOTEON          = $BF11 ; CE-150 Remote ON
0080+  0000             REMOTEOFF         = $BF43 ; CE-150 Remote OFF
0023   0000             #INCLUDE    "lib/CE-158.lib"
0001+  0000              ; CE-158 library file
0002+  0000             OUTSTAT_REG       = $7850 ; CE-158 OUTSTAT value
0003+  0000             RS232C            = $7851 ; CE-158 Console 1 (RS232C)
0004+  0000             CONSOLE2          = $7852 ; CE-158 Console 1 (//)
0005+  0000             CE158_UNDEF1      = $7853 ; CE-158 Undefined
0006+  0000             CE158_UNDEF2      = $7854 ; CE-158 Undefined
0007+  0000             CRLF_REG          = $7855 ; CE-158 Codes CR or LF
0008+  0000             ZONE_REG          = $7856 ; CE-158 ZONE
0009+  0000             SETDEV_REG        = $7857 ; CE-158 SETDEV value
0010+  0000             SETCOM_REG        = $7858 ; CE-158 SETCOM
0011+  0000             CE158_7859_UNDEF  = $7859 ; CE-158 Undefined
0012+  0000             CE158_785A_UNDEF  = $785A ; CE-158 Undefined
0013+  0000             CE158_REG_79DD    = $79DD ; Used for BPD command flags
0014+  0000             CE158_REG_79DE    = $79DE ; Unknown use
0015+  0000             CE158_REG_79DF    = $79DF ; Used for CLOAD/CSAVE BUSY annunciator blink counter
0016+  0000             CE158_REG_79FA    = $79FA ; Used by CE-158
0017+  0000             CE158_REG_79FB    = $79FB ; Used by CE-158
0018+  0000             CE158_REG_79FC    = $79FC ; Used by CE-158
0019+  0000             CE158_REG_79FD    = $79FD ; Used by CE-158
0020+  0000             CE158_REG_79FE    = $79FE ; Used by CE-158
0021+  0000             CE158_7B08        = $7B08 ; Used in CE-158 Low Bank
0022+  0000             CE158_DIV_RESET   = $D004 ; CE158_DIVIDER_RESET (ME1)
0023+  0000             CE158_UREG_OUTP   = $D005 ; CE158_U_REG_OUTPUT  (ME1)
0024+  0000             CE158_SER_XFR     = $D006 ; CE158_SERIAL_XFR  (ME1)
0025+  0000             CE158_FREG_LDIV   = $D007 ; CE158_F_REG_LD/DIV  (ME1)
0026+  0000             CE158_PRT_C       = $D008 ; CE158_PRT_C  (ME1)
0027+  0000             CE158_G_REG       = $D009 ; CE158_G_REG  (ME1)
0028+  0000             CE158_MSK_REG     = $D00A ; CE158_MSK_REG  (ME1)
0029+  0000             CE158_IF_REG      = $D00B ; CE158_IF_REG  (ME1)
0030+  0000             CE158_PRT_A_DIR   = $D00C ; CE158_PRT_A_DIR  (ME1)
0031+  0000             CE158_PRT_B_DIR   = $D00D ; CE158_PRT_B_DIR  (ME1)
0032+  0000             CE158_PRT_A       = $D00E ; CE158_PRT_A  (ME1)
0033+  0000             CE158_PRT_B       = $D00F ; CE158_PRT_B  (ME1)
0034+  0000             CE158_UART_DATAW  = $D200 ; UART_DATA_W
0035+  0000             CE158_UART_REGW   = $D201 ; UART_REG_W
0036+  0000             CE158_UART_DATAR  = $D202 ; UART_DATA_R
0037+  0000             CE158_UART_REGR   = $D203 ; UART_REG_R
0038+  0000             CE158_IR_PING     = $DC00 ; PC-1500 pings this address every ISR cycle (does nothing)
0039+  0000             CE158_IR_REG      = $DE00 ; Interrupt ID register, Bit 7 0 = INT, 1 = No INT.
0024   0000             #INCLUDE    "lib/PC-1500_Macros.lib"
0001+  0000             ; PC-1500 Macros
0002+  0000             ;------------------------------------------------------------------------------------------------------------
0003+  0000             ; Assembly macros used to encode arguments for lh5801 'macros' that take arguments inline after CALL
0004+  0000             
0005+  0000             #define EQU .EQU
0006+  0000             .MSFIRST
0007+  0000             
0008+  0000             COMMA:      EQU $2C                         ; ',' used for macros
0009+  0000             CR:         EQU $0D                         ; '/CR' used for macros
0010+  0000             DASH:       EQU $2D                         ; '-' used for macros
0011+  0000             EQUALS:     EQU $3D                         ; '-' used for macros
0012+  0000             HASH:       EQU $23                         ; '#' used for macros
0013+  0000             SEMI:       EQU $3B                         ; ';' used for macros
0014+  0000             QUOTE:      EQU $22                         ; '-' used for macros
0015+  0000             DOLLAR:     EQU $24                         ; '#' used for macros
0016+  0000             PERCENT:    EQU $25                         ; ';' used for macros
0017+  0000             
0018+  0000             
0019+  0000             TOK_OFF:    EQU $F19E                       ; OFF   command token
0020+  0000             TOK_ON:     EQU $F19C                       ; ON    command token
0021+  0000             TOK_TAB:    EQU $F0BB                       ; TAB   command token
0022+  0000             TOK_USING:  EQU $F085                       ; USING command token
0023+  0000             
0024+  0000             
0025+  0000             #define ABRF(n8)        .BYTE n8 - $ - 1    ; calculate forward branch
0026+  0000             #define ABYT(n8)        .BYTE n8            ; use byte verbatium
0027+  0000             #define ABYTL(n16)      .BYTE n16 & $FF     ; use byte verbatium
0028+  0000             #define ACHR(ch)        .BYTE ch            ; character
0029+  0000             #define AWRD(n16)       .WORD n16           ; use word value verbatum
0030+  0000             #define CNIB(n81,n82)   .BYTE ((n81 & $F0) | (n82 & $0F))   ; calculates control nibble
0031+  0000             #define HB(n16)         (n16 >> 8)          ; Return HB of 16bit value
0032+  0000             #define LB(n16)         (n16 & $FF)         ; Return HB of 16bit value
0033+  0000             #define HBO(n16,n8)     ((n16 + n8) >> 8)   ; Return HB of 16bit value
0034+  0000             #define LBO(n16,n8)     ((n16 + n8) & $FF)  ; Return HB of 16bit value
0035+  0000             
0036+  0000             ; CE-158 related
0037+  0000             #define HIGH_BANK       SPU \ SPV           ; Switch to High Bank
0038+  0000             #define LOW_BANK        RPU \ SPV           ; Switch to High Bank
0039+  0000             #define SETCOM_M        LDI A,$F9 \ STA (SETCOM_REG)    ; SETDEV to 2400,8,N,1
0040+  0000             #define SETDEV_M(n8)    LDI A,n8 \ STA (SETDEV_REG)     ; SETCOM to device passed
0041+  0000             #define SETOPN_M(n8)    LDI A,n8 \ STA (OPN)            ; Set OPN to n8 table
0042+  0000             
0043+  0000             KI:                 EQU $01                     ;
0044+  0000             DO:                 EQU $02                     ;
0045+  0000             PO:                 EQU $04                     ;
0046+  0000             CI:                 EQU $08                     ;
0047+  0000             CO:                 EQU $10                     ;
0048+  0000             U1:                 EQU $20                     ; U1, use UART 1 (Bit5=0=UART0, Bit5=1=UART1)
0049+  0000             PN:                 EQU $40                     ; PN, LPT port to input
0050+  0000             BP:                 EQU $80                     ; BP, enable BDP mode with U0
0051+  0000             
0052+  0000             #define ADDRCHK(add,location)        #if ($ > add)    ; check address
0053+  0000             #DEFCONT                     \!over_run
0054+  0000             #DEFCONT                     \.ECHO location
0055+  0000             #DEFCONT                     \.ECHO " address over run by "
0056+  0000             #DEFCONT                     \.ECHO ($ - add)
0057+  0000             #DEFCONT                     \.ECHO " bytes\r\n"
0058+  0000             #DEFCONT                     \#endif
0025   0000             
0026   0000             ; Modifications enabled by uncommenting #DEFINEs.
0027   0000             ; DEFINE  - Description
0028   0000             ; DEFINE  - Description
0029   0000             
0030   C000             .org $C000
0031   C000             
0032   C000             ;------------------------------------------------------------------------------
0033   C000             ; $C000 - BASIC Command Table $C000. This is not a normal token table though.
0034   C000             ; 
0035   C000             ; $C001~$C01C are two small OS functions
0036   C000             ; $C01D~$C01F is the normal TRACE_PARAM vector 
0037   C000             ; $C020~$C053 Token table pointers for for built in commands
0038   C000             ; $C054~$C34E Token table for built in commands
0039   C000             ;------------------------------------------------------------------------------
0040   C000             ST_MAIN_ROM: ; $C000
0041   C000 55              .BYTE  $55
0042   C001             
0043   C001             
0044   C001             
0045   C001             ;------------------------------------------------------------------------------
0046   C001             ; $C001 - (CA) Transfer 16-bit value from X-Reg to memory page 7BXX
0047   C001             ;
0048   C001             ;            Address: $C001 (CA)
0049   C001             ;                     D1: sets low byte in memory page 78XX
0050   C001             ;   Entry parameters: None
0051   C001             ;
0052   C001             ; Modified registers: X-Reg was saved after (7801 f.). U-Reg points to the 
0053   C001             ;                     next address of 7801. Accumulator = XL
0054   C001             ;   Error conditions: None
0055   C001             ;------------------------------------------------------------------------------
0056   C001             SA_XREG_2RAM: 
0057   C001 FD 2A           POP  U
0058   C003 65              LIN  U
0059   C004 FD A8           PSH  U
0060   C006 2A              STA  UL
0061   C007 68 78           LDI  UH,$78
0062   C009 84              LDA  XH
0063   C00A 61              SIN  U
0064   C00B 04              LDA  XL
0065   C00C 2E              STA  (U)
0066   C00D 9A              RTN
0067   C00E             
0068   C00E             
0069   C00E             
0070   C00E             ;------------------------------------------------------------------------------
0071   C00E             ; $C00E - (DA) Update current variable type
0072   C00E             ;
0073   C00E             ; Variable address in U-Reg, length from AR-X to variable pointer
0074   C00E             ;------------------------------------------------------------------------------
0075   C00E             SAVEVARPTR:
0076   C00E A5 7A 07        LDA  (ARX + $07)
0077   C011             
0078   C011             ; Store address from U-Reg and Accumulator.
0079   C011             SAVEVARPTR_1: ; $C011
0080   C011 AE 78 85        STA  (CURVARTYPE)   ; CURVARTYPE = $7885
0081   C014 24              LDA  UL
0082   C015 AE 78 84        STA  (CURVARADD_L)
0083   C018 A4              LDA  UH
0084   C019 AE 78 83        STA  (CURVARADD_H)
0085   C01C 9A              RTN
0086   C01D             
0087   C01D             
0088   C01D             
0089   C01D             ;------------------------------------------------------------------------------
0090   C01D             ; $C01D - Trace vector of this token table
0091   C01D             ;------------------------------------------------------------------------------
0092   C01D             TRACE_VEC: 
0093   C01D C4 AF           .WORD  $C4AF
0094   C01F FF              .BYTE  $FF
0095   C020             
0096   C020             
0097   C020             
0098   C020             ;------------------------------------------------------------------------------
0099   C020             ; $C020 - Token Tabale pointers. 
0100   C020             ;
0101   C020             ; The following addresses point to the 2nd letter of the Basic command, where
0102   C020             ; the 1st letter of the commands in the token table has changed.
0103   C020             ;------------------------------------------------------------------------------
0104   C020             ;% B_TBL_C000 START
0105   C020             
0106   C020             B_TBL_C000_A_KW: ; $C02
0107   C020 C0 56           .WORD  LET_A                                       ; 
0108   C022             
0109   C022             B_TBL_C000_B_KW: ; C022
0110   C022 C0 99           .WORD  LET_B                                       ; 
0111   C024             
0112   C024             B_TBL_C000_C_KW: ; $C024
0113   C024 C0 A2           .WORD  LET_C                                       ; 
0114   C026             
0115   C026             B_TBL_C000_D_KW: ; $C026
0116   C026 C0 E2           .WORD  LET_D                                       ; 
0117   C028             
0118   C028             B_TBL_C000_E_KW: ; $C028
0119   C028 C1 0E           .WORD  LET_E                                       ; 
0120   C02A             
0121   C02A             B_TBL_C000_F_KW: ; $C02A
0122   C02A C1 28           .WORD  LET_F                                       ; 
0123   C02C             
0124   C02C             B_TBL_C000_G_KW: ; $C02C
0125   C02C C1 30           .WORD  LET_G                                       ; 
0126   C02E             
0127   C02E             B_TBL_C000_H_KW: ; $C02E
0128   C02E 00 00           .WORD  $0000                                       ; 
0129   C030             
0130   C030             B_TBL_C000_I_KW: ; $C030
0131   C030 C1 63           .WORD  LET_I                                       ; 
0132   C032             
0133   C032             B_TBL_C000_J_KW: ; $C032
0134   C032 00 00           .WORD  $0000                                       ; 
0135   C034             
0136   C034             B_TBL_C000_K_KW: ; $C034
0137   C034 00 00           .WORD  $0000                                       ; 
0138   C036             
0139   C036             B_TBL_C000_L_KW: ; $C036
0140   C036 C1 87           .WORD  LET_L                                       ; 
0141   C038             
0142   C038             B_TBL_C000_M_KW: ; $C038
0143   C038 C1 C2           .WORD  LET_M                                       ; 
0144   C03A             
0145   C03A             B_TBL_C000_N_KW: ; $C03A
0146   C03A C1 D3           .WORD  LET_N                                       ; 
0147   C03C             
0148   C03C             B_TBL_C000_O_KW: ; $C03C
0149   C03C C1 EC           .WORD  LET_O                                       ; 
0150   C03E             
0151   C03E             B_TBL_C000_P_KW: ; $C03E
0152   C03E C2 0A           .WORD  LET_P                                       ; 
0153   C040             
0154   C040             B_TBL_C000_Q_KW: ; $C040
0155   C040 00 00           .WORD  $0000                                       ; 
0156   C042             
0157   C042             B_TBL_C000_R_KW: ; $C042
0158   C042 C2 5F           .WORD  LET_R                                       ;
0159   C044             
0160   C044             B_TBL_C000_S_KW: ; $C044
0161   C044 C2 B8           .WORD  LET_S                                       ;
0162   C046             
0163   C046             B_TBL_C000_T_KW: ; $C046
0164   C046 C2 F6           .WORD  LET_T                                       ;
0165   C048             
0166   C048             B_TBL_C000_U_KW: ; $C048
0167   C048 C3 2A           .WORD  LET_U                                       ;
0168   C04A             
0169   C04A             B_TBL_C000_V_KW: ; $C04A
0170   C04A C3 3F           .WORD  LET_V                                       ;
0171   C04C             
0172   C04C             B_TBL_C000_W_KW: ; $C04C
0173   C04C C3 47           .WORD  LET_W                                       ;
0174   C04E             
0175   C04E             B_TBL_C000_X_KW: ; $C04E
0176   C04E 00 00           .WORD  $0000                                       ;
0177   C050             
0178   C050             B_TBL_C000_Y_KW: ; $C050
0179   C050 00 00           .WORD  $0000                                       ;
0180   C052             
0181   C052             B_TBL_C000_Z_KW: ; $C052
0182   C052 00 00           .WORD  $0000                                       ;
0183   C054             
0184   C054             ;------------------------------------------------------------------------------
0185   C054             ; $C054 - TOKEN TABLE
0186   C054             ;------------------------------------------------------------------------------
0187   C054             B_TBL_C000_CMD_LST:     ;Token LB < 80 command is function, else is proceedure
0188   C054             
0189   C054             ;Ctrl nibble    Ctrl nib calc            Name                  Token  Vector
0190   C054             LET_A:  EQU ($ + 2) ; First keyword starting with 'A'. LET_A = Address of 'R' in AREAD
0191   C054             CN1:    EQU $A5 \ CNIB($B5,CN1)     \ .TEXT "AREAD"    \ .WORD $F180, $C684          ; $C684 - Basic command 
0191   C054 B5          
0191   C055 41 52 45 41 
0191   C059 44 
0191   C05A F1 80 C6 84 
0192   C05E             CN2:    EQU $A3 \ CNIB(CN1,CN2)     \ .TEXT "AND"      \ .WORD $F150, $CD89          ; $CD89 - Basic command
0192   C05E A3          
0192   C05F 41 4E 44    
0192   C062 F1 50 CD 89 
0193   C066             CN3:    EQU $A3 \ CNIB(CN2,CN3)     \ .TEXT "ABS"      \ .WORD $F170, $F597          ; $F597 - Basic command
0193   C066 A3          
0193   C067 41 42 53    
0193   C06A F1 70 F5 97 
0194   C06E             CN4:    EQU $A3 \ CNIB(CN3,CN4)     \ .TEXT "ATN"      \ .WORD $F175, $F496          ; $F496 - Basic command
0194   C06E A3          
0194   C06F 41 54 4E    
0194   C072 F1 75 F4 96 
0195   C076             CN5:    EQU $A3 \ CNIB(CN4,CN5)     \ .TEXT "ASN"      \ .WORD $F173, $F49A          ; $F49A - Basic command
0195   C076 A3          
0195   C077 41 53 4E    
0195   C07A F1 73 F4 9A 
0196   C07E             CN6:    EQU $A3 \ CNIB(CN5,CN6)     \ .TEXT "ACS"      \ .WORD $F174, $F492          ; $F492 - Basic command
0196   C07E A3          
0196   C07F 41 43 53    
0196   C082 F1 74 F4 92 
0197   C086             CN7:    EQU $83 \ CNIB(CN6,CN7)     \ .TEXT "ASC"      \ .WORD $F160, $D9DD          ; $D9DD - Basic command
0197   C086 A3          
0197   C087 41 53 43    
0197   C08A F1 60 D9 DD 
0198   C08E             CN8:    EQU $B4 \ CNIB(CN7,CN8)     \ .TEXT "ARUN"     \ .WORD $F181, $C684          ; $C684 - Basic command
0198   C08E 84          
0198   C08F 41 52 55 4E 
0198   C093 F1 81 C6 84 
0199   C097             
0200   C097             LET_B:  EQU ($ + 2) ; First keyword starting with 'B'. LET_B = Address of 'E' in BEEP
0201   C097             CN9:    EQU $D4 \ CNIB(CN8,CN9)     \ .TEXT "BEEP"     \ .WORD $F182, $E5C1          ; $E5C1 - Basic command
0201   C097 B4          
0201   C098 42 45 45 50 
0201   C09C F1 82 E5 C1 
0202   C0A0             
0203   C0A0             LET_C:  EQU ($ + 2) ; First keyword starting with 'C'. LET_C = Address of 'O' in CONT
0204   C0A0             CN10:   EQU $84 \ CNIB(CN9,CN10)    \ .TEXT "CONT"     \ .WORD $F183, $C8C7          ; $C8C7 - Basic command
0204   C0A0 D4          
0204   C0A1 43 4F 4E 54 
0204   C0A5 F1 83 C8 C7 
0205   C0A9             CN11:   EQU $C6 \ CNIB(CN10,CN11)   \ .TEXT "CURSOR"   \ .WORD $F084, $E846          ; $E846 - Basic command
0205   C0A9 86          
0205   C0AA 43 55 52 53 
0205   C0AE 4F 52 
0205   C0B0 F0 84 E8 46 
0206   C0B4             CN12:   EQU $C5 \ CNIB(CN11,CN12)   \ .TEXT "CLEAR"    \ .WORD $F187, $C85F          ; $C85F - Basic command
0206   C0B4 C5          
0206   C0B5 43 4C 45 41 
0206   C0B9 52 
0206   C0BA F1 87 C8 5F 
0207   C0BE             CN13:   EQU $C3 \ CNIB(CN12,CN13)   \ .TEXT "CLS"      \ .WORD $F088, $E865          ; $E865 - Basic command
0207   C0BE C3          
0207   C0BF 43 4C 53    
0207   C0C2 F0 88 E8 65 
0208   C0C6             CN14:   EQU $A3 \ CNIB(CN13,CN14)   \ .TEXT "COS"      \ .WORD $F17E, $F391          ; $F391 - Basic command
0208   C0C6 C3          
0208   C0C7 43 4F 53    
0208   C0CA F1 7E F3 91 
0209   C0CE             CN15:   EQU $A4 \ CNIB(CN14,CN15)   \ .TEXT "CHR$"     \ .WORD $F163, $D9B1          ; $D9B1 - Basic command
0209   C0CE A4          
0209   C0CF 43 48 52 24 
0209   C0D3 F1 63 D9 B1 
0210   C0D7             CN16:   EQU $D4 \ CNIB(CN15,CN16)   \ .TEXT "CALL"     \ .WORD $F18A, $C863          ; $C863 - Basic command
0210   C0D7 A4          
0210   C0D8 43 41 4C 4C 
0210   C0DC F1 8A C8 63 
0211   C0E0             
0212   C0E0             LET_D:  EQU ($ + 2) ; First keyword starting with 'D'. LET_D= Address of 'I' in DIM
0213   C0E0             CN17:   EQU $C3 \ CNIB(CN16,CN17)   \ .TEXT "DIM"      \ .WORD $F18B, $C988          ; $C988 - Basic command
0213   C0E0 D3          
0213   C0E1 44 49 4D    
0213   C0E4 F1 8B C9 88 
0214   C0E8             CN18:   EQU $C6 \ CNIB(CN17,CN18)   \ .TEXT "DEGREE"   \ .WORD $F18C, $C697          ; $C697 - Basic command
0214   C0E8 C6          
0214   C0E9 44 45 47 52 
0214   C0ED 45 45 
0214   C0EF F1 8C C6 97 
0215   C0F3             CN19:   EQU $A3 \ CNIB(CN18,CN19)   \ .TEXT "DEG"      \ .WORD $F165, $F531          ; $F531 - Basic command
0215   C0F3 C3          
0215   C0F4 44 45 47    
0215   C0F7 F1 65 F5 31 
0216   C0FB             CN20:   EQU $A3 \ CNIB(CN19,CN20)   \ .TEXT "DMS"      \ .WORD $F166, $F564          ; $F654 - Basic command
0216   C0FB A3          
0216   C0FC 44 4D 53    
0216   C0FF F1 66 F5 64 
0217   C103             CN21:   EQU $B4 \ CNIB(CN20,CN21)   \ .TEXT "DATA"     \ .WORD $F18D, $C684          ; $C684 - Basic command
0217   C103 A4          
0217   C104 44 41 54 41 
0217   C108 F1 8D C6 84 
0218   C10C             
0219   C10C             LET_E:  EQU ($ + 2) ; First keyword starting with 'E'. LET_E = Address of 'N' in END
0220   C10C             CN22:   EQU $A3 \ CNIB(CN21,CN22)   \ .TEXT "END"      \ .WORD $F18E, $C50D          ; $C50D - Basic command
0220   C10C B3          
0220   C10D 45 4E 44    
0220   C110 F1 8E C5 0D 
0221   C114             CN23:   EQU $A3 \ CNIB(CN22,CN23)   \ .TEXT "EXP"      \ .WORD $F178, $F1CB          ; $F1CB - Basic command
0221   C114 A3          
0221   C115 45 58 50    
0221   C118 F1 78 F1 CB 
0222   C11C             CN24:   EQU $B5 \ CNIB(CN23,CN24)   \ .TEXT "ERROR"    \ .WORD $F1B4, $CD89          ; $CD89 - Basic command
0222   C11C A5          
0222   C11D 45 52 52 4F 
0222   C121 52 
0222   C122 F1 B4 CD 89 
0223   C126             
0224   C126             LET_F:  EQU ($ + 2) ; First keyword starting with 'F'. LET_F = Address of 'O' in FOR
0225   C126             CN25:   EQU $B3 \ CNIB(CN24,CN25)   \ .TEXT "FOR"      \ .WORD $F1A5, $C711          ; $C711 - Basic command
0225   C126 B3          
0225   C127 46 4F 52    
0225   C12A F1 A5 C7 11 
0226   C12E             
0227   C12E             LET_G:  EQU ($ + 2) ; First keyword starting with 'G'. LET_G = Address of 'O' in GOTO
0228   C12E             CN26:   EQU $C4 \ CNIB(CN25,CN26)   \ .TEXT "GOTO"     \ .WORD $F192, $C515          ; $C515 - Basic command
0228   C12E B4          
0228   C12F 47 4F 54 4F 
0228   C133 F1 92 C5 15 
0229   C137             CN27:   EQU $A5 \ CNIB(CN26,CN27)   \ .TEXT "GOSUB"    \ .WORD $F194, $C64E          ; $C64E - Basic command
0229   C137 C5          
0229   C138 47 4F 53 55 
0229   C13C 42 
0229   C13D F1 94 C6 4E 
0230   C141             CN28:   EQU $C6 \ CNIB(CN27,CN28)   \ .TEXT "GPRINT"   \ .WORD $F09F, $E7AC          ; $E7AC - Basic command
0230   C141 A6          
0230   C142 47 50 52 49 
0230   C146 4E 54 
0230   C148 F0 9F E7 AC 
0231   C14C             CN29:   EQU $C7 \ CNIB(CN28,CN29)   \ .TEXT "GCURSOR"  \ .WORD $F093, $E83E          ; $E83E - Basic command
0231   C14C C7          
0231   C14D 47 43 55 52 
0231   C151 53 4F 52 
0231   C154 F0 93 E8 3E 
0232   C158             CN30:   EQU $D4 \ CNIB(CN29,CN30)   \ .TEXT "GRAD"     \ .WORD $F186, $C6A8          ; $C6A8 - Basic command
0232   C158 C4          
0232   C159 47 52 41 44 
0232   C15D F1 86 C6 A8 
0233   C161             
0234   C161             LET_I:  EQU ($ + 2) ; First keyword starting with 'I'. LET_I = Address of 'N' in INPUT
0235   C161             CN31:   EQU $C5 \ CNIB(CN30,CN31)   \ .TEXT "INPUT"    \ .WORD $F091, $C8FA          ; $C8FA - Basic command
0235   C161 D5          
0235   C162 49 4E 50 55 
0235   C166 54 
0235   C167 F0 91 C8 FA 
0236   C16B             CN32:   EQU $A2 \ CNIB(CN31,CN32)   \ .TEXT "IF"       \ .WORD $F196, $C5B4          ; $C5B4 - Basic command
0236   C16B C2          
0236   C16C 49 46       
0236   C16E F1 96 C5 B4 
0237   C172             CN33:   EQU $A3 \ CNIB(CN32,CN33)   \ .TEXT "INT"      \ .WORD $F171, $F5BE          ; $F5BE - Basic command
0237   C172 A3          
0237   C173 49 4E 54    
0237   C176 F1 71 F5 BE 
0238   C17A             CN34:   EQU $D6 \ CNIB(CN33,CN34)   \ .TEXT "INKEY$"   \ .WORD $F15C, $D9AA          ; $D9AA - Basic command
0238   C17A A6          
0238   C17B 49 4E 4B 45 
0238   C17F 59 24 
0238   C181 F1 5C D9 AA 
0239   C185             
0240   C185             LET_L:  EQU ($ + 2) ; First keyword starting with 'L'. LET_L = Address of 'I' in LIST
0241   C185             CN35:   EQU $84 \ CNIB(CN34,CN35)   \ .TEXT "LIST"     \ .WORD $F090, $C96E          ; $C96E - Basic command
0241   C185 D4          
0241   C186 4C 49 53 54 
0241   C18A F0 90 C9 6E 
0242   C18E             CN36:   EQU $A3 \ CNIB(CN35,CN36)   \ .TEXT "LOG"      \ .WORD $F177, $F165          ; $F165 - Basic command
0242   C18E 83          
0242   C18F 4C 4F 47    
0242   C192 F1 77 F1 65 
0243   C196             CN37:   EQU $A2 \ CNIB(CN36,CN37)   \ .TEXT "LN"       \ .WORD $F176, $F161          ; $F161 - Basic command
0243   C196 A2          
0243   C197 4C 4E       
0243   C199 F1 76 F1 61 
0244   C19D             CN38:   EQU $A3 \ CNIB(CN37,CN38)   \ .TEXT "LET"      \ .WORD $F198, $C458          ; $C458 - Basic command
0244   C19D A3          
0244   C19E 4C 45 54    
0244   C1A1 F1 98 C4 58 
0245   C1A5             CN39:   EQU $83 \ CNIB(CN38,CN39)   \ .TEXT "LEN"      \ .WORD $F164, $D9DD          ; $D9DD - Basic command
0245   C1A5 A3          
0245   C1A6 4C 45 4E    
0245   C1A9 F1 64 D9 DD 
0246   C1AD             CN40:   EQU $C5 \ CNIB(CN39,CN40)   \ .TEXT "LEFT$"    \ .WORD $F17A, $D9F3          ; $D9F3 - Basic command
0246   C1AD 85          
0246   C1AE 4C 45 46 54 
0246   C1B2 24 
0246   C1B3 F1 7A D9 F3 
0247   C1B7             CN41:   EQU $D4 \ CNIB(CN40,CN41)   \ .TEXT "LOCK"     \ .WORD $F1B5, $C968          ; $C968 - Basic command
0247   C1B7 C4          
0247   C1B8 4C 4F 43 4B 
0247   C1BC F1 B5 C9 68 
0248   C1C0             
0249   C1C0             LET_M:  EQU ($ + 2) ; First keyword starting with 'M'. LET_M = Address of 'E' in MEM
0250   C1C0             CN42:   EQU $C3 \ CNIB(CN41,CN42)   \ .TEXT "MEM"      \ .WORD $F158, $DA5D          ; $DA5D - Basic command
0250   C1C0 D3          
0250   C1C1 4D 45 4D    
0250   C1C4 F1 58 DA 5D 
0251   C1C8             CN43:   EQU $D4 \ CNIB(CN42,CN43)   \ .TEXT "MID$"     \ .WORD $F17B, $D9F3          ; $D9F3 - Basic command
0251   C1C8 C4          
0251   C1C9 4D 49 44 24 
0251   C1CD F1 7B D9 F3 
0252   C1D1             
0253   C1D1             LET_N:  EQU ($ + 2) ; First keyword starting with 'N'. LET_N = Address of 'E' in NEXT
0254   C1D1             CN44:   EQU $A4 \ CNIB(CN43,CN44)   \ .TEXT "NEXT"     \ .WORD $F19A, $C705          ; $C705 - Basic command
0254   C1D1 D4          
0254   C1D2 4E 45 58 54 
0254   C1D6 F1 9A C7 05 
0255   C1DA             CN45:   EQU $A3 \ CNIB(CN44,CN45)   \ .TEXT "NOT"      \ .WORD $F16D, $599E          ; $599E - Basic command
0255   C1DA A3          
0255   C1DB 4E 4F 54    
0255   C1DE F1 6D 59 9E 
0256   C1E2             CN46:   EQU $93 \ CNIB(CN45,CN46)   \ .TEXT "NEW"      \ .WORD $F19B, $C80A          ; $C80A - Basic command
0256   C1E2 A3          
0256   C1E3 4E 45 57    
0256   C1E6 F1 9B C8 0A 
0257   C1EA             
0258   C1EA             LET_O:  EQU ($ + 2) ; First keyword starting with 'O'. LET_O = Address of 'N' in ON
0259   C1EA             CN47:   EQU $A2 \ CNIB(CN46,CN47)   \ .TEXT "ON"       \ .WORD $F19C, $C5E0          ; $C5E0 - Basic command
0259   C1EA 92          
0259   C1EB 4F 4E       
0259   C1ED F1 9C C5 E0 
0260   C1F1             CN48:   EQU $A2 \ CNIB(CN47,CN48)   \ .TEXT "OR"       \ .WORD $F151, $CD89          ; $CD89 - Basic command
0260   C1F1 A2          
0260   C1F2 4F 52       
0260   C1F4 F1 51 CD 89 
0261   C1F8             CN49:   EQU $C3 \ CNIB(CN48,CN49)   \ .TEXT "OPN"      \ .WORD $F19D, $E457          ; $E457 - Basic command
0261   C1F8 A3          
0261   C1F9 4F 50 4E    
0261   C1FC F1 9D E4 57 
0262   C200             CN50:   EQU $B3 \ CNIB(CN49,CN50)   \ .TEXT "OFF"      \ .WORD $F19E, $CD89          ; $CD89 - Basic command
0262   C200 C3          
0262   C201 4F 46 46    
0262   C204 F1 9E CD 89 
0263   C208             
0264   C208             LET_P:  EQU ($ + 2) ; First keyword starting with 'P'. LET_P = Address of 'R' in PRINT
0265   C208             CN51:   EQU $c5 \ CNIB(CN50,CN51)   \ .TEXT "PRINT"    \ .WORD $F097, $E4EB          ; $E4EB - Basic command
0265   C208 B5          
0265   C209 50 52 49 4E 
0265   C20D 54 
0265   C20E F0 97 E4 EB 
0266   C212             CN52:   EQU $C2 \ CNIB(CN51,CN52)   \ .TEXT "PI"       \ .WORD $F15D, $F5B5          ; $F5B5 - Basic command
0266   C212 C2          
0266   C213 50 49       
0266   C215 F1 5D F5 B5 
0267   C219             CN53:   EQU $A5 \ CNIB(CN52,CN53)   \ .TEXT "PEEK#"    \ .WORD $F16E, $D993          ; $D993 - Basic command
0267   C219 C5          
0267   C21A 50 45 45 4B 
0267   C21E 23 
0267   C21F F1 6E D9 93 
0268   C223             CN54:   EQU $A4 \ CNIB(CN53,CN54)   \ .TEXT "PEEK"     \ .WORD $F16F, $D993          ; $D993 - Basic command
0268   C223 A4          
0268   C224 50 45 45 4B 
0268   C228 F1 6F D9 93 
0269   C22C             CN55:   EQU $C5 \ CNIB(CN54,CN55)   \ .TEXT "POKE#"    \ .WORD $F1A0, $C778          ; $C778 - Basic command
0269   C22C A5          
0269   C22D 50 4F 4B 45 
0269   C231 23 
0269   C232 F1 A0 C7 78 
0270   C236             CN56:   EQU $C4 \ CNIB(CN55,CN56)   \ .TEXT "POKE"     \ .WORD $F1A1, $C777          ; $C777 - Basic command
0270   C236 C4          
0270   C237 50 4F 4B 45 
0270   C23B F1 A1 C7 77 
0271   C23F             CN57:   EQU $A5 \ CNIB(CN56,CN57)   \ .TEXT "POINT"    \ .WORD $F168, $EECB          ; $EECB - Basic command
0271   C23F C5          
0271   C240 50 4F 49 4E 
0271   C244 54 
0271   C245 F1 68 EE CB 
0272   C249             CN58:   EQU $A5 \ CNIB(CN57,CN58)   \ .TEXT "PAUSE"    \ .WORD $F1A2, $E6A5          ; $E6A5 - Basic command
0272   C249 A5          
0272   C24A 50 41 55 53 
0272   C24E 45 
0272   C24F F1 A2 E6 A5 
0273   C253             CN59:   EQU $B5 \ CNIB(CN58,CN59)   \ .TEXT "P    "    \ .WORD $F1A3, $CD89          ; $CD89 - Basic command
0273   C253 A5          
0273   C254 50 20 20 20 
0273   C258 20 
0273   C259 F1 A3 CD 89 
0274   C25D             
0275   C25D             LET_R:  EQU ($ + 2) ; First keyword starting with 'R'. LET_R = Address of 'U' in RUN
0276   C25D             CN60:   EQU $83 \ CNIB(CN59,CN60)   \ .TEXT "RUN"      \ .WORD $F1A4, $C8B4          ; $C8B4 - Basic command
0276   C25D B3          
0276   C25E 52 55 4E    
0276   C261 F1 A4 C8 B4 
0277   C265             CN61:   EQU $A6 \ CNIB(CN60,CN61)   \ .TEXT "RETURN"   \ .WORD $F199, $C6AC          ; $C6AC - Basic command
0277   C265 86          
0277   C266 52 45 54 55 
0277   C26A 52 4E 
0277   C26C F1 99 C6 AC 
0278   C270             CN62:   EQU $A4 \ CNIB(CN61,CN62)   \ .TEXT "READ"     \ .WORD $F1A6, $C7B8          ; $C7B8 - Basic command
0278   C270 A4          
0278   C271 52 45 41 44 
0278   C275 F1 A6 C7 B8 
0279   C279             CN63:   EQU $A7 \ CNIB(CN62,CN63)   \ .TEXT "RESTORE"  \ .WORD $F1A7, $C7A2          ; $C7A2 - Basic command
0279   C279 A7          
0279   C27A 52 45 53 54 
0279   C27E 4F 52 45 
0279   C281 F1 A7 C7 A2 
0280   C285             CN64:   EQU $A3 \ CNIB(CN63,CN64)   \ .TEXT "RND"      \ .WORD $F17C, $F5DD          ; $F5DD - Basic command
0280   C285 A3          
0280   C286 52 4E 44    
0280   C289 F1 7C F5 DD 
0281   C28D             CN65:   EQU $C6 \ CNIB(CN64,CN65)   \ .TEXT "RANDOM"   \ .WORD $F1A8, $F641          ; $F641 - Basic command
0281   C28D A6          
0281   C28E 52 41 4E 44 
0281   C292 4F 4D 
0281   C294 F1 A8 F6 41 
0282   C298             CN66:   EQU $C6 \ CNIB(CN65,CN66)   \ .TEXT "RIGHT$"   \ .WORD $F172, $D9F3          ; $D9F3 - Basic command
0282   C298 C6          
0282   C299 52 49 47 48 
0282   C29D 54 24 
0282   C29F F1 72 D9 F3 
0283   C2A3             CN67:   EQU $C6 \ CNIB(CN66,CN67)   \ .TEXT "RADIAN"   \ .WORD $F1AA, $C6A4          ; $C6A4 - Basic command
0283   C2A3 C6          
0283   C2A4 52 41 44 49 
0283   C2A8 41 4E 
0283   C2AA F1 AA C6 A4 
0284   C2AE             CN68:   EQU $B3 \ CNIB(CN67,CN68)   \ .TEXT "REM"      \ .WORD $F1AB, $C676          ; $C676 - Basic command
0284   C2AE C3          
0284   C2AF 52 45 4D    
0284   C2B2 F1 AB C6 76 
0285   C2B6             
0286   C2B6             LET_S:  EQU ($ + 2) ; First keyword starting with 'S'. LET_S = Address of 'T' in STOP
0287   C2B6             CN69:   EQU $A4 \ CNIB(CN68,CN69)   \ .TEXT "STOP"     \ .WORD $F1AC, $C4B6          ; $C4B6 - Basic command
0287   C2B6 B4          
0287   C2B7 53 54 4F 50 
0287   C2BB F1 AC C4 B6 
0288   C2BF             CN70:   EQU $A3 \ CNIB(CN69,CN70)   \ .TEXT "SQR"      \ .WORD $F16B, $F0E9          ; $F0E9 - Basic command
0288   C2BF A3          
0288   C2C0 53 51 52    
0288   C2C3 F1 6B F0 E9 
0289   C2C7             CN71:   EQU $A3 \ CNIB(CN70,CN71)   \ .TEXT "SIN"      \ .WORD $F17D, $F3A2          ; $F3A2 - Basic command
0289   C2C7 A3          
0289   C2C8 53 49 4E    
0289   C2CB F1 7D F3 A2 
0290   C2CF             CN72:   EQU $A3 \ CNIB(CN71,CN72)   \ .TEXT "SGN"      \ .WORD $F179, $F59D          ; $F59D - Basic command
0290   C2CF A3          
0290   C2D0 53 47 4E    
0290   C2D3 F1 79 F5 9D 
0291   C2D7             CN73:   EQU $A4 \ CNIB(CN72,CN73)   \ .TEXT "STR$"     \ .WORD $F161, $D9CE          ; $D9CE - Basic command
0291   C2D7 A4          
0291   C2D8 53 54 52 24 
0291   C2DC F1 61 D9 CE 
0292   C2E0             CN74:   EQU $A6 \ CNIB(CN73,CN74)   \ .TEXT "STATUS"   \ .WORD $F167, $5A44          ; $5A44 - Basic command
0292   C2E0 A6          
0292   C2E1 53 54 41 54 
0292   C2E5 55 53 
0292   C2E7 F1 67 5A 44 
0293   C2EB             CN75:   EQU $B4 \ CNIB(CN74,CN75)   \ .TEXT "STEP"     \ .WORD $F1AD, $CD89          ; $CD89 - Basic command
0293   C2EB A4          
0293   C2EC 53 54 45 50 
0293   C2F0 F1 AD CD 89 
0294   C2F4             
0295   C2F4             LET_T:  EQU ($ + 2) ; First keyword starting with 'T'. LET_T = Address of 'H' in THEN
0296   C2F4             CN76:   EQU $A4 \ CNIB(CN75,CN76)   \ .TEXT "THEN"     \ .WORD $F1AE, $CD89          ; $CD89 - Basic command
0296   C2F4 B4          
0296   C2F5 54 48 45 4E 
0296   C2F9 F1 AE CD 89 
0297   C2FD             CN77:   EQU $A3 \ CNIB(CN76,CN77)   \ .TEXT "TAN"      \ .WORD $F17F, $F39E          ; $F39E - Basic command
0297   C2FD A3          
0297   C2FE 54 41 4E    
0297   C301 F1 7F F3 9E 
0298   C305             CN78:   EQU $C4 \ CNIB(CN77,CN78)   \ .TEXT "TIME"     \ .WORD $F15B, $DE82          ; $DE82 - Basic command
0298   C305 A4          
0298   C306 54 49 4D 45 
0298   C30A F1 5B DE 82 
0299   C30E             CN79:   EQU $C4 \ CNIB(CN78,CN79)   \ .TEXT "TRON"     \ .WORD $F1AF, $C68C          ; $C68C - Basic command
0299   C30E C4          
0299   C30F 54 52 4F 4E 
0299   C313 F1 AF C6 8C 
0300   C317             CN80:   EQU $C5 \ CNIB(CN79,CN80)   \ .TEXT "TROFF"    \ .WORD $F1B0, $C693          ; $C693 - Basic command
0300   C317 C5          
0300   C318 54 52 4F 46 
0300   C31C 46 
0300   C31D F1 B0 C6 93 
0301   C321             CN81:   EQU $B2 \ CNIB(CN80,CN81)   \ .TEXT "TO"       \ .WORD $F1B1, $CD89          ; $CD89 - Basic command
0301   C321 C2          
0301   C322 54 4F       
0301   C324 F1 B1 CD 89 
0302   C328             
0303   C328             LET_U:  EQU ($ + 2) ; First keyword starting with 'U'. LET_U = Address of 'S' in USING
0304   C328             CN82:   EQU $C5 \ CNIB(CN81,CN82)   \ .TEXT "USING"    \ .WORD $F085, $C67C          ; $C67C - Basic command
0304   C328 B5          
0304   C329 55 53 49 4E 
0304   C32D 47 
0304   C32E F0 85 C6 7C 
0305   C332             CN83:   EQU $D6 \ CNIB(CN82,CN83)   \ .TEXT "UNLOCK"   \ .WORD $F1B6, $C96A          ; $C96A - Basic command
0305   C332 C6          
0305   C333 55 4E 4C 4F 
0305   C337 43 4B 
0305   C339 F1 B6 C9 6A 
0306   C33D             
0307   C33D             LET_V:  EQU ($ + 2) ; First keyword starting with 'V'. LET_V = Address of 'A' in VAL
0308   C33D             CN84:   EQU $93 \ CNIB(CN83,CN84)   \ .TEXT "VAL"      \ .WORD $F162, $D9D7          ; $D9D7 - Basic command
0308   C33D D3          
0308   C33E 56 41 4C    
0308   C341 F1 62 D9 D7 
0309   C345             
0310   C345             LET_W:  EQU ($ + 2) ; First keyword starting with 'W'. LET_W = Address of 'A' in WAIT
0311   C345             CN85:   EQU $94 \ CNIB(CN84,CN85)   \ .TEXT "WAIT"     \ .WORD $F1B3, $E86A          ; $E86A - Basic command
0311   C345 94          
0311   C346 57 41 49 54 
0311   C34A F1 B3 E8 6A 
0312   C34E             
0313   C34E             CN86:  EQU $D0 \ .BYTE CN86
0313   C34E D0          
0314   C34F             
0315   C34F             B_TBL_8000_END:
0316   C34F             ;% B_TBL_8000 END
0317   C34F             
0318   C34F             
0319   C34F             
0320   C34F             ;------------------------------------------------------------------------------
0321   C34F             ; $C34F - System Messages
0322   C34F             ;------------------------------------------------------------------------------
0323   C34F             SM_NEW0: ; $C34F 
0324   C34F 4E 45 57 30     .BYTE  $4E,$45,$57,$30,$3F,$20,$3A,$43
0324   C353 3F 20 3A 43 
0325   C357 48 45 43 4B     .BYTE  $48,$45,$43,$4B,$20              ; NEW0? :CHECK
0325   C35B 20 
0326   C35C             
0327   C35C             SM_BREAK: ; $C35C
0328   C35C 42 52 45 41     .BYTE  $42,$52,$45,$41,$4B,$20          ; BREAK
0328   C360 4B 20 
0329   C362             
0330   C362             SM_IN: ; $C362
0331   C362 49 4E 20        .BYTE  $49,$4E,$20                      ; IN
0332   C365             
0333   C365             SM_ERROR: ; $C36B
0334   C365 45 52 52 4F     .BYTE  $45,$52,$52,$4F,$52,$20          ; ERROR
0334   C369 52 20 
0335   C36B             
0336   C36B             
0337   C36B             
0338   C36B             ;------------------------------------------------------------------------------
0339   C36B             ; $C36B - Table for occupied DEF keys
0340   C36B             ;------------------------------------------------------------------------------
0341   C36B             DEFKEY_TBL:
0342   C36B                 ;      Value    DEF   Normal  Use
0343   C36B 20              .BYTE  $20 ;    DEF-  SPACE   : -
0344   C36C 41              .BYTE  $41 ;    DEF-  A       : -   
0345   C36D 42              .BYTE  $42 ;    DEF-  B       : -
0346   C36E 43              .BYTE  $43 ;    DEF-  C       : -
0347   C36F 44              .BYTE  $44 ;    DEF-  D       : -
0348   C370 F0              .BYTE  $F0 ;    DEF-  E       USING
0349   C371 46              .BYTE  $46 ;    DEF-  F       : -
0350   C372 47              .BYTE  $47 ;    DEF-  G       : -
0351   C373 48              .BYTE  $48 ;    DEF-  H       : -
0352   C374 F0              .BYTE  $F0 ;    DEF-  I       CLOAD
0353   C375 4A              .BYTE  $4A ;    DEF-  J       : -
0354   C376 4B              .BYTE  $4B ;    DEF-  K       : -
0355   C377 4C              .BYTE  $4C ;    DEF-  L       : -
0356   C378 4D              .BYTE  $4D ;    DEF-  M       : -
0357   C379 4E              .BYTE  $4E ;    DEF-  N       : -
0358   C37A F0              .BYTE  $F0 ;    DEF-  O       MERGE
0359   C37B F0              .BYTE  $F0 ;    DEF-  P       LIST
0360   C37C F0              .BYTE  $F0 ;    DEF-  Q       INPUT        
0361   C37D F1              .BYTE  $F1 ;    DEF-  R       GOTO
0362   C37E 53              .BYTE  $53 ;    DEF-  S       :-
0363   C37F F1              .BYTE  $F1 ;    DEF-  T       GOSUB
0364   C380 F0              .BYTE  $F0 ;    DEF-  U       CSAVE
0365   C381 56              .BYTE  $56 ;    DEF-  V       :-
0366   C382 F0              .BYTE  $F0 ;    DEF-  W       PRINT
0367   C383 58              .BYTE  $58 ;    DEF-  X       :-
0368   C384 F1              .BYTE  $F1 ;    DEF-  Y       RETURN
0369   C385 5A              .BYTE  $5A ;    DEF-  Z       :-
0370   C386 20              .BYTE  $20 ;        
0371   C387 20              .BYTE  $20 ;        
0372   C388 3D              .BYTE  $3D ;    DEF-  =       :-
0373   C389 20              .BYTE  $20 ;        
0374   C38A 20              .BYTE  $20 ;        
0375   C38B             
0376   C38B             
0377   C38B             
0378   C38B             ;------------------------------------------------------------------------------
0379   C38B             ; $C38B - Address table for editor control characters
0380   C38B             ;------------------------------------------------------------------------------
0381   C38B             EDCTRL_TBL:
0382   C38B CA 64           .BYTE  $CA,$64 ; CL
0383   C38D CB 61           .BYTE  $CB,$61 ; RCL
0384   C38F CA 55           .BYTE  $CA,$55 ; CA
0385   C391 CA 80           .BYTE  $CA,$80 ; DEF
0386   C393 CB C7           .BYTE  $CB,$C7 ; INS
0387   C395 CB CF           .BYTE  $CB,$CF ; DEL
0388   C397 CB 9C           .BYTE  $CB,$9C ; SHIFT-MODE
0389   C399 CB A0           .BYTE  $CB,$A0 ; MODE
0390   C39B CC 22           .BYTE  $CC,$22 ; CURSOR-LEFT
0391   C39D CB 69           .BYTE  $CB,$69 ; (up/down arrow)
0392   C39F CC 48           .BYTE  $CC,$48 ; CURSOR-DOWN
0393   C3A1 CC 38           .BYTE  $CC,$38 ; CURSOR-UP
0394   C3A3 CB E4           .BYTE  $CB,$E4 ; CURSOR-RIGHT
0395   C3A5 CC C1           .BYTE  $CC,$C1 ; ENTER
0396   C3A7 C4 C6           .BYTE  $C4,$C6 ; BREAK
0397   C3A9 CD 71           .BYTE  $CD,$71 ; OFF
0398   C3AB             
0399   C3AB             
0400   C3AB             
0401   C3AB             ;------------------------------------------------------------------------------
0402   C3AB             ; $C3A8 - Operator table for formula evaluation of the subroutines (DE) $D6DF
0403   C3AB             ;------------------------------------------------------------------------------
0404   C3AB             FVAL_TBLE:
0405   C3AB 2B 81 3F 08     .BYTE  $2B,$81,$3F,$08,$00 ; + branched to (D755)
0405   C3AF 00 
0406   C3B0 2D 81 3F 08     .BYTE  $2D,$81,$3F,$08,$00 ; -     (D755)
0406   C3B4 00 
0407   C3B5 2A 82 22 04     .BYTE  $2A,$82,$22,$04,$E2 ; *     (D837)
0407   C3B9 E2 
0408   C3BA 2F 82 22 04     .BYTE  $2F,$82,$22,$04,$E2 ; /     (D837)
0408   C3BE E2 
0409   C3BF 5E 84 22 04     .BYTE  $5E,$84,$22,$04,$E2 ; ^     (D837)
0409   C3C3 E2 
0410   C3C4 3D 80 22 04     .BYTE  $3D,$80,$22,$04,$32 ; =     (D787)
0410   C3C8 32 
0411   C3C9 3C 80 22 3D     .BYTE  $3C,$80,$22,$3D,$15 ; <     (D76A)
0411   C3CD 15 
0412   C3CE 3E 80 22 3D     .BYTE  $3E,$80,$22,$3D,$29 ; >     (D77E)
0412   C3D2 29 
0413   C3D3 0D 00 22 01     .BYTE  $0D,$00,$22,$01,$E1 ; ENTER (D836)
0413   C3D7 E1 
0414   C3D8 2C 60 22 01     .BYTE  $2C,$60,$22,$01,$E2 ; ,     (D837)
0414   C3DC E2 
0415   C3DD 28 20 1D 01     .BYTE  $28,$20,$1D,$01,$0A ; (     (D75F)
0415   C3E1 0A 
0416   C3E2 29 10 22 20     .BYTE  $29,$10,$22,$20,$E2 ; )     (D837)
0416   C3E6 E2 
0417   C3E7 2E 00 1D 00     .BYTE  $2E,$00,$1D,$00,$58 ; .     (D7AD)
0417   C3EB 58 
0418   C3EC 22 00 1D 00     .BYTE  $22,$00,$1D,$00,$35 ; "     (D78A)
0418   C3F0 35 
0419   C3F1 5D F1 1D 00     .BYTE  $5D,$F1,$1D,$00,$5A ; π     (D7AF)
0419   C3F5 5A 
0420   C3F6 5B F1 1D 10     .BYTE  $5B,$F1,$1D,$10,$64 ; √     (D7B9)
0420   C3FA 64 
0421   C3FB 26 00 1D 00     .BYTE  $26,$00,$1D,$00,$39 ; &     (D78E)
0421   C3FF 39 
0422   C400             
0423   C400             
0424   C400             
0425   C400             ;------------------------------------------------------------------------------
0426   C400             ; $C400 (E2) - BASIC interpreter: Y-Reg points to command or line end
0427   C400             ;------------------------------------------------------------------------------
0428   C400             BASIC_INT:
0429   C400 C0              VEJ  (C0)
0430   C401             
0431   C401             ;------------------------------------------------------------------------------
0432   C401             ; $C401 (40) - Process command in U-Reg
0433   C401             ;------------------------------------------------------------------------------
0434   C401             BASIC_INT_1: 
0435   C401 D8              VEJ  (D8)
0436   C402 89 05           BZR  BASIC_INT_2 ; $C409
0437   C404 6E 0D           CPI  UL,$0D
0438   C406 CB 42           VZS  ($42) ; orig VZS  ($42)($21) 
0439   C408 E4              VEJ  (E4)
0440   C409             
0441   C409             BASIC_INT_2: ; $C409
0442   C409 CD 04           VMJ  ($04) \ 
0442   C40B             
0443   C40B B9                  ABRF(BCMD_STOP_1_5) ; $C4C5
0444   C40C             
0445   C40C             BASIC_INT_3: ; $C40C
0446   C40C CD 18           VMJ  ($18)
0447   C40E             
0448   C40E             BASIC_INT_4: ; $C40E
0449   C40E AA 78 4F        LDI  S,(CPU_STACK + $4F)
0450   C411 83 17           BCS  BASIC_INT_6 ; $C42A
0451   C413             
0452   C413             BASIC_INT_5: ; $C413
0453   C413 B5 00           LDI  A,$00
0454   C415 CD 3E           VMJ  ($3E)
0455   C417 89 AC           BZR  BCMD_STOP_1_5 ; $C4C5
0456   C419 A5 7B 0E        LDA  (CURS_CTRL)
0457   C41C D9              SHL
0458   C41D 81 0B           BCR  BASIC_INT_6 ; $C42A
0459   C41F B7 C0           CPI  A,$C0       ; B7 C0
0460   C421 81 82           BCR  BCMD_LET_8  ; 81 82 $C4A5
0461   C423 BE E4 2C        SJP  (KEY_2_ASCII)
0462   C426 B7 0A           CPI  A,$0A
0463   C428 89 7B           BZR BCMD_LET_8  ; $C4A5
0464   C42A             
0465   C42A             BASIC_INT_6: ; $C42A
0466   C42A CD A6           VMJ  ($A6) ; orig VMJ ($A6)($53) 
0467   C42C 89 8C           BZR  BCMD_STOP_1 ; $C4BA
0468   C42E             
0469   C42E             BASIC_INT_7: ; $C42E
0470   C42E A5 78 9C        LDA  (CURR_LINE_H)
0471   C431 DD              INC  A
0472   C432 8B DC           BZS  BCMD_END_1  ; $C510
0473   C434 94              LDA  YH
0474   C435 D9              SHL
0475   C436 83 0C           BCS  BASIC_INT_9 ; $C444 $83 0A $C442
0476   C438             
0477   C438             BASIC_INT_8: ; $C438
0478   C438 B5 01           LDI  A,$01
0479   C43A CD 3E           VMJ  ($3E)
0480   C43C C9 00           VZR  ($00) \ 
0480   C43E             
0481   C43E CD                  ABYT($CD) \ 
0481   C43F             
0482   C43F 22                  ABYT($22) \ 
0482   C440             
0483   C440 81                  ABRF(BCMD_STOP_3) ; $C4C2
0484   C441 05              LDA  (X)
0485   C442 9E 3B           BCH  BASIC_INT_2; $C409 
0486   C444             
0487   C444             BASIC_INT_9: ; $C442
0488   C444 D5              SHR
0489   C445 18              STA  YH
0490   C446             
0491   C446             BASIC_INT_10: ; $C446
0492   C446 C0              VEJ  (C0)
0493   C447             
0494   C447             BASIC_INT_11: ; $C447
0495   C447 AA 78 4F        LDI  S,(CPU_STACK + $4F)
0496   C44A 6C E0           CPI  UH,$E0
0497   C44C 81 09           BCR  BASIC_INT_13 ; $C457
0498   C44E 6E 80           CPI  UL,$80
0499   C450 81 04           BCR  BASIC_INT_12 ; $C456
0500   C452 CD 1C           VMJ  ($1C) \ 
0500   C454             
0501   C454 00                  ABYT($00)
0502   C455 E0              VEJ  (E0)
0503   C456             
0504   C456             BASIC_INT_12: ; $C456
0505   C456 56              DEC  Y
0506   C457             
0507   C457             BASIC_INT_13: ; $C457
0508   C457 56              DEC  Y 
0509   C458             
0510   C458             
0511   C458             
0512   C458             ;------------------------------------------------------------------------------
0513   C458             ; $C458 - BASIC command LET
0514   C458             ;------------------------------------------------------------------------------
0515   C458             BCMD_LET:
0516   C458 D8              VEJ  (D8)
0517   C459 89 06           BZR  BCMD_LET_1 ; $C461
0518   C45B B5 02           LDI  A,$02
0519   C45D CD 3E           VMJ  ($3E)
0520   C45F 89 63           BZR  BCMD_STOP_4 ; $C4C4
0521   C461             
0522   C461             BCMD_LET_1: ; $C461
0523   C461 CE              VEJ  (CE) \ 
0523   C462             
0524   C462 58                  ABYT($58) \ 
0524   C463             
0525   C463 25                      ABRF(BCMD_LET_5); $C489
0526   C464 DA              VEJ  (DA)
0527   C465 C2              VEJ  (C2) \ 
0527   C466             
0528   C466 3D                  ACHR($3D) \ 
0528   C467             
0529   C467 31                  ABRF(BCMD_LET_7); $C499
0530   C468 DE              VEJ  (DE) \ 
0530   C469             
0531   C469 5A                  ABRF(BCMD_STOP_4) ; $C4C4
0532   C46A CD 08           VMJ  ($08) \ 
0532   C46C             
0533   C46C 57                  ABRF(BCMD_STOP_4) ; $C4C4
0534   C46D D8              VEJ  (D8)
0535   C46E 89 06           BZR  BCMD_LET_3 ; $C476
0536   C470                 
0537   C470             BCMD_LET_2: ; $C470  
0538   C470 B5 04           LDI  A,$04
0539   C472 CD 3E           VMJ  ($3E)
0540   C474 89 4E           BZR  BCMD_STOP_4 ; $C4C4
0541   C476             
0542   C476             BCMD_LET_3: ; $C476
0543   C476 C2              VEJ  (C2) \ 
0543   C477             
0544   C477 2C                  ACHR($2C) \ 
0544   C478             
0545   C478 02                  ABRF(BCMD_LET_4) ; $C47B
0546   C479 9E 1A           BCH BCMD_LET_1 ; $C461
0547   C47B             
0548   C47B             BCMD_LET_4: ; $C47B
0549   C47B B5 20           LDI  A,$20
0550   C47D AE 78 80        STA  (DISPARAM)
0551   C480 CD 04           VMJ  ($04) \ 
0551   C482             
0552   C482 42                  ABRF(BCMD_STOP_1_5) ; $C4C5
0553   C483 D8              VEJ  (D8)
0554   C484 C9 40           VZR  ($40) ; orig ($40)($20) $20 is bogus
0555   C486 BA CA 7D        JMP  EDITOR_1 ; $CA7D
0556   C489             
0557   C489             BCMD_LET_5: ; $C489
0558   C489 6C 15           CPI  UH,$15
0559   C48B 89 37           BZR BCMD_STOP_4 ; $C4C4
0560   C48D D8              VEJ  (D8)
0561   C48E 89 34           BZR BCMD_STOP_4 ; $C4C4
0562   C490 56              DEC  Y
0563   C491 24              LDA  UL
0564   C492 8B 01           BZS BCMD_LET_6 ; $C495
0565   C494 56              DEC  Y
0566   C495             
0567   C495             BCMD_LET_6: ; $C495
0568   C495 DE              VEJ  (DE) \ 
0568   C496             
0569   C496 2D                  ABRF(BCMD_STOP_4); $C4C4
0570   C497 9E 29           BCH BCMD_LET_2 ; $C470
0571   C499             
0572   C499             BCMD_LET_7: ; $C499
0573   C499 D8              VEJ  (D8)
0574   C49A 89 29           BZR BCMD_STOP_1_5 ; $C4C5
0575   C49C C6              VEJ  (C6)
0576   C49D CD 0A           VMJ  ($0A)
0577   C49F BE D6 D9        SJP  (CALC_EXPR_1) ; $D6D9
0578   C4A2 21              SBC  (U)
0579   C4A3 9E 35           BCH BCMD_LET_2 ; $C470
0580   C4A5             
0581   C4A5             BCMD_LET_8: ; $C4A5
0582   C4A5 6A 01           LDI  UL,$01 
0583   C4A7 CC              VEJ  (CC) \ 
0583   C4A8             
0584   C4A8 8D                  ABYTL(TRACE_ON); $788D
0585   C4A9 8B 02           BZS BCMD_LET_10 ; BCMD_STOP_9 ; $C4AD
0586   C4AB             
0587   C4AB             BCMD_LET_9: ; $C4AB
0588   C4AB 6A 00           LDI  UL,$00
0589   C4AD             
0590   C4AD             BCMD_LET_10: ; $C4AD
0591   C4AD 8E 0D           BCH BCMD_STOP_2 ; $C4BC
0592   C4AF             
0593   C4AF             
0594   C4AF             
0595   C4AF             ;------------------------------------------------------------------------------
0596   C4AF             ; $C4AF - Trace routine
0597   C4AF             ;------------------------------------------------------------------------------
0598   C4AF             TRCROUTINE:
0599   C4AF CC              VEJ  (CC) \ 
0599   C4B0             
0600   C4B0 8E                  ABYTL(TRACE_PARAM) ; $788E
0601   C4B1 9B 08           BZS BCMD_LET_9 ; $C4AB
0602   C4B3 68 00           LDI  UH,$00
0603   C4B5 9A              RTN
0604   C4B6             
0605   C4B6             
0606   C4B6             
0607   C4B6             ;------------------------------------------------------------------------------
0608   C4B6             ; $C4B6 - BASIC command STOP
0609   C4B6             ;------------------------------------------------------------------------------
0610   C4B6             BCMD_STOP:
0611   C4B6 C8              VEJ  (C8) \ 
0611   C4B7             
0612   C4B7 0D                  ABRF(BCMD_STOP_1_5) ; $C4C5
0613   C4B8 CD 18           VMJ  ($18)
0614   C4BA             
0615   C4BA             BCMD_STOP_1: ; $C4BA
0616   C4BA 6A 02           LDI  UL,$02 
0617   C4BC             
0618   C4BC             BCMD_STOP_2: ; $C4BC
0619   C4BC FD A8           PSH  U
0620   C4BE D4              VEJ  (D4) \ 
0620   C4BF             
0621   C4BF AC                  ABYT($AC)
0622   C4C0 FD 2A           POP  U
0623   C4C2             
0624   C4C2             BCMD_STOP_3: ; $C4C2
0625   C4C2 8E 15           BCH BCMD_STOP_7 ; $C4D9 
0626   C4C4             
0627   C4C4             BCMD_STOP_4: ; $C4C4
0628   C4C4 E0              VEJ  (E0) 
0629   C4C5             
0630   C4C5             BCMD_STOP_1_5: ; $C4C5
0631   C4C5 E4              VEJ  (E4)  
0632   C4C6             
0633   C4C6             BCMD_STOP_6: ; $C4C6   
0634   C4C6 FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FD
0634   C4CA FD 
0635   C4CB ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
0636   C4CF CB 42           VZS  ($42) ; orig ($42)($21) ; 21 is bogus
0637   C4D1 ED 78 8A 60     BII  (BREAKPARAM),$60
0638   C4D5 CB 42           VZS  ($42) ; orig ($42)($21) ; 21 is bogus
0639   C4D7 6A 02           LDI  UL,$02
0640   C4D9             
0641   C4D9             BCMD_STOP_7: ; $C4D9
0642   C4D9 EB 78 8A 80     ORI  (BREAKPARAM),$80
0643   C4DD E9 78 8A EF     ANI  (BREAKPARAM),$EF
0644   C4E1 FD A8           PSH  U
0645   C4E3 BE EE 80        SJP  (SAVE_LCD_CURS)
0646   C4E6 FD 2A           POP  U
0647   C4E8 B5 01           LDI  A,$01
0648   C4EA AE 78 80        STA  (DISPARAM)
0649   C4ED FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FD
0649   C4F1 FD 
0650   C4F2 62              DEC  UL
0651   C4F3 CB 46           VZS  ($46) ; orig ($46)($23) 23 is bogus
0652   C4F5 5A 10           LDI  YL,$10 
0653   C4F7 58 7A           LDI  YH,$7A
0654   C4F9 FD 98           PSH  Y
0655   C4FB B5 3A           LDI  A,$3A
0656   C4FD 81 06           BCR BCMD_STOP_8 ; $C505
0657   C4FF CD 2A           VMJ  ($2A) \ 
0657   C501             
0658   C501 5B                  ABYT($5B) \ 
0658   C502             
0659   C502 09                  ABYT($09) ; C504
0660   C503 B5 20           LDI  A,$20
0661   C505             
0662   C505             BCMD_STOP_8: ; $C505
0663   C505 FD C8           PSH  A
0664   C507 CC              VEJ  (CC) \ 
0664   C508             
0665   C508 A2                  ABYTL(PREV_LINE_H) ; $78A2
0666   C509 BA CD D4        JMP  ERRN_4 ; $CDD4
0667   C50C             
0668   C50C             BCMD_STOP_9: ; $C4AD
0669   C50C 38              NOP
0670   C50D             
0671   C50D             
0672   C50D             
0673   C50D             ;------------------------------------------------------------------------------
0674   C50D             ; $C50D - Basic Command END
0675   C50D             ;------------------------------------------------------------------------------
0676   C50D             BCMD_END:
0677   C50D C2              VEJ  (C2) \ 
0677   C50E             
0678   C50E 0D                  ACHR($0D) \ 
0678   C50F             
0679   C50F E9                  ABRF(BCMD_ON_1) ; $C5F9
0680   C510             
0681   C510             BCMD_END_1:; $C510
0682   C510 BE CF F7        SJP  (INIT_SYS_ADDR_4) ; $CFF7
0683   C513 CD 42           VMJ  ($42) ; orig ($42)($21) 21 is bogus
0684   C515             
0685   C515             
0686   C515             
0687   C515             ;------------------------------------------------------------------------------
0688   C515             ; $C515 - Basic Command GOTO
0689   C515             ;------------------------------------------------------------------------------
0690   C515             BCMD_GOTO:
0691   C515 D8              VEJ  (D8)
0692   C516 89 8A           BZR DEFKEY_EVAL_9 ; $C5A2
0693   C518 68 1A           LDI  UH,$1A
0694   C51A ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
0695   C51E CB E0           VZS  ($E0)
0696   C520 BE CC 86        SJP  (FIND_LINE) ; $CC86
0697   C523 7D C1           BII  (V),$C1
0698   C525 42              DEC  XL
0699   C526 F2              VEJ  (F2)
0700   C527 8E 4F           BCH DEFKEY_EVAL_3 ; $C578
0701   C529             
0702   C529             
0703   C529             
0704   C529             ;------------------------------------------------------------------------------
0705   C529             ; $C529 -  Evaluation of DEF keys (label addressing)
0706   C529             ;------------------------------------------------------------------------------
0707   C529             DEFKEY_EVAL:
0708   C529 0A              STA  XL
0709   C52A AE 78 92        STA  (BAS_DATA_STK_L)
0710   C52D BE DB F5        SJP  (ARX_2_BSTK) ; $DBF5
0711   C530 EF 78 90 04     ADI  (FORNXT_STK_PTR),$04
0712   C534 F9              REC
0713   C535 BE FB CB        SJP  (STRXFR)
0714   C538 BE CC DE        SJP  (INIT_IBUF_R) ; $CCDE
0715   C53B A4              LDA  UH
0716   C53C 4A 82           LDI  XL,$82
0717   C53E 48 78           LDI  XH,$78
0718   C540 0E              STA  (X)
0719   C541 B5 01           LDI  A,$01
0720   C543 CD 24           VMJ  ($24)
0721   C545 68 FF           LDI  UH,$FF
0722   C547 BE D2 EA        SJP  (LINE_SEARCH_2) \ 
0722   C54A             
0723   C54A 3E                  ABRF(DEFKEY_EVAL_5); $C589
0724   C54B D6              VEJ  (D6) \ ABYT($A6)
0724   C54C A6          
0725   C54D CD 22           VMJ  ($22)
0726   C54F 83 27           BCS DEFKEY_EVAL_3 ; $C578
0727   C551 C4              VEJ  (C4) \ 
0727   C552             
0728   C552 F1 80               AWRD($F180) \ 
0728   C554             
0729   C554 23                  ABRF(DEFKEY_EVAL_3) ; $C578
0730   C555 CE              VEJ  (CE) \ 
0730   C556             
0731   C556 58                  ABYT($58) \ 
0731   C557             
0732   C557 47                  ABRF(DEFKEY_EVAL_8) ; $C59F
0733   C558 DA              VEJ  (DA)
0734   C559 CC              VEJ  (CC) \ 
0734   C55A             
0735   C55A 80                  ABYTL(DISPARAM) ; $7880
0736   C55B BF 40           BII  A,$40
0737   C55D 8B 1E           BZS DEFKEY_EVAL_4 ; $C57D
0738   C55F FD 98           PSH  Y
0739   C561 BE F9 7B        SJP  (TOK_INBUF_5)
0740   C564 81 31           BCR DEFKEY_EVAL_7 ; $C597
0741   C566 FD 1A           POP  Y
0742   C568 89 0B           BZR DEFKEY_EVAL_2 ; $C575
0743   C56A             
0744   C56A             DEFKEY_EVAL_1: ; $C56A
0745   C56A EC              VEJ  (EC)
0746   C56B CC              VEJ  (CC) \ 
0746   C56C             
0747   C56C 85                  ABYTL(CURVARTYPE) ; $7885
0748   C56D D9              SHL
0749   C56E B5 D0           LDI  A,$D0
0750   C570 83 03           BCS DEFKEY_EVAL_2 ;  $C575
0751   C572 AE 7A 04        STA  (ARX + $04)
0752   C575             
0753   C575             DEFKEY_EVAL_2: ; $C575
0754   C575 CD 08           VMJ  ($08) \ 
0754   C577             
0755   C577 27                  ABRF(DEFKEY_EVAL_8) ; $C59F
0756   C578             
0757   C578             DEFKEY_EVAL_3: ; $C578
0758   C578 CD 3A           VMJ  ($3A)
0759   C57A BA C8 C2        JMP  BCMD_RUN_2 ; $C8C2
0760   C57D             
0761   C57D             DEFKEY_EVAL_4: ; $C57D
0762   C57D BF 22           BII  A,$22
0763   C57F 9B 17           BZS DEFKEY_EVAL_1 ; $C56A
0764   C581 FB              SEC
0765   C582 BE FB CB        SJP  (STRXFR)
0766   C585 CD 30           VMJ  ($30)
0767   C587 9E 14           BCH DEFKEY_EVAL_2 ; $C575
0768   C589             
0769   C589             DEFKEY_EVAL_5: ; $C589
0770   C589 ED 78 80 40     BII  (DISPARAM),$40
0771   C58D 89 03           BZR DEFKEY_EVAL_6 ; $C592
0772   C58F BE D0 2B        SJP  (INBUF_CLR_1) ; $D02B
0773   C592             
0774   C592             DEFKEY_EVAL_6: ; $C592
0775   C592 38              NOP
0776   C593 38              NOP
0777   C594 C0              VEJ  (C0)
0778   C595 68 0B           LDI  UH,$0B
0779   C597             
0780   C597             DEFKEY_EVAL_7: ; $C597
0781   C597 E9 78 9D 00     ANI  (CURR_LINE_L),$00
0782   C59B E9 78 9C 00     ANI  (CURR_LINE_H),$00
0783   C59F             
0784   C59F             DEFKEY_EVAL_8: ; $C59F
0785   C59F CD 3A           VMJ  ($3A)
0786   C5A1 E0              VEJ  (E0)
0787   C5A2             
0788   C5A2             DEFKEY_EVAL_9: ; $C5A2
0789   C5A2 CD 2E           VMJ  ($2E) \ 
0789   C5A4             
0790   C5A4 D0                  ABRF(BCMD_GOSUB_3) ; $C675
0791   C5A5 D0              VEJ  (D0) \ 
0791   C5A6             
0792   C5A6 83                  ABYT($83) \ 
0792   C5A7             
0793   C5A7 CD                  ABRF(BCMD_GOSUB_3) ; $C675
0794   C5A8 CD 1A           VMJ  ($1A) \ 
0794   C5AA             
0795   C5AA CA                  ABRF(BCMD_GOSUB_3) ; $C675
0796   C5AB             
0797   C5AB             DEFKEY_EVAL_10: ; $C5AB
0798   C5AB C2              VEJ  (C2) \ 
0798   C5AC             
0799   C5AC 0D                  ACHR($0D) \ 
0799   C5AD             
0800   C5AD 4B                  ABRF(BCMD_ON_1) ; $C5F9
0801   C5AE D4              VEJ  (D4) \ 
0801   C5AF             
0802   C5AF A0                  ABYT($A0)
0803   C5B0 D6              VEJ  (D6) \ 
0803   C5B1             
0804   C5B1 A6                  ABYT($A6)
0805   C5B2 8E BD           BCH $C671
0806   C5B4             
0807   C5B4             
0808   C5B4             
0809   C5B4             ;------------------------------------------------------------------------------
0810   C5B4             ; $C5B4 - Basic Command IF
0811   C5B4             ;------------------------------------------------------------------------------
0812   C5B4             BCMD_IF:
0813   C5B4 DE              VEJ  (DE) \ 
0813   C5B5             
0814   C5B5 BF                  ABRF(BCMD_GOSUB_3) ; $C675
0815   C5B6 4A 04           LDI  XL,$04
0816   C5B8 48 7A           LDI  XH,$7A
0817   C5BA 45              LIN  X
0818   C5BB B7 B2           CPI  A,$B2
0819   C5BD 81 06           BCR BCMD_IF_1 ; $C5C5
0820   C5BF 8B 06           BZS BCMD_IF_2 ; $C5C7
0821   C5C1 4A 07           LDI  XL,$07
0822   C5C3 8E 06           BCH BCMD_IF_3 ; $C5CB
0823   C5C5             
0824   C5C5             BCMD_IF_1: ; $C5C5
0825   C5C5 4A 01           LDI  XL,$01
0826   C5C7             
0827   C5C7             BCMD_IF_2: ; $C5C7
0828   C5C7 45              LIN  X
0829   C5C8 D9              SHL
0830   C5C9 83 AB           BCS BCMD_REM
0831   C5CB             
0832   C5CB             BCMD_IF_3: ; $C5CB
0833   C5CB 05              LDA  (X)
0834   C5CC 8B A8           BZS BCMD_REM
0835   C5CE C2              VEJ  (C2) \ 
0835   C5CF             
0836   C5CF F1 AE               AWRD($F1AE) \ 
0836   C5D1             
0837   C5D1 07                  ABRF(BCMD_IF_4) ; $C5D9 , $F1AE = THEN token
0838   C5D2 C0              VEJ  (C0)
0839   C5D3 81 08           BCR BCMD_IF_6 ; $C5DD
0840   C5D5 6E 80           CPI  UL,$80
0841   C5D7 81 03           BCR BCMD_IF_5 ; $C5DC
0842   C5D9             
0843   C5D9             BCMD_IF_4: ; $C5D9
0844   C5D9 BA C4 47        JMP  BASIC_INT_11 ; $C447
0845   C5DC                 
0846   C5DC             BCMD_IF_5: ; $C5DC    
0847   C5DC 56              DEC  Y
0848   C5DD             
0849   C5DD             BCMD_IF_6: ; $C5DD
0850   C5DD 56              DEC  Y
0851   C5DE 9E 3E           BCH DEFKEY_EVAL_9 ; $C5A2
0852   C5E0             
0853   C5E0             
0854   C5E0             
0855   C5E0             ;------------------------------------------------------------------------------
0856   C5E0             ; $C5E0 - Basic-Command ON
0857   C5E0             ;------------------------------------------------------------------------------
0858   C5E0             BCMD_ON:
0859   C5E0 C2              VEJ  (C2) \ 
0859   C5E1             
0860   C5E1 F1 B4               AWRD($F1B4) \ 
0860   C5E3             
0861   C5E3 21                  ABRF(BCMD_ON_3) ; $C605
0862   C5E4 C2              VEJ  (C2) \ 
0862   C5E5             
0863   C5E5 F1 92               AWRD($F192) \ 
0863   C5E7             
0864   C5E7 11                  ABRF(BCMD_ON_1) ; $C5F9
0865   C5E8 CD 2E           VMJ  ($2E) \ 
0865   C5EA             
0866   C5EA 8A                  ABRF(BCMD_GOSUB_3) ; $C675
0867   C5EB D0              VEJ  (D0) \ 
0867   C5EC             
0868   C5EC 82                  ABYT($82) \ 
0868   C5ED             
0869   C5ED 87                  ABRF(BCMD_GOSUB_3) ; $C675
0870   C5EE 24              LDA  UL
0871   C5EF 89 09           BZR BCMD_ON_2 ; $C5FA
0872   C5F1 A4              LDA  UH
0873   C5F2 89 06           BZR BCMD_ON_2 ; $C5FA
0874   C5F4 EB 78 B8 80     ORI  (ON_ERR_ADD_H),$80
0875   C5F8 E2              VEJ  (E2)
0876   C5F9             
0877   C5F9             BCMD_ON_1: ; $C5F9
0878   C5F9 E4              VEJ  (E4)
0879   C5FA             
0880   C5FA             BCMD_ON_2: ; $C5FA
0881   C5FA CD 1A           VMJ  ($1A) \ 
0881   C5FC             
0882   C5FC 78                  ABRF(BCMD_GOSUB_3) ; $C675
0883   C5FD 6A A6           LDI  UL,$A6
0884   C5FF 4A B8           LDI  XL,$B8
0885   C601 BE DF 06        SJP  (XFER_3_ADDR) ; $DF06
0886   C604 E2              VEJ  (E2)
0887   C605             
0888   C605             BCMD_ON_3: ; $C605
0889   C605 C6              VEJ  (C6)
0890   C606 DE              VEJ  (DE) \ 
0890   C607             
0891   C607 6D                  ABRF(BCMD_GOSUB_3) ; $C675
0892   C608 CD 26           VMJ  ($26)
0893   C60A 6A D0           LDI  UL,$D0
0894   C60C 0D              EOR  (X)
0895   C60D 02              ADC  XL
0896   C60E 8E 02           BCH BCMD_ON_4 ; $C612
0897   C610 B5 50           LDI  A,$50
0898   C612             
0899   C612             BCMD_ON_4: ; $C612
0900   C612 FD C8           PSH  A
0901   C614 C2              VEJ  (C2) \ 
0901   C615             
0902   C615 F1 92               AWRD($F192) \ 
0902   C617             
0903   C617 02                  ABRF(BCMD_ON_5) ; $C61A
0904   C618 8E 04           BCH BCMD_ON_6 ; $C61E
0905   C61A             
0906   C61A             BCMD_ON_5: ; $C61A
0907   C61A C4              VEJ  (C4) \ 
0907   C61B             
0908   C61B F1 94               AWRD($F194) \ 
0908   C61D             
0909   C61D 2F                  ABRF(BCMD_ON_9) ; $C64D
0910   C61E             
0911   C61E             BCMD_ON_6: ; $C61E
0912   C61E FD C8           PSH  A
0913   C620 FD 2A           POP  U
0914   C622 FD A8           PSH  U
0915   C624 62              DEC  UL
0916   C625 8B 06           BZS BCMD_ON_7 ; $C62D
0917   C627 BE DF 44        SJP  (CHECK_QUOTES_1) ; $DF44
0918   C62A 60              INC  UL
0919   C62B 89 15           BZR BCMD_ON_8 ; $C642
0920   C62D             
0921   C62D             BCMD_ON_7: ; $C62D
0922   C62D CD 2E           VMJ  ($2E) \ 
0922   C62F             
0923   C62F 45                  ABRF(BCMD_GOSUB_3) ; $C675
0924   C630 D0              VEJ  (D0) \ 
0924   C631             
0925   C631 83                  ABYT($83) \ 
0925   C632             
0926   C632 42                      ABRF(BCMD_GOSUB_3) ; $C675
0927   C633 CD 1A           VMJ  ($1A) \ 
0927   C635             
0928   C635 3F                  ABRF(BCMD_GOSUB_3) ; $C675
0929   C636 BE DF 42        SJP  (CHECK_QUOTES) ; $DF42
0930   C639 FD 2A           POP  U
0931   C63B A4              LDA  UH
0932   C63C D5              SHR
0933   C63D D5              SHR
0934   C63E 81 1A           BCR BCMD_GOSUB_1 ; $C65A
0935   C640 9E 97           BCH DEFKEY_EVAL_10 ; $C5AB
0936   C642             
0937   C642             BCMD_ON_8: ; $C642
0938   C642 B5 0D           LDI  A,$0D
0939   C644 17              CPA  (Y)
0940   C645 FD 2A           POP  U
0941   C647 C3 E2           VCS  ($E2)
0942   C649 FD 62           DEC  UH
0943   C64B C7 E2           VHS  ($E2)
0944   C64D             
0945   C64D             BCMD_ON_9: ; $C64D
0946   C64D E4              VEJ  (E4)
0947   C64E             
0948   C64E             
0949   C64E             
0950   C64E             ;------------------------------------------------------------------------------
0951   C64E             ; $C64E - Basic Command GOSUB
0952   C64E             ;------------------------------------------------------------------------------
0953   C64E             BCMD_GOSUB: 
0954   C64E CD 2E           VMJ  ($2E) \ 
0954   C650             
0955   C650 24                  ABRF(BCMD_GOSUB_3) ; $C675
0956   C651 D0              VEJ  (D0) \ 
0956   C652             
0957   C652 83                  ABYT($83) \ 
0957   C653             
0958   C653 21                  ABRF(BCMD_GOSUB_3) ; $C675
0959   C654 CD 1A           VMJ  ($1A) \ 
0959   C656             
0960   C656 1E                  ABRF(BCMD_GOSUB_3) ; $C675
0961   C657 C8              VEJ  (C8) \ 
0961   C658             
0962   C658 B7                  ABRF(BCMD_NEXT_3) ; $C710
0963   C659 56              DEC  Y
0964   C65A             
0965   C65A             BCMD_GOSUB_1: ; $C65A
0966   C65A A5 78 91        LDA  (GOSB_STK_PTR_L)
0967   C65D FB              SEC
0968   C65E B1 05           SBI  A,$05
0969   C660 A7 78 90        CPA  (FORNXT_STK_PTR)
0970   C663 81 0E           BCR BCMD_GOSUB_2 ; $C673
0971   C665 AE 78 82        STA  (STK_PTR_GSB_FOR)
0972   C668 DF              DEC  A
0973   C669 AE 78 91        STA  (GOSB_STK_PTR_L)
0974   C66C BE DE FC        SJP  (INST_2_BSTK) ; $DEFC
0975   C66F D6              VEJ  (D6) \ 
0975   C670             
0976   C670 A6                  ABYT($A6)
0977   C671 8E 4C           BCH BCMD_RETURN_2 ; $C6BF
0978   C673             
0979   C673             BCMD_GOSUB_2: ; $C673
0980   C673 68 0F           LDI  UH,$0F
0981   C675             
0982   C675             BCMD_GOSUB_3: ; $C675
0983   C675 E0              VEJ  (E0)
0984   C676             
0985   C676             
0986   C676             
0987   C676             ;------------------------------------------------------------------------------
0988   C676             ; $C676 - Basic Command REM
0989   C676             ;------------------------------------------------------------------------------
0990   C676             BCMD_REM:
0991   C676 CD 20           VMJ  ($20)
0992   C678 F9              REC
0993   C679 BA C4 0C        JMP  BASIC_INT_3 ; $C40C
0994   C67C             
0995   C67C             
0996   C67C             
0997   C67C             ;------------------------------------------------------------------------------
0998   C67C             ; $C67C - Basic Command USING
0999   C67C             ;------------------------------------------------------------------------------
1000   C67C             BCMD_USING: 
1001   C67C B5 01           LDI  A,$01
1002   C67E BE DA B4        SJP  (EVAL_USING_1) ; $DAB4
1003   C681 DE              VEJ  (DE) \ 
1003   C682             
1004   C682 56                  ABYT($56) ; $C760 ***wrong original calc c6da
1005   C683 E2              VEJ  (E2)
1006   C684             
1007   C684             
1008   C684             
1009   C684             ;------------------------------------------------------------------------------
1010   C684             ; $C684 - Basic Command DATA / ARUN / AREAD
1011   C684             ;------------------------------------------------------------------------------
1012   C684             BCMD_DATA:
1013   C684 56              DEC  Y
1014   C685 AA 78 4F        LDI  S,(CPU_STACK + $4F)
1015   C688 BE DF 42        SJP  (CHECK_QUOTES) ; $DF42
1016   C68B E2              VEJ  (E2)
1017   C68C             
1018   C68C             
1019   C68C             
1020   C68C             ;------------------------------------------------------------------------------
1021   C68C             ; $C68C - Basic Command TRON
1022   C68C             ;------------------------------------------------------------------------------
1023   C68C             BCMD_TRON:
1024   C68C A5 79 D1        LDA  (OPN)
1025   C68F             
1026   C68F             BCMD_TRON_1: ; $C68F
1027   C68F AE 78 8D        STA  (TRACE_ON)
1028   C692 E2              VEJ  (E2)
1029   C693             
1030   C693             
1031   C693             
1032   C693             ;------------------------------------------------------------------------------
1033   C693             ; $C693 - Basic Command TROFF
1034   C693             ;------------------------------------------------------------------------------
1035   C693             BCMD_TROFF:
1036   C693 B5 00           LDI  A,$00
1037   C695 9E 08           BCH BCMD_TRON_1 ; $C68F
1038   C697             
1039   C697             
1040   C697             
1041   C697             ;------------------------------------------------------------------------------
1042   C697             ; $C697 - Basic Command DEGREE
1043   C697             ;------------------------------------------------------------------------------
1044   C697             BCMD_DEGREE:
1045   C697 6A 03           LDI  UL,$03
1046   C699             
1047   C699             BCMD_DEGREE_1: ; $C699
1048   C699 A5 76 4F        LDA  (DISP_BUFF + $4F)
1049   C69C B9 F8           ANI  A,$F8
1050   C69E F9              REC
1051   C69F 22              ADC  UL
1052   C6A0 AE 76 4F        STA  (DISP_BUFF + $4F)
1053   C6A3 E2              VEJ  (E2)
1054   C6A4             
1055   C6A4             
1056   C6A4             
1057   C6A4             ;------------------------------------------------------------------------------
1058   C6A4             ; $C6A4 - Basic Command RADIAN
1059   C6A4             ;------------------------------------------------------------------------------
1060   C6A4             BCMD_RADIAN:
1061   C6A4 6A 04           LDI  UL,$04
1062   C6A6 9E 0F           BCH BCMD_DEGREE_1 ; $C699
1063   C6A8             
1064   C6A8             
1065   C6A8             
1066   C6A8             ;------------------------------------------------------------------------------
1067   C6A8             ; $C6A8 - Basic Command GRAD
1068   C6A8             ;------------------------------------------------------------------------------
1069   C6A8             BCMD_GRAD:
1070   C6A8 6A 06           LDI  UL,$06
1071   C6AA 9E 13           BCH BCMD_DEGREE_1 ; $C699
1072   C6AC             
1073   C6AC             
1074   C6AC             
1075   C6AC             ;------------------------------------------------------------------------------
1076   C6AC             ; $C6AC - Basic Command RETURN
1077   C6AC             ;------------------------------------------------------------------------------
1078   C6AC             BCMD_RETURN:
1079   C6AC C2              VEJ  (C2) \ 
1079   C6AD             
1080   C6AD 0D                  ACHR($0D) \ 
1080   C6AE             
1081   C6AE 61                  ABRF($10) ; $C710
1082   C6AF A5 78 91        LDA  (GOSB_STK_PTR_L)
1083   C6B2 DD              INC  A
1084   C6B3 83 58           BCS BCMD_NEXT_1 ; $C70D
1085   C6B5 AE 78 82        STA  (STK_PTR_GSB_FOR)
1086   C6B8 EF 78 91 06     ADI  (GOSB_STK_PTR_L),$06
1087   C6BC             
1088   C6BC             BCMD_RETURN_1: ; $C6BC
1089   C6BC BE DE C7        SJP  (PRG_PNT_FRM_BSTK) ; $DEC7
1090   C6BF             
1091   C6BF             BCMD_RETURN_2: ; $C6BF
1092   C6BF BA C4 13        JMP  BASIC_INT_5 ; $C413
1093   C6C2             
1094   C6C2             BCMD_RETURN_3: ; $C6C2
1095   C6C2 FD 98           PSH  Y
1096   C6C4 B3 09           ADI  A,$09
1097   C6C6 AE 78 90        STA  (FORNXT_STK_PTR)
1098   C6C9 DA              VEJ  (DA)
1099   C6CA FD 28           LDX  U
1100   C6CC BE DC 20        SJP  (ARX_FRM_BSTK_1) ; $DC20
1101   C6CF D2              VEJ  (D2) \ 
1101   C6D0             
1102   C6D0 3E                  ABRF(BCMD_NEXT_2) \ 
1102   C6D1             
1103   C6D1 80                  ABYT($80) ; $C710
1104   C6D2 CD 08           VMJ  ($08) \ 
1104   C6D4             
1105   C6D4 00                  ABRF(BCMD_RETURN_4) ; $C6D5
1106   C6D5                 
1107   C6D5             BCMD_RETURN_4: ; $C6D5  
1108   C6D5 E6              VEJ  (E6)
1109   C6D6 CD 06           VMJ  ($06)
1110   C6D8 CD 10           VMJ  ($10) \ 
1110   C6DA             
1111   C6DA 80                  ABYT($80)
1112   C6DB BE EF B6        SJP  (SUBTR)
1113   C6DE CD 06           VMJ  ($06)
1114   C6E0 5A 02           LDI  YL,$02
1115   C6E2 57              LDE  Y
1116   C6E3 8B 18           BZS BCMD_RETURN_6 ; $C6FD
1117   C6E5 A4              LDA  UH
1118   C6E6 1D              EOR  (Y)
1119   C6E7 DB              ROL
1120   C6E8 83 13           BCS BCMD_RETURN_6 ; $C6FD
1121   C6EA CD 10           VMJ  ($10) \ 
1121   C6EC             
1122   C6EC 80                  ABYT($80)
1123   C6ED E6              VEJ  (E6)
1124   C6EE CC              VEJ  (CC) \ 
1124   C6EF             
1125   C6EF 83                  ABYTL(CURVARADD_H) ; $7883
1126   C6F0 BE DC 20        SJP  (ARX_FRM_BSTK_1) ; $DC20
1127   C6F3 F0              VEJ  (F0)
1128   C6F4 CD 08           VMJ  ($08) \ 
1128   C6F6             
1129   C6F6 00                  ABRF(BCMD_RETURN_5) ; $C6F7
1130   C6F7                 
1131   C6F7             BCMD_RETURN_5: ; $C6F7
1132   C6F7 FD 1A           POP  Y
1133   C6F9 C8              VEJ  (C8) \ 
1133   C6FA             
1134   C6FA 15                  ABRF(BCMD_NEXT_3) ; $C710
1135   C6FB 9E 41           BCH BCMD_RETURN_1 ; $C6BC
1136   C6FD             
1137   C6FD             BCMD_RETURN_6: ; $C6FD
1138   C6FD FD 1A           POP  Y
1139   C6FF EF 78 90 F4     ADI  (FORNXT_STK_PTR),$F4
1140   C703 E2              VEJ  (E2)
1141   C704             
1142   C704             
1143   C704             
1144   C704             ;------------------------------------------------------------------------------
1145   C704             ; $C704 - Basic Command NEXT
1146   C704             ;------------------------------------------------------------------------------
1147   C704             BCMD_NEXT:
1148   C704 C6              VEJ  (C6)
1149   C705 CE              VEJ  (CE) \ 
1149   C706             
1150   C706 68                  ABYT($68) \ 
1150   C707             
1151   C707 07                  ABRF(BCMD_NEXT_2) ; $C70F
1152   C708 BE D0 4C        SJP  (VAR_ON_BSTK)
1153   C70B 93 4B           BCS BCMD_RETURN_3 ; $C6C2
1154   C70D             
1155   C70D             BCMD_NEXT_1: ; $C70D
1156   C70D 68 02           LDI  UH,$02
1157   C70F             
1158   C70F             BCMD_NEXT_2: ; $C70F
1159   C70F E0              VEJ  (E0)
1160   C710             
1161   C710             BCMD_NEXT_3: ; $C710
1162   C710 E4              VEJ  (E4)
1163   C711             
1164   C711             
1165   C711             
1166   C711             ;------------------------------------------------------------------------------
1167   C711             ; $C711 - Basic Command FOR
1168   C711             ;------------------------------------------------------------------------------
1169   C711             BCMD_FOR:
1170   C711 CE              VEJ  (CE) \ 
1170   C712             
1171   C712 68                  ABYT($68) \ 
1171   C713             
1172   C713 62                  ABRF(BCMD_FOR_8) ; $C776
1173   C714 DA              VEJ  (DA)
1174   C715 BE D0 4C        SJP  (VAR_ON_BSTK)
1175   C718 83 23           BCS BCMD_FOR_2 ; $C73D
1176   C71A A5 78 90        LDA  (FORNXT_STK_PTR)
1177   C71D AE 78 82        STA  (STK_PTR_GSB_FOR)
1178   C720 DF              DEC  A
1179   C721 B3 0A           ADI  A,$0A
1180   C723 83 4F           BCS BCMD_FOR_7 ; $C774
1181   C725 A7 78 91        CPA  (GOSB_STK_PTR_L)
1182   C728 83 4A           BCS BCMD_FOR_7 ; $C774
1183   C72A 6C 80           CPI  UH,$80
1184   C72C 81 0D           BCR BCMD_FOR_1 ; $C73B
1185   C72E 6C DB           CPI  UH,$DB
1186   C730 8B 09           BZS BCMD_FOR_1 ; $C73B
1187   C732 F4              VEJ  (F4) \ 
1187   C733             
1188   C733 78 99               AWRD(VAR_START_H)
1189   C735 B5 F8           LDI  A,$F8
1190   C737 FD EA           ADR  U
1191   C739 FD 62           DEC  UH
1192   C73B             
1193   C73B             BCMD_FOR_1: ; $C73B
1194   C73B CD 32           VMJ  ($32)
1195   C73D             
1196   C73D             BCMD_FOR_2: ; $C73D
1197   C73D C2              VEJ  (C2) \ 
1197   C73E             
1198   C73E 3D                  ACHR($3D) \ 
1198   C73F             
1199   C73F 61                  ABRF(BCMD_POKE_4) ; $C7A1
1200   C740 DE              VEJ  (DE) \ 
1200   C741             
1201   C741 34                  ABRF(BCMD_FOR_8) ; $C776
1202   C742 CD 08           VMJ  ($08) \ 
1202   C744             
1203   C744 31                  ABRF(BCMD_FOR_8) ; $C776
1204   C745 C2              VEJ  (C2) \ 
1204   C746             
1205   C746 F1 B1               AWRD($F1B1) \ 
1205   C748             
1206   C748 58                      ABRF(BCMD_POKE_4) ; $C7A1
1207   C749 DE              VEJ  (DE) \ 
1207   C74A             
1208   C74A 2B                  ABRF(BCMD_FOR_8) ; $C776
1209   C74B D0              VEJ  (D0) \ 
1209   C74C             
1210   C74C 04                  ABYT($04) \ 
1210   C74D             
1211   C74D 28                      ABRF(BCMD_FOR_8) ; $C776
1212   C74E CD 32           VMJ  ($32)
1213   C750 C2              VEJ  (C2) \ 
1213   C751             
1214   C751 F1 AD               AWRD($F1AD) \ 
1214   C753             
1215   C753 0D                      ABRF(BCMD_FOR_5) ; $C761
1216   C754 DE              VEJ  (DE) \ 
1216   C755             
1217   C755 20                  ABRF(BCMD_FOR_8) ; $C776
1218   C756 D0              VEJ  (D0) \ 
1218   C757             
1219   C757 04                  ABYT($04) \ 
1219   C758             
1220   C758 1D                  ABRF(BCMD_FOR_8) ; $C776
1221   C759 AB 7A 05        ORA  (ARX + $05) 
1222   C75C 89 08           BZR BCMD_FOR_6 ; $C766
1223   C75E 68 13           LDI  UH,$13
1224   C760             
1225   C760             BCMD_FOR_4: ; $C760
1226   C760 E0              VEJ  (E0)
1227   C761             
1228   C761             BCMD_FOR_5: ; $C761
1229   C761 C6              VEJ  (C6)
1230   C762 6A 01           LDI  UL,$01
1231   C764 68 00           LDI  UH,$00
1232   C766             
1233   C766             BCMD_FOR_6: ; $C766
1234   C766 CD 32           VMJ  ($32)
1235   C768 C8              VEJ  (C8) \ 
1235   C769             
1236   C769 37                  ABRF(BCMD_POKE_4) ; $C7A1
1237   C76A BE DE FE        SJP  (INST_2_BSTK_1) ; $DEFE
1238   C76D 04              LDA  XL
1239   C76E AE 78 90        STA  (FORNXT_STK_PTR)
1240   C771 BA C4 0E        JMP  BASIC_INT_4 ; $C40E
1241   C774             
1242   C774             BCMD_FOR_7: ; $C774
1243   C774 68 0E           LDI  UH,$0E
1244   C776             
1245   C776             BCMD_FOR_8: ; $C776
1246   C776 E0              VEJ  (E0)   
1247   C777             
1248   C777             
1249   C777             
1250   C777             ;------------------------------------------------------------------------------
1251   C777             ; $C777 - Basic Command POKE
1252   C777             ;------------------------------------------------------------------------------
1253   C777             BCMD_POKE:
1254   C777 F9              REC
1255   C778             
1256   C778             ;------------------------------------------------------------------------------
1257   C778             ; $C778 - Basic Command POKE#
1258   C778             ;------------------------------------------------------------------------------
1259   C778 04              LDA  XL
1260   C779 FD C8           PSH  A
1261   C77B DE              VEJ  (DE) \ 
1261   C77C             
1262   C77C 74                  ABRF(BCMD_READ_7) ; $C7F1
1263   C77D D0              VEJ  (D0) \ 
1263   C77E             
1264   C77E 00                  ABYT($00) \ 
1264   C77F             
1265   C77F 71                  ABRF(BCMD_READ_7) ; $C7F1
1266   C780 FD A8           PSH  U
1267   C782 C2              VEJ  (C2) \ 
1267   C783             
1268   C783 2C                  ACHR($2C) \ 
1268   C784             
1269   C784 1C                  ABRF(BCMD_POKE_4) ; $C7A1
1270   C785             
1271   C785             BCMD_POKE_1: ; $C785
1272   C785 DE              VEJ  (DE) \ 
1272   C786             
1273   C786 6A                  ABRF(BCMD_READ_7) ; $C7F1
1274   C787 D0              VEJ  (D0) \ 
1274   C788             
1275   C788 08                  ABYT($08) \ 
1275   C789             
1276   C789 67                  ABRF(BCMD_READ_7) ; $C7F1
1277   C78A FD 0A           POP  X
1278   C78C FD 8A           POP  A
1279   C78E FD C8           PSH  A
1280   C790 D1              ROR
1281   C791 24              LDA  UL
1282   C792 81 03           BCR BCMD_POKE_2 ; $C797
1283   C794 41              SIN  X
1284   C795 8E 03           BCH BCMD_POKE_3 ; $C79A
1285   C797             
1286   C797             BCMD_POKE_2: ; $C797
1287   C797 FD 0E           STA  #(X)
1288   C799 44              INC  X
1289   C79A             
1290   C79A             BCMD_POKE_3: ; $C79A
1291   C79A FD 88           PSH  X
1292   C79C C2              VEJ  (C2) \ 
1292   C79D             
1293   C79D 2C                  ACHR($2C) \ 
1293   C79E             
1294   C79E 45                  ABRF(BCMD_READ_3) ; $C7E4
1295   C79F 9E 1C           BCH BCMD_POKE_1 ; $C785
1296   C7A1             
1297   C7A1             BCMD_POKE_4: ; $C7A1
1298   C7A1 E4              VEJ  (E4)
1299   C7A2             
1300   C7A2             
1301   C7A2             
1302   C7A2             ;------------------------------------------------------------------------------
1303   C7A2             ; $C7A2 - Basic Command RESTORE
1304   C7A2             ;------------------------------------------------------------------------------
1305   C7A2             BCMD_RESTORE:
1306   C7A2 BE CC 8B        SJP  (FIND_LINE_1) ; $CC8B
1307   C7A5 4B 62           ORI  (X),$62
1308   C7A7 CC              VEJ  (CC) \ 
1308   C7A8             
1309   C7A8 9E                  ABYTL(CURR_TOP_H) ; $789E
1310   C7A9 44              INC  X
1311   C7AA 44              INC  X
1312   C7AB 44              INC  X
1313   C7AC 84              LDA  XH
1314   C7AD 81 02           BCR $C7B1
1315   C7AF CC              VEJ  (CC) \ 
1315   C7B0             
1316   C7B0 A6                  ABYTL(SRCH_ADD_H) ; $78A6
1317   C7B1 BB 80           ORI  A,$80
1318   C7B3 08              STA  XH
1319   C7B4 CA              VEJ  (CA) \ 
1319   C7B5             
1320   C7B5 BE              ABYTL(DATA_PTR_H) ; $78BE
1321   C7B6 56              DEC  Y
1322   C7B7 E2              VEJ  (E2)
1323   C7B8             
1324   C7B8             
1325   C7B8             
1326   C7B8             ;------------------------------------------------------------------------------
1327   C7B8             ; $C7B8 - Basic Command READ
1328   C7B8             ;------------------------------------------------------------------------------
1329   C7B8             BCMD_READ:
1330   C7B8 CE              VEJ  (CE) \ 
1330   C7B9             
1331   C7B9 58                  ABYT($58) \ 
1331   C7BA             
1332   C7BA 36                  ABRF(BCMD_READ_7) ; $C7F1
1333   C7BB DA              VEJ  (DA)
1334   C7BC FD 98           PSH  Y
1335   C7BE CC              VEJ  (CC) \ 
1335   C7BF             
1336   C7BF BE                  ABYTL(DATA_PTR_H) ; $78BE
1337   C7C0 FD 5A           STX  Y
1338   C7C2 DB              ROL
1339   C7C3 81 04           BCR BCMD_READ_1 ; $C7C9
1340   C7C5 D5              SHR
1341   C7C6 18              STA  YH
1342   C7C7 8E 2B           BCH BCMD_READ_9 ; $C7F4
1343   C7C9             
1344   C7C9             BCMD_READ_1: ; $C7C9
1345   C7C9 C2              VEJ  (C2) \ 
1345   C7CA             
1346   C7CA 2C                  ACHR($2C) \ 
1346   C7CB             
1347   C7CB 1A                  ABRF(BCMD_READ_4) ; $C7E6
1348   C7CC             
1349   C7CC             BCMD_READ_2: ; $C7CC
1350   C7CC DE              VEJ  (DE) \ 
1350   C7CD             
1351   C7CD 21                  ABRF(BCMD_READ_6) ; $C7EF
1352   C7CE C8              VEJ  (C8) \ 
1352   C7CF             
1353   C7CF 02                  ABRF($C7D2)
1354   C7D0 8E 03           BCH $C7D5
1355   C7D2 C4              VEJ  (C4) \ 
1355   C7D3             
1356   C7D3 2C                  ACHR($2C) \ 
1356   C7D4             
1357   C7D4 1A                  ABRF(BCMD_READ_6) ; $C7EF
1358   C7D5 56              DEC  Y
1359   C7D6 FD 18           LDX  Y
1360   C7D8 CA              VEJ  (CA) \ 
1360   C7D9             
1361   C7D9 BE                  ABYTL(DATA_PTR_H) ; $78BE
1362   C7DA FD 1A           POP  Y
1363   C7DC CD 08           VMJ  ($08) \ 
1363   C7DE             
1364   C7DE 12                  ABRF(BCMD_READ_7) ; $C7F1
1365   C7DF C2              VEJ  (C2) \ 
1365   C7E0             
1366   C7E0 2C                  ACHR($2C) \ 
1366   C7E1             
1367   C7E1 02                      ABRF(BCMD_READ_3) ; $C7E4
1368   C7E2 9E 2C           BCH BCMD_READ ; $C7B8
1369   C7E4             
1370   C7E4             BCMD_READ_3: ; $C7E4
1371   C7E4 CD 40           VMJ  ($40) ; orig ($40)($20) 20 bogus
1372   C7E6             
1373   C7E6             BCMD_READ_4: ; $C7E6
1374   C7E6 56              DEC  Y
1375   C7E7 CD 20           VMJ  ($20)
1376   C7E9             
1377   C7E9             BCMD_READ_5: ; $C7E9
1378   C7E9 55              LIN  Y
1379   C7EA DD              INC  A
1380   C7EB 89 05           BZR BCMD_READ_8 ; $C7F2
1381   C7ED 68 04           LDI  UH,$04
1382   C7EF             
1383   C7EF             BCMD_READ_6: ; $C7EF
1384   C7EF FD 1A           POP  Y
1385   C7F1             
1386   C7F1             BCMD_READ_7: ; $C7F1 
1387   C7F1 E0              VEJ  (E0)
1388   C7F2             
1389   C7F2             BCMD_READ_8: ; $C7F2
1390   C7F2 54              INC  Y
1391   C7F3 54              INC  Y
1392   C7F4             
1393   C7F4             BCMD_READ_9: ; $C7F4
1394   C7F4 FD 98           PSH  Y
1395   C7F6 CD 22           VMJ  ($22)
1396   C7F8 83 08           BCS BCMD_READ_10 ; $C802
1397   C7FA C4              VEJ  (C4) \ 
1397   C7FB             
1398   C7FB F1 8D               AWRD($F18D) \ 
1398   C7FD             
1399   C7FD 04                  ABRF(BCMD_READ_10) ; $C802
1400   C7FE FD 0A           POP  X
1401   C800 9E 36           BCH BCMD_READ_2 ; $C7CC
1402   C802             
1403   C802             BCMD_READ_10: ; $C802
1404   C802 FD 1A           POP  Y
1405   C804 56              DEC  Y
1406   C805 55              LIN  Y
1407   C806 FD DA           ADR  Y
1408   C808 9E 21           BCH BCMD_READ_5 ; $C7E9
1409   C80A             
1410   C80A             
1411   C80A             
1412   C80A             ;------------------------------------------------------------------------------
1413   C80A             ; $C80A - Basic Command NEW
1414   C80A             ;------------------------------------------------------------------------------
1415   C80A             BCMD_NEW:
1416   C80A 30              SBC  VL ; .BYTE 30?
1417   C80B D5              SHR
1418   C80C 85 0D           BHR BCMD_NEW_1 ; $C81B
1419   C80E C8              VEJ  (C8) \ 
1419   C80F             
1420   C80F E0                  ABRF(BCMD_CONT_2) ; $C8F0
1421   C810 CD 38           VMJ  ($38)
1422   C812 C1 E0           VCR  ($E0)
1423   C814 6A BC           LDI  UL,$BC
1424   C816 BE D0 AE        SJP  (DEL_DIM_VAR_3) ; $D0AE
1425   C819 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
1426   C81B             
1427   C81B             BCMD_NEW_1: ; $C81B
1428   C81B C8              VEJ  (C8) \ 
1428   C81C             
1429   C81C 04                  ABRF(BCMD_NEW_2) ; $C821
1430   C81D CC              VEJ  (CC) \ 
1430   C81E             
1431   C81E 65                  ABYTL(BASPRG_ST_H) ; $7865
1432   C81F 8E 34           BCH BCMD_NEW_6 ; $C855
1433   C821             
1434   C821             BCMD_NEW_2: ; $C821
1435   C821 C6              VEJ  (C6)
1436   C822 DE              VEJ  (DE) \ 
1436   C823             
1437   C823 CD                  ABRF(BCMD_CONT_3) ; $C8F1
1438   C824 D0              VEJ  (D0) \ 
1438   C825             
1439   C825 00                  ABYT($00) \ 
1439   C826             
1440   C826 CA                  ABRF(BCMD_CONT_3) ; $C8F1
1441   C827 C8              VEJ  (C8) \ 
1441   C828             
1442   C828 C7                  ABRF(BCMD_CONT_2) ; $C8F0
1443   C829 DC              VEJ  (DC)
1444   C82A A5 78 60        LDA  (ST_ROM_MOD) ; $7860
1445   C82D D9              SHL
1446   C82E 04              LDA  XL
1447   C82F 89 0F           BZR BCMD_NEW_4 ; $C840
1448   C831 84              LDA  XH
1449   C832 89 0C           BZR BCMD_NEW_4 ; $C840
1450   C834 81 02           BCR BCMD_NEW_3 ; $C838
1451   C836 4A C5           LDI  XL,$C5
1452   C838             
1453   C838             BCMD_NEW_3: ; $C838
1454   C838 A5 78 63        LDA  (RAM_ST_H)
1455   C83B BE CD 6A        SJP  (UNLOCK)
1456   C83E 8E 13           BCH BCMD_NEW_5 ; $C853
1457   C840             
1458   C840             BCMD_NEW_4: ; $C840
1459   C840 68 19           LDI  UH,$19
1460   C842 C1 E0           VCR  ($E0)
1461   C844 04              LDA  XL
1462   C845 B1 C5           SBI  A,$C5
1463   C847 84              LDA  XH
1464   C848 A1 78 63        SBC  (RAM_ST_H)
1465   C84B C1 E0           VCR  ($E0)
1466   C84D 84              LDA  XH
1467   C84E A7 78 64        CPA  (RAM_END_H)
1468   C851 C3 E0           VCS  ($E0)
1469   C853             
1470   C853             BCMD_NEW_5: ; $C853
1471   C853 CA              VEJ  (CA) \ 
1471   C854             
1472   C854 65                  ABYTL(BASPRG_ST_H) ; $7865
1473   C855             
1474   C855             BCMD_NEW_6: ; $C855
1475   C855 CA              VEJ  (CA) \ 
1475   C856             
1476   C856 69                  ABYTL(BASPRG_EDT_H) ; $7869
1477   C857             
1478   C857             BCMD_NEW_7: ; $C857
1479   C857 4B FF           ORI  (X),$FF
1480   C859 CA              VEJ  (CA) \ 
1480   C85A             
1481   C85A 67                  ABYTL(BASPRG_END_H) ; $7867
1482   C85B 56              DEC  Y
1483   C85C BE D0 0D        SJP  (INIT_SYS_ADDR_6) ; $D00D
1484   C85F             
1485   C85F             
1486   C85F             
1487   C85F             ;------------------------------------------------------------------------------
1488   C85F             ; $C85F - Basic Command CLEAR 
1489   C85F             ;------------------------------------------------------------------------------ 
1490   C85F             BCMD_CLEAR:
1491   C85F BE D0 80        SJP  (DEL_STD_VARS)
1492   C862 E2              VEJ (E2)
1493   C863             
1494   C863             
1495   C863             
1496   C863             ;------------------------------------------------------------------------------
1497   C863             ; $C863 - Basic Command CALL
1498   C863             ;------------------------------------------------------------------------------
1499   C863             BCMD_CALL: 
1500   C863 DE              VEJ  (DE) \ 
1500   C864             
1501   C864 8C                  ABRF(BCMD_CONT_3) ; $C8F1
1502   C865 D0              VEJ  (D0) \ 
1502   C866             
1503   C866 00                  ABYT($00) \ 
1503   C867             
1504   C867 89                      ABRF(BCMD_CONT_3) ; $C8F1
1505   C868 FD A8           PSH  U
1506   C86A C8              VEJ  (C8) \ 
1506   C86B             
1507   C86B 05                  ABRF(BCMD_CALL_1) ; $C871
1508   C86C 68 80           LDI  UH,$80
1509   C86E DA              VEJ  (DA)
1510   C86F 8E 18           BCH BCMD_CALL_2 ; $C889
1511   C871             
1512   C871             BCMD_CALL_1: ; $C871
1513   C871 C4              VEJ  (C4) \ 
1513   C872             
1514   C872 2C                  ACHR($2C) \ 
1514   C873             
1515   C873 7C                      ABRF(BCMD_CONT_2) ; $C8F0
1516   C874 CE              VEJ  (CE) \ 
1516   C875             
1517   C875 58                  ABYT($58) \ 
1517   C876             
1518   C876 7A                      ABRF(BCMD_CONT_3) ; $C8F1
1519   C877 6C 80           CPI  UH,$80
1520   C879 83 EA           BCS BCMD_INPUT_8 ; $C965
1521   C87B DA              VEJ  (DA)
1522   C87C C8              VEJ  (C8) \ 
1522   C87D             
1523   C87D 72                  ABRF(BCMD_CONT_2) ; $C8F0
1524   C87E DC              VEJ  (DC)
1525   C87F B7 80           CPI  A,$80
1526   C881 81 06           BCR BCMD_CALL_2 ; $C889
1527   C883 CD 0A           VMJ  ($0A)
1528   C885 D0              VEJ  (D0) \ 
1528   C886             
1529   C886 04                  ABYT($04) \ 
1529   C887             
1530   C887 69                  ABRF(BCMD_CONT_3) ; $C8F1
1531   C888 DC              VEJ  (DC)
1532   C889             
1533   C889             BCMD_CALL_2: ; $C889    
1534   C889 56              DEC  Y
1535   C88A FD 2A           POP  U
1536   C88C FD 98           PSH  Y
1537   C88E 5A 97           LDI  YL,$97
1538   C890 58 C8           LDI  YH,$C8
1539   C892 FD 98           PSH  Y
1540   C894 FD A8           PSH  U
1541   C896 9A              RTN
1542   C897 FD 1A           POP  Y
1543   C899 C1 E2           VCR  ($E2)
1544   C89B ED 78 83 80     BII  (CURVARADD_H),$80
1545   C89F C9 E2           VZR  ($E2)
1546   C8A1 ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
1547   C8A5 8B 09           BZS BCMD_CALL_4 ; $C8B0
1548   C8A7 FD 6A           STX  U
1549   C8A9 BE D9 E7        SJP  (ARUINT2ARX)
1550   C8AC             
1551   C8AC             BCMD_CALL_3: ; $C8AC
1552   C8AC CD 08           VMJ  ($08) \ 
1552   C8AE             
1553   C8AE 42                  ABRF(BCMD_CONT_3) ; $C8F1
1554   C8AF E2              VEJ  (E2)
1555   C8B0             
1556   C8B0             BCMD_CALL_4: ; $C8B0
1557   C8B0 CD 24           VMJ  ($24)
1558   C8B2 9E 08           BCH BCMD_CALL_3 ; $C8AC
1559   C8B4             
1560   C8B4             
1561   C8B4             
1562   C8B4             ;------------------------------------------------------------------------------
1563   C8B4             ; $C8B4 - Basic Command RUN
1564   C8B4             ;------------------------------------------------------------------------------
1565   C8B4             BCMD_RUN:
1566   C8B4 40              INC  XL
1567   C8B5 BE CC 86        SJP  (FIND_LINE) ; $CC86
1568   C8B8 38              NOP
1569   C8B9 C1 42           VCR  ($42) ; orig ($42)($21) 21 bogus
1570   C8BB BE D0 91        SJP  (DEL_DIM_VAR)
1571   C8BE BE D0 0D        SJP  (INIT_SYS_ADDR_6) ; $D00D
1572   C8C1             
1573   C8C1             BCMD_RUN_1: ; $C8C1
1574   C8C1 F2              VEJ  (F2)
1575   C8C2             
1576   C8C2             BCMD_RUN_2: ; $C8C2
1577   C8C2 D6              VEJ  (D6) \ 
1577   C8C3             
1578   C8C3 A6                  ABYT($A6)
1579   C8C4 BA C4 38        JMP  BASIC_INT_8 ; $C438
1580   C8C7             
1581   C8C7             
1582   C8C7             
1583   C8C7             ;------------------------------------------------------------------------------
1584   C8C7             ; $C8C7 - Basic Command CONT
1585   C8C7             ;------------------------------------------------------------------------------
1586   C8C7             BCMD_CONT:
1587   C8C7 40              INC  XL
1588   C8C8 C8              VEJ  (C8) \ 
1588   C8C9             
1589   C8C9 26                  ABRF(BCMD_CONT_2) ; $C8F0
1590   C8CA ED 78 8A E0     BII  (BREAKPARAM),$E0
1591   C8CE CB E4           VZS  ($E4)
1592   C8D0 E9 7B 0E 7F     ANI  (CURS_CTRL),$7F
1593   C8D4 F2              VEJ  (F2)
1594   C8D5             
1595   C8D5             BCMD_CONT_1: ; $C8D5
1596   C8D5 EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1597   C8D9 D6              VEJ  (D6) \ 
1597   C8DA             
1598   C8DA AC                  ABYT($AC)
1599   C8DB A5 78 8A        LDA  (BREAKPARAM)
1600   C8DE E9 78 8A 0F     ANI  (BREAKPARAM),$0F
1601   C8E2 DB              ROL
1602   C8E3 DB              ROL
1603   C8E4 81 0C           BCR $C8F2
1604   C8E6 BE D0 2B        SJP  (INBUF_CLR_1) ; $D02B
1605   C8E9 EB 78 8A 50     ORI  (BREAKPARAM),$50
1606   C8ED BA CA 75        JMP  BUTTON_CL_2 ; $CA75
1607   C8F0             
1608   C8F0             BCMD_CONT_2: ; $C8F0
1609   C8F0 E4              VEJ  (E4)
1610   C8F1             
1611   C8F1             BCMD_CONT_3: ; $C8F1
1612   C8F1 E0              VEJ  (E0)
1613   C8F2 DB              ROL
1614   C8F3 81 02           BCR BCMD_CONT_4 ; BCMD_CLEAR_1 ; BCMD_NEW_7 ; $C8F7
1615   C8F5 56              DEC  Y
1616   C8F6 E2              VEJ  (E2)
1617   C8F7             
1618   C8F7             BCMD_CONT_4: ; $C42E
1619   C8F7 BA C4 2E        JMP  BASIC_INT_7 ; 
1620   C8FA             
1621   C8FA             
1622   C8FA             
1623   C8FA             ;------------------------------------------------------------------------------
1624   C8FA             ; $C8FA - Basic Command INPUT
1625   C8FA             ;------------------------------------------------------------------------------
1626   C8FA             BCMD_INPUT:
1627   C8FA C2              VEJ  (C2) \ 
1627   C8FB             
1628   C8FB 23                  ACHR($23) \ 
1628   C8FC             
1629   C8FC 03                  ABRF(BCMD_INPUT_1) ; $C900
1630   C8FD BA E4 E7        JMP  $E4E7
1631   C900             
1632   C900             BCMD_INPUT_1: ; $C900
1633   C900 D8              VEJ  (D8)
1634   C901 89 03           BZR BCMD_INPUT_2 ; $C906
1635   C903 68 1A           LDI  UH,$1A
1636   C905 E0              VEJ  (E0)
1637   C906             
1638   C906             BCMD_INPUT_2: ; $C906
1639   C906 C6              VEJ  (C6)
1640   C907             
1641   C907             BCMD_INPUT_3: ; $C907
1642   C907 BE D0 34        SJP  (INBUF_CLR_3)
1643   C90A C2              VEJ  (C2) \ 
1643   C90B             
1644   C90B 22                  ACHR($22) \ 
1644   C90C             
1645   C90C 50                  ABRF(BCMD_INPUT_7) ; $C95D
1646   C90D CD 0C           VMJ  ($0C)
1647   C90F FD 98           PSH  Y
1648   C911 5A B0           LDI  YL,$B0
1649   C913 58 7B           LDI  YH,$7B
1650   C915 A5 7A 07        LDA  (ARX + $07)
1651   C918 2A              STA  UL
1652   C919 BE D0 49        SJP  (SYSMSG_3)
1653   C91C 14              LDA  YL
1654   C91D AE 78 8B        STA  (INBUFPTR_L)
1655   C920 FD 1A           POP  Y
1656   C922 C2              VEJ  (C2) \ 
1656   C923             
1657   C923 3B                  ACHR($3B) \ 
1657   C924             
1658   C924 04                  ABRF(BCMD_INPUT_4) ; $C929
1659   C925 B5 40           LDI  A,$40
1660   C927 8E 0A           BCH BCMD_INPUT_6 ; $C933
1661   C929             
1662   C929             BCMD_INPUT_4: ; $C929
1663   C929 C4              VEJ  (C4) \ 
1663   C92A             
1664   C92A 2C                  ACHR($2C) \ 
1664   C92B             
1665   C92B B7                  ABRF(BCMD_DIM_9) ; $C9E3
1666   C92C                
1667   C92C             BCMD_INPUT_5: ; $C92C  
1668   C92C B5 B0           LDI  A,$B0
1669   C92E AE 78 8B        STA  (INBUFPTR_L)
1670   C931 B5 00           LDI  A,$00
1671   C933             
1672   C933             BCMD_INPUT_6: ; $C933
1673   C933 AE 78 80        STA  (DISPARAM)
1674   C936 CE              VEJ  (CE) \ 
1674   C937             
1675   C937 58                  ABYT($58) \ 
1675   C938             
1676   C938 2E                  ABRF(BCMD_INPUT_9) ; $C967
1677   C939 F6              VEJ  (F6) \ 
1677   C93A             
1678   C93A 78 86               AWRD(LASTVARADD_H)
1679   C93C 44              INC  X
1680   C93D A5 7A 07        LDA  (ARX + $07)
1681   C940 0E              STA  (X)
1682   C941 EB 78 8A 50     ORI  (BREAKPARAM),$50
1683   C945 D4              VEJ  (D4) \ 
1683   C946             
1684   C946 A0                  ABYT($A0)
1685   C947 D4              VEJ  (D4) \ 
1685   C948             
1686   C948 AC                  ABYT($AC)
1687   C949 A5 78 8B        LDA  (INBUFPTR_L)
1688   C94C 1A              STA  YL
1689   C94D 58 7B           LDI  YH,$7B
1690   C94F E9 7B 0E 9F     ANI  (CURS_CTRL),$9F
1691   C953 BE EF 67        SJP  (PREP_LCD_OUT)
1692   C956 68 20           LDI  UH,$20
1693   C958 C3 E0           VCS  ($E0)
1694   C95A BA CA 7D        JMP  EDITOR_1 ; $CA7D
1695   C95D             
1696   C95D             BCMD_INPUT_7: ; $C95D
1697   C95D C6              VEJ  (C6)
1698   C95E B5 3F           LDI  A,$3F
1699   C960 AE 7B B0        STA  (IN_BUF)
1700   C963 9E 39           BCH BCMD_INPUT_5 ; $C92C
1701   C965             
1702   C965             BCMD_INPUT_8: ; $C965
1703   C965 68 07           LDI  UH,$07
1704   C967             
1705   C967             BCMD_INPUT_9: ; $C967
1706   C967 E0              VEJ  (E0)
1707   C968             
1708   C968             
1709   C968             
1710   C968             ;------------------------------------------------------------------------------
1711   C968             ; $C968 - Basic Command LOCK
1712   C968             ;------------------------------------------------------------------------------
1713   C968             BCMD_LOCK:
1714   C968 B5 00           LDI  A,$00
1715   C96A             
1716   C96A             ;------------------------------------------------------------------------------
1717   C96A             ; $C96A - Basic Command UNLOCK
1718   C96A             ;------------------------------------------------------------------------------
1719   C96A             BCMD_UNLOCK:
1720   C96A AE 79 FF        STA  (UNDEF_REG_79FF)
1721   C96D E2              VEJ  (E2) ; Return to BASIC interpretor
1722   C96E             
1723   C96E             
1724   C96E             
1725   C96E             ;------------------------------------------------------------------------------
1726   C96E             ; $C96E - Basic Command LIST
1727   C96E             ;------------------------------------------------------------------------------
1728   C96E             BCMD_LIST:
1729   C96E 20              SBC  UL ; .BYTE $20
1730   C96F BE CC 86        SJP  (FIND_LINE); $CC86
1731   C972 04              LDA  XL
1732   C973 83 08           BCS BCMD_LIST_1 ; $C97D
1733   C975 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
1734   C977 C1 E0           VCR  ($E0)
1735   C979 6C 0B           CPI  UH,$0B
1736   C97B C9 E0           VZR  ($E0)
1737   C97D             
1738   C97D             BCMD_LIST_1: ; $C97D
1739   C97D CC              VEJ  (CC) \ 
1739   C97E             
1740   C97E A6                  ABYTL(SRCH_ADD_H) ; $78A6
1741   C97F 46              DEC  X
1742   C980 46              DEC  X
1743   C981 BE D2 D0        SJP  (LINE_2_INBUF_4) ; $D2D0
1744   C984 B5 14           LDI  A,$14
1745   C986 CD 44           VMJ  ($44) ;orig ($44)($22) 22 bogus
1746   C988             
1747   C988             
1748   C988             
1749   C988             ;------------------------------------------------------------------------------
1750   C988             ; $C988 - Basic Command DIM
1751   C988             ;------------------------------------------------------------------------------
1752   C988             BCMD_DIM:
1753   C988 CE              VEJ  (CE) \ 
1753   C989             
1754   C989 14                  ABYT($14) \ 
1754   C98A             
1755   C98A 49                  ABRF(BCMD_DIM_4) ; $C9D4
1756   C98B DA              VEJ  (DA)
1757   C98C CD 2C           VMJ  ($2C) \ 
1757   C98E             
1758   C98E 45                  ABRF(BCMD_DIM_4) ; $C9D4
1759   C98F FD A8           PSH  U
1760   C991 B5 88           LDI  A,$88
1761   C993 ED 78 84 20     BII  (CURVARADD_L),$20
1762   C997 8B 08           BZS BCMD_DIM_1 ; $C9A1
1763   C999 C2              VEJ  (C2) \ 
1763   C99A             
1764   C99A 2A                  ACHR($2A) \ 
1764   C99B             
1765   C99B 39                  ABRF(BCMD_DIM_5) ; $C9D5
1766   C99C DE              VEJ  (DE) \ 
1766   C99D             
1767   C99D 36                  ABRF(BCMD_DIM_4) ; $C9D4
1768   C99E D0              VEJ  (D0) \ 
1768   C99F             
1769   C99F 0D                  ABYT($0D) \ 
1769   C9A0             
1770   C9A0 33                  ABRF(BCMD_DIM_4) ; $C9D4
1771   C9A1                 
1772   C9A1             BCMD_DIM_1: ; $C9A1    
1773   C9A1 AE 78 85        STA  (CURVARTYPE) ; $7885
1774   C9A4 FD 2A           POP  U
1775   C9A6 FD 98           PSH  Y
1776   C9A8 FD A8           PSH  U
1777   C9AA A4              LDA  UH
1778   C9AB 1A              STA  YL
1779   C9AC 68 00           LDI  UH,$00
1780   C9AE 58 00           LDI  YH,$00
1781   C9B0 64              INC  U
1782   C9B1 54              INC  Y
1783   C9B2 CD 50           VMJ  ($50) ; orig ($50)($28) 28 us bogus
1784   C9B4 83 18           BCS BCMD_DIM_2 ; $C9CE
1785   C9B6 A5 78 85        LDA  (CURVARTYPE) ; $7885
1786   C9B9 B9 7F           ANI  A,$7F
1787   C9BB 2A              STA  UL
1788   C9BC CD 50           VMJ  ($50) ; orig ($50)($28) 28 us bogus
1789   C9BE 83 0E           BCS BCMD_DIM_2 ; $C9CE
1790   C9C0 FD 2A           POP  U
1791   C9C2 BE D3 86        SJP  (RES_VAR_SPACE_2) ; $D386
1792   C9C5 83 0B           BCS BCMD_DIM_3 ; $C9D2
1793   C9C7 FD 1A           POP  Y
1794   C9C9 C2              VEJ  (C2) \ 
1794   C9CA             
1795   C9CA 2C                  ACHR($2C) \ 
1795   C9CB             
1796   C9CB 10                  ABRF(BCMD_DIM_7) ; $C9DC
1797   C9CC 9E 46           BCH BCMD_DIM
1798   C9CE             
1799   C9CE             BCMD_DIM_2: ; $C9CE
1800   C9CE 68 0A           LDI  UH,$0A
1801   C9D0 FD 0A           POP  X
1802   C9D2             
1803   C9D2             BCMD_DIM_3: ; $C9D2
1804   C9D2 FD 1A           POP  Y
1805   C9D4             
1806   C9D4             BCMD_DIM_4: ; $C9D4
1807   C9D4 E0              VEJ  (E0)
1808   C9D5             
1809   C9D5             BCMD_DIM_5: ; $C9D5  
1810   C9D5 C6              VEJ  (C6)
1811   C9D6 B5 10           LDI  A,$10
1812   C9D8 9E 39           BCH BCMD_DIM_1 ; $C9A1
1813   C9DA             
1814   C9DA             BCMD_DIM_6: ; $C9DA
1815   C9DA C8              VEJ  (C8) \ 
1815   C9DB             
1816   C9DB 02                  ABRF(BCMD_DIM_8) ; $C9DE
1817   C9DC                 
1818   C9DC             BCMD_DIM_7: ; $C9DC   
1819   C9DC CD 40           VMJ  ($40) ; orig ($40)($20) 20 bogus
1820   C9DE             
1821   C9DE             BCMD_DIM_8: ; $C9DE
1822   C9DE C4              VEJ  (C4) \ 
1822   C9DF             
1823   C9DF 2C                  ACHR($2C) \ 
1823   C9E0             
1824   C9E0 02                  ABRF(BCMD_DIM_9) ; $C9E3
1825   C9E1 9E DC           BCH BCMD_INPUT_3 ; $C907
1826   C9E3             
1827   C9E3             BCMD_DIM_9: ; $C9E3
1828   C9E3 E4              VEJ  (E4)
1829   C9E4             
1830   C9E4             
1831   C9E4             
1832   C9E4             ;------------------------------------------------------------------------------
1833   C9E4             ; $C9E4 - Editor Cold Start
1834   C9E4             ;------------------------------------------------------------------------------
1835   C9E4             COLD_START:
1836   C9E4 BE CF CC        SJP  (INIT_SYS_ADDR) ; $CFCC
1837   C9E7 BE D0 30        SJP  (INBUF_CLR_2)
1838   C9EA 6A 0C           LDI  UL,$0C
1839   C9EC A5 7A 21        LDA  (ARV + $01)
1840   C9EF 28              STA  UH
1841   C9F0 4A 4F           LDI  XL,$4F
1842   C9F2 A5 7A 20        LDA  (ARV)
1843   C9F5 89 2D           BZR COLD_START_2 ; $CA24
1844   C9F7 4A 55           LDI  XL,$55
1845   C9F9 6A 06           LDI  UL,$06
1846   C9FB A4              LDA  UH
1847   C9FC AB 7A 22        ORA  (ARV + $02)
1848   C9FF 89 28           BZR COLD_START_3 ; $CA29
1849   CA01 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
1850   CA05 8B 4E           BZS BTN_SHCL
1851   CA07 BE DF F3        SJP  (STATUS_2_UREG)
1852   CA0A B5 00           LDI  A,$00
1853   CA0C             
1854   CA0C             COLD_START_1: ; $CA0C
1855   CA0C 81 47           BCR BTN_SHCL
1856   CA0E FD C8           PSH  A
1857   CA10 BE D0 B4        SJP  (PRG_SEARCH) ; $D0B4
1858   CA13 FD 5A           STX  Y
1859   CA15 CD 22           VMJ  ($22)
1860   CA17 83 31           BCS COLD_START_8 ; $CA4A
1861   CA19 C4              VEJ  (C4) \ 
1861   CA1A             
1862   CA1A F1 81               AWRD($F181) \ 
1862   CA1C             
1863   CA1C 2D                  ABRF(COLD_START_8); $CA4A
1864   CA1D EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1865   CA21 BA C8 C1        JMP  BCMD_RUN_1 ; $C8C1
1866   CA24             
1867   CA24             COLD_START_2: ; $CA24
1868   CA24 B5 23           LDI  A,$23
1869   CA26 AE 76 4F        STA  (DISP_BUFF + $4F)
1870   CA29             
1871   CA29             COLD_START_3: ; $CA29
1872   CA29 BE D0 46        SJP  (SYSMSG_1)
1873   CA2C 4A 30           LDI  XL,$30
1874   CA2E A5 7A 22        LDA  (ARV + $02)
1875   CA31             
1876   CA31             COLD_START_4: ; $CA32
1877   CA31 08              STA  XH
1878   CA32             
1879   CA32             COLD_START_5: ; $    
1880   CA32 84              LDA  XH
1881   CA33 D5              SHR
1882   CA34 08              STA  XH
1883   CA35 A4              LDA  UH
1884   CA36 D1              ROR
1885   CA37 28              STA  UH
1886   CA38 81 02           BCR COLD_START_6 ; $CA3C
1887   CA3A 04              LDA  XL
1888   CA3B 51              SIN  Y
1889   CA3C             
1890   CA3C             COLD_START_6: ; $CA3C
1891   CA3C 40              INC  XL
1892   CA3D 4E 3A           CPI  XL,$3A
1893   CA3F 89 02           BZR COLD_START_7 ; $CA43
1894   CA41 4A 41           LDI  XL,$41
1895   CA43             
1896   CA43             COLD_START_7: ; $CA43
1897   CA43 62              DEC  UL
1898   CA44 97 14           BHS COLD_START_5 ; $CA32
1899   CA46 B5 80           LDI  A,$80
1900   CA48 CD 44           VMJ  ($44) ; orig ($44)($22) 22 bogus
1901   CA4A             
1902   CA4A             COLD_START_8: ; $CA4A
1903   CA4A FD 8A           POP  A
1904   CA4C DF              DEC  A
1905   CA4D 83 06           BCS BTN_SHCL
1906   CA4F CD 14           VMJ  ($14)
1907   CA51 B5 FF           LDI  A,$FF
1908   CA53 9E 49           BCH COLD_START_1 ; $CA0C
1909   CA55             
1910   CA55             
1911   CA55             
1912   CA55             ;------------------------------------------------------------------------------
1913   CA55             ; $CA55 - SHIFT CL button (Clear All)
1914   CA55             ;------------------------------------------------------------------------------
1915   CA55             BTN_SHCL:
1916   CA55 BE CF CC        SJP  (INIT_SYS_ADDR) ; $CFCC
1917   CA58             
1918   CA58             
1919   CA58             
1920   CA58             ;------------------------------------------------------------------------------
1921   CA58             ; $CA58 - (42) Editor Warm 
1922   CA58             ;------------------------------------------------------------------------------
1923   CA58             WARM_START:
1924   CA58 BE D0 2B        SJP  (INBUF_CLR_1) ; $D02B
1925   CA5B B5 3E           LDI  A,$3E
1926   CA5D 1E              STA  (Y)
1927   CA5E E9 78 8A EF     ANI  (BREAKPARAM),$EF
1928   CA62 8E 14           BCH BUTTON_CL_3 ; $CA78
1929   CA64             
1930   CA64             
1931   CA64             
1932   CA64             ;------------------------------------------------------------------------------
1933   CA64             ; $CA64 - CL Button
1934   CA64             ;------------------------------------------------------------------------------
1935   CA64             BUTTON_CL:
1936   CA64 81 01           BCR BUTTON_CL_1 ; $CA67
1937   CA66 F2              VEJ  (F2)
1938   CA67             
1939   CA67             BUTTON_CL_1: ; $CA67
1940   CA67 BE D0 11        SJP  (INPUT_EDITED) ; $D011
1941   CA6A 91 14           BCR WARM_START
1942   CA6C BE D0 21        SJP  (INBUF_CLR)
1943   CA6F B5 40           LDI  A,$40
1944   CA71 5E B0           CPI  YL,$B0
1945   CA73 89 05           BZR EDITOR ; $CA7A
1946   CA75             
1947   CA75             BUTTON_CL_2: ; $CA75
1948   CA75 B5 3F           LDI  A,$3F
1949   CA77 1E              STA  (Y)
1950   CA78             
1951   CA78             BUTTON_CL_3: ; $CA78
1952   CA78 B5 00           LDI  A,$00
1953   CA7A             
1954   CA7A             
1955   CA7A             
1956   CA7A             ;------------------------------------------------------------------------------
1957   CA7A             ; $CA7A (44) - Editor (display is retained)
1958   CA7A             ;------------------------------------------------------------------------------
1959   CA7A             EDITOR:
1960   CA7A AE 78 80        STA  (DISPARAM)
1961   CA7D             
1962   CA7D             ;------------------------------------------------------------------------------
1963   CA7D             ; $CA7D (46) - Editor Jump
1964   CA7D             ;------------------------------------------------------------------------------
1965   CA7D             EDITOR_1:
1966   CA7D BE E8 CA        SJP  (PRGM_DISP)
1967   CA80 E9 78 9D 00     ANI  (CURR_LINE_L),$00
1968   CA84 E9 78 9C 00     ANI  (CURR_LINE_H),$00
1969   CA88 E9 76 4E FE     ANI  (DISP_BUFF + $4E),$FE
1970   CA8C AA 78 4F        LDI  S,(CPU_STACK + $4F)
1971   CA8F BE E2 43        SJP  (WAIT_4_KB)
1972   CA92 2A              STA  UL
1973   CA93 CC              VEJ  (CC) \ 
1973   CA94             
1974   CA94 80                  ABYTL(DISPARAM) ; $7880
1975   CA95 6E 19           CPI  UL,$19
1976   CA97 8B C8           BZS BTN_RCL
1977   CA99 6E 09           CPI  UL,$09
1978   CA9B 8B CC           BZS RSV_CHNG
1979   CA9D 28              STA  UH
1980   CA9E D1              ROR
1981   CA9F 81 0D           BCR EDITOR_2 ; $CAAE
1982   CAA1 FD 62           DEC  UH
1983   CAA3 FD A8           PSH  U
1984   CAA5 BE EE 99        SJP  (RESTORE_LCD_CURS)
1985   CAA8 FD 2A           POP  U
1986   CAAA E9 78 80 FE     ANI  (DISPARAM),$FE
1987   CAAE             
1988   CAAE             EDITOR_2: ; $CAAE
1989   CAAE 24              LDA  UL
1990   CAAF B7 20           CPI  A,$20
1991   CAB1 81 2C           BCR EDITOR_4 ; $CADF
1992   CAB3 6C 80           CPI  UH,$80
1993   CAB5 C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
1994   CAB7 BF 60           BII  A,$60
1995   CAB9 68 00           LDI  UH,$00
1996   CABB 89 1D           BZR EDITOR_3 ; $CADA
1997   CABD 4A EB           LDI  XL,$EB
1998   CABF 48 C2           LDI  XH,$C2
1999   CAC1 FD CA           ADR  X
2000   CAC3 05              LDA  (X)
2001   CAC4 B7 E0           CPI  A,$E0
2002   CAC6 83 11           BCS $CAD9
2003   CAC8 2A              STA  UL
2004   CAC9 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
2005   CACD 8B 0B           BZS EDITOR_3 ; $CADA
2006   CACF EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
2007   CAD3 28              STA  UH
2008   CAD4 CD 3A           VMJ  ($3A)
2009   CAD6 BA C5 29        JMP  DEFKEY_EVAL ; $C529
2010   CAD9 28              STA  UH
2011   CADA             
2012   CADA             EDITOR_3: ; $CADA
2013   CADA BE CE 4A        SJP  (DEFEVAL)
2014   CADD 9E 62           BCH EDITOR_1 ; $CA7D
2015   CADF             
2016   CADF             EDITOR_4: ; $CADF
2017   CADF D9              SHL
2018   CAE0 85 16           BHR EDITOR_6 ; $CAF8
2019   CAE2 BF 20           BII  A,$20
2020   CAE4 8B 02           BZS EDITOR_5 ; $CAE8
2021   CAE6 B9 0E           ANI  A,$0E
2022   CAE8             
2023   CAE8             EDITOR_5: ; $CAE8
2024   CAE8 6A 8B           LDI  UL,$8B
2025   CAEA 68 C3           LDI  UH,$C3
2026   CAEC FD EA           ADR  U
2027   CAEE 65              LIN  U
2028   CAEF 08              STA  XH
2029   CAF0 25              LDA  (U)
2030   CAF1 0A              STA  XL
2031   CAF2 A5 78 80        LDA  (DISPARAM)
2032   CAF5 D9              SHL
2033   CAF6 FD 5E           STX  P
2034   CAF8             
2035   CAF8             EDITOR_6: ; $CAF8
2036   CAF8 6C 80           CPI  UH,$80
2037   CAFA C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
2038   CAFC             
2039   CAFC             EDITOR_7: ; $CAFC
2040   CAFC BE CE 87        SJP  (RES_KEY_CODE) ; $CE87
2041   CAFF ED 76 4F 10     BII  (DISP_BUFF + $4F),$10
2042   CB03 8B 28           BZS EDITOR_10 ; $CB2D
2043   CB05 BE D0 30        SJP  (INBUF_CLR_2)
2044   CB08 B5 46           LDI  A,$46
2045   CB0A 51              SIN  Y
2046   CB0B A4              LDA  UH
2047   CB0C BB 30           ORI  A,$30
2048   CB0E 51              SIN  Y
2049   CB0F B5 3A           LDI  A,$3A
2050   CB11 51              SIN  Y
2051   CB12 14              LDA  YL
2052   CB13 AE 78 8B        STA  (INBUFPTR_L)
2053   CB16 CD 38           VMJ  ($38)
2054   CB18 BE CE C4        SJP  (RESKEY_SRCH)
2055   CB1B B5 48           LDI  A,$48
2056   CB1D 81 0C           BCR EDITOR_9 ; $CB2B
2057   CB1F 45              LIN  X
2058   CB20 BF E0           BII  A,$E0
2059   CB22 8B 03           BZS EDITOR_8 ; $CB27
2060   CB24 51              SIN  Y
2061   CB25 9E 08           BCH $CB1F
2062   CB27             
2063   CB27             EDITOR_8: ; $CB27
2064   CB27 5A B3           LDI  YL,$B3
2065   CB29 B5 08           LDI  A,$08
2066   CB2B             
2067   CB2B             EDITOR_9: ; $CB2B
2068   CB2B CD 44           VMJ  ($44) ; orig ($44)($22) 22 bogus
2069   CB2D             
2070   CB2D             EDITOR_10: ; $CB2D
2071   CB2D CD 38           VMJ  ($38)
2072   CB2F 68 00           LDI  UH,$00
2073   CB31 BE CE C4        SJP  (RESKEY_SRCH)
2074   CB34 91 5C           BCR EDITOR_3 ; $CADA
2075   CB36 45              LIN  X
2076   CB37 B7 40           CPI  A,$40
2077   CB39 8B E2           BZS PRG_ENTER
2078   CB3B 2A              STA  UL
2079   CB3C             
2080   CB3C             EDITOR_11: ; $CB3C
2081   CB3C 24              LDA  UL
2082   CB3D 68 00           LDI  UH,$00
2083   CB3F B7 E0           CPI  A,$E0
2084   CB41 81 03           BCR EDITOR_12 ; $CB46
2085   CB43 28              STA  UH
2086   CB44 45              LIN  X
2087   CB45 2A              STA  UL
2088   CB46             
2089   CB46             EDITOR_12: ; $CB46
2090   CB46 BE CE 4A        SJP  (DEFEVAL)
2091   CB49 45              LIN  X
2092   CB4A 2A              STA  UL
2093   CB4B B7 20           CPI  A,$20
2094   CB4D 91 D2           BCR EDITOR_1 ; $CA7D
2095   CB4F B7 40           CPI  A,$40
2096   CB51 8B CA           BZS PRG_ENTER
2097   CB53 15              LDA  (Y)
2098   CB54 B7 0D           CPI  A,$0D
2099   CB56 9B 1C           BZS EDITOR_11 ; $CB3C
2100   CB58 B7 27           CPI  A,$27
2101   CB5A 9B 20           BZS EDITOR_11 ; $CB3C
2102   CB5C BE CD E6        SJP  (INS2INBUF)
2103   CB5F 9E 25           BCH EDITOR_11 ; $CB3C
2104   CB61             
2105   CB61             
2106   CB61             
2107   CB61             ;------------------------------------------------------------------------------
2108   CB61             ; $CB61 - RCL button
2109   CB61             ;------------------------------------------------------------------------------
2110   CB61             BTN_RCL:
2111   CB61 D1              ROR
2112   CB62 83 2F           BCS RSV_CHNG_3 ; $CB93
2113   CB64             
2114   CB64             BTN_RCL_1: ; $CB64
2115   CB64 BE EE 80        SJP  (SAVE_LCD_CURS)
2116   CB67 8E 1E           BCH RSV_CHNG_2 ; $CB87
2117   CB69             
2118   CB69             
2119   CB69             
2120   CB69             ;------------------------------------------------------------------------------
2121   CB69             ; $CB69 - Switching the RESERVE layers
2122   CB69             ;------------------------------------------------------------------------------
2123   CB69             RSV_CHNG:
2124   CB69 4A 4E           LDI  XL,$4E
2125   CB6B 48 76           LDI  XH,$76
2126   CB6D 05              LDA  (X)
2127   CB6E 49 8F           ANI  (X),$8F
2128   CB70 B9 70           ANI  A,$70
2129   CB72 D5              SHR
2130   CB73 85 02           BHR RSV_CHNG_1 ; $CB77
2131   CB75 B5 40           LDI  A,$40
2132   CB77             
2133   CB77             RSV_CHNG_1: ; $CB77
2134   CB77 0B              ORA  (X)
2135   CB78 0E              STA  (X)
2136   CB79 A5 78 80        LDA  (DISPARAM)
2137   CB7C BF 09           BII  A,$09
2138   CB7E 9B 1C           BZS BTN_RCL_1 ; $CB64
2139   CB80 D1              ROR
2140   CB81 A5 78 84        LDA  (CURVARADD_L)
2141   CB84 91 8A           BCR EDITOR_7 ; $CAFC
2142   CB86 38              NOP
2143   CB87             
2144   CB87             RSV_CHNG_2: ; $CB87
2145   CB87 EB 78 80 01     ORI  (DISPARAM),$01
2146   CB8B BE CE AF        SJP  (RSRV_TXT) ; $CEAF
2147   CB8E BE EF 44        SJP  (TXT_2_LCD)
2148   CB91 CD 46           VMJ  ($46) ; orig ($46)($23) 23 bogus
2149   CB93             
2150   CB93             RSV_CHNG_3: ; $CB93
2151   CB93 E9 78 80 FE     ANI  (DISPARAM),$FE
2152   CB97 BE EE 99        SJP  (RESTORE_LCD_CURS)
2153   CB9A CD 46           VMJ  ($46) ; orig ($46)($23) 23 bogus
2154   CB9C             
2155   CB9C             
2156   CB9C             
2157   CB9C             ;------------------------------------------------------------------------------
2158   CB9C             ; $CB9C - SHIFT MODE button
2159   CB9C             ;------------------------------------------------------------------------------
2160   CB9C             BTN_SHMODE:
2161   CB9C 6A 10           LDI  UL,$10
2162   CB9E 8E 02           BCH $CBA2
2163   CBA0             
2164   CBA0             ;------------------------------------------------------------------------------
2165   CBA0             ; $CBA0 - MODE button
2166   CBA0             ;------------------------------------------------------------------------------
2167   CBA0             BTN_MODE:
2168   CBA0 6A 40           LDI  UL,$40
2169   CBA2 C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
2170   CBA4 4A 4F           LDI  XL,$4F
2171   CBA6 48 76           LDI  XH,$76
2172   CBA8 A5 79 FF        LDA  (UNDEF_REG_79FF)
2173   CBAB CB 46           VZS  ($46) ; orig ($46)($23) 23 bogus
2174   CBAD 24              LDA  UL
2175   CBAE 09              AND  (X)
2176   CBAF 8B 06           BZS BTN_MODE_2 ; $CBB7
2177   CBB1 D5              SHR
2178   CBB2 85 02           BHR BTN_MODE_1 ; $CBB6
2179   CBB4 B5 40           LDI  A,$40
2180   CBB6             
2181   CBB6             BTN_MODE_1: ; $CBB6
2182   CBB6 2A              STA  UL
2183   CBB7             
2184   CBB7             BTN_MODE_2: ; CBB7
2185   CBB7 49 0F           ANI  (X),$0F
2186   CBB9 24              LDA  UL
2187   CBBA 0B              ORA  (X)
2188   CBBB 0E              STA  (X)
2189   CBBC BE D0 17        SJP  ($D017)
2190   CBBF 81 04           BCR BTN_MODE_3 ; $CBC5
2191   CBC1 EB 78 8A 80     ORI  (BREAKPARAM),$80
2192   CBC5             
2193   CBC5             BTN_MODE_3: ; $CBC5
2194   CBC5 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
2195   CBC7             
2196   CBC7             
2197   CBC7             
2198   CBC7             ;------------------------------------------------------------------------------
2199   CBC7             ; $CBC7 - INS Button
2200   CBC7             ;------------------------------------------------------------------------------
2201   CBC7             BTN_INS:
2202   CBC7 D9              SHL
2203   CBC8 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
2204   CBCA BE CD E6        SJP  (INS2INBUF)
2205   CBCD 8E 12           BCH BTN_DEL_2 ; $CBE1
2206   CBCF             
2207   CBCF             ;------------------------------------------------------------------------------
2208   CBCF             ; $CBCF - DEL Button
2209   CBCF             ;------------------------------------------------------------------------------
2210   CBCF             BTN_DEL:
2211   CBCF D9              SHL
2212   CBD0 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
2213   CBD2 15              LDA  (Y)
2214   CBD3 B7 0D           CPI  A,$0D
2215   CBD5 CB 46           VZS  ($46) ; orig ($46)($23) 23 bogus
2216   CBD7 B7 E0           CPI  A,$E0
2217   CBD9 81 03           BCR BTN_DEL_1 ; $CBDE
2218   CBDB BE CE 38        SJP  (DELFRMINBUF)
2219   CBDE             
2220   CBDE             BTN_DEL_1: ; $CBDE
2221   CBDE BE CE 38        SJP  (DELFRMINBUF)
2222   CBE1             
2223   CBE1             BTN_DEL_2: ; $CBE1
2224   CBE1 BA CA 7D        JMP  EDITOR_1 ; $CA7D
2225   CBE4             
2226   CBE4             
2227   CBE4             
2228   CBE4             ;------------------------------------------------------------------------------
2229   CBE4             ; $CBE4 - Cursor Right Button
2230   CBE4             ;------------------------------------------------------------------------------
2231   CBE4             BTN_RIGHT:
2232   CBE4 DB              ROL
2233   CBE5 83 18           BCS BTN_RIGHT_2 ; $CBFF
2234   CBE7 DB              ROL
2235   CBE8 81 2B           BCR BTN_RIGHT_6 ; $CC15
2236   CBEA D1              ROR
2237   CBEB D1              ROR
2238   CBEC 83 3A           BCS BTN_LEFT_1 ; $CC28
2239   CBEE 56              DEC  Y
2240   CBEF 5A B0           LDI  YL,$B0
2241   CBF1             
2242   CBF1             BTN_RIGHT_1: ; $CBF1
2243   CBF1 E9 78 80 5B     ANI  (DISPARAM),$5B
2244   CBF5 EB 78 80 40     ORI  (DISPARAM),$40
2245   CBF9 EB 7B 0E 40     ORI  (CURS_CTRL),$40
2246   CBFD 9E 1E           BCH BTN_DEL_2 ; $CBE1
2247   CBFF             
2248   CBFF             BTN_RIGHT_2: ; $CBFF
2249   CBFF 15              LDA  (Y)
2250   CC00 B7 0D           CPI  A,$0D
2251   CC02 9B 13           BZS BTN_RIGHT_1 ; $CBF1
2252   CC04 B7 E0           CPI  A,$E0
2253   CC06 81 08           BCR  BTN_RIGHT_4 ; $CC10
2254   CC08 50              INC  YL
2255   CC09 50              INC  YL
2256   CC0A 91 1B           BCR BTN_RIGHT_1 ; $CBF1
2257   CC0C 52              DEC  YL
2258   CC0D             
2259   CC0D             BTN_RIGHT_3: ; $CC0D
2260   CC0D 52              DEC  YL
2261   CC0E 9E 1F           BCH BTN_RIGHT_1 ; $CBF1
2262   CC10             
2263   CC10             BTN_RIGHT_4: ; $CC10
2264   CC10 50              INC  YL
2265   CC11             
2266   CC11             BTN_RIGHT_5: ; $CC11
2267   CC11 91 22           BCR BTN_RIGHT_1 ; $CBF1
2268   CC13 9E 08           BCH BTN_RIGHT_3 ; $CC0D
2269   CC15             
2270   CC15             BTN_RIGHT_6: ; $CC15
2271   CC15 DB              ROL
2272   CC16 93 27           BCS BTN_RIGHT_1 ; $CBF1
2273   CC18 DB              ROL
2274   CC19 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
2275   CC1B 9E 2C           BCH BTN_RIGHT_1 ; $CBF1
2276   CC1D             
2277   CC1D             
2278   CC1D             
2279   CC1D             ;------------------------------------------------------------------------------
2280   CC1D             ; $CC1D - Programmatic "ENTER" by "@"
2281   CC1D             ;------------------------------------------------------------------------------
2282   CC1D             PRG_ENTER:
2283   CC1D CC              VEJ  (CC) \ 
2283   CC1E             
2284   CC1E 80                  ABYTL(DISPARAM) ; $7880
2285   CC1F DB              ROL
2286   CC20 8E A1           BCH BTN_ENTER_1 ; $CCC3
2287   CC22             
2288   CC22             
2289   CC22             
2290   CC22             ;------------------------------------------------------------------------------
2291   CC22             ; $CC22 - Cursor Left Button
2292   CC22             ;------------------------------------------------------------------------------
2293   CC22             BTN_LEFT:
2294   CC22 DB              ROL
2295   CC23 83 04           BCS BTN_LEFT_2 ; $CC29
2296   CC25 DB              ROL
2297   CC26 91 13           BCR BTN_RIGHT_6 ; $CC15
2298   CC28             
2299   CC28             BTN_LEFT_1: ; $CC28
2300   CC28 F2              VEJ  (F2)
2301   CC29             
2302   CC29             BTN_LEFT_2: ; $CC29
2303   CC29 14              LDA  YL
2304   CC2A BE DC AE        SJP  (CMP_A_IBUF_PTR) ; $DCAE
2305   CC2D 91 3E           BCR BTN_RIGHT_1 ; $CBF1
2306   CC2F 56              DEC  Y
2307   CC30 9B 41           BZS BTN_RIGHT_1 ; $CBF1
2308   CC32 56              DEC  Y
2309   CC33 55              LIN  Y
2310   CC34 B7 E0           CPI  A,$E0
2311   CC36 9E 27           BCH BTN_RIGHT_5 ; $CC11
2312   CC38             
2313   CC38             
2314   CC38             
2315   CC38             ;------------------------------------------------------------------------------
2316   CC38             ; $CC38 - Cursor Up Button
2317   CC38             ;------------------------------------------------------------------------------
2318   CC38             BTN_UP:
2319   CC38 EB 7B 0E 40     ORI  (CURS_CTRL),$40
2320   CC3C A5 76 4F        LDA  (DISP_BUFF + $4F)
2321   CC3F DB              ROL
2322   CC40 B9 C0           ANI  A,$C0
2323   CC42 CB 46           VZS  ($46) ; ($46)($23)
2324   CC44 D9              SHL
2325   CC45 2A              STA  UL
2326   CC46 8E 34           BCH BTN_DOWN_4 ; $CC7C
2327   CC48             
2328   CC48             
2329   CC48             
2330   CC48             ;------------------------------------------------------------------------------
2331   CC48             ; $CC48 - Cursor Down Button
2332   CC48             ;------------------------------------------------------------------------------
2333   CC48             BTN_DOWN:
2334   CC48 C3 46           VCS  ($46) ; ($46)($23)
2335   CC4A A5 76 4F        LDA  (DISP_BUFF + $4F)
2336   CC4D DB              ROL
2337   CC4E DB              ROL
2338   CC4F 81 22           BCR BTN_DOWN_3 ; $CC73
2339   CC51 ED 78 8A E0     BII  (BREAKPARAM),$E0
2340   CC55 CB 46           VZS  ($46) ; ($46)($23)
2341   CC57 BE D0 11        SJP  (INPUT_EDITED) ; $D011
2342   CC5A 81 06           BCR BTN_DOWN_1 ; $CC62
2343   CC5C EB 7B 0E C0     ORI  (CURS_CTRL),$C0
2344   CC60 9E 45           BCH PRG_ENTER
2345   CC62             
2346   CC62             BTN_DOWN_1: ; $CC62
2347   CC62 A5 7B 0E        LDA  (CURS_CTRL)
2348   CC65 BF 40           BII  A,$40
2349   CC67 8B 02           BZS BTN_DOWN_2 ; $CC6B
2350   CC69 BB 20           ORI  A,$20
2351   CC6B             
2352   CC6B             BTN_DOWN_2: ; $CC6B
2353   CC6B BB C0           ORI  A,$C0
2354   CC6D AE 7B 0E        STA  (CURS_CTRL)
2355   CC70 BA C8 D5        JMP  BCMD_CONT_1 ; $C8D5
2356   CC73             
2357   CC73             BTN_DOWN_3: ; $CC73
2358   CC73 EB 7B 0E 40     ORI  (CURS_CTRL),$40
2359   CC77 DB              ROL
2360   CC78 C1 46           VCR  ($46) ; ($46)($23)
2361   CC7A 6A 01           LDI  UL,$01
2362   CC7C             
2363   CC7C             BTN_DOWN_4: ; $CC7C
2364   CC7C FD A8           PSH  U
2365   CC7E BE DF F3        SJP  (STATUS_2_UREG)
2366   CC81 C1 46           VCR  ($46) ; ($46)($23)
2367   CC83 BA DC 32        JMP  ARX_FRM_BSTK_5 ; $DC32
2368   CC86             
2369   CC86             
2370   CC86             
2371   CC86             ;------------------------------------------------------------------------------
2372   CC86             ; Finds address of the 1st program byte of a line number
2373   CC86             ;            Address: CC86
2374   CC86             ;                     D1
2375   CC86             ;         Parameters: Y-Reg points to parameters in input buffer or main memory
2376   CC86             ;                     from which the searched line number or a label is located.
2377   CC86             ; Modified Registers: It is continued after D1 (Carry=1) if the line is found. 
2378   CC86             ;                     If no program in memory: carry flag=0. A branch is made to
2379   CC86             ;                     offset address D1 if the line was not found (Carry=0)
2380   CC86             ;   Error conditions: None
2381   CC86             ;------------------------------------------------------------------------------
2382   CC86             FIND_LINE: ; $CC86
2383   CC86 BE DF F3        SJP  (STATUS_2_UREG)
2384   CC89 C1 4C           VCR  ($4C) ; ($4C)($26)
2385   CC8B             
2386   CC8B             ; Searches for line number.
2387   CC8B             FIND_LINE_1: ; $CC8B
2388   CC8B C8              VEJ  (C8) \ 
2388   CC8C             
2389   CC8C 09                  ABRF(FIND_LINE_3) ; $CC96
2390   CC8D             
2391   CC8D             FIND_LINE_2: ; $CC8D
2392   CC8D CD 12           VMJ  ($12)
2393   CC8F BE D0 B4        SJP  (PRG_SEARCH) ; $D0B4
2394   CC92 6A 00           LDI  UL,$00
2395   CC94 8E 24           BCH FIND_LINE_8 ; $CCBA
2396   CC96             
2397   CC96             FIND_LINE_3: ; $CC96
2398   CC96 C6              VEJ  (C6)
2399   CC97 CD 2E           VMJ  ($2E) \ 
2399   CC99             
2400   CC99 25                  ABRF(FIND_LINE_10) ; $CCBF
2401   CC9A C8              VEJ  (C8) \ 
2401   CC9B             
2402   CC9B 21                  ABRF(FIND_LINE_9) ; $CCBD
2403   CC9C D0              VEJ  (D0) \ 
2403   CC9D             
2404   CC9D 82                  ABYT($82) \ 
2404   CC9E             
2405   CC9E 20                  ABRF(FIND_LINE_10) ; $CCBF
2406   CC9F 24              LDA  UL
2407   CCA0 89 03           BZR FIND_LINE_4 ; $CCA5
2408   CCA2 A4              LDA  UH
2409   CCA3 9B 18           BZS FIND_LINE_2 ; $CC8D
2410   CCA5             
2411   CCA5             FIND_LINE_4: ; $CCA5
2412   CCA5 D8              VEJ  (D8)
2413   CCA6 89 0D           BZR FIND_LINE_6 ; $CCB5
2414   CCA8 CD 12           VMJ  ($12)
2415   CCAA 94              LDA  YH
2416   CCAB 89 02           BZR FIND_LINE_5 ; $CCAF
2417   CCAD CC              VEJ  (CC) \ 
2417   CCAE             
2418   CCAE 65                  ABYTL(BASPRG_ST_H) ; $7865
2419   CCAF             
2420   CCAF             FIND_LINE_5: ; $CCAF
2421   CCAF BE D2 EC        SJP  (LINE_SEARCH_3) \ 
2421   CCB2             
2422   CCB2 0C                  ABRF(FIND_LINE_10) ; $CCBF
2423   CCB3 8E 03           BCH FIND_LINE_7 ; $CCB8
2424   CCB5             
2425   CCB5             FIND_LINE_6: ; $CCB5
2426   CCB5 CD 1A           VMJ  ($1A) \ 
2426   CCB7             
2427   CCB7 07                  ABRF(FIND_LINE_10) ; $CCBF
2428   CCB8             
2429   CCB8             FIND_LINE_7: ; $CCB8
2430   CCB8 6A 01           LDI  UL,$01
2431   CCBA             
2432   CCBA             FIND_LINE_8: ; $CCBA
2433   CCBA FB              SEC
2434   CCBB CD 4C           VMJ  ($4C) ; ($4C)($26)
2435   CCBD             
2436   CCBD             FIND_LINE_9: ; $CCBD
2437   CCBD 68 01           LDI  UH,$01
2438   CCBF             
2439   CCBF             FIND_LINE_10: ; $CCBF
2440   CCBF CD 48           VMJ  ($48) ; ($48)($24)
2441   CCC1             
2442   CCC1             
2443   CCC1             
2444   CCC1             ;------------------------------------------------------------------------------
2445   CCC1             ; $CCC1 - Enter Button
2446   CCC1             ;------------------------------------------------------------------------------
2447   CCC1             BTN_ENTER:
2448   CCC1 C3 46           VCS  ($46) ; ($46)($23)
2449   CCC3             
2450   CCC3             BTN_ENTER_1: ; $CCC3
2451   CCC3 EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
2452   CCC7 DB              ROL
2453   CCC8 83 22           BCS INIT_IBUF_R_2 ; $CCEC
2454   CCCA ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
2455   CCCE CB 42           VZS  ($42) ; ($42)($21)
2456   CCD0 CC              VEJ  (CC) \ 
2456   CCD1             
2457   CCD1 8A                  ABYTL(BREAKPARAM) ; $788A
2458   CCD2 D9              SHL
2459   CCD3 C3 42           VCS  ($42) ; ($42)($21)
2460   CCD5 D9              SHL
2461   CCD6 83 38           BCS INIT_IBUF_R_3 ; $CD10
2462   CCD8 D9              SHL
2463   CCD9 C1 42           VCR  ($42) ; ($42)($21) 
2464   CCDB BA C8 D5        JMP  BCMD_CONT_1 ; $C8D5
2465   CCDE             
2466   CCDE             
2467   CCDE             
2468   CCDE             ;------------------------------------------------------------------------------
2469   CCDE             ; $CCDE - Initializes "right boundary" of the input buffer with CR (0D) 
2470   CCDE             ;            Address: CCDE
2471   CCDE             ;         Parameters: None
2472   CCDE             ; 
2473   CCDE             ; Modified Registers: X-Reg points to 7BFF. Accumulator contains 00. If last 
2474   CCDE             ;                     entry in input buffer was a token, (7BFE and 7BFF) are 
2475   CCDE             ;                     deleted, with a character only (7BFF).
2476   CCDE             ;   Error conditions: None
2477   CCDE             ;------------------------------------------------------------------------------
2478   CCDE             INIT_IBUF_R: ; $CCDE
2479   CCDE 4A FE           LDI  XL,$FE
2480   CCE0 48 7B           LDI  XH,$7B
2481   CCE2 05              LDA  (X)
2482   CCE3 B7 E0           CPI  A,$E0
2483   CCE5 B5 0D           LDI  A,$0D
2484   CCE7 83 01           BCS INIT_IBUF_R_1 ; $CCEA
2485   CCE9 44              INC  X
2486   CCEA             
2487   CCEA             INIT_IBUF_R_1: ; $CCEA
2488   CCEA 0E              STA  (X)
2489   CCEB 9A              RTN
2490   CCEC             
2491   CCEC             INIT_IBUF_R_2: ; $CCEC
2492   CCEC BE CC DE        SJP  (INIT_IBUF_R) ; $CCDE
2493   CCEF BE D0 11        SJP  (INPUT_EDITED) ; $D011
2494   CCF2 81 25           BCR INIT_IBUF_R_4 ; $CD19
2495   CCF4 F4              VEJ  (F4) \ 
2495   CCF5             
2496   CCF5 78 86               AWRD(LASTVARADD_H)
2497   CCF7 CC              VEJ  (CC) \ 
2497   CCF8             
2498   CCF8 88                  ABYTL($7888)
2499   CCF9 BE C0 11        SJP  (SAVEVARPTR_1)
2500   CCFC BE F9 7B        SJP  (TOK_INBUF_5)
2501   CCFF 81 8A           BCR ERRN
2502   CD01 06              CPA  XL
2503   CD02 8B 0C           BZS INIT_IBUF_R_3 ; $CD10
2504   CD04 CD 08           VMJ  ($08) \ 
2504   CD06             
2505   CD06 84                  ABRF(ERRN)
2506   CD07 E9 78 8A 0F     ANI  (BREAKPARAM),$0F
2507   CD0B D6              VEJ  (D6) \ 
2507   CD0C             
2508   CD0C AC                  ABYT($AC)
2509   CD0D BA C9 DA        JMP  BCMD_DIM_6 ; $C9DA
2510   CD10             
2511   CD10             INIT_IBUF_R_3: ; $CD10
2512   CD10 E9 78 8A 0F     ANI  (BREAKPARAM),$0F
2513   CD14 D6              VEJ  (D6) \ 
2513   CD15             
2514   CD15 AC                  ABYT($AC)
2515   CD16 BA C6 76        JMP  BCMD_REM ; $C676
2516   CD19             
2517   CD19             INIT_IBUF_R_4: ; $CD19
2518   CD19 BE F9 57        SJP  (TOK_INBUF)
2519   CD1C 8B 6D           BZS ERRN
2520   CD1E 4E B0           CPI  XL,$B0
2521   CD20 CB 42           VZS  ($42) ; ($42)($21)
2522   CD22 A5 76 4F        LDA  (DISP_BUFF + $4F)
2523   CD25 D9              SHL
2524   CD26 DB              ROL
2525   CD27 83 3C           BCS INIT_IBUF_R_8 ; $CD65
2526   CD29 8D 13           BVR INIT_IBUF_R_6 ; $CD3E
2527   CD2B BE CF 27        SJP  (PRGLINE_TDI)
2528   CD2E 0D              EOR  (X)
2529   CD2F 5B 34           ORI  (Y),$34
2530   CD31 00              SBC  XL
2531   CD32 A4              LDA  UH
2532   CD33 1A              STA  YL
2533   CD34 B5 14           LDI  A,$14
2534   CD36             
2535   CD36             INIT_IBUF_R_5: ; $CD36
2536   CD36 58 7B           LDI  YH,$7B
2537   CD38 C3 E0           VCS  ($E0)
2538   CD3A CD 44           VMJ  ($44) ; ($44)($22)
2539   CD3C CD 42           VMJ  ($42) ; ($42)($21)
2540   CD3E             
2541   CD3E             INIT_IBUF_R_6: ; $CD3E
2542   CD3E ED 78 80 08     BII  (DISPARAM),$08
2543   CD42 8B 11           BZS INIT_IBUF_R_7 ; $CD55
2544   CD44 14              LDA  YL
2545   CD45 00              SBC  XL
2546   CD46 BD FF           EAI  $FF
2547   CD48 FD 18           LDX  Y
2548   CD4A CD 24           VMJ  ($24)
2549   CD4C BE CE D0        SJP  (TXFR_RSV_KEY)
2550   CD4F 5A B3           LDI  YL,$B3
2551   CD51 B5 08           LDI  A,$08
2552   CD53 9E 1F           BCH INIT_IBUF_R_5 ; $CD36
2553   CD55             
2554   CD55             INIT_IBUF_R_7: ; $CD55
2555   CD55 C2              VEJ  (C2) \ 
2555   CD56             
2556   CD56 22                  ACHR($22) \ 
2556   CD57             
2557   CD57 0D                  ABRF(INIT_IBUF_R_8) ; $CD65
2558   CD58 CD 0C           VMJ  ($0C)
2559   CD5A C8              VEJ  (C8) \ 
2559   CD5B             
2560   CD5B 2D                  ABRF(ERR1)
2561   CD5C BE CF 0B        SJP  (TXFR_RSV_TXT) ; $CF0B
2562   CD5F 5A B0           LDI  YL,$B0
2563   CD61 B5 20           LDI  A,$20
2564   CD63 9E 2F           BCH INIT_IBUF_R_5 ; $CD36
2565   CD65             
2566   CD65             INIT_IBUF_R_8: ; $CD65
2567   CD65 5A B0           LDI  YL,$B0
2568   CD67 BA C4 46        JMP  BASIC_INT_10 ; $C446
2569   CD6A             
2570   CD6A             
2571   CD6A             
2572   CD6A             ;------------------------------------------------------------------------------
2573   CD6A             ; $CD6A - Unlock, cancles LOCK
2574   CD6A             ;            Address: CD6A
2575   CD6A             ;         Parameters: None
2576   CD6A             ; 
2577   CD6A             ; Modified Registers: (79FF) is overwritten with FF.
2578   CD6A             ;                     Accumulator, XH
2579   CD6A             ;   Error conditions: None
2580   CD6A             ;------------------------------------------------------------------------------
2581   CD6A             UNLOCK: ; $CD6A
2582   CD6A 08              STA  XH
2583   CD6B B5 FF           LDI  A,$FF
2584   CD6D AE 79 FF        STA  (UNDEF_REG_79FF)
2585   CD70 9A              RTN
2586   CD71             
2587   CD71             
2588   CD71             
2589   CD71             ;------------------------------------------------------------------------------
2590   CD71             ; $CD71 - Switch off the computer with the OFF button
2591   CD71             ;            Address: CD71
2592   CD71             ;         Parameters: None
2593   CD71             ;
2594   CD71             ; Modified Registers: For the RESET routine recognizes switching off by OFF, 
2595   CD71             ;                     the bytes: 50, 51, 52,...,5F are stored at 7A10 ff. 
2596   CD71             ;                     When switched on again, the computer performs an editor 
2597   CD71             ;                     cold start after running through the RESET routine.
2598   CD71             ;   Error conditions: None
2599   CD71             ;------------------------------------------------------------------------------
2600   CD71             BTN_OFF: ; $CD71
2601   CD71 4A 10           LDI  XL,$10
2602   CD73 48 7A           LDI  XH,$7A
2603   CD75 B5 50           LDI  A,$50
2604   CD77 6A 0F           LDI  UL,$0F
2605   CD79             
2606   CD79             BTN_OFF_1: ; $CD79
2607   CD79 41              SIN  X
2608   CD7A DD              INC  A
2609   CD7B 88 04           LOP  UL,BTN_OFF_1 ; $CD79
2610   CD7D CD A6           VMJ  ($A6) ; ($A6)($53)
2611   CD7F 89 02           BZR BTN_OFF_2 ; $CD83
2612   CD81 FD 4C           OFF
2613   CD83             
2614   CD83             BTN_OFF_2: ; $CD83
2615   CD83 D8              VEJ  (D8)
2616   CD84 CB 46           VZS  ($46) ; ($46)($23)
2617   CD86 BA C4 C6        JMP  BCMD_STOP_6 ; $C4C6
2618   CD89             
2619   CD89             
2620   CD89             
2621   CD89             ;------------------------------------------------------------------------------
2622   CD89             ; $CD89 (E4)  - Output Error 1 and return to the editor
2623   CD89             ;------------------------------------------------------------------------------
2624   CD89             ERR1:
2625   CD89 68 01           LDI  UH,$01
2626   CD8B             
2627   CD8B             ;------------------------------------------------------------------------------
2628   CD8B             ; $CD8B (E0) - Output error from UH
2629   CD8B             ;------------------------------------------------------------------------------
2630   CD8B             ERRN:
2631   CD8B A4              LDA  UH
2632   CD8C AE 78 9B        STA  (ERL)
2633   CD8F AA 78 4F        LDI  S,(CPU_STACK + $4F)
2634   CD92 D8              VEJ  (D8)
2635   CD93 8B 14           BZS ERRN_1 ; $CDA9
2636   CD95 D4              VEJ  (D4) \ ABYT($B2)
2636   CD96 B2          
2637   CD97 CC              VEJ  (CC) \ ABYTL(ERL) ; $789B
2637   CD98 9B          
2638   CD99 DF              DEC  A
2639   CD9A 8B 13           BZS ERRN_2 ; $CDAF
2640   CD9C ED 78 B8 80     BII  (ON_ERR_ADD_H),$80
2641   CDA0 89 0D           BZR ERRN_2 ; $CDAF
2642   CDA2 D4              VEJ  (D4) \ ABYT($A0)
2642   CDA3 A0          
2643   CDA4 D6              VEJ  (D6) \ ABYT($B8)
2643   CDA5 B8          
2644   CDA6 BA C4 13        JMP  BASIC_INT_5 ; $C413
2645   CDA9             
2646   CDA9             ERRN_1: ; $CD8B
2647   CDA9 B5 A0           LDI  A,$A0
2648   CDAB 5C 00           CPI  YH,$00
2649   CDAD 89 02           BZR ERRN_3 ; $CDB1
2650   CDAF             
2651   CDAF             ERRN_2: ; $CDAF
2652   CDAF B5 80           LDI  A,$80
2653   CDB1             
2654   CDB1             ERRN_3: ; $CDB1
2655   CDB1 AE 78 80        STA  (DISPARAM)
2656   CDB4 FD 98           PSH  Y
2657   CDB6 5A 10           LDI  YL,$10
2658   CDB8 58 7A           LDI  YH,$7A
2659   CDBA CD 2A           VMJ  ($2A) \ 
2659   CDBC             
2660   CDBC 64                  ABYT($64) \ 
2660   CDBD             
2661   CDBD 06                  ABYT($06)
2662   CDBE A5 78 9B        LDA  (ERL)
2663   CDC1 2A              STA  UL
2664   CDC2 68 00           LDI  UH,$00
2665   CDC4 CD 10           VMJ  ($10) \ 
2665   CDC6             
2666   CDC6 40                  ABYT($40)
2667   CDC7 D8              VEJ  (D8)
2668   CDC8 8B 11           BZS ERRN_5 ; $CDDB
2669   CDCA CD 2A           VMJ  ($2A) \ 
2669   CDCC             
2670   CDCC 61                  ABYT($61) \ 
2670   CDCD             
2671   CDCD 03                  ABYT($03)
2672   CDCE B5 20           LDI  A,$20
2673   CDD0 FD C8           PSH  A
2674   CDD2 CC              VEJ  (CC) \ 
2674   CDD3             
2675   CDD3 B4                  ABYTL(ERR_LINE_H) ; $78B4
2676   CDD4             
2677   CDD4             ERRN_4: ; $CDD4
2678   CDD4 BE DD 2F        SJP  (CONV_UREG_1) ; $DD2F
2679   CDD7 40              INC  XL
2680   CDD8 FD 8A           POP  A
2681   CDDA 51              SIN  Y
2682   CDDB             
2683   CDDB             ERRN_5: ; $CDDB
2684   CDDB 59 00           ANI  (Y),$00
2685   CDDD FD 18           LDX  Y
2686   CDDF FD 1A           POP  Y
2687   CDE1 BE EF 5B        SJP  (TXT_2_LCD_2)
2688   CDE4 CD 46           VMJ  ($46) ; ($46)($23)
2689   CDE6             
2690   CDE6             
2691   CDE6             
2692   CDE6             ;------------------------------------------------------------------------------
2693   CDE6             ; $CDE6 - INSERT - Pass characters/tokens from U-Reg to input buffer
2694   CDE6             ;            Address: CDE6
2695   CDE6             ;         Parameters: U-Reg contains tokens or characters (UH must contain 00). 
2696   CDE6             ;                     Y-Reg must contain address being edited.
2697   CDE6             ;
2698   CDE6             ; Modified Registers: Y-Reg points to next cursor position.
2699   CDE6             ;   Error conditions: None
2700   CDE6             ;------------------------------------------------------------------------------
2701   CDE6             INS2INBUF: ; 
2702   CDE6 15              LDA  (Y)
2703   CDE7 B7 0D           CPI  A,$0D
2704   CDE9 8B 24           BZS INS2INBUF_4 ; $CE0F
2705   CDEB F9              REC
2706   CDEC B5 FF           LDI  A,$FF
2707   CDEE 10              SBC  YL
2708   CDEF 81 1B           BCR INS2INBUF_3 ; $CE0C
2709   CDF1 FD A8           PSH  U
2710   CDF3 FD 88           PSH  X
2711   CDF5 2A              STA  UL
2712   CDF6 5A FF           LDI  YL,$FF
2713   CDF8 FD 18           LDX  Y
2714   CDFA 46              DEC  X
2715   CDFB 05              LDA  (X)
2716   CDFC B7 E0           CPI  A,$E0
2717   CDFE 81 02           BCR INS2INBUF_1 ; $CE02
2718   CE00 B5 0D           LDI  A,$0D
2719   CE02             
2720   CE02             INS2INBUF_1: ; $CE02
2721   CE02 0E              STA  (X)
2722   CE03             
2723   CE03             INS2INBUF_2: ; $CE03
2724   CE03 47              LDE  X
2725   CE04 53              SDE  Y
2726   CE05 88 04           LOP  UL,INS2INBUF_2 ; $CE03
2727   CE07 FB              SEC
2728   CE08 FD 0A           POP  X
2729   CE0A FD 2A           POP  U
2730   CE0C             
2731   CE0C             INS2INBUF_3: ; $CE0C
2732   CE0C B5 27           LDI  A,$27
2733   CE0E 1E              STA  (Y)
2734   CE0F             
2735   CE0F             INS2INBUF_4: ; $CE0F
2736   CE0F 9A              RTN
2737   CE10             
2738   CE10             
2739   CE10             
2740   CE10             ;------------------------------------------------------------------------------
2741   CE10             ; $CE10 - Character input in Input Buffer
2742   CE10             ;------------------------------------------------------------------------------
2743   CE10             CHAR2INBUF:
2744   CE10 A4              LDA  UH
2745   CE11 8B 1A           BZS CHAR2INBUF_4 ; $CE2D
2746   CE13 5E FF           CPI  YL,$FF
2747   CE15 83 15           BCS CHAR2INBUF_3 ; $CE2C
2748   CE17 15              LDA  (Y)
2749   CE18 B7 0D           CPI  A,$0D
2750   CE1A 8B 07           BZS CHAR2INBUF_1 ; $CE23
2751   CE1C B7 E0           CPI  A,$E0
2752   CE1E 83 03           BCS CHAR2INBUF_1 ; $CE23
2753   CE20 BE CD E6        SJP  (INS2INBUF)
2754   CE23             
2755   CE23             CHAR2INBUF_1: ; $CE23
2756   CE23 A4              LDA  UH
2757   CE24 51              SIN  Y
2758   CE25 24              LDA  UL
2759   CE26 51              SIN  Y
2760   CE27 14              LDA  YL
2761   CE28 89 02           BZR CHAR2INBUF_3 ; $CE2C
2762   CE2A 56              DEC  Y
2763   CE2B             
2764   CE2B             CHAR2INBUF_2: ; $CE2B
2765   CE2B 56              DEC  Y
2766   CE2C             
2767   CE2C             CHAR2INBUF_3: ; $CE2C
2768   CE2C 9A              RTN
2769   CE2D             
2770   CE2D             CHAR2INBUF_4: ; $CE2D
2771   CE2D 15              LDA  (Y)
2772   CE2E B7 E0           CPI  A,$E0
2773   CE30 24              LDA  UL
2774   CE31 51              SIN  Y
2775   CE32 83 04           BCS DELFRMINBUF
2776   CE34 14              LDA  YL
2777   CE35 9B 0C           BZS CHAR2INBUF_2 ; $CE2B
2778   CE37 9A              RTN
2779   CE38             
2780   CE38             
2781   CE38             
2782   CE38             ;------------------------------------------------------------------------------
2783   CE38             ; $CE38 - DELETE (a character in the input buffer)
2784   CE38             ;            Address: CE38
2785   CE38             ;         Parameters: Y-Reg must point to memory cell to be erased
2786   CE38             ; 
2787   CE38             ; Modified Registers: Contents from next address pointed to by Y-Reg
2788   CE38             ;                     shifted one byte to left to end of the memory page. 
2789   CE38             ;                     (Y-Reg) will be deleted. The last address in memory page 
2790   CE38             ;                     is written with 0D.
2791   CE38             ;                     X Reg, U Reg, Accumulator=0D
2792   CE38             ;   Error conditions:	None
2793   CE38             ;------------------------------------------------------------------------------
2794   CE38             DELFRMINBUF: ; $CE38
2795   CE38 FD 98           PSH  Y
2796   CE3A FD 18           LDX  Y
2797   CE3C 14              LDA  YL
2798   CE3D BD FF           EAI  $FF
2799   CE3F 2A              STA  UL
2800   CE40 44              INC  X
2801   CE41 BE D0 49        SJP  (SYSMSG_3)
2802   CE44 B5 0D           LDI  A,$0D
2803   CE46 1E              STA  (Y)
2804   CE47 FD 1A           POP  Y
2805   CE49 9A              RTN
2806   CE4A             
2807   CE4A             
2808   CE4A             
2809   CE4A             ;------------------------------------------------------------------------------
2810   CE4A             ; $CE4A - Evaluate programmed button; Clears input buffer.
2811   CE4A             ;------------------------------------------------------------------------------
2812   CE4A             DEFEVAL:
2813   CE4A FD 88           PSH  X
2814   CE4C ED 78 80 40     BII  (DISPARAM),$40
2815   CE50 89 2F           BZR DEFEVAL_2 ; $CE81
2816   CE52 FD A8           PSH  U
2817   CE54 BE D0 2B        SJP  (INBUF_CLR_1) ; $D02B
2818   CE57 ED 78 80 20     BII  (DISPARAM),$20
2819   CE5B 8B 1D           BZS DEFEVAL_1 ; $CE7A
2820   CE5D FD 2A           POP  U
2821   CE5F FD A8           PSH  U
2822   CE61 A4              LDA  UH
2823   CE62 89 16           BZR DEFEVAL_1 ; $CE7A
2824   CE64 24              LDA  UL
2825   CE65 6A 07           LDI  UL,$07
2826   CE67 BE DA 98        SJP  (SEARCH_OP_TBL) ; $DA98
2827   CE6A 89 0E           BZR DEFEVAL_1 ; $CE7A
2828   CE6C D2              VEJ  (D2) \ 
2828   CE6D             
2829   CE6D 0C                  ABRF($CE7A) \ 
2829   CE6E             
2830   CE6E 80                  ABYT($80)
2831   CE6F BE EF 1B        SJP  (ARX_2_STRNG)
2832   CE72 DC              VEJ  (DC)
2833   CE73 5A B0           LDI  YL,$B0
2834   CE75 58 7B           LDI  YH,$7B
2835   CE77 BE D0 49        SJP  (SYSMSG_3)
2836   CE7A             
2837   CE7A             DEFEVAL_1: ; $CE7A
2838   CE7A FD 2A           POP  U
2839   CE7C B5 40           LDI  A,$40
2840   CE7E AE 78 80        STA  (DISPARAM)
2841   CE81             
2842   CE81             DEFEVAL_2: ; $CE81
2843   CE81 BE CE 10        SJP  (CHAR2INBUF)
2844   CE84 FD 0A           POP  X
2845   CE86 9A              RTN
2846   CE87             
2847   CE87             
2848   CE87             
2849   CE87             ;------------------------------------------------------------------------------
2850   CE87             ; $CE87 - Determines the associated reserve key code for the function key
2851   CE87             ;            Address: CE87
2852   CE87             ;   Entry parameters: UL must contain the ASCII code of the spare key sought. 
2853   CE87             ;                     The symbol for the corresponding reserve level must be 
2854   CE87             ;                     visible in the display, otherwise level I is preset.
2855   CE87             ;
2856   CE87             ; Modified registers: (7884) & accumulator contain reserve key code. 
2857   CE87             ;                     U reg changed.
2858   CE87             ;   Error conditions: none
2859   CE87             ;--------------------------------------------------------------------------------------------------
2860   CE87             RES_KEY_CODE: ; 
2861   CE87 B5 10           LDI  A,$10
2862   CE89 22              ADC  UL
2863   CE8A 2A              STA  UL
2864   CE8B B9 07           ANI  A,$07
2865   CE8D 28              STA  UH
2866   CE8E A5 76 4E        LDA  (DISP_BUFF + $4E)
2867   CE91 B9 30           ANI  A,$30
2868   CE93 B7 30           CPI  A,$30
2869   CE95 81 02           BCR RES_KEY_CODE_1 ; $CE99
2870   CE97 B5 20           LDI  A,$20
2871   CE99             
2872   CE99             RES_KEY_CODE_1: ; $CE99
2873   CE99 D5              SHR
2874   CE9A A2              ADC  UH
2875   CE9B AE 78 84        STA  (CURVARADD_L)
2876   CE9E 9A              RTN
2877   CE9F             
2878   CE9F             
2879   CE9F             
2880   CE9F             ;------------------------------------------------------------------------------
2881   CE9F             ; $CE9F - (38) Determines reserve memory start address +8
2882   CE9F             ; If there is a module in the memory, the reserve memory start for module is 
2883   CE9F             ; entered in (7860). This value is then recognized as high byte of the address.
2884   CE9F             ;            Address: CE9F (38) 
2885   CE9F             ;   Entry parameters: none
2886   CE9F             ;
2887   CE9F             ; Modified registers: X-Reg shows reserve level I (e.g. 3808) at the beginning 
2888   CE9F             ;                     of the text. Accumulator contains the value from (7860) 
2889   CE9F             ;                     or (7863). UH contains error code 24 if module was 
2890   CE9F             ;                     recognized. Carry flag=0 if in (7860) the default value 
2891   CE9F             ;                     FF is not found, i.e., no module was found in the memory.
2892   CE9F             ;   Error conditions: none
2893   CE9F             ;------------------------------------------------------------------------------
2894   CE9F             RSRV_MEM_START: ; 
2895   CE9F A5 78 60        LDA  (ST_ROM_MOD) ; $7860
2896   CEA2 08              STA  XH
2897   CEA3 DB              ROL
2898   CEA4 68 18           LDI  UH,$18
2899   CEA6 81 04           BCR RSRV_MEM_START_1 ; $CEAC
2900   CEA8 A5 78 63        LDA  (RAM_ST_H)
2901   CEAB 08              STA  XH
2902   CEAC             
2903   CEAC             RSRV_MEM_START_1: ; $CEAC
2904   CEAC 4A 08           LDI  XL,$08
2905   CEAE 9A              RTN
2906   CEAF             
2907   CEAF             
2908   CEAF             
2909   CEAF             ;------------------------------------------------------------------------------
2910   CEAF             ; $CEAF - Determines the start address of the text that explains the reserve assignment 
2911   CEAF             ; for the set reserve key level I, II, or III.
2912   CEAF             ;            Address: CEAF
2913   CEAF             ;   Entry parameters: none
2914   CEAF             ; 
2915   CEAF             ; Modified registers: X-Reg contains the address of the beginning of the text of the visible (activated) reserve level in the display. U-Reg, accumulator, Carry=0 if ROM module is used.
2916   CEAF             ;   Error conditions: none
2917   CEAF             ;------------------------------------------------------------------------------
2918   CEAF             RSRV_TXT: ; 
2919   CEAF A5 76 4E        LDA  (DISP_BUFF + $4E)
2920   CEB2 6A 08           LDI  UL,$08
2921   CEB4 DB              ROL
2922   CEB5 DB              ROL
2923   CEB6 83 07           BCS RSRV_TXT_1 ; $CEBF
2924   CEB8 6A 22           LDI  UL,$22
2925   CEBA DB              ROL
2926   CEBB 83 02           BCS RSRV_TXT_1 ; $CEBF
2927   CEBD 6A 3C           LDI  UL,$3C
2928   CEBF             
2929   CEBF             RSRV_TXT_1: ; $CEBF
2930   CEBF CD 38           VMJ  ($38)
2931   CEC1 24              LDA  UL
2932   CEC2 0A              STA  XL
2933   CEC3 9A              RTN
2934   CEC4             
2935   CEC4             
2936   CEC4             
2937   CEC4             ;------------------------------------------------------------------------------
2938   CEC4             ; $CEC4 - Searches reserve key code in reserve memory (from XH56)
2939   CEC4             ;           Address: CEC4
2940   CEC4             ;  Entry parameters: XH must point to reserve memory start. (7884) must contain 
2941   CEC4             ;                    the required reserve key code (01H-16H). If this code was 
2942   CEC4             ;                    not found from (XH56), carry and zero flag are 0, else 1.
2943   CEC4             ; 
2944   CEC4             ; Reserve-Key-Codes:
2945   CEC4             ;                        I II III
2946   CEC4             ;                    F1 01 11 09
2947   CEC4             ;                    F2 02 12 0A
2948   CEC4             ;                    F3 03 13 0B
2949   CEC4             ;                    F4 04 14 0C
2950   CEC4             ;                    F5 05 15 0D
2951   CEC4             ;                    F6 06 16 0E
2952   CEC4             ;
2953   CEC4             ; Modified registers: X-Reg points to the address of the instruction assigned to the key. Accumulator contains found key or 00.
2954   CEC4             ;   Error conditions: none
2955   CEC4             ;------------------------------------------------------------------------------
2956   CEC4             RESKEY_SRCH: ; $CEC4
2957   CEC4 4A 56           LDI  XL,$56
2958   CEC6             
2959   CEC6             RESKEY_SRCH_1: ; $CEC6
2960   CEC6 F9              REC
2961   CEC7 45              LIN  X
2962   CEC8 8B 05           BZS RESKEY_SRCH_2 ; $CECF
2963   CECA A7 78 84        CPA  (CURVARADD_L)
2964   CECD 99 09           BZR RESKEY_SRCH_1 $CEC6
2965   CECF             
2966   CECF             RESKEY_SRCH_2: ; $CECF
2967   CECF 9A              RTN
2968   CED0             
2969   CED0             
2970   CED0             
2971   CED0             ;------------------------------------------------------------------------------
2972   CED0             ; $CED0 - Change reserve key assignment
2973   CED0             ;            Address:	CED0
2974   CED0             ;   Entry parameters: (7884) must contain key code of the key to be redefined. 
2975   CED0             ;                     AR-X must contain CSI of the new text.
2976   CED0             ; 
2977   CED0             ; Modified registers: The original key assignment is deleted, and the assignment 
2978   CED0             ;                     of the remaining keys is moved to bottom. New allocation
2979   CED0             ;                     is appended to first free address of reserve memory.
2980   CED0             ;                     X-Reg points to address behind transferred text.
2981   CED0             ;                     Y-Reg points to the next free address of reserve memory. 
2982   CED0             ;                     Accumulator contains reserve key code. U reg.
2983   CED0             ;   Error conditions: If there is not enough free space in the reserve memory, 
2984   CED0             ;                     Carry=1 and UH contains error code 13. The original 
2985   CED0             ;                     assignment is deleted. If (7860) is not assigned FF, 
2986   CED0             ;                     carry is also set, and error code 24 is placed after UH.
2987   CED0             ;------------------------------------------------------------------------------
2988   CED0             TXFR_RSV_KEY: ; $CED0
2989   CED0 CD 38           VMJ  ($38)
2990   CED2 81 51           BCR TXFR_RSV_TXT_3 ; $CF25
2991   CED4 BE CE C4        SJP  (RESKEY_SRCH)
2992   CED7 FD 5A           STX  Y
2993   CED9 81 17           BCR TXFR_RSV_KEY_4 ; $CEF2
2994   CEDB B5 1F           LDI  A,$1F
2995   CEDD             
2996   CEDD             TXFR_RSV_KEY_1: ; $CEDD
2997   CEDD F7              CIN
2998   CEDE 91 03           BCR TXFR_RSV_KEY_1 ; $CEDD
2999   CEE0 46              DEC  X
3000   CEE1 56              DEC  Y
3001   CEE2 B5 C5           LDI  A,$C5
3002   CEE4 00              SBC  XL
3003   CEE5 2A              STA  UL
3004   CEE6             
3005   CEE6             TXFR_RSV_KEY_2: ; $CEE6
3006   CEE6 F5              TIN
3007   CEE7 88 03           LOP  UL,TXFR_RSV_KEY_2 ; $CEE6
3008   CEE9 6A 6F           LDI  UL,$6F
3009   CEEB 5A 56           LDI  YL,$56
3010   CEED             
3011   CEED             TXFR_RSV_KEY_3: ; $CEED
3012   CEED 55              LIN  Y
3013   CEEE 8B 02           BZS TXFR_RSV_KEY_4 ; $CEF2
3014   CEF0 88 05           LOP  UL,TXFR_RSV_KEY_3 ; $CEED
3015   CEF2             
3016   CEF2             TXFR_RSV_KEY_4: ; $CEF2
3017   CEF2 52              DEC  YL
3018   CEF3 DC              VEJ  (DC)
3019   CEF4 68 0D           LDI  UH,$0D
3020   CEF6 62              DEC  UL
3021   CEF7 81 11           BCR TXFR_RSV_KEY_6 ; $CF0A
3022   CEF9 14              LDA  YL
3023   CEFA 22              ADC  UL
3024   CEFB 83 0D           BCS TXFR_RSV_KEY_6 ; $CF0A
3025   CEFD B7 C4           CPI  A,$C4
3026   CEFF 83 09           BCS TXFR_RSV_KEY_6 ; $CF0A
3027   CF01 A5 78 84        LDA  (CURVARADD_L)
3028   CF04 51              SIN  Y
3029   CF05             
3030   CF05             TXFR_RSV_KEY_5: ; $CF05
3031   CF05 F5              TIN
3032   CF06 88 03           LOP  UL,TXFR_RSV_KEY_5 ; $CF05
3033   CF08 59 00           ANI  (Y),$00
3034   CF0A             
3035   CF0A             TXFR_RSV_KEY_6: ; $CF0A
3036   CF0A 9A              RTN
3037   CF0B             
3038   CF0B             
3039   CF0B             
3040   CF0B             ;------------------------------------------------------------------------------
3041   CF0B             ; Transfers text declaring reserve button level to reserve memory area
3042   CF0B             ;            Address: CF0B
3043   CF0B             ;   Entry parameters: AR-X must contain CSI for text to be transmitted. The 
3044   CF0B             ;                     symbol of the level to be changed must be visible in the 
3045   CF0B             ;                     display. If (7860) does not contain FF, the assignment is 
3046   CF0B             ;                     protected from being overwritten.
3047   CF0B             ; 
3048   CF0B             ; Modified registers: All registers changed.
3049   CF0B             ;   Error conditions: If text was transferred, Carry=0. If the value in (7860) was not FF, Carry=1
3050   CF0B             ;------------------------------------------------------------------------------
3051   CF0B             TXFR_RSV_TXT: ; $CF0B
3052   CF0B BE CE AF        SJP  (RSRV_TXT) ; $CEAF
3053   CF0E 81 15           BCR $TXFR_RSV_TXT_3 ; CF25
3054   CF10 FD 5A           STX  Y
3055   CF12 DC              VEJ  (DC)
3056   CF13 68 00           LDI  UH,$00
3057   CF15 B7 1A           CPI  A,$1A
3058   CF17 81 03           BCR TXFR_RSV_TXT_1 ; $CF1C
3059   CF19 6A 1A           LDI  UL,$1A
3060   CF1B 28              STA  UH
3061   CF1C             
3062   CF1C             TXFR_RSV_TXT_1: ; $CF1C
3063   CF1C BE D0 49        SJP  (SYSMSG_3)
3064   CF1F A4              LDA  UH
3065   CF20 89 01           BZR TXFR_RSV_TXT_2 ; $CF23
3066   CF22 1E              STA  (Y)
3067   CF23             
3068   CF23             TXFR_RSV_TXT_2: ; $CF23
3069   CF23 F9               REC
3070   CF24 9A               RTN
3071   CF25             
3072   CF25             TXFR_RSV_TXT_3: ; $CF25
3073   CF25 FB              SEC
3074   CF26 9A              RTN
3075   CF27             
3076   CF27             
3077   CF27             
3078   CF27             ;------------------------------------------------------------------------------
3079   CF27             ; $CF27 - Transfer, delete, insert line from Input buffer
3080   CF27             ;            Address: CF27
3081   CF27             ;                     4 data bytes
3082   CF27             ;                     D1= if line number not found
3083   CF27             ;                     D2= if line number not allowed
3084   CF27             ;                     D3= if n beginning of buffer does not contain line number
3085   CF27             ;                     D4=if line was transferred correctly
3086   CF27             ;         Parameters: Y-Reg must point to arbitrary buffer ranges (XXBO-XXFF). 
3087   CF27             ;                     The character that X-Reg then points to must be a "0D". 
3088   CF27             ;                     YH must also point to this memory page.
3089   CF27             ; 
3090   CF27             ; Modified Registers: All CPU registers. The program pointers in the memory map 
3091   CF27             ;                     are also changed and adapted to new scope of the program.
3092   CF27             ;   Error conditions: UH may contain Error message. Error 13, if program line 
3093   CF27             ;                     no longer fits in memory; Error 1 if line number not 
3094   CF27             ;                     allowed. If variables and program memory overlap, an 
3095   CF27             ;                     error code is also stored in UH.
3096   CF27             ;------------------------------------------------------------------------------
3097   CF27             PRGLINE_TDI: ; $CF27
3098   CF27 FD 88           PSH  X
3099   CF29 5A B0           LDI  YL,$B0
3100   CF2B BE D3 D5        SJP  (DEC_2_HEX)
3101   CF2E 89 04           BZR PRGLINE_TDI_1 ; $CF34
3102   CF30 B5 02           LDI  A,$02
3103   CF32 8E 94           BCH PRGLINE_TDI_7 ; $CFC8
3104   CF34             
3105   CF34             PRGLINE_TDI_1: ; $CF34
3106   CF34 B5 01           LDI  A,$01
3107   CF36 83 90           BCS PRGLINE_TDI_7 ; $CFC8
3108   CF38 FD 0A           POP  X
3109   CF3A 04              LDA  XL
3110   CF3B 10              SBC  YL
3111   CF3C FD 98           PSH  Y
3112   CF3E FD C8           PSH  A
3113   CF40 FD A8           PSH  U
3114   CF42 BE CF D0        SJP  (INIT_SYS_ADDR_1) ; $CFD0
3115   CF45 FD 2A           POP  U
3116   CF47 FD A8           PSH  U
3117   CF49 BE D2 E0        SJP  (LINE_SEARCH) ; $D2E0
3118   CF4C 1E              STA  (Y)
3119   CF4D FD 0A           POP  X
3120   CF4F CC              VEJ  (CC) \ 
3120   CF50             
3121   CF50 A6                  ABYTL(SRCH_ADD_H) ; $78A6
3122   CF51 46              DEC  X
3123   CF52 FD 5A           STX  Y
3124   CF54 45              LIN  X
3125   CF55 FD CA           ADR  X
3126   CF57 56              DEC  Y
3127   CF58 56              DEC  Y
3128   CF59 46              DEC  X
3129   CF5A CD 16           VMJ  ($16)
3130   CF5C 44              INC  X
3131   CF5D             
3132   CF5D             PRGLINE_TDI_2: ; $CF5D
3133   CF5D F5              TIN
3134   CF5E 88 03           LOP  UL,PRGLINE_TDI_2 ; $CF5D
3135   CF60 FD 62           DEC  UH
3136   CF62 93 07           BCS PRGLINE_TDI_2 ; $CF5D
3137   CF64 FD 18           LDX  Y
3138   CF66 46              DEC  X
3139   CF67 CA              VEJ  (CA) \ 
3139   CF68             
3140   CF68 67                  ABYTL(BASPRG_END_H) ; $7867
3141   CF69 8E 06           BCH $CF71
3142   CF6B FD 0A           POP  X
3143   CF6D CA              VEJ  (CA) \ 
3143   CF6E             
3144   CF6E A8                  ABYTL(SRCH_LINE_H) ; $78A8
3145   CF6F CC              VEJ  (CC) \ 
3145   CF70             
3146   CF70 67                  ABYTL(BASPRG_END_H) ; $7867
3147   CF71 FD 8A           POP  A
3148   CF73 DD              INC  A
3149   CF74 8B 52           BZS PRGLINE_TDI_7 ; $CFC8
3150   CF76 FD C8           PSH  A
3151   CF78 B3 04           ADI  A,$04
3152   CF7A FD 5A           STX  Y
3153   CF7C FD DA           ADR  Y
3154   CF7E 94              LDA  YH
3155   CF7F A7 78 64        CPA  (RAM_END_H)
3156   CF82 83 3E           BCS PRGLINE_TDI_6 ; $CFC2
3157   CF84 FD 98           PSH  Y
3158   CF86 CC              VEJ  (CC) \ 
3158   CF87             
3159   CF87 A6                  ABYTL(SRCH_ADD_H) ; $78A6
3160   CF88 46              DEC  X
3161   CF89 46              DEC  X
3162   CF8A 46              DEC  X
3163   CF8B CA              VEJ  (CA) \ 
3163   CF8C             
3164   CF8C A6                  ABYTL(SRCH_ADD_H) ; $78A6
3165   CF8D 46              DEC  X
3166   CF8E CD 16           VMJ  ($16)
3167   CF90 44              INC  X
3168   CF91 CC              VEJ  (CC) \ 
3168   CF92             
3169   CF92 67                  ABYTL(BASPRG_END_H) ; $7867
3170   CF93             
3171   CF93             PRGLINE_TDI_3: ; $CF93
3172   CF93 47              LDE  X
3173   CF94 53              SDE  Y
3174   CF95 88 04           LOP  UL,PRGLINE_TDI_3 ; $CF93
3175   CF97 FD 62           DEC  UH
3176   CF99 93 08           BCS PRGLINE_TDI_3 ; $CF93
3177   CF9B FD 0A           POP  X
3178   CF9D CA              VEJ  (CA) \ 
3178   CF9E             
3179   CF9E 67                  ABYTL(BASPRG_END_H) ; $7867
3180   CF9F CC              VEJ  (CC) \ 
3180   CFA0             
3181   CFA0 A6                  ABYTL(SRCH_ADD_H) ; $78A6
3182   CFA1 FD 5A           STX  Y
3183   CFA3 CC              VEJ  (CC) \ 
3183   CFA4             
3184   CFA4 A8                  ABYTL(SRCH_LINE_H) ; $78A8
3185   CFA5 51              SIN  Y
3186   CFA6 04              LDA  XL
3187   CFA7 51              SIN  Y
3188   CFA8 FD 8A           POP  A
3189   CFAA 2A              STA  UL
3190   CFAB DD              INC  A
3191   CFAC 51              SIN  Y
3192   CFAD FD 0A           POP  X
3193   CFAF 04              LDA  XL
3194   CFB0 28              STA  UH
3195   CFB1             
3196   CFB1             PRGLINE_TDI_4: ; $CFB1
3197   CFB1 F5              TIN
3198   CFB2 88 03           LOP  UL,PRGLINE_TDI_4 ; $CFB1
3199   CFB4 BE D0 9C        SJP  (DEL_DIM_VAR_1)
3200   CFB7 B5 03           LDI  A,$03
3201   CFB9             
3202   CFB9             PRGLINE_TDI_5: ; $CFB9
3203   CFB9 FD 0A           POP  X
3204   CFBB FD CA           ADR  X
3205   CFBD 45              LIN  X
3206   CFBE FD CA           ADR  X
3207   CFC0 FD 5E           STX  P
3208   CFC2             
3209   CFC2             PRGLINE_TDI_6: ; $CFC2
3210   CFC2 FD 8A           POP  A
3211   CFC4 68 0D           LDI  UH,$0D
3212   CFC6 B5 01           LDI  A,$01
3213   CFC8             
3214   CFC8             PRGLINE_TDI_7: ; $CFC8
3215   CFC8 FD 1A           POP  Y
3216   CFCA 9E 13           BCH PRGLINE_TDI_5 ; $CFB9
3217   CFCC             
3218   CFCC             
3219   CFCC             
3220   CFCC             ;------------------------------------------------------------------------------
3221   CFCC             ; $CFCC - Initializes system addresses and turn off TRACE_PARAM
3222   CFCC             ;------------------------------------------------------------------------------
3223   CFCC             INIT_SYS_ADDR:
3224   CFCC E9 78 8D 00     ANI  (TRACE_ON),$00
3225   CFD0             
3226   CFD0             ;------------------------------------------------------------------------------
3227   CFD0             ; $CFD0 - Initialization of system addresses.
3228   CFD0             ;------------------------------------------------------------------------------
3229   CFD0             INIT_SYS_ADDR_1:
3230   CFD0 CD 12           VMJ  ($12)
3231   CFD2             
3232   CFD2             INIT_SYS_ADDR_2: ; $CFD2
3233   CFD2 44              INC  X
3234   CFD3 44              INC  X
3235   CFD4 44              INC  X
3236   CFD5 84              LDA  XH
3237   CFD6 BB 80           ORI  A,$80
3238   CFD8 08              STA  XH
3239   CFD9 CA              VEJ  (CA) \ 
3239   CFDA             
3240   CFDA BE                  ABYTL(DATA_PTR_H) ; $78BE
3241   CFDB B5 00           LDI  A,$00
3242   CFDD 6A A2           LDI  UL,$A2
3243   CFDF 61              SIN  U
3244   CFE0 61              SIN  U
3245   CFE1 6A B4           LDI  UL,$B4
3246   CFE3 61              SIN  U
3247   CFE4 61              SIN  U
3248   CFE5 AE 78 9B        STA  (ERL)
3249   CFE8 48 78           LDI  XH,$78
3250   CFEA 4A 71           LDI  XL,$71
3251   CFEC 6A 0D           LDI  UL,$0D
3252   CFEE             
3253   CFEE             INIT_SYS_ADDR_3: ; $CFEE
3254   CFEE 41              SIN  X
3255   CFEF 88 03           LOP  UL,INIT_SYS_ADDR_3 ; $CFEE
3256   CFF1 4A 95           LDI  XL,$95
3257   CFF3 41              SIN  X
3258   CFF4 41              SIN  X
3259   CFF5 41              SIN  X
3260   CFF6 41              SIN  X
3261   CFF7             
3262   CFF7             ;------------------------------------------------------------------------------
3263   CFF7             ; $CFF7 - Initializes FOR / GOSUB pointers. Sets the error flag.
3264   CFF7             ;------------------------------------------------------------------------------
3265   CFF7             INIT_SYS_ADDR_4: ; 
3266   CFF7 EB 78 B8 80     ORI  (ON_ERR_ADD_H),$80
3267   CFFB             
3268   CFFB             ;------------------------------------------------------------------------------
3269   CFFB             ; $CFFB (3A) - basic-stack keyboard and input status 
3270   CFFB             ;------------------------------------------------------------------------------   
3271   CFFB             INIT_SYS_ADDR_5:
3272   CFFB E9 7B 0E 1F     ANI  (CURS_CTRL),$1F
3273   CFFF E9 78 8A 00     ANI  (BREAKPARAM),$00
3274   D003 EB 78 91 FF     ORI  (GOSB_STK_PTR_L),$FF
3275   D007 B5 38           LDI  A,$38
3276   D009 AE 78 90        STA  (FORNXT_STK_PTR)
3277   D00C 9A              RTN
3278   D00D             
3279   D00D             ;------------------------------------------------------------------------------
3280   D00D             ; $D00D - Initialization of the program pointers.
3281   D00D             ;------------------------------------------------------------------------------
3282   D00D             INIT_SYS_ADDR_6:
3283   D00D CC              VEJ  (CC) \ 
3283   D00E             
3284   D00E AA                  ABYTL(SRCH_TOP_H) ; $78AA
3285   D00F 9E 3F           BCH INIT_SYS_ADDR_2 ; $CFD2
3286   D011             
3287   D011             
3288   D011             
3289   D011             ;------------------------------------------------------------------------------
3290   D011             ; $D011 - Checks whether the inputs for an INPUT command are edited
3291   D011             ;            Address: D011
3292   D011             ;         Parameters: None
3293   D011             ;
3294   D011             ; Modified Registers: Accumulator, carry flag=1 when editing with INPUT command
3295   D011             ;   Error conditions: None
3296   D011             ;------------------------------------------------------------------------------
3297   D011             INPUT_EDITED: ; 
3298   D011 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
3299   D015 8B 08           BZS INPUT_EDITED_1 ; $D01F
3300   D017                 
3301   D017             ; Tests input status. If input is required C=1. $D017   
3302   D017 A5 78 8A        LDA  (BREAKPARAM)
3303   D01A D9              SHL
3304   D01B 83 02           BCS INPUT_EDITED_1 ; $D01F
3305   D01D DB              ROL
3306   D01E 9A              RTN
3307   D01F             
3308   D01F             INPUT_EDITED_1: ; $D01F
3309   D01F F9              REC
3310   D020 9A              RTN
3311   D021             
3312   D021             
3313   D021             
3314   D021             ;------------------------------------------------------------------------------
3315   D021             ; $D021 - Clears the rest of the input buffer with "0D"
3316   D021             ;------------------------------------------------------------------------------
3317   D021             INBUF_CLR:
3318   D021 A5 78 8B        LDA  (INBUFPTR_L)
3319   D024 0A              STA  XL
3320   D025 1A              STA  YL
3321   D026 BD FF           EAI  $FF
3322   D028 2A              STA  UL
3323   D029 8E 0D           BCH INBUF_CLR_4 ; $D038
3324   D02B             
3325   D02B             ;------------------------------------------------------------------------------
3326   D02B             ; $D02B - Clear input buffers with "0D" and initializes Input buffer pointers
3327   D02B             ;            Address:	D02B
3328   D02B             ;          Parameter:	None
3329   D02B             ;
3330   D02B             ; Modified Registers:	Input buffer is filled with "0D"
3331   D02B             ;   Error conditions:	None
3332   D02B             ;------------------------------------------------------------------------------
3333   D02B             INBUF_CLR_1: ; $D02B
3334   D02B B5 B0           LDI  A,$B0
3335   D02D AE 78 8B        STA  (INBUFPTR_L)
3336   D030             
3337   D030             ; Clears the input buffer and sets V-Reg to the beginning of the input buffer.
3338   D030             INBUF_CLR_2: ; $D030
3339   D030 5A B0           LDI  YL,$B0
3340   D032 58 7B           LDI  YH,$7B
3341   D034             
3342   D034             ; Clears input buffer.
3343   D034             INBUF_CLR_3: ; $D034
3344   D034 4A B0           LDI  XL,$B0
3345   D036 6A 50           LDI  UL,$50
3346   D038             
3347   D038             INBUF_CLR_4: ; $D038
3348   D038 48 7B           LDI  XH,$7B
3349   D03A B5 0D           LDI  A,$0D
3350   D03C 8E 72           BCH DEL_DIM_VAR_4 ; $D0B0
3351   D03E             
3352   D03E             
3353   D03E             
3354   D03E             ;------------------------------------------------------------------------------
3355   D03E             ; $D03E - (2A) Transfer system messages from memory page C3xx
3356   D03E             ;            Address: D03E (2A)
3357   D03E             ;          Parameter: D1 defines low byte of memory page C3xx from which 
3358   D03E             ;                     message transfer begins. D2 = length of system message.
3359   D03E             ;                     (5B 09) BREAK IN
3360   D03E             ;                     (64 06) ERROR
3361   D03E             ;                     (61 03) IN
3362   D03E             ;                     Y-Reg points to target address of system message
3363   D03E             ;
3364   D03E             ; Modified Registers: X-Reg, Y-Reg, U-Reg, Accumulator
3365   D03E             ;   Error conditions: None
3366   D03E             ;------------------------------------------------------------------------------ 
3367   D03E             SYSMSG:    
3368   D03E FD 2A           POP  U
3369   D040 65              LIN  U
3370   D041 0A              STA  XL
3371   D042 65              LIN  U
3372   D043 FD A8           PSH  U
3373   D045 2A              STA  UL
3374   D046             
3375   D046             ; Transfers system messages.
3376   D046             SYSMSG_1: ; $D046
3377   D046 48 C3           LDI  XH,$C3
3378   D048             
3379   D048             SYSMSG_2: ; $D048
3380   D048 F5              TIN
3381   D049             
3382   D049             ; Transfers UL bytes from X-Reg to Y-Reg
3383   D049             SYSMSG_3: ; $D049
3384   D049 88 03           LOP  UL,SYSMSG_2 ; $D048
3385   D04B 9A              RTN
3386   D04C             
3387   D04C             
3388   D04C             
3389   D04C             ;------------------------------------------------------------------------------ 
3390   D04C             ; $D04C - Searches for variable on Basic stack, if not found C=0.
3391   D04C             ;------------------------------------------------------------------------------ 
3392   D04C             VAR_ON_BSTK:
3393   D04C A5 78 90        LDA  (FORNXT_STK_PTR)
3394   D04F 48 7A           LDI  XH,$7A
3395   D051 B7 39           CPI  A,$39
3396   D053 81 27           BCR PSH_BSTK_2 ; $D07C
3397   D055 B1 0C           SBI  A,$0C
3398   D057 0A              STA  XL
3399   D058 45              LIN  X
3400   D059 A6              CPA  UH
3401   D05A 89 05           BZR VAR_ON_BSTK_1 ; $D061
3402   D05C 45              LIN  X
3403   D05D 26              CPA  UL
3404   D05E 8B 1B           BZS PSH_BSTK_1 ; $D07B
3405   D060 46              DEC  X
3406   D061             
3407   D061             VAR_ON_BSTK_1: ; $D061
3408   D061 46              DEC  X
3409   D062 04              LDA  XL
3410   D063 9E 14           BCH $D051
3411   D065             
3412   D065             
3413   D065             
3414   D065             ;------------------------------------------------------------------------------
3415   D065             ; $D065 - (06) Gets address from Basic-Stack to U-Reg
3416   D065             ;            Address: D065 (06)
3417   D065             ;          Parameter: None
3418   D065             ; 
3419   D065             ; Modified Registers: X-Reg points to the next free address on the stack
3420   D065             ;                     Accumulator holds new basic stack pointer. 
3421   D065             ;                     ($7882) is updated
3422   D065             ;   Error conditions: None
3423   D065             ;------------------------------------------------------------------------------
3424   D065             POP_BSTK: ; $D065
3425   D065 A5 78 82        LDA  (STK_PTR_GSB_FOR)
3426   D068 0A              STA  XL
3427   D069 48 7A           LDI  XH,$7A
3428   D06B 45              LIN  X
3429   D06C 28              STA  UH
3430   D06D 45              LIN  X
3431   D06E 2A              STA  UL
3432   D06F 8E 0A           BCH PSH_BSTK_1 ; $D07B
3433   D071             
3434   D071             ;------------------------------------------------------------------------------
3435   D071             ; $D071 (32) - Save U-Reg on Basic Stack
3436   D071             ;------------------------------------------------------------------------------
3437   D071             PSH_BSTK:
3438   D071 A5 78 82        LDA  (STK_PTR_GSB_FOR)
3439   D074 0A              STA  XL
3440   D075 48 7A           LDI  XH,$7A
3441   D077 A4              LDA  UH
3442   D078 41              SIN  X
3443   D079 24              LDA  UL
3444   D07A 41              SIN  X
3445   D07B             
3446   D07B             PSH_BSTK_1: ; $D07B
3447   D07B 04              LDA  XL
3448   D07C             
3449   D07C             PSH_BSTK_2: ; $D07C
3450   D07C AE 78 82        STA  (STK_PTR_GSB_FOR)
3451   D07F 9A              RTN
3452   D080             
3453   D080             
3454   D080             
3455   D080             ;------------------------------------------------------------------------------
3456   D080             ; $D080 - Delete variable (standard and dimensioned variable)
3457   D080             ;            Address: D080
3458   D080             ;          Parameter: None
3459   D080             ; 
3460   D080             ; Modified Registers: X-Reg, U-Reg, Accumulator
3461   D080             ;   Error conditions: None
3462   D080             ;------------------------------------------------------------------------------
3463   D080             DEL_STD_VARS: 
3464   D080 48 76           LDI  XH,$76
3465   D082 BE D0 AA        SJP  (DEL_DIM_VAR_2) ; $D0AA
3466   D085 BE D0 AA        SJP  (DEL_DIM_VAR_2) ; $D0AA
3467   D088 4A C0           LDI  XL,$C0
3468   D08A 6A 0F           LDI  UL,$0F
3469   D08C 68 01           LDI  UH,$01
3470   D08E BE D3 C7        SJP  (DELU_FROMX_1) ; $D3C7
3471   D091             
3472   D091             
3473   D091             
3474   D091             ;------------------------------------------------------------------------------
3475   D091             ; $D091 - Delete dimensioned variables
3476   D091             ;            Address: D091
3477   D091             ;          Parameter: None
3478   D091             ; 
3479   D091             ; Modified Registers: Variable pointer
3480   D091             ;   Error conditions: None
3481   D091             ;------------------------------------------------------------------------------
3482   D091             DEL_DIM_VAR:
3483   D091 A5 78 64        LDA  (RAM_END_H)
3484   D094 AE 78 99        STA  (VAR_START_H)
3485   D097 E9 78 9A 00     ANI  (VAR_START_L),$00
3486   D09B 9A              RTN
3487   D09C             
3488   D09C             
3489   D09C             ;------------------------------------------------------------------------------
3490   D09C             ; $D09C - Delete dimensioned variable if program and variable memory overlap
3491   D09C             ;            Address: D09C
3492   D09C             ;          Parameter: None
3493   D09C             ;
3494   D09C             ; Modified Registers: X-Reg, Accumulator
3495   D09C             ;   Error conditions: None
3496   D09C             ;------------------------------------------------------------------------------
3497   D09C             DEL_DIM_VAR_1:
3498   D09C CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
3498   D09D 67          
3499   D09E FB              SEC
3500   D09F 04              LDA  XL
3501   D0A0 A1 78 9A        SBC  (VAR_START_L)
3502   D0A3 84              LDA  XH
3503   D0A4 A1 78 99        SBC  (VAR_START_H)
3504   D0A7 93 18           BCS DEL_DIM_VAR
3505   D0A9 9A              RTN
3506   D0AA             
3507   D0AA             ;------------------------------------------------------------------------------
3508   D0AA             ; $D0AA - Delete standard variables (176 bytes) from XH 50.
3509   D0AA             ;------------------------------------------------------------------------------
3510   D0AA             DEL_DIM_VAR_2: 
3511   D0AA 4A 50           LDI  XL,$50
3512   D0AC 6A AF           LDI  UL,$AF
3513   D0AE             
3514   D0AE             
3515   D0AE             ;------------------------------------------------------------------------------
3516   D0AE             ; Delete UL+1 bytes from X-Reg
3517   D0AE             ;            Address: D0AE
3518   D0AE             ;          Parameter: X-Reg points to the start address of the area to be deleted. 
3519   D0AE             ;                     UL contains the number of bytes to be deleted +1
3520   D0AE             ;
3521   D0AE             ; Modified Registers: X-Reg, Y-Reg
3522   D0AE             ;   Error conditions: None
3523   D0AE             ;------------------------------------------------------------------------------
3524   D0AE             DEL_DIM_VAR_3: ; $D0AE
3525   D0AE B5 00           LDI  A,$00
3526   D0B0             
3527   D0B0             DEL_DIM_VAR_4: ; $D0B0
3528   D0B0 41              SIN  X
3529   D0B1 88 03           LOP  UL,DEL_DIM_VAR_4 ; $D0B0
3530   D0B3 9A              RTN
3531   D0B4             
3532   D0B4             
3533   D0B4             
3534   D0B4             ;------------------------------------------------------------------------------
3535   D0B4             ; $D0B4 - Initializes pointer for search program
3536   D0B4             ;------------------------------------------------------------------------------
3537   D0B4             PRG_SEARCH: 
3538   D0B4 84              LDA  XH
3539   D0B5 AE 78 AA        STA  (SRCH_TOP_H)
3540   D0B8 04              LDA  XL
3541   D0B9 AE 78 AB        STA  (SRCH_TOP_L)
3542   D0BC             
3543   D0BC             ; Loads address pointed to by X-Reg 2-bytes (line number) after search pointer 
3544   D0BC             ; & start address from 78A6 f ..
3545   D0BC             PRG_SEARCH_1: ; $D0BC
3546   D0BC 45              LIN  X
3547   D0BD AE 78 A8        STA  (SRCH_LINE_H)
3548   D0C0 45              LIN  X
3549   D0C1 AE 78 A9        STA  (SRCH_LINE_L)
3550   D0C4 44              INC  X
3551   D0C5 84              LDA  XH
3552   D0C6 AE 78 A6        STA  (SRCH_ADD_H)
3553   D0C9 04              LDA  XL
3554   D0CA AE 78 A7        STA  (SRCH_ADD_L)
3555   D0CD 9A              RTN
3556   D0CE                 
3557   D0CE 08              STA  XH                     ; don't think this will ever be hit ***
3558   D0CF BA C8 53        JMP  BCMD_NEW_5 ; $C853
3559   D0D2             
3560   D0D2             
3561   D0D2             
3562   D0D2             ;------------------------------------------------------------------------------
3563   D0D2             ; $D0D2 - Compare BCD numbers in AR-X & AR-Y according to operand in Accumulator Set 
3564   D0D2             ; AR-X according to result 0 or 1.
3565   D0D2             ;------------------------------------------------------------------------------
3566   D0D2             COMPARE_BCD:
3567   D0D2 FD C8           PSH  A
3568   D0D4 A5 7A 01        LDA  (ARX + $01)
3569   D0D7 AD 7A 11        EOR  (ARY + $01)
3570   D0DA 89 08           BZR COMPARE_BCD_1 ; $D0E4
3571   D0DC BE EF B6        SJP  (SUBTR)
3572   D0DF A5 7A 02        LDA  (ARX + $02)
3573   D0E2 8B 5E           BZS $D142
3574   D0E4             
3575   D0E4             COMPARE_BCD_1: ; $D0E4
3576   D0E4 A5 7A 01        LDA  (ARX + $01)
3577   D0E7 D9              SHL
3578   D0E8             
3579   D0E8             COMPARE_BCD_2: ; $D0E8
3580   D0E8 FD 8A           POP  A
3581   D0EA 8B 4C           BZS COMPARE_STR_4 ; $D138
3582   D0EC BD 04           EAI  $04
3583   D0EE 8B 07           BZS COMPARE_BCD_4 ; $D0F7
3584   D0F0 83 02           BCS COMPARE_BCD_3 ; $D0F4
3585   D0F2 BD 03           EAI  $03
3586   D0F4             
3587   D0F4             COMPARE_BCD_3: ; $D0F4
3588   D0F4 D5              SHR
3589   D0F5 83 41           BCS COMPARE_STR_4 ; $D138
3590   D0F7             
3591   D0F7             COMPARE_BCD_4: ; $D0F7
3592   D0F7 EC              VEJ  (EC)
3593   D0F8 9A              RTN
3594   D0F9             
3595   D0F9             
3596   D0F9             
3597   D0F9             ;------------------------------------------------------------------------------
3598   D0F9             ; $D0F9 - Comparison of two strings according to operator in the accumulator
3599   D0F9             ; Comparison of two strings according to the operand in the accumulator whose 
3600   D0F9             ; CSI is in AR-X and AR-Y. AR-X is set to 1=true or 0=false, depending on the result.
3601   D0F9             ;------------------------------------------------------------------------------
3602   D0F9             COMPARE_STR:
3603   D0F9 FD C8           PSH  A
3604   D0FB 6A 15           LDI  UL,$15
3605   D0FD BE DE BE        SJP  (CSI_ARX_2_XREG_1) ; $DEBE
3606   D100 FD 5A           STX  Y
3607   D102 FD C8           PSH  A
3608   D104 DC              VEJ  (DC)
3609   D105 FD 8A           POP  A
3610   D107 68 01           LDI  UH,$01
3611   D109 26              CPA  UL
3612   D10A 8B 0F           BZS COMPARE_STR_2 ; $D11B
3613   D10C 68 02           LDI  UH,$02
3614   D10E 83 03           BCS COMPARE_STR_1 ; $D113
3615   D110 68 00           LDI  UH,$00
3616   D112 2A              STA  UL
3617   D113             
3618   D113             COMPARE_STR_1: ; $D113
3619   D113 FD 8A           POP  A
3620   D115 B7 04           CPI  A,$04
3621   D117 9B 22           BZS COMPARE_BCD_4 ; $D0F7
3622   D119 FD C8           PSH  A
3623   D11B             
3624   D11B             COMPARE_STR_2: ; $D11B
3625   D11B 62              DEC  UL
3626   D11C 81 20           BCR COMPARE_STR_5 ; $D13E
3627   D11E 55              LIN  Y
3628   D11F F7              CIN
3629   D120 9B 07           BZS COMPARE_STR_2 ; $D11B
3630   D122 FD 8A           POP  A
3631   D124 8B 12           BZS COMPARE_STR_4 ; $D138
3632   D126 FD C8           PSH  A
3633   D128 BF 03           BII  A,$03
3634   D12A 8B 1C           BZS COMPARE_STR_6 ; $D148
3635   D12C 81 02           BCR COMPARE_STR_3 ; $D130
3636   D12E BD 03           EAI  $03
3637   D130             
3638   D130             COMPARE_STR_3: ; $D130
3639   D130 D5              SHR
3640   D131 83 15           BCS COMPARE_STR_6 ; $D148
3641   D133 38              NOP
3642   D134 38              NOP
3643   D135 38              NOP
3644   D136 FD 8A           POP  A
3645   D138             
3646   D138             COMPARE_STR_4: ; $D138
3647   D138 EC              VEJ  (EC)
3648   D139 EB 7A 02 10     ORI  (ARX + $02),$10
3649   D13D 9A              RTN
3650   D13E             
3651   D13E             COMPARE_STR_5: ; $D13E
3652   D13E 6C 01           CPI  UH,$01
3653   D140 99 5A           BZR COMPARE_BCD_2 ; $D0E8
3654   D142 FD 8A           POP  A
3655   D144 D5              SHR
3656   D145 D5              SHR
3657   D146 9E 54           BCH COMPARE_BCD_3 ; $D0F4
3658   D148             
3659   D148             COMPARE_STR_6: ; $D148
3660   D148 FD 8A           POP  A
3661   D14A 9E 55           BCH COMPARE_BCD_4 ; $D0F7
3662   D14C             
3663   D14C             ; Passes number pointed to by Y-Reg to AR-X.
3664   D14C             COMPARE_STR_7: ; $D14C
3665   D14C DC              VEJ  (DC)
3666   D14D FD 5A           STX  Y
3667   D14F             
3668   D14F             
3669   D14F             
3670   D14F             ;------------------------------------------------------------------------------
3671   D14F             ; $D14F - BCD value pointed to by Y-Reg passed to AR-X. Jump if error.
3672   D14F             ;------------------------------------------------------------------------------
3673   D14F             BCD_Y2ARX:
3674   D14F FD A8           PSH  U
3675   D151 EC              VEJ  (EC)
3676   D152 46              DEC  X
3677   D153 24              LDA  UL
3678   D154 0E              STA  (X)
3679   D155 FD 2A           POP  U
3680   D157 68 00           LDI  UH,$00
3681   D159 4A 02           LDI  XL,$02
3682   D15B             
3683   D15B             BCD_Y2ARX_1: ; $D15B
3684   D15B 62              DEC  UL
3685   D15C 81 5E           BCR BCD_Y2ARX_13 ; $D1BC
3686   D15E 15              LDA  (Y)
3687   D15F B7 30           CPI  A,$30
3688   D161 89 10           BZR BCD_Y2ARX_2 ; $D173
3689   D163 A4              LDA  UH
3690   D164 D5              SHR
3691   D165 83 37           BCS BCD_Y2ARX_7 ; $D19E
3692   D167 D5              SHR
3693   D168 83 14           BCS BCD_Y2ARX_3 ; $D17E
3694   D16A D5              SHR
3695   D16B 81 37           BCR BCD_Y2ARX_8 ; $D1A4
3696   D16D EF 7A 07 FF     ADI  (ARX + $07),$FF
3697   D171 8E 31           BCH BCD_Y2ARX_8 ; $D1A4
3698   D173             
3699   D173             BCD_Y2ARX_2: ; $D173
3700   D173 81 36           BCR BCD_Y2ARX_11 ; $D1AB
3701   D175 B7 3A           CPI  A,$3A
3702   D177 83 32           BCS BCD_Y2ARX_11 ; $D1AB
3703   D179 A4              LDA  UH
3704   D17A D5              SHR
3705   D17B 83 21           BCS BCD_Y2ARX_7 ; $D19E
3706   D17D D5              SHR
3707   D17E             
3708   D17E             BCD_Y2ARX_3: ; $D17E
3709   D17E D5              SHR
3710   D17F 83 04           BCS BCD_Y2ARX_4 ; $D185
3711   D181 EF 7A 07 01     ADI  (ARX + $07),$01
3712   D185             
3713   D185             BCD_Y2ARX_4: ; $D185
3714   D185 4E 07           CPI  XL,$07
3715   D187 83 10           BCS BCD_Y2ARX_6 ; $D199
3716   D189 4C 7A           CPI  XH,$7A
3717   D18B 48 7A           LDI  XH,$7A
3718   D18D 15              LDA  (Y)
3719   D18E B9 0F           ANI  A,$0F
3720   D190 81 05           BCR BCD_Y2ARX_5 ; $D197
3721   D192 D3              DRR  (X) 
3722   D193 48 00           LDI  XH,$00
3723   D195 8E 02           BCH BCD_Y2ARX_6 ; $D199
3724   D197             
3725   D197             BCD_Y2ARX_5: ; $D197
3726   D197 03              ADC  (X)
3727   D198 41              SIN  X
3728   D199             
3729   D199             BCD_Y2ARX_6: ; $D199
3730   D199 A4              LDA  UH
3731   D19A BB 02           ORI  A,$02
3732   D19C 8E 07           BCH BCD_Y2ARX_9 ; $D1A5
3733   D19E             
3734   D19E             BCD_Y2ARX_7: ; $D19E
3735   D19E 4A 00           LDI  XL,$00
3736   D1A0 48 7A           LDI  XH,$7A
3737   D1A2 15              LDA  (Y)
3738   D1A3 D3              DRR  (X)
3739   D1A4             
3740   D1A4             BCD_Y2ARX_8: ; $D1A4
3741   D1A4 A4              LDA  UH
3742   D1A5             
3743   D1A5             BCD_Y2ARX_9: ; $D1A5
3744   D1A5 BB 80           ORI  A,$80
3745   D1A7 28              STA  UH
3746   D1A8             
3747   D1A8             BCD_Y2ARX_10: ; $D1A8
3748   D1A8 54              INC  Y
3749   D1A9 9E 50           BCH BCD_Y2ARX_1 ; $D15B
3750   D1AB             
3751   D1AB             BCD_Y2ARX_11: ; $D1AB
3752   D1AB FD 88           PSH  X
3753   D1AD CD 34           VMJ  ($34) \ ABYT($04) \ ABYT($20) \ 
3753   D1AF 04          
3753   D1B0 20          
3753   D1B1             
3754   D1B1 63                   ABRF(BCD_Y2ARX_23) \ ABYT($2E) \ ABRF(BCD_Y2ARX_19) \ 
3754   D1B2 2E          
3754   D1B3 47          
3754   D1B4             
3755   D1B4 2D                   ABYT($2D) \ ABRF(BCD_Y2ARX_21) \ ABYT($2B) \ 
3755   D1B5 4F          
3755   D1B6 2B          
3755   D1B7             
3756   D1B7 61                   ABRF(BCD_Y2ARX_24) \ ABYT($45) \ ABRF(BCD_Y2ARX_25)
3756   D1B8 45          
3756   D1B9 64          
3757   D1BA             
3758   D1BA             BCD_Y2ARX_12: ; $D1BA
3759   D1BA FD 0A           POP  X
3760   D1BC             
3761   D1BC             BCD_Y2ARX_13: ; $D1BC
3762   D1BC 4A 02           LDI  XL,$02
3763   D1BE 48 7A           LDI  XH,$7A
3764   D1C0 47              LDE  X
3765   D1C1 8B 25           BZS BCD_Y2ARX_16 ; $D1E8
3766   D1C3 46              DEC  X
3767   D1C4 B5 00           LDI  A,$00
3768   D1C6 D3              DRR  (X)
3769   D1C7 B9 0F           ANI  A,$0F
3770   D1C9 2A              STA  UL
3771   D1CA 05              LDA  (X)
3772   D1CB             
3773   D1CB             BCD_Y2ARX_14: ; $D1CB
3774   D1CB 62              DEC  UL
3775   D1CC 81 04           BCR BCD_Y2ARX_15
3776   D1CE B3 09           ADI  A,$09
3777   D1D0 9E 07           BCH BCD_Y2ARX_14 ; $D1CB
3778   D1D2             
3779   D1D2             BCD_Y2ARX_15: ; $D1D2
3780   D1D2 41              SIN  X
3781   D1D3 05              LDA  (X)
3782   D1D4 D9              SHL
3783   D1D5 43              SDE  X
3784   D1D6 A5 7A 07        LDA  (ARX + $07)
3785   D1D9 E9 7A 07 00     ANI  (ARX + $07),$00
3786   D1DD 81 0C           BCR BCD_Y2ARX_17 ; $D1EB
3787   D1DF 01              SBC  (X)
3788   D1E0 B7 64           CPI  A,$64
3789   D1E2 81 14           BCR BCD_Y2ARX_18 ; $D1F8
3790   D1E4 B7 9D           CPI  A,$9D
3791   D1E6 83 10           BCS BCD_Y2ARX_18 ; $D1F8
3792   D1E8             
3793   D1E8             BCD_Y2ARX_16: ; $D1E8
3794   D1E8 EC              VEJ  (EC)
3795   D1E9 CD 4C           VMJ  ($4C) ; ($4C)($26)
3796   D1EB             
3797   D1EB             BCD_Y2ARX_17: ; $D1EB
3798   D1EB 03              ADC  (X)
3799   D1EC B7 9D           CPI  A,$9D
3800   D1EE 83 08           BCS BCD_Y2ARX_18 ; $D1F8
3801   D1F0 B7 64           CPI  A,$64
3802   D1F2 81 04           BCR BCD_Y2ARX_18 ; $D1F8
3803   D1F4 68 10           LDI  UH,$10
3804   D1F6 CD 48           VMJ  ($48) ; ($48)($24)
3805   D1F8             
3806   D1F8             BCD_Y2ARX_18: ; $D1F8
3807   D1F8 0E              STA  (X)
3808   D1F9 CD 4C           VMJ  ($4C) ; ($4C)($26)
3809   D1FB             
3810   D1FB             BCD_Y2ARX_19: ; $D1FB
3811   D1FB D5              SHR
3812   D1FC 83 02           BCS BCD_Y2ARX_20 ; $D200
3813   D1FE BB 02           ORI  A,$02
3814   D200             
3815   D200             BCD_Y2ARX_20: ; $D200
3816   D200 DB              ROL
3817   D201 FD 0A           POP  X
3818   D203 9E 60           BCH BCD_Y2ARX_9 ; $D1A5
3819   D205             
3820   D205             BCD_Y2ARX_21: ; $D205
3821   D205 D9              SHL
3822   D206 93 4E           BCS BCD_Y2ARX_12 ; $D1BA
3823   D208 D1              ROR
3824   D209 D1              ROR
3825   D20A B5 40           LDI  A,$40
3826   D20C 81 01           BCR BCD_Y2ARX_22 ; $D20F
3827   D20E D9              SHL
3828   D20F             
3829   D20F             BCD_Y2ARX_22: ; $D20F
3830   D20F AD 7A 01        EOR  (ARX + $01)
3831   D212 AE 7A 01        STA  (ARX + $01)
3832   D215             
3833   D215             BCD_Y2ARX_23: ; $D215
3834   D215 FD 0A           POP  X
3835   D217 9E 71           BCH BCD_Y2ARX_10 ; $D1A8
3836   D219             
3837   D219             BCD_Y2ARX_24: ; $D219
3838   D219 D9              SHL
3839   D21A 93 62           BCS BCD_Y2ARX_12 ; $D1BA
3840   D21C 9E 09           BCH BCD_Y2ARX_23 ; $D215
3841   D21E             
3842   D21E             BCD_Y2ARX_25: ; $D21E
3843   D21E D5              SHR
3844   D21F 93 0C           BCS BCD_Y2ARX_23 ; $D215
3845   D221 68 01           LDI  UH,$01
3846   D223 9E 10           BCH BCD_Y2ARX_23 ; $D215
3847   D225             
3848   D225             
3849   D225             
3850   D225             ;------------------------------------------------------------------------------
3851   D225             ; $D225 - Finds address of line number which contains address to which X-Reg points and 
3852   D225             ; transfers this value to search pointers (78A6 f.).
3853   D225             ;            Address: D225
3854   D225             ;         Parameters: X-Reg contains an address from the program memory for 
3855   D225             ;                     which the line start address is to be determined.
3856   D225             ; 
3857   D225             ; Modified Registers: X-Reg, Y-Reg and search pointers (78A6 f.) contain the 
3858   D225             ;                     start address found. U-Reg=78A7. Accumulator contains the 
3859   D225             ;                     low byte of the address found.
3860   D225             ;   Error conditions: Basically, the search starts from the start of the 
3861   D225             ;                     program memory. An error check as to whether the address 
3862   D225             ;                     sought is outside of the program memory is not carried 
3863   D225             ;                     out and is also not indicated by the flags when exiting.
3864   D225             ;------------------------------------------------------------------------------
3865   D225             SEARCH_LINE_ADDR: ; $D225
3866   D225 FD 5A           STX  Y
3867   D227 CD 12           VMJ  ($12)
3868   D229             
3869   D229             
3870   D229             
3871   D229             ;------------------------------------------------------------------------------
3872   D229             ; $D229 - Finds the address of the program line pointed to by Y-Reg from the address 
3873   D229             ; pointed to by X-Reg. (like D225)
3874   D229             ;            Address: D229
3875   D229             ;         Parameters: X-Reg must point to the high byte of a line number in 
3876   D229             ;                     program memory from which to search.
3877   D229             ; 
3878   D229             ; Modified Registers: like D225
3879   D229             ;   Error conditions: like D225
3880   D229             ;------------------------------------------------------------------------------
3881   D229             SEARCH_LINE_ADDR_1: ; $D229
3882   D229 FD 6A           STX  U
3883   D22B 56              DEC  Y
3884   D22C 64              INC  U
3885   D22D             
3886   D22D             SEARCH_LINE_ADDR_2: ; $D22D
3887   D22D 64              INC  U
3888   D22E 65              LIN  U
3889   D22F FD EA           ADR  U
3890   D231 FB              SEC
3891   D232 24              LDA  UL
3892   D233 10              SBC  YL
3893   D234 A4              LDA  UH
3894   D235 90              SBC  YH
3895   D236 83 09           BCS SEARCH_LINE_ADDR_4 ; $D241
3896   D238             
3897   D238             SEARCH_LINE_ADDR_3: ; $D238
3898   D238 65              LIN  U
3899   D239 DD              INC  A
3900   D23A 93 04           BCS SEARCH_LINE_ADDR_3 ; $D238
3901   D23C FD 28           LDX  U
3902   D23E 46              DEC  X
3903   D23F 9E 14           BCH SEARCH_LINE_ADDR_2 ; $D22D
3904   D241             
3905   D241             SEARCH_LINE_ADDR_4: ; $D241
3906   D241 FD 5A           STX  Y
3907   D243 CA              VEJ  (CA) \ ABYTL(SRCH_ADD_H) ; $78A6
3907   D244 A6          
3908   D245 9A              RTN
3909   D246             
3910   D246             
3911   D246             
3912   D246             ;------------------------------------------------------------------------------
3913   D246             ; $D246 - Transfer program line to input buffer
3914   D246             ;            Address: D246: Line where error occurred
3915   D246             ;                     D24E: Program line that was processed last
3916   D246             ;                     D26F: 1st program line
3917   D246             ;                     D277: transfer last program line
3918   D246             ;         Parameters: Corresponding search pointers must be set in memory map.
3919   D246             ; 
3920   D246             ; Modified Registers: X-Reg points to the high byte of the next line number. 
3921   D246             ;                     Y-Reg points to the cursor position within input buffer. 
3922   D246             ;                     U-Reg and Accumulator overwritten.
3923   D246             ;   Error conditions: None
3924   D246             ;------------------------------------------------------------------------------
3925   D246             ; $D246 - Transfer line where error occurred to input buffer
3926   D246             ERR_LINE_2_INBUF:
3927   D246 CC              VEJ  (CC) \ 
3927   D247             
3928   D247 B2                  ABYTL(ERR_ADD_H) ; $78B2
3929   D248 FD 5A           STX  Y
3930   D24A CC              VEJ  (CC) \ 
3930   D24B             
3931   D24B B6                  ABYTL(ERR_TOP_H) ; $78B6
3932   D24C 8E 06           BCH PROC_LINE_2_INBUF_1 ; $D254
3933   D24E             
3934   D24E             
3935   D24E             
3936   D24E             ;------------------------------------------------------------------------------
3937   D24E             ; $D24E - Transfer line of the instruction to be processed to input buffer
3938   D24E             ;------------------------------------------------------------------------------
3939   D24E             PROC_LINE_2_INBUF: 
3940   D24E CC              VEJ  (CC) \ 
3940   D24F             
3941   D24F A0                  ABYTL(PREV_ADD_H) ; $78A0
3942   D250 FD 5A           STX  Y
3943   D252 CC              VEJ  (CC) \ 
3943   D253             
3944   D253 A4                  ABYTL(PREV_TOP_H) ; $78A4
3945   D254                 
3946   D254             PROC_LINE_2_INBUF_1: ; $D254
3947   D254 FD 98           PSH  Y
3948   D256 BE D2 29        SJP  (SEARCH_LINE_ADDR_1) ; $D229
3949   D259 FD 0A           POP  X
3950   D25B F9              REC
3951   D25C 04              LDA  XL
3952   D25D 10              SBC  YL
3953   D25E DF              DEC  A
3954   D25F DF              DEC  A
3955   D260 DF              DEC  A
3956   D261 8B 1B           BZS LAST_LINE_2_INBUF_2 ; $D27E
3957   D263 2A              STA  UL
3958   D264 46              DEC  X
3959   D265 46              DEC  X
3960   D266 05              LDA  (X)
3961   D267 B7 E0           CPI  A,$E0
3962   D269 24              LDA  UL
3963   D26A 81 12           BCR LAST_LINE_2_INBUF_2 ; $D27E
3964   D26C DF              DEC  A
3965   D26D 8E 0F           BCH LAST_LINE_2_INBUF_2 ; $D27E
3966   D26F             
3967   D26F             
3968   D26F             
3969   D26F             ;------------------------------------------------------------------------------
3970   D26F             ; $D26F - Transfers 1st line of program to input buffer
3971   D26F             ;------------------------------------------------------------------------------
3972   D26F             FIRST_LINE_2_INBUF:
3973   D26F CD 12           VMJ  ($12)
3974   D271             
3975   D271             FIRST_LINE_2_INBUF_1: ; $D271
3976   D271 CA              VEJ  (CA) \ 
3976   D272             
3977   D272 A6                  ABYTL(SRCH_ADD_H) ; $78A6
3978   D273 FD 5A           STX  Y
3979   D275 8E 05           BCH $D27C
3980   D277             
3981   D277             
3982   D277             
3983   D277             ;------------------------------------------------------------------------------
3984   D277             ; $D277 - Transfers last line of program to input buffer
3985   D277             ; Lists line in which BREAK occurred on the LCD.
3986   D277             ;------------------------------------------------------------------------------
3987   D277             LAST_LINE_2_INBUF:
3988   D277 CC              VEJ  (CC) \ 
3988   D278             
3989   D278 67                  ABYTL(BASPRG_END_H) ; $7867
3990   D279             
3991   D279             LAST_LINE_2_INBUF_1: ; $D279
3992   D279 BE D2 25        SJP  (SEARCH_LINE_ADDR) ; $D225
3993   D27C B5 00           LDI  A,$00
3994   D27E             
3995   D27E             LAST_LINE_2_INBUF_2 ; $D27E
3996   D27E FD C8           PSH  A
3997   D280 CC              VEJ  (CC) \ 
3997   D281             
3998   D281 65                  ABYTL(BASPRG_ST_H) ; $7865
3999   D282 94              LDA  YH
4000   D283 86              CPA  XH
4001   D284 83 08           BCS LAST_LINE_2_INBUF_3 ; $D28E
4002   D286 CC              VEJ  (CC) \ 
4002   D287             
4003   D287 60                  ABYTL(ST_ROM_MOD) ; $7860
4004   D288 4A 07           LDI  XL,$07
4005   D28A 05              LDA  (X)
4006   D28B DB              ROL
4007   D28C 81 21           BCR LAST_LINE_2_INBUF_6 ; $D2AF
4008   D28E             
4009   D28E             LAST_LINE_2_INBUF_3: ; $D28E
4010   D28E BE D0 30        SJP  (INBUF_CLR_2)
4011   D291 CC              VEJ  (CC) \ 
4011   D292             
4012   D292 A6                  ABYTL(SRCH_ADD_H) ; $78A6
4013   D293 45              LIN  X
4014   D294 28              STA  UH
4015   D295 45              LIN  X
4016   D296 2A              STA  UL
4017   D297 FD 88           PSH  X
4018   D299 CD 10           VMJ  ($10) \ ABYT($40)
4018   D29B 40          
4019   D29C FD 0A           POP  X
4020   D29E 45              LIN  X
4021   D29F DF              DEC  A
4022   D2A0 B9 7F           ANI  A,$7F
4023   D2A2 2A              STA  UL
4024   D2A3 FD 98           PSH  Y
4025   D2A5             
4026   D2A5             LAST_LINE_2_INBUF_4: ; $D2A5
4027   D2A5 F5              TIN
4028   D2A6 88 03           LOP  UL,LAST_LINE_2_INBUF_4 ; $D2A5
4029   D2A8 FD 1A           POP  Y
4030   D2AA             
4031   D2AA             LAST_LINE_2_INBUF_5: ; $D2AA
4032   D2AA FD 8A           POP  A
4033   D2AC FD DA           ADR  Y
4034   D2AE 9A              RTN
4035   D2AF             
4036   D2AF             LAST_LINE_2_INBUF_6: ; $D2AF
4037   D2AF 68 1F           LDI  UH,$1F
4038   D2B1 9E 09           BCH LAST_LINE_2_INBUF_5 ; $D2AA
4039   D2B3             
4040   D2B3             
4041   D2B3             
4042   D2B3             ;------------------------------------------------------------------------------
4043   D2B3             ; $D2B3 - Transfers next line to Input buffer
4044   D2B3             ; Finds the last line number $D2B3
4045   D2B3             ;------------------------------------------------------------------------------
4046   D2B3             LINE_2_INBUF:
4047   D2B3 CC              VEJ  (CC) \ 
4047   D2B4             
4048   D2B4 A6                  ABYTL(SRCH_ADD_H) ; $78A6
4049   D2B5 44              INC  X
4050   D2B6 44              INC  X
4051   D2B7 45              LIN  X
4052   D2B8 FD CA           ADR  X
4053   D2BA 05              LDA  (X)
4054   D2BB DD              INC  A
4055   D2BC 91 4D           BCR  FIRST_LINE_2_INBUF_1 ; $D271
4056   D2BE CD 16           VMJ  ($16)
4057   D2C0 B5 FF           LDI  A,$FF
4058   D2C2 8E 07           BCH LINE_2_INBUF_2 ; $D2CB
4059   D2C4             
4060   D2C4             LINE_2_INBUF_1: ; $D2C4
4061   D2C4 F7              CIN
4062   D2C5 89 09           BZR LINE_2_INBUF_4 ; $D2D0
4063   D2C7 88 05           LOP  UL,LINE_2_INBUF_1 ; $D2C4
4064   D2C9 FD 62           DEC  UH
4065   D2CB             
4066   D2CB             LINE_2_INBUF_2: ; $D2CB
4067   D2CB 93 09           BCS LINE_2_INBUF_1 ; $D2C4
4068   D2CD             
4069   D2CD             LINE_2_INBUF_3: ; $D2CD
4070   D2CD 68 00           LDI  UH,$00
4071   D2CF 9A              RTN
4072   D2D0             
4073   D2D0             ;------------------------------------------------------------------------------
4074   D2D0             ; $D2D0 - Transfer output line to which X-Reg points to Input buffer
4075   D2D0             ; Lists program line on LCD.
4076   D2D0             ;------------------------------------------------------------------------------
4077   D2D0             LINE_2_INBUF_4:
4078   D2D0 46              DEC  X
4079   D2D1 9E 62           BCH FIRST_LINE_2_INBUF_1 ; $D271
4080   D2D3             
4081   D2D3             
4082   D2D3             
4083   D2D3             ;------------------------------------------------------------------------------
4084   D2D3             ; $D2D3 - Searches for line address according to search pointer
4085   D2D3             ;------------------------------------------------------------------------------
4086   D2D3             LINE_ADDR_SEARCH:
4087   D2D3 CD 12           VMJ  ($12)
4088   D2D5 FD 6A           STX  U
4089   D2D7 CC              VEJ  (CC) \ 
4089   D2D8             
4090   D2D8 A6                  ABYTL(SRCH_ADD_H) ; $78A6
4091   D2D9 BE DF E2        SJP  (U_MINUS_X)
4092   D2DC 93 11           BCS LINE_2_INBUF_3 ; $D2CD
4093   D2DE 9E 67           BCH LAST_LINE_2_INBUF_1 ; $D279
4094   D2E0             
4095   D2E0             
4096   D2E0             
4097   D2E0             ;------------------------------------------------------------------------------
4098   D2E0             ; $D2E0 - Searches for line number according to U-Reg from merge start
4099   D2E0             ; Searches for the line number from the start of the merge.
4100   D2E0             ;------------------------------------------------------------------------------
4101   D2E0             LINE_SEARCH: 
4102   D2E0 CC              VEJ  (CC) \ 
4102   D2E1             
4103   D2E1 69                  ABYTL(BASPRG_EDT_H) ; $7869
4104   D2E2 FD 98           PSH  Y
4105   D2E4 8E 19           BCH LINE_SEARCH_6 ; $D2FF
4106   D2E6             
4107   D2E6             ;------------------------------------------------------------------------------
4108   D2E6             ; (1A) $D2E0 - Searches according to U-Reg ; D2E6
4109   D2E6             ; Searches for line numbers according to U-Reg. Jump if an error occurs.
4110   D2E6             ;------------------------------------------------------------------------------
4111   D2E6             LINE_SEARCH_1:  
4112   D2E6 6C FF           CPI  UH,$FF
4113   D2E8 89 3D           BZR LINE_SEARCH_10 ; $D327
4114   D2EA             
4115   D2EA             ;------------------------------------------------------------------------------
4116   D2EA             ; $D2EA - Searches line number according to U-Reg from beginning of program memory
4117   D2EA             ; Searches for line number corresponding to U-Reg; updated program pointer. 
4118   D2EA             ; If not found, jump to Distance Address.
4119   D2EA             ;------------------------------------------------------------------------------
4120   D2EA             LINE_SEARCH_2:
4121   D2EA CD 12           VMJ  ($12)
4122   D2EC             
4123   D2EC             ;------------------------------------------------------------------------------
4124   D2EC             ; $D2EC - Searches for program line from U-Reg from X-Reg
4125   D2EC             ;------------------------------------------------------------------------------
4126   D2EC             LINE_SEARCH_3:
4127   D2EC FD 98           PSH  Y
4128   D2EE FD A8           PSH  U
4129   D2F0 CA              VEJ  (CA) \ 
4129   D2F1             
4130   D2F1 AA                  ABYTL(SRCH_TOP_H) ; $78AA
4131   D2F2             
4132   D2F2             LINE_SEARCH_4: ; $D2F2
4133   D2F2 FD 2A           POP  U
4134   D2F4 6C FF           CPI  UH,$FF
4135   D2F6 89 07           BZR LINE_SEARCH_6 ; $D2FF
4136   D2F8 FD 88           PSH  X
4137   D2FA E6              VEJ  (E6)
4138   D2FB FD 0A           POP  X
4139   D2FD             
4140   D2FD             LINE_SEARCH_5: ; $D2FD
4141   D2FD 68 FF           LDI  UH,$FF
4142   D2FF             
4143   D2FF             LINE_SEARCH_6: ; $D2FF
4144   D2FF BE D0 BC        SJP  (PRG_SEARCH_1) ; $D0BC
4145   D302 A5 78 A8        LDA  (SRCH_LINE_H)
4146   D305 B7 FF           CPI  A,$FF
4147   D307 81 38           BCR LINE_SEARCH_12 ; $D341
4148   D309 6C FF           CPI  UH,$FF
4149   D30B 81 11           BCR LINE_SEARCH_8 ; $D31E
4150   D30D CD 16           VMJ  ($16)
4151   D30F 81 0D           BCR LINE_SEARCH_8 ; $D31E
4152   D311 46              DEC  X
4153   D312 46              DEC  X
4154   D313 B5 FF           LDI  A,$FF
4155   D315             
4156   D315             LINE_SEARCH_7: ; $D315
4157   D315 F7              CIN
4158   D316 89 0A           BZR LINE_SEARCH_9 ; $D322
4159   D318 88 05           LOP  UL,LINE_SEARCH_7 ; $D315
4160   D31A FD 62           DEC  UH
4161   D31C 93 09           BCS LINE_SEARCH_7 ; $D315
4162   D31E             
4163   D31E             LINE_SEARCH_8: ; $D31E
4164   D31E 68 0B           LDI  UH,$0B
4165   D320 CD 4A           VMJ  ($4A) ; ($4A)($25)
4166   D322             
4167   D322             LINE_SEARCH_9: ; $D322
4168   D322 46              DEC  X
4169   D323 CA              VEJ  (CA) \ 
4169   D324             
4170   D324 AA                  ABYTL(SRCH_TOP_H) ; $78AA
4171   D325 9E 2A           BCH LINE_SEARCH_5 ; $D2FD
4172   D327             
4173   D327             LINE_SEARCH_10: ; $D327
4174   D327 CC              VEJ  (CC) \ 
4174   D328             
4175   D328 9C                  ABYTL(CURR_LINE_H) ; $789C
4176   D329 24              LDA  UL
4177   D32A 00              SBC  XL
4178   D32B A4              LDA  UH
4179   D32C 80              SBC  XH
4180   D32D 83 04           BCS LINE_SEARCH_11 ; $D333
4181   D32F CC              VEJ  (CC) \ 
4181   D330             
4182   D330 AA                  ABYTL(SRCH_TOP_H) ; $78AA
4183   D331 9E 47           BCH LINE_SEARCH_3
4184   D333             
4185   D333             LINE_SEARCH_11: ; $D333
4186   D333 FD 98           PSH  Y
4187   D335 FD A8           PSH  U
4188   D337 CC              VEJ  (CC) \ 
4188   D338             
4189   D338 9E                  ABYTL(CURR_TOP_H) ; $789E
4190   D339 CA              VEJ  (CA) \ 
4190   D33A             
4191   D33A AA                  ABYTL(SRCH_TOP_H) ; $78AA
4192   D33B 56              DEC  Y
4193   D33C CD 20           VMJ  ($20)
4194   D33E 38              NOP
4195   D33F 9E 4F           BCH LINE_SEARCH_4 ; $D2F2
4196   D341             
4197   D341             LINE_SEARCH_12: ; $D341
4198   D341 6C FF           CPI  UH,$FF
4199   D343 89 1D           BZR LINE_SEARCH_15 ; $D362
4200   D345 45              LIN  X
4201   D346 B7 22           CPI  A,$22
4202   D348 89 11           BZR LINE_SEARCH_13 ; $D35B
4203   D34A FD 88           PSH  X
4204   D34C FD 5A           STX  Y
4205   D34E CD 0C           VMJ  ($0C)
4206   D350 B5 04           LDI  A,$04
4207   D352 BE D0 F9        SJP  (COMPARE_STR) ; $D0F9
4208   D355 FD 0A           POP  X
4209   D357 68 FF           LDI  UH,$FF
4210   D359 89 14           BZR LINE_SEARCH_16 ; $D36F
4211   D35B             
4212   D35B             LINE_SEARCH_13: ; $D35B
4213   D35B 46              DEC  X
4214   D35C             
4215   D35C             LINE_SEARCH_14: ; $D35C
4216   D35C 46              DEC  X
4217   D35D 45              LIN  X
4218   D35E FD CA           ADR  X
4219   D360 9E 63           BCH LINE_SEARCH_6 ; $D2FF
4220   D362             
4221   D362             LINE_SEARCH_15: ; $D362
4222   D362 A6              CPA  UH
4223   D363 91 09           BCR  LINE_SEARCH_14 ; $D35C
4224   D365 99 49           BZR  LINE_SEARCH_8 ; $D31E
4225   D367 A5 78 A9        LDA  (SRCH_LINE_L)
4226   D36A 26              CPA  UL
4227   D36B 91 11           BCR  LINE_SEARCH_14 ; $D35C
4228   D36D 99 51           BZR  LINE_SEARCH_8 ; $D31E
4229   D36F             
4230   D36F             LINE_SEARCH_16: ; $D36F
4231   D36F CD 4E           VMJ  ($4E) ; ($4E)($27)
4232   D371             
4233   D371             
4234   D371             
4235   D371             ;------------------------------------------------------------------------------
4236   D371             ; $D371 - Reserves space for simple variables
4237   D371             ; Reserves space for simple variables and corrects variable pointers.
4238   D371             ;------------------------------------------------------------------------------
4239   D371             RES_VAR_SPACE:
4240   D371 A5 78 84        LDA  (CURVARADD_L)
4241   D374 B9 20           ANI  A,$20
4242   D376 D5              SHR
4243   D377 1A              STA  YL
4244   D378 89 04           BZR RES_VAR_SPACE_1 ; $D37E
4245   D37A 5A 08           LDI  YL,$08
4246   D37C B5 88           LDI  A,$88
4247   D37E             
4248   D37E             RES_VAR_SPACE_1: ; $D37E
4249   D37E AE 78 85        STA  (CURVARTYPE) ; $7885
4250   D381 B5 00           LDI  A,$00
4251   D383 18              STA  YH
4252   D384 2A              STA  UL
4253   D385 28              STA  UH
4254   D386             
4255   D386             ;------------------------------------------------------------------------------
4256   D386             ; $D386 - Reserves space for variables
4257   D386             ;------------------------------------------------------------------------------
4258   D386             RES_VAR_SPACE_2:
4259   D386 FD A8           PSH  U
4260   D388 F4              VEJ  (F4) \ 
4260   D389             
4261   D389 78 99               AWRD(VAR_START_H)
4262   D38B B5 07           LDI  A,$07
4263   D38D F9              REC
4264   D38E 12              ADC  YL
4265   D38F 0A              STA  XL
4266   D390 B5 00           LDI  A,$00
4267   D392 92              ADC  YH
4268   D393 08              STA  XH
4269   D394 83 39           BCS DELU_FROMX_2 ; $D3CF
4270   D396 BE DF E2        SJP  (U_MINUS_X)
4271   D399 81 34           BCR DELU_FROMX_2 ; $D3CF
4272   D39B FD 28           LDX  U
4273   D39D 46              DEC  X
4274   D39E CD 16           VMJ  ($16)
4275   D3A0 83 2D           BCS DELU_FROMX_2 ; $D3CF
4276   D3A2 44              INC  X
4277   D3A3 CA              VEJ  (CA) \ 
4277   D3A4             
4278   D3A4 99                  ABYTL($7899)
4279   D3A5 F4              VEJ  (F4) \ 
4279   D3A6             
4280   D3A6 78 83               AWRD(CURVARADD_H)
4281   D3A8 B9 7F           ANI  A,$7F
4282   D3AA 41              SIN  X
4283   D3AB 24              LDA  UL
4284   D3AC 41              SIN  X
4285   D3AD 14              LDA  YL
4286   D3AE 2A              STA  UL
4287   D3AF 94              LDA  YH
4288   D3B0 28              STA  UH
4289   D3B1 54              INC  Y
4290   D3B2 54              INC  Y
4291   D3B3 54              INC  Y
4292   D3B4 94              LDA  YH
4293   D3B5 41              SIN  X
4294   D3B6 14              LDA  YL
4295   D3B7 41              SIN  X
4296   D3B8 FD 1A           POP  Y
4297   D3BA 14              LDA  YL
4298   D3BB 41              SIN  X
4299   D3BC 94              LDA  YH
4300   D3BD 41              SIN  X
4301   D3BE A5 78 85        LDA  (CURVARTYPE) ; $7885
4302   D3C1 41              SIN  X
4303   D3C2 FD 5A           STX  Y
4304   D3C4             
4305   D3C4             
4306   D3C4             
4307   D3C4             ;------------------------------------------------------------------------------
4308   D3C4             ; $D3C4 - Delete U bytes from X-Reg
4309   D3C4             ;            Address: DC34
4310   D3C4             ;          Parameter: X-Reg points to the start address of the area to be deleted
4311   D3C4             ; 
4312   D3C4             ; Modified Registers: X-Reg, U-Reg, Accumulator
4313   D3C4             ;   Error conditions: None
4314   D3C4             ;------------------------------------------------------------------------------
4315   D3C4             ; Deletes U-bytes from X-Reg
4316   D3C4             DELU_FROMX: ; $D3C4
4317   D3C4 66              DEC  U
4318   D3C5 B5 00           LDI  A,$00
4319   D3C7             
4320   D3C7             DELU_FROMX_1: ; $D3C7
4321   D3C7 41              SIN  X
4322   D3C8 88 03           LOP  UL,DELU_FROMX_1 ; $D3C7
4323   D3CA FD 62           DEC  UH
4324   D3CC 93 07           BCS DELU_FROMX_1 ; $D3C7
4325   D3CE 9A              RTN
4326   D3CF             
4327   D3CF             DELU_FROMX_2: ; $D3CF
4328   D3CF 68 0A           LDI  UH,$0A
4329   D3D1 FB              SEC
4330   D3D2 FD 0A           POP  X
4331   D3D4 9A              RTN
4332   D3D5             
4333   D3D5             
4334   D3D5             
4335   D3D5             ;------------------------------------------------------------------------------
4336   D3D5             ; $D3D5 - Conversion decimal to hexadecimal
4337   D3D5             ;            Address:	D3D5
4338   D3D5             ;   Entry parameters: Y-Reg points to 1st ASCII character of decimal number. 
4339   D3D5             ;                     Leading zeros are skipped.
4340   D3D5             ; 
4341   D3D5             ; Modified registers: U-Reg contains hex result. (0000-FEFF).
4342   D3D5             ;                     Y-Reg points to address after last decimal number.
4343   D3D5             ;   Error conditions: If the value range is not complied with, 
4344   D3D5             ;                     error code 1E UH is loaded and the carry flag is set.
4345   D3D5             ;------------------------------------------------------------------------------
4346   D3D5             DEC_2_HEX: ; $D3D5
4347   D3D5 4A 00           LDI  XL,$00
4348   D3D7 48 00           LDI  XH,$00
4349   D3D9             
4350   D3D9             DEC_2_HEX_1: ; $D3D9
4351   D3D9 FD 88           PSH  X
4352   D3DB CD 02           VMJ  ($02) \ 
4352   D3DD             
4353   D3DD 30                  ABYT($30) \ 
4353   D3DE             
4354   D3DE 3A                  ABYT($3A) \ 
4354   D3DF             
4355   D3DF 1E                  ABRF(DEC_2_HEX_2) ; $D3FE
4356   D3E0 FD 0A           POP  X
4357   D3E2 FD 98           PSH  Y
4358   D3E4 FD C8           PSH  A
4359   D3E6 FD 5A           STX  Y
4360   D3E8 6A 0A           LDI  UL,$0A
4361   D3EA CD 50           VMJ  ($50) ; ($50)($28)
4362   D3EC FD 8A           POP  A
4363   D3EE 68 1E           LDI  UH,$1E
4364   D3F0 FD 1A           POP  Y
4365   D3F2 83 12           BCS DEC_2_HEX_3 ; $D406
4366   D3F4 4C FF           CPI  XH,$FF
4367   D3F6 8B 0E           BZS DEC_2_HEX_3 ; $D406
4368   D3F8 B9 0F           ANI  A,$0F
4369   D3FA FD CA           ADR  X
4370   D3FC 9E 25           BCH DEC_2_HEX_1 ; $D3D9
4371   D3FE             
4372   D3FE             DEC_2_HEX_2: ; $D3FE
4373   D3FE C6              VEJ  (C6)
4374   D3FF FD 2A           POP  U
4375   D401 24              LDA  UL
4376   D402 F9              REC
4377   D403 89 01           BZR DEC_2_HEX_3 ; $D406
4378   D405 A4              LDA  UH
4379   D406             
4380   D406             DEC_2_HEX_3: ; $D406
4381   D406 9A              RTN
4382   D407             
4383   D407             
4384   D407             
4385   D407             ;------------------------------------------------------------------------------
4386   D407             ; $D407 - Retrieves the encoded name of variable pointed to by Y-Reg
4387   D407             ;            Address: D407
4388   D407             ;                     1 Data byte
4389   D407             ;   Entry parameters: Y-Reg points to 1st byte of variable name in main memory
4390   D407             ; 
4391   D407             ; Modified registers: X-Reg contains return address
4392   D407             ;                     Y-Reg points to the index or byte after variable name.
4393   D407             ;                     U-Reg contains encoded variable names.
4394   D407             ;   Error conditions: If variable name is not allowed, branch to offset (D1).
4395   D407             ;------------------------------------------------------------------------------
4396   D407             GET_VAR_NAME: ; $D407
4397   D407 C0              VEJ  (C0)
4398   D408 CD 00           VMJ  ($00) \ 
4398   D40A             
4399   D40A 40                  ABYT($40) \ 
4399   D40B             
4400   D40B 5B                  ABYT($5B) \ 
4400   D40C             
4401   D40C 22                  ABRF(GET_VAR_NAME_5) ; $D42F
4402   D40D             
4403   D40D             
4404   D40D             
4405   D40D             ;------------------------------------------------------------------------------
4406   D40D             ; $D40D - Find encoded variable name whose 1st letter is in UL and 2nd letter in Y-Reg.
4407   D40D             ;            Address: D40D
4408   D40D             ;                     1 Data byte
4409   D40D             ;   Entry parameters: Y-Reg points to 2nd letters of variable. UL=1st letter
4410   D40D             ; 
4411   D40D             ; Modified registers: Like D407
4412   D40D             ;   Error conditions: Like D407
4413   D40D             ;------------------------------------------------------------------------------
4414   D40D             GET_VAR_NAME_1: ; $D40D
4415   D40D 24              LDA  UL
4416   D40E 08              STA  XH
4417   D40F 4A 00           LDI  XL,$00
4418   D411             
4419   D411             GET_VAR_NAME_2: ; $D411
4420   D411 FD 88           PSH  X
4421   D413 CD 02           VMJ  ($02) \ ABYT($41) \ ABYT($5B) \ ABRF(GET_VAR_NAME_3) ; $D41A
4421   D415 41          
4421   D416 5B          
4421   D417 02          
4422   D418 8E 08           BCH GET_VAR_NAME_4 ; $D422
4423   D41A             
4424   D41A             GET_VAR_NAME_3: ; $D41A
4425   D41A CD 00           VMJ  ($00) \ ABYT($30) \ ABYT($3A) \ ABRF(GET_VAR_NAME_7) ; $D43B
4425   D41C 30          
4425   D41D 3A          
4425   D41E 1C          
4426   D41F B9 DF           ANI  A,$DF
4427   D421 2A              STA  UL
4428   D422             
4429   D422             GET_VAR_NAME_4: ; $D422
4430   D422 FD 0A           POP  X
4431   D424 4C 40           CPI  XH,$40
4432   D426 8B 31           BZS GET_VAR_NAME_10 ; $D459
4433   D428 04              LDA  XL
4434   D429 99 1A           BZR GET_VAR_NAME_2 ; $D411
4435   D42B 24              LDA  UL
4436   D42C 0A              STA  XL
4437   D42D 9E 1E           BCH GET_VAR_NAME_2 ; $D411
4438   D42F             
4439   D42F             GET_VAR_NAME_5: ; $D42F
4440   D42F C4              VEJ  (C4) \ AWRD($F15B) \ ABRF(GET_VAR_NAME_6) ; $D435
4440   D430 F1 5B       
4440   D432 02          
4441   D433 CD 4C           VMJ  ($4C) ; ($4C)($26)
4442   D435             
4443   D435             GET_VAR_NAME_6: ; $D435
4444   D435 A4              LDA  UH
4445   D436 2A              STA  UL
4446   D437 68 15           LDI  UH,$15
4447   D439 CD 48           VMJ  ($48) ; ($48)($24)
4448   D43B             
4449   D43B             GET_VAR_NAME_7: ; $D43B
4450   D43B C4              VEJ  (C4) \ ACHR($24) \ ABRF(GET_VAR_NAME_8) ; $D447
4450   D43C 24          
4450   D43D 09          
4451   D43E FD 2A           POP  U
4452   D440 B5 20           LDI  A,$20
4453   D442 FD EA           ADR  U
4454   D444 FD A8           PSH  U
4455   D446 C0              VEJ  (C0)
4456   D447             
4457   D447             GET_VAR_NAME_8: ; $D447
4458   D447 C4              VEJ  (C4) \ ACHR($28) \ ABRF(GET_VAR_NAME_9) ; $D452
4458   D448 28          
4458   D449 08          
4459   D44A FD 2A           POP  U
4460   D44C B5 80           LDI  A,$80
4461   D44E FD EA           ADR  U
4462   D450 CD 4C           VMJ  ($4C) ; ($4C)($26)
4463   D452             
4464   D452             GET_VAR_NAME_9: ; $D452
4465   D452 C6              VEJ  (C6)
4466   D453 FD 2A           POP  U
4467   D455 6C 40           CPI  UH,$40
4468   D457 C9 4C           VZR  ($4C) ; ($4C)($26)
4469   D459             
4470   D459             GET_VAR_NAME_10: ; $D459
4471   D459 68 14           LDI  UH,$14
4472   D45B CD 48           VMJ  ($48) ; ($48)($24)
4473   D45D             
4474   D45D             
4475   D45D             
4476   D45D             ;------------------------------------------------------------------------------
4477   D45D             ; $D45D (CE) - Gets the address of the variable whose name is pointed to by Y-Reg
4478   D45D             ;            Address: D45D (CE)
4479   D45D             ;                     2 Data bytes
4480   D45D             ;                     D1 = selection of permitted variable types
4481   D45D             ;                     14: Array variable must not yet be dimensioned
4482   D45D             ;                     58: all variable types allowed
4483   D45D             ;                     48: only string variables allowed
4484   D45D             ;                     68: only numeric variables allowed.
4485   D45D             ;   Entry parameters: X-Reg contains return address
4486   D45D             ; 
4487   D45D             ; Modified registers: Y-Reg points to next byte in main memory
4488   D45D             ;                     U-Reg contains the start address of the variable.
4489   D45D             ;                     AR-X may contain CSI or BCD value of searched var.
4490   D45D             ;   Error conditions: This subroutine can produce a variety of error
4491   D45D             ;                     conditions depending on the preselected data byte 1 and 
4492   D45D             ;                     the variable type. If an error is detected, then a
4493   D45D             ;                     branch is made to the offset address defined by D2.
4494   D45D             ;------------------------------------------------------------------------------
4495   D45D             GET_VAR_ADDR: ; $D45D
4496   D45D BE D4 07        SJP  (GET_VAR_NAME) ; $D407
4497   D460 58              .BYTE $58
4498   D461             
4499   D461             ;------------------------------------------------------------------------------
4500   D461             ; $D461 (0E) - Find address of the variable whose name is stored in U-Reg
4501   D461             ;            Address: D461 (0E)
4502   D461             ;                     2 Data bytes (see (CE))
4503   D461             ;   Entry parameters: U-Reg contains variable name
4504   D461             ;
4505   D461             ; Modified registers: Like (CE)
4506   D461             ;   Error conditions: Like (CE)
4507   D461             ;------------------------------------------------------------------------------
4508   D461             GET_VAR_ADDR_1: ; $D461
4509   D461 FD 0A           POP  X
4510   D463 45              LIN  X
4511   D464 FD 88           PSH  X
4512   D466 46              DEC  X
4513   D467 FD C8           PSH  A
4514   D469 24              LDA  UL
4515   D46A B9 A0           ANI  A,$A0
4516   D46C 0D              EOR  (X)
4517   D46D BF C0           BII  A,$C0
4518   D46F 8B 9B           BZS GET_VAR_ADDR_16 ; $D50C
4519   D471 BF 30           BII  A,$30
4520   D473 8B 97           BZS GET_VAR_ADDR_16 ; $D50C
4521   D475 6C 40           CPI  UH,$40
4522   D477 8B 97           BZS GET_VAR_ADDR_17 ; $D510
4523   D479 6C 5B           CPI  UH,$5B
4524   D47B 81 03           BCR GET_VAR_ADDR_2 ; $D480
4525   D47D BA D5 D8        JMP  DEFAULT_VAR_14 ; $D5D8
4526   D480             
4527   D480             GET_VAR_ADDR_2: ; $D480
4528   D480 24              LDA  UL
4529   D481 B9 DF           ANI  A,$DF
4530   D483 89 30           BZR GET_VAR_ADDR_6 ; $D4B5
4531   D485             
4532   D485             GET_VAR_ADDR_3: ; $D485
4533   D485 A4              LDA  UH
4534   D486 B9 1F           ANI  A,$1F
4535   D488 4A F8           LDI  XL,$F8
4536   D48A 48 78           LDI  XH,$78
4537   D48C 6E 20           CPI  UL,$20
4538   D48E 81 13           BCR GET_VAR_ADDR_5 ; $D4A3
4539   D490 4A B0           LDI  XL,$B0
4540   D492 B7 05           CPI  A,$05
4541   D494 81 0C           BCR GET_VAR_ADDR_4 ; $D4A2
4542   D496 4A 00           LDI  XL,$00
4543   D498 48 76           LDI  XH,$76
4544   D49A B7 10           CPI  A,$10
4545   D49C 81 04           BCR GET_VAR_ADDR_4 ; $D4A2
4546   D49E 4A 50           LDI  XL,$50
4547   D4A0 48 77           LDI  XH,$77
4548   D4A2             
4549   D4A2             GET_VAR_ADDR_4: ; $D4A2
4550   D4A2 D9              SHL
4551   D4A3             
4552   D4A3             GET_VAR_ADDR_5: ; $D4A3
4553   D4A3 D9              SHL
4554   D4A4 D9              SHL
4555   D4A5 D9              SHL
4556   D4A6 FD CA           ADR  X
4557   D4A8 68 00           LDI  UH,$00
4558   D4AA FD 8A           POP  A
4559   D4AC FD C8           PSH  A
4560   D4AE D1              ROR
4561   D4AF 24              LDA  UL
4562   D4B0 83 4E           BCS GET_VAR_ADDR_14 ; $D500
4563   D4B2 BA D5 E6        JMP  DEFAULT_VAR_16 ; $D5E6
4564   D4B5             
4565   D4B5             GET_VAR_ADDR_6: ; $D4B5
4566   D4B5 CC              VEJ  (CC) \ 
4566   D4B6             
4567   D4B6 99                  ABYTL(VAR_START_H) ; $7899
4568   D4B7 8E 11           BCH GET_VAR_ADDR_9 ; $D4CA
4569   D4B9 FD 0A           POP  X
4570   D4BB BA DC F6        JMP  RTN_2_MAIN_3 ; $DCF6
4571   D4BE             
4572   D4BE             GET_VAR_ADDR_7: ; $D4BE
4573   D4BE 44              INC  X
4574   D4BF             
4575   D4BF             GET_VAR_ADDR_8: ; $D4BF
4576   D4BF 45              LIN  X
4577   D4C0 FD C8           PSH  A
4578   D4C2 45              LIN  X
4579   D4C3 F9              REC
4580   D4C4 02              ADC  XL
4581   D4C5 0A              STA  XL
4582   D4C6 FD 8A           POP  A
4583   D4C8 82              ADC  XH
4584   D4C9 08              STA  XH
4585   D4CA             
4586   D4CA             GET_VAR_ADDR_9: ; $D4CA
4587   D4CA A7 78 64        CPA  (RAM_END_H)
4588   D4CD 83 DA           BCS DEFAULT_VAR_12 ; $D5A9
4589   D4CF 45              LIN  X
4590   D4D0 A6              CPA  UH
4591   D4D1 99 15           BZR  GET_VAR_ADDR_7 ; $D4BE
4592   D4D3 45              LIN  X
4593   D4D4 26              CPA  UL
4594   D4D5 99 18           BZR  GET_VAR_ADDR_8 ; $D4BF
4595   D4D7 FD 8A           POP  A
4596   D4D9 FD C8           PSH  A
4597   D4DB D5              SHR
4598   D4DC 83 10           BCS GET_VAR_ADDR_11 ; $D4EE
4599   D4DE 44              INC  X
4600   D4DF 44              INC  X
4601   D4E0 D5              SHR
4602   D4E1 83 78           BCS DEFAULT_VAR_6 ; $D55B
4603   D4E3 D5              SHR
4604   D4E4 81 60           BCR DEFAULT_VAR_3 ; $D546
4605   D4E6 68 05           LDI  UH,$05
4606   D4E8 8E BB           BCH DEFAULT_VAR_11 ; $D5A5
4607   D4EA             
4608   D4EA             GET_VAR_ADDR_10: ; $D4EA
4609   D4EA 68 01           LDI  UH,$01
4610   D4EC 8E B7           BCH DEFAULT_VAR_11 ; $D5A5
4611   D4EE             
4612   D4EE             GET_VAR_ADDR_11: ; $D4EE
4613   D4EE 6E 80           CPI  UL,$80
4614   D4F0             
4615   D4F0             GET_VAR_ADDR_12: ; $D4F0
4616   D4F0 68 01           LDI  UH,$01
4617   D4F2 81 0C           BCR GET_VAR_ADDR_14 ; $D500
4618   D4F4 68 21           LDI  UH,$21
4619   D4F6             
4620   D4F6             GET_VAR_ADDR_13: ; $D4F6
4621   D4F6 55              LIN  Y
4622   D4F7 B7 2A           CPI  A,$2A
4623   D4F9 99 11           BZR GET_VAR_ADDR_10 ; $D4EA
4624   D4FB 55              LIN  Y
4625   D4FC B7 29           CPI  A,$29
4626   D4FE 99 16           BZR GET_VAR_ADDR_10 ; $D4EA
4627   D500             
4628   D500             GET_VAR_ADDR_14: ; $D500
4629   D500 FD 8A           POP  A
4630   D502 24              LDA  UL
4631   D503 B9 20           ANI  A,$20
4632   D505 D5              SHR
4633   D506 D5              SHR
4634   D507 A2              ADC  UH
4635   D508 FD 6A           STX  U
4636   D50A             
4637   D50A             GET_VAR_ADDR_15: ; $D50A
4638   D50A CD 4C           VMJ  ($4C) ; ($4C)($26)
4639   D50C             
4640   D50C             GET_VAR_ADDR_16: ; $D50C
4641   D50C 68 07           LDI  UH,$07
4642   D50E 8E 95           BCH DEFAULT_VAR_11 ; $D5A5
4643   D510             
4644   D510             GET_VAR_ADDR_17: ; $D510
4645   D510 FD 8A           POP  A
4646   D512 FD C8           PSH  A
4647   D514 B9 07           ANI  A,$07
4648   D516 8B 1B           BZS DEFAULT_VAR_1 ; $D533
4649   D518 D5              SHR
4650   D519 91 0F           BCR GET_VAR_ADDR_16 ; $D50C
4651   D51B 4A C0           LDI  XL,$C0
4652   D51D 48 78           LDI  XH,$78
4653   D51F 68 10           LDI  UH,$10
4654   D521 6E A0           CPI  UL,$A0
4655   D523 93 2F           BCS GET_VAR_ADDR_13 ; $D4F6
4656   D525 0A              STA  XL
4657   D526 48 79           LDI  XH,$79
4658   D528 9E 34           BCH GET_VAR_ADDR_13 ; $D4F6
4659   D52A             
4660   D52A             
4661   D52A             
4662   D52A             ;------------------------------------------------------------------------------
4663   D52A             ; $D52A - Determines indexed default variable
4664   D52A             ;------------------------------------------------------------------------------
4665   D52A             DEFAULT_VAR:
4666   D52A FD C8           PSH  A
4667   D52C FD A8           PSH  U
4668   D52E CD 28           VMJ  ($28) \ 
4668   D530             
4669   D530 C4                  ABRF(DEFAULT_VAR_19) ; $D5F5
4670   D531 8E 07           BCH DEFAULT_VAR_2 ; $D53A
4671   D533             
4672   D533             DEFAULT_VAR_1: ; $D533
4673   D533 FD A8           PSH  U
4674   D535 DE              VEJ  (DE) \ 
4674   D536             
4675   D536 BE                  ABRF(DEFAULT_VAR_19) ; $D5F5
4676   D537 C2              VEJ  (C2) \ 
4676   D538             
4677   D538 29                  ACHR($29) \ 
4677   D539             
4678   D539 B9                  ABRF(DEFAULT_VAR_18) ; $D5F3
4679   D53A             
4680   D53A             DEFAULT_VAR_2: ; $D53A
4681   D53A D0              VEJ  (D0) \ 
4681   D53B             
4682   D53B 0F                  ABYT($0F) \ 
4682   D53C             
4683   D53C B8                  ABRF(DEFAULT_VAR_19) ; $D5F5
4684   D53D FD 2A           POP  U
4685   D53F 28              STA  UH
4686   D540 24              LDA  UL
4687   D541 D9              SHL
4688   D542 D5              SHR
4689   D543 2A              STA  UL
4690   D544 9E C1           BCH GET_VAR_ADDR_3 ; $D485
4691   D546             
4692   D546             DEFAULT_VAR_3: ; $D546
4693   D546 6E 80           CPI  UL,$80
4694   D548 83 19           BCS DEFAULT_VAR_7 ; $D563
4695   D54A 44              INC  X
4696   D54B 44              INC  X
4697   D54C 45              LIN  X
4698   D54D             
4699   D54D             DEFAULT_VAR_4: ; $D54D
4700   D54D CD 24           VMJ  ($24)
4701   D54F FD 6A           STX  U
4702   D551 FD 8A           POP  A
4703   D553 BF 08           BII  A,$08
4704   D555 89 02           BZR DEFAULT_VAR_5 ; $D559
4705   D557 CD 0A           VMJ  ($0A)
4706   D559             
4707   D559             DEFAULT_VAR_5: ; $D559
4708   D559 CD 4C           VMJ  ($4C) ; ($4C)($26)
4709   D55B             
4710   D55B             DEFAULT_VAR_6: ; $D55B
4711   D55B FD 88           PSH  X
4712   D55D BE D7 CA        SJP  (GET_VAR_INDEX) ; $D7CA
4713   D560 94              LDA  YH
4714   D561 8E 05           BCH DEFAULT_VAR_8 ; $D568
4715   D563             
4716   D563             DEFAULT_VAR_7: ; $D563
4717   D563 FD 88           PSH  X
4718   D565 CD 2C           VMJ  ($2C) \ 
4718   D567             
4719   D567 8D                  ABRF(DEFAULT_VAR_19) ; $D5F5
4720   D568             
4721   D568             DEFAULT_VAR_8: ; $D568
4722   D568 FD 0A           POP  X
4723   D56A FD 98           PSH  Y
4724   D56C 45              LIN  X
4725   D56D 1A              STA  YL
4726   D56E 26              CPA  UL
4727   D56F 81 30           BCR DEFAULT_VAR_9 ; $D5A1
4728   D571 45              LIN  X
4729   D572 A6              CPA  UH
4730   D573 81 2C           BCR DEFAULT_VAR_9 ; $D5A1
4731   D575 45              LIN  X
4732   D576 FD C8           PSH  A
4733   D578 FD 88           PSH  X
4734   D57A FD C8           PSH  A
4735   D57C 24              LDA  UL
4736   D57D FD C8           PSH  A
4737   D57F A4              LDA  UH
4738   D580 2A              STA  UL
4739   D581 58 00           LDI  YH,$00
4740   D583 68 00           LDI  UH,$00
4741   D585 54              INC  Y
4742   D586 CD 50           VMJ  ($50) ; ($50)($28)
4743   D588 FD 8A           POP  A
4744   D58A FD DA           ADR  Y
4745   D58C FD 8A           POP  A
4746   D58E B9 7F           ANI  A,$7F
4747   D590 2A              STA  UL
4748   D591 CD 50           VMJ  ($50) ; ($50)($28)
4749   D593 FD 0A           POP  X
4750   D595 14              LDA  YL
4751   D596 02              ADC  XL
4752   D597 0A              STA  XL
4753   D598 94              LDA  YH
4754   D599 82              ADC  XH
4755   D59A 08              STA  XH
4756   D59B FD 8A           POP  A
4757   D59D FD 1A           POP  Y
4758   D59F 9E 54           BCH DEFAULT_VAR_4 ; $D54D
4759   D5A1             
4760   D5A1             DEFAULT_VAR_9: ; $D5A1
4761   D5A1 68 09           LDI  UH,$09
4762   D5A3             
4763   D5A3             DEFAULT_VAR_10: ; $D5A3
4764   D5A3 FD 1A           POP  Y
4765   D5A5             
4766   D5A5             DEFAULT_VAR_11 ; $D5A5
4767   D5A5 FD 8A           POP  A
4768   D5A7 CD 48           VMJ  ($48) ; ($48)($24)
4769   D5A9             
4770   D5A9             DEFAULT_VAR_12: ; $D5A9
4771   D5A9 6E 80           CPI  UL,$80
4772   D5AB FD 8A           POP  A
4773   D5AD 81 08           BCR DEFAULT_VAR_13 ; $D5B7
4774   D5AF BF 04           BII  A,$04
4775   D5B1 99 A9           BZR GET_VAR_ADDR_15 ; $D50A
4776   D5B3 68 06           LDI  UH,$06
4777   D5B5 CD 48           VMJ  ($48) ; ($48)($24)
4778   D5B7             
4779   D5B7             DEFAULT_VAR_13: ; $D5B7
4780   D5B7 FD C8           PSH  A
4781   D5B9 B9 07           ANI  A,$07
4782   D5BB 8B 23           BZS DEFAULT_VAR_15 ; $D5E0
4783   D5BD ED 78 79 80     BII  (CASS_FLAG),$80
4784   D5C1 8B 2C           BZS DEFAULT_VAR_17 ; $D5EF
4785   D5C3 DA              VEJ  (DA)
4786   D5C4 FD 98           PSH  Y
4787   D5C6 BE D3 71        SJP  (RES_VAR_SPACE) ; $D371
4788   D5C9 93 28           BCS DEFAULT_VAR_10 ; $D5A3
4789   D5CB FD 18           LDX  Y
4790   D5CD FD 1A           POP  Y
4791   D5CF A5 78 84        LDA  (CURVARADD_L)
4792   D5D2 2A              STA  UL
4793   D5D3 46              DEC  X
4794   D5D4 46              DEC  X
4795   D5D5 46              DEC  X
4796   D5D6 9E E8           BCH GET_VAR_ADDR_12 ; $D4F0
4797   D5D8             
4798   D5D8             DEFAULT_VAR_14: ; $D5D8
4799   D5D8 FD 8A           POP  A
4800   D5DA FD C8           PSH  A
4801   D5DC B9 07           ANI  A,$07
4802   D5DE 99 D4           BZR GET_VAR_ADDR_16 ; $D50C
4803   D5E0             
4804   D5E0             DEFAULT_VAR_15: ; $D5E0
4805   D5E0 A4              LDA  UH
4806   D5E1 BB 80           ORI  A,$80
4807   D5E3 08              STA  XH
4808   D5E4 24              LDA  UL
4809   D5E5 0A              STA  XL
4810   D5E6             
4811   D5E6             DEFAULT_VAR_16: ; $D5E6
4812   D5E6 B9 20           ANI  A,$20
4813   D5E8 D5              SHR
4814   D5E9 99 9E           BZR DEFAULT_VAR_4 ; $D54D
4815   D5EB B5 88           LDI  A,$88
4816   D5ED 9E A2           BCH DEFAULT_VAR_4 ; $D54D
4817   D5EF             
4818   D5EF             DEFAULT_VAR_17: ; $D5EF
4819   D5EF 68 15           LDI  UH,$15
4820   D5F1 9E 4E           BCH DEFAULT_VAR_11 ; $D5A5
4821   D5F3             
4822   D5F3             DEFAULT_VAR_18: ; $D5F3
4823   D5F3 68 01           LDI  UH,$01
4824   D5F5             
4825   D5F5             DEFAULT_VAR_19: ; $D5F5
4826   D5F5 FD 0A           POP  X
4827   D5F7 9E 54           BCH DEFAULT_VAR_11 ; $D5A5
4828   D5F9             
4829   D5F9             
4830   D5F9             
4831   D5F9             ;------------------------------------------------------------------------------
4832   D5F9             ; $D5F9 (D0) - Convert AR-X to integer and load to U-Reg. D1 specifies the area. 
4833   D5F9             ; If exceeded, jump
4834   D5F9             ;------------------------------------------------------------------------------
4835   D5F9             ARX_2_INT:
4836   D5F9 FD 0A           POP  X 
4837   D5FB 45              LIN  X
4838   D5FC FD 88           PSH  X
4839   D5FE FD 98           PSH  Y
4840   D600 FD C8           PSH  A
4841   D602 5A 00           LDI  YL,$00
4842   D604 58 00           LDI  YH,$00
4843   D606 A5 7A 04        LDA  (ARX + $04)
4844   D609 B7 B2           CPI  A,$B2
4845   D60B 81 33           BCR ARX_2_INT_2 ; $D640
4846   D60D 89 11           BZR ARX_2_INT_1 ; $D620
4847   D60F DC              VEJ  (DC)
4848   D610 FD 5A           STX  Y
4849   D612 5C 80           CPI  YH,$80
4850   D614 81 31           BCR ARX_2_INT_3 ; $D647
4851   D616 FD 8A           POP  A
4852   D618 B9 1F           ANI  A,$1F
4853   D61A B7 04           CPI  A,$04
4854   D61C CB 4E           VZS  ($4E) ; ($4E)($27)
4855   D61E 8E 2B           BCH ARX_2_INT_4 ; $D64B
4856   D620             
4857   D620             ARX_2_INT_1: ; $D620
4858   D620 2A              STA  UL
4859   D621 FD 8A           POP  A
4860   D623 DB              ROL
4861   D624 68 11           LDI  UH,$11
4862   D626 81 83           BCR ARX_2_INT_12 ; $D6AB
4863   D628 6E C1           CPI  UL,$C1
4864   D62A 68 FF           LDI  UH,$FF
4865   D62C 89 3C           BZR ARX_2_INT_7 ; $D66A
4866   D62E DB              ROL
4867   D62F 81 39           BCR ARX_2_INT_7 ; $D66A
4868   D631 D1              ROR
4869   D632 D5              SHR
4870   D633 FD C8           PSH  A
4871   D635 DC              VEJ  (DC)
4872   D636 8B 0F           BZS ARX_2_INT_3 ; $D647
4873   D638 05              LDA  (X)
4874   D639 1A              STA  YL
4875   D63A 04              LDA  XL
4876   D63B AE 78 94        STA  (STR_BUF_PTR_L)
4877   D63E 8E 07           BCH ARX_2_INT_3 ; $D647
4878   D640             
4879   D640             ARX_2_INT_2: ; $D640
4880   D640 A5 7A 00        LDA  (ARX)
4881   D643 2A              STA  UL
4882   D644 D9              SHL
4883   D645 81 2F           BCR ARX_2_INT_9 ; $D676
4884   D647             
4885   D647             ARX_2_INT_3: ; $D647
4886   D647 FD 8A           POP  A
4887   D649 B9 1F           ANI  A,$1F
4888   D64B             
4889   D64B             ARX_2_INT_4: ; $D64B
4890   D64B D5              SHR
4891   D64C 81 08           BCR ARX_2_INT_5 ; $D656
4892   D64E 5E 00           CPI  YL,$00
4893   D650 89 04           BZR ARX_2_INT_5 ; $D656
4894   D652 5C 00           CPI  YH,$00
4895   D654 8B 53           BZS ARX_2_INT_11 ; $D6A9
4896   D656             
4897   D656             ARX_2_INT_5: ; $D656
4898   D656 D9              SHL
4899   D657 4A AD           LDI  XL,$AD
4900   D659 48 D6           LDI  XH,$D6
4901   D65B FD CA           ADR  X
4902   D65D 45              LIN  X
4903   D65E 12              ADC  YL
4904   D65F 05              LDA  (X)
4905   D660 92              ADC  YH
4906   D661 83 46           BCS ARX_2_INT_11 ; $D6A9
4907   D663 14              LDA  YL
4908   D664 2A              STA  UL
4909   D665 94              LDA  YH
4910   D666 28              STA  UH
4911   D667             
4912   D667             ARX_2_INT_6: ; $D667
4913   D667 BE D9 E7        SJP  (ARUINT2ARX)
4914   D66A             
4915   D66A             ARX_2_INT_7: ; $D66A
4916   D66A CD 4E           VMJ  ($4E) ; ($4E)($27)
4917   D66C             
4918   D66C             ARX_2_INT_8: ; $D66C
4919   D66C FD A8           PSH  U
4920   D66E 6A 0A           LDI  UL,$0A
4921   D670 CD 50           VMJ  ($50) ; ($50)($28)
4922   D672 FD 2A           POP  U
4923   D674 83 31           BCS ARX_2_INT_10 ; $D6A7
4924   D676             
4925   D676             ARX_2_INT_9: ; $D676
4926   D676 4A 04           LDI  XL,$04
4927   D678 48 7A           LDI  XH,$7A
4928   D67A D7              DRL  (X)
4929   D67B 46              DEC  X
4930   D67C D7              DRL  (X)
4931   D67D 46              DEC  X
4932   D67E D7              DRL  (X)
4933   D67F B9 F0           ANI  A,$F0
4934   D681 F1              AEX
4935   D682 12              ADC  YL
4936   D683 1A              STA  YL
4937   D684 B5 00           LDI  A,$00
4938   D686 28              STA  UH
4939   D687 92              ADC  YH
4940   D688 18              STA  YH
4941   D689 83 1C           BCS ARX_2_INT_10 ; $D6A7
4942   D68B 88 21           LOP  UL,ARX_2_INT_8 ; $D66C
4943   D68D 28              STA  UH
4944   D68E 14              LDA  YL
4945   D68F 2A              STA  UL
4946   D690 ED 7A 01 80     BII  (ARX + $01),$80
4947   D694 9B 4F           BZS ARX_2_INT_3 ; $D647
4948   D696 BE DA A8        SJP  (TWOSCOMP)
4949   D699 6C 80           CPI  UH,$80
4950   D69B 81 0A           BCR ARX_2_INT_10 ; $D6A7
4951   D69D FD 8A           POP  A
4952   D69F B9 1F           ANI  A,$1F
4953   D6A1 B7 04           CPI  A,$04
4954   D6A3 9B 3E           BZS ARX_2_INT_6 ; $D667
4955   D6A5 8E 02           BCH ARX_2_INT_11 ; $D6A9
4956   D6A7             
4957   D6A7             ARX_2_INT_10: ; $D6A7
4958   D6A7 FD 8A           POP  A
4959   D6A9             
4960   D6A9             ARX_2_INT_11: ; $D6A9
4961   D6A9 68 13           LDI  UH,$13
4962   D6AB             
4963   D6AB             ARX_2_INT_12: ; $D6AB
4964   D6AB CD 4A           VMJ  ($4A) ; ($4A)($25)
4965   D6AD             
4966   D6AD             ARX_2_INT_13:; Parameters for subroutine (D0) ; D6AD 
4967   D6AD 00 00 00 01     .BYTE $00,$00,$00,$01,$00,$80,$00,$80
4967   D6B1 00 80 00 80 
4968   D6B5 00 FF 64 FF     .BYTE $00,$FF,$64,$FF,$AF,$FF,$E5,$FF
4968   D6B9 AF FF E5 FF 
4969   D6BD E6 FF 38        .BYTE $E6,$FF,$38
4970   D6C0             
4971   D6C0             
4972   D6C0             
4973   D6C0             ;------------------------------------------------------------------------------
4974   D6C0             ; (2E) $DC60 - Calculates formula expression and transfers result to AR-X.
4975   D6C0             ;------------------------------------------------------------------------------
4976   D6C0             CALC_EXPR: 
4977   D6C0 FD 98           PSH  Y 
4978   D6C2 BE D3 D5        SJP  (DEC_2_HEX)
4979   D6C5 83 16           BCS CALC_EXPR_2 ; $D6DD
4980   D6C7 8B 14           BZS CALC_EXPR_2 ; $D6DD
4981   D6C9 BE D9 E7        SJP  (ARUINT2ARX)
4982   D6CC C2              VEJ  (C2) \ ACHR($2E) \ ABRF($D6D1)
4982   D6CD 2E          
4982   D6CE 02          
4983   D6CF 8E 0C           BCH CALC_EXPR_2 ; $D6DD
4984   D6D1 C4              VEJ  (C4) \ ACHR($45) \ ABRF($D6D6)
4984   D6D2 45          
4984   D6D3 02          
4985   D6D4 8E 07           BCH CALC_EXPR_2 ; $D6DD
4986   D6D6 FD 0A           POP  X
4987   D6D8 C6              VEJ  (C6)
4988   D6D9             
4989   D6D9             CALC_EXPR_1:  ; $D6D9
4990   D6D9 B5 02           LDI  A,$02
4991   D6DB 8E 04           BCH CALC_EXPR_4 ; $D6E1
4992   D6DD             
4993   D6DD             CALC_EXPR_2:  ; $D6DD
4994   D6DD FD 1A           POP  Y
4995   D6DF             
4996   D6DF             ;------------------------------------------------------------------------------
4997   D6DF             ; $D6DF - (DE) Calculates formula pointed to by Y-Reg and transfers the result to AR-X. 
4998   D6DF             ; Jump if an error occurs.
4999   D6DF             ;------------------------------------------------------------------------------
5000   D6DF             CALC_EXPR_3:  
5001   D6DF B5 01           LDI  A,$01 
5002   D6E1             
5003   D6E1             CALC_EXPR_4:  ; $D6E1
5004   D6E1 E9 78 89 FE     ANI  ($7889),$FE
5005   D6E5             
5006   D6E5             CALC_EXPR_5:  ; $D6E5
5007   D6E5 AE 78 81        STA  ($7881)
5008   D6E8 CC              VEJ  (CC) \ 
5008   D6E9             
5009   D6E9 90                  ABYTL($7890)
5010   D6EA F9              REC
5011   D6EB B3 04           ADI  A,$04
5012   D6ED 08              STA  XH
5013   D6EE CA              VEJ  (CA) \ 
5013   D6EF             
5014   D6EF 92                  ABYTL($7892)
5015   D6F0 64              INC  U
5016   D6F1 B5 10           LDI  A,$10
5017   D6F3 2E              STA  (U)
5018   D6F4 BA D8 26        JMP  GET_VAR_INDEX_9 ; $D826
5019   D6F7             
5020   D6F7             CALC_EXPR_6:  ; $D6F7
5021   D6F7 BA DA 25        JMP  BCMD_RLM_STR_3 ; $DA25
5022   D6FA             
5023   D6FA             CALC_EXPR_7:  ; $D6FA
5024   D6FA CD 00           VMJ  ($00) \ 
5024   D6FC             
5025   D6FC 30                  ABYT($30) \ 
5025   D6FD             
5026   D6FD 3A                  ABYT($3A) \ 
5026   D6FE             
5027   D6FE 0F                  ABRF(CALC_EXPR_9) ; $D70E
5028   D6FF ED 78 81 1D     BII  ($7881),$1D
5029   D703 9B 0E           BZS CALC_EXPR_6 ; $D6F7
5030   D705             
5031   D705             CALC_EXPR_8:  ; $D705
5032   D705 56              DEC  Y
5033   D706 6A 4F           LDI  UL,$4F
5034   D708 BE D1 4F        SJP  (BCD_Y2ARX) \ 
5034   D70B             
5035   D70B E7              ABRF(GET_VAR_INDEX_2) ; $D7F3
5036   D70C 8E 28           BCH CALC_EXPR_12 ; $D736
5037   D70E             
5038   D70E             CALC_EXPR_9:  ; $D70E
5039   D70E CD 00           VMJ  ($00) \ 
5039   D710             
5040   D710 40              ABYT($40) \ 
5040   D711             
5041   D711 5B              ABYT($5B) \ 
5041   D712             
5042   D712 25              ABRF(CALC_EXPR_13) ; $D738
5043   D713 ED 78 81 1D     BII  ($7881),$1D
5044   D717 9B 22           BZS CALC_EXPR_6 ; $D6F7
5045   D719 BE D4 0D        SJP  (GET_VAR_NAME_1) ; $D40D
5046   D71C D6              VEJ  (D6) \ 
5046   D71D             
5047   D71D 6E                  ABYT($6E)
5048   D71E 80              SBC  XH
5049   D71F 81 11           BCR CALC_EXPR_11 ; $D732
5050   D721 BE DB E0        SJP  (UREG_2_BSTK) ; $DBE0
5051   D724 C3 48           VCS  ($48) ; ($48)($24)
5052   D726 B5 01           LDI  A,$01
5053   D728 AE 78 81        STA  ($7881)
5054   D72B             
5055   D72B             CALC_EXPR_10:  ; $D72B
5056   D72B B5 01           LDI  A,$01
5057   D72D AE 78 8C        STA  (NUMARGS)
5058   D730 8E 35           BCH CALC_EXPR_15 ; $D767
5059   D732             
5060   D732             CALC_EXPR_11:  ; $D732
5061   D732 CD 0E           VMJ  ($0E) \ 
5061   D734             
5062   D734 50                  ABYT($50) \ 
5062   D735             
5063   D735 BD                  ABRF(GET_VAR_INDEX_2) ; $D7F3
5064   D736             
5065   D736             CALC_EXPR_12:  ; $D736
5066   D736 8E E9           BCH GET_VAR_INDEX_8 ; $D821
5067   D738             
5068   D738             CALC_EXPR_13:  ; $D738
5069   D738 24              LDA  UL
5070   D739 6A 10           LDI  UL,$10
5071   D73B BE DA 98        SJP  (SEARCH_OP_TBL) ; $DA98
5072   D73E 2A              STA  UL
5073   D73F 45              LIN  X
5074   D740 28              STA  UH
5075   D741 45              LIN  X
5076   D742 A9 78 81        AND  ($7881)
5077   D745 9B 50           BZS CALC_EXPR_6 ; $D6F7
5078   D747 45              LIN  X
5079   D748 FD C8           PSH  A
5080   D74A 45              LIN  X
5081   D74B 48 D7           LDI  XH,$D7
5082   D74D 4A 55           LDI  XL,$55
5083   D74F FD CA           ADR  X
5084   D751 FD 8A           POP  A
5085   D753 FD 5E           STX  P
5086   D755 ED 78 81 1D     BII  ($7881),$1D
5087   D759 8B DC           BZS GET_VAR_INDEX_11 ; $D837
5088   D75B 68 83           LDI  UH,$83
5089   D75D B5 04           LDI  A,$04
5090   D75F             
5091   D75F             CALC_EXPR_14:  ; $D75F
5092   D75F AE 78 81        STA  ($7881)
5093   D762 BE DB E0        SJP  (UREG_2_BSTK) ; $DBE0
5094   D765 C3 48           VCS  ($48) ; ($48)($24)
5095   D767             
5096   D767             CALC_EXPR_15:  ; $D767
5097   D767 BA D8 9D        JMP  GET_VAR_INDEX_23 ; $D89D
5098   D76A 6A 01           LDI  UL,$01
5099   D76C 17              CPA  (Y)
5100   D76D 89 04           BZR CALC_EXPR_16 ; $D773
5101   D76F 6A 05           LDI  UL,$05
5102   D771 8E 06           BCH CALC_EXPR_17 ; $D779
5103   D773             
5104   D773             CALC_EXPR_16:  ; $D773
5105   D773 DD              INC  A
5106   D774 17              CPA  (Y)
5107   D775 89 03           BZR CALC_EXPR_18 ; $D77A
5108   D777 6A 00           LDI  UL,$00
5109   D779             
5110   D779             CALC_EXPR_17:  ; $D779
5111   D779 54              INC  Y
5112   D77A             
5113   D77A             CALC_EXPR_18:  ; $D77A
5114   D77A B5 08           LDI  A,$08
5115   D77C 8E B9           BCH GET_VAR_INDEX_11 ; $D837
5116   D77E 6A 02           LDI  UL,$02
5117   D780 17              CPA  (Y)
5118   D781 99 09           BZR CALC_EXPR_18 ; $D77A
5119   D783 6A 06           LDI  UL,$06
5120   D785 9E 0E           BCH CALC_EXPR_17 ; $D779
5121   D787 2A              STA  UL
5122   D788 9E 10           BCH CALC_EXPR_18 ; $D77A
5123   D78A CD 0C           VMJ  ($0C)
5124   D78C 8E 93           BCH GET_VAR_INDEX_8 ; $D821
5125   D78E EC              VEJ  (EC)
5126   D78F             
5127   D78F             CALC_EXPR_19:  ; $D78F
5128   D78F CD 02           VMJ  ($02) \ 
5128   D791             
5129   D791 30                  ABYT($30) \ 
5129   D792             
5130   D792 3A                  ABYT($3A) \ 
5130   D793             
5131   D793 02                  ABRF(CALC_EXPR_20) ; $D796
5132   D794 8E 07           BCH $D79D
5133   D796             
5134   D796             CALC_EXPR_20:  ; $D796
5135   D796 CD 00           VMJ  ($00) \ 
5135   D798             
5136   D798 41                  ABYT($41) \ 
5136   D799             
5137   D799 47                  ABYT($47) \ 
5137   D79A             
5138   D79A 16                  ABRF(CALC_EXPR_21) ; $D7B1
5139   D79B B3 09           ADI  A,$09
5140   D79D 4A 06           LDI  XL,$06
5141   D79F 48 7A           LDI  XH,$7A
5142   D7A1 F1              AEX
5143   D7A2 D7              DRL  (X)
5144   D7A3 46              DEC  X
5145   D7A4 D7              DRL  (X)
5146   D7A5 B9 F0           ANI  A,$F0
5147   D7A7 68 10           LDI  UH,$10
5148   D7A9 C9 48           VZR  ($48) ; ($48)($24)
5149   D7AB 9E 1E           BCH CALC_EXPR_19 ; $D78F
5150   D7AD 9E AA           BCH CALC_EXPR_8 ; $D705
5151   D7AF 8E EF           BCH GET_VAR_INDEX_24 ; $D8A0
5152   D7B1             
5153   D7B1             CALC_EXPR_21:  ; $D7B1
5154   D7B1 C6              VEJ  (C6)
5155   D7B2 DC              VEJ  (DC)
5156   D7B3 BE DD 2F        SJP  (CONV_UREG_1) ; $DD2F
5157   D7B6 00              SBC  XL
5158   D7B7 8E 68           BCH GET_VAR_INDEX_8 ; $D821
5159   D7B9 6A 6B           LDI  UL,$6B
5160   D7BB 9E 5E           BCH CALC_EXPR_14 ; $D75F
5161   D7BD             
5162   D7BD             CALC_EXPR_22:  ; $D7BD
5163   D7BD CC              VEJ  (CC) \ ABYTL($7893)
5163   D7BE 93          
5164   D7BF             
5165   D7BF             CALC_EXPR_23:  ; $D7BF
5166   D7BF A7 78 91        CPA  (GOSB_STK_PTR_L)
5167   D7C2 89 34           BZR GET_VAR_INDEX_4 ; $D7F8
5168   D7C4 ED 78 89 01     BII  ($7889),$01
5169   D7C8 8B 8E           BZS GET_VAR_INDEX_14 ; $D858
5170   D7CA             
5171   D7CA             
5172   D7CA             
5173   D7CA             ;------------------------------------------------------------------------------
5174   D7CA             ; $D7CA - Find index of variable 
5175   D7CA             ; UH = 1st index, UL = 2nd index of a variable. Jump if error.
5176   D7CA             ;------------------------------------------------------------------------------
5177   D7CA             GET_VAR_INDEX:  
5178   D7CA EF 78 8C FD     ADI  (NUMARGS),$FD
5179   D7CE 68 08           LDI  UH,$08
5180   D7D0 C3 48           VCS  ($48) ; ($48)($24)
5181   D7D2 BE F9 2B        SJP  (ARX_INT_2_BCD) ; $F92B
5182   D7D5 C3 48           VCS  ($48) ; ($48)($24)
5183   D7D7 D0              VEJ  (D0) \ 
5183   D7D8             
5184   D7D8 08                  ABYT($08) \ 
5184   D7D9             
5185   D7D9 19                  ABRF(GET_VAR_INDEX_2) ; $D7F3
5186   D7DA EF 78 8C 01     ADI  (NUMARGS),$01
5187   D7DE C1 4C           VCR  ($4C) ; ($4C)($26)
5188   D7E0 FD A8           PSH  U
5189   D7E2 CD 30           VMJ  ($30)
5190   D7E4 BE F9 2B        SJP  (ARX_INT_2_BCD) ; $F92B
5191   D7E7 C3 48           VCS  ($48) ; ($48)($24)
5192   D7E9 D0              VEJ  (D0) \ 
5192   D7EA             
5193   D7EA 08                  ABYT($08) \ 
5193   D7EB             
5194   D7EB 05                  ABRF(GET_VAR_INDEX_1) ; $D7F1
5195   D7EC FD 2A           POP  U
5196   D7EE 28              STA  UH
5197   D7EF CD 4C           VMJ  ($4C) ; ($4C)($26)
5198   D7F1             
5199   D7F1             GET_VAR_INDEX_1:  ; $D7F1
5200   D7F1 FD 0A           POP  X
5201   D7F3             
5202   D7F3             GET_VAR_INDEX_2:  ; $D7F3
5203   D7F3 CD 48           VMJ  ($48) ; ($48)($24)
5204   D7F5             
5205   D7F5             GET_VAR_INDEX_3:  ; $D7F5
5206   D7F5 BA D6 FA        JMP  CALC_EXPR_7 ; $D6FA
5207   D7F8             
5208   D7F8             GET_VAR_INDEX_4:  ; $D7F8
5209   D7F8 BE DB D3        SJP  (UREG_FRM_BSTK) ; $DBD3
5210   D7FB 6C 60           CPI  UH,$60
5211   D7FD 89 06           BZR GET_VAR_INDEX_5 ; $D805
5212   D7FF EF 78 8C 01     ADI  (NUMARGS),$01
5213   D803 9E 48           BCH CALC_EXPR_22 ; $D7BD
5214   D805             
5215   D805             GET_VAR_INDEX_5:  ; $D805
5216   D805 6C 20           CPI  UH,$20
5217   D807 8B 94           BZS GET_VAR_INDEX_23 ; $D89D
5218   D809 48 10           LDI  XH,$10
5219   D80B 6C 5B           CPI  UH,$5B
5220   D80D 83 6B           BCS GET_VAR_INDEX_19 ; $D87A
5221   D80F 6C 40           CPI  UH,$40
5222   D811 81 67           BCR GET_VAR_INDEX_19 ; $D87A
5223   D813 89 08           BZR GET_VAR_INDEX_7 ; $D81D
5224   D815 B5 00           LDI  A,$00
5225   D817 BE D5 2A        SJP  (DEFAULT_VAR) ; $D52A
5226   D81A DC              VEJ  (DC)
5227   D81B             
5228   D81B             GET_VAR_INDEX_6:  ; $D81B
5229   D81B 8E 04           BCH GET_VAR_INDEX_8 ; $D821
5230   D81D             
5231   D81D             GET_VAR_INDEX_7:  ; $D81D
5232   D81D CD 0E           VMJ  ($0E) \ 
5232   D81F             
5233   D81F 52                  ABYT($52) \ 
5233   D820             
5234   D820 D6                  ABRF(GET_VAR_INDEX_34) ; $D8F7
5235   D821             
5236   D821             GET_VAR_INDEX_8:  ; $D821
5237   D821 B5 02           LDI  A,$02
5238   D823 AE 78 81        STA  ($7881)
5239   D826             
5240   D826             GET_VAR_INDEX_9:  ; $D826
5241   D826 CC              VEJ  (CC) \ 
5241   D827             
5242   D827 81                  ABYTL($7881)
5243   D828 D5              SHR
5244   D829 83 08           BCS GET_VAR_INDEX_10 ; $D833 
5245   D82B BE DB 95        SJP  (ARX_IN_STRBUF) ; $DB95
5246   D82E 04              LDA  XL
5247   D82F BE DF A0        SJP  (STR_2_STRBUF) ; $DFA0
5248   D832 C4              .BYTE $C4 
5249   D833             
5250   D833             GET_VAR_INDEX_10:  ; $D833
5251   D833 BA D7 2B        JMP  CALC_EXPR_10 ; $D72B
5252   D836 56              DEC  Y
5253   D837             
5254   D837             GET_VAR_INDEX_11:  ; $D837
5255   D837 AE 78 81        STA  ($7881)
5256   D83A             
5257   D83A             GET_VAR_INDEX_12:  ; $D83A
5258   D83A CC              VEJ  (CC) \ 
5258   D83B             
5259   D83B 93                  ABYTL($7893)
5260   D83C 6C 10           CPI  UH,$10
5261   D83E 9B 81           BZS CALC_EXPR_23 ; $D7BF
5262   D840 A7 78 91        CPA  (GOSB_STK_PTR_L)
5263   D843 89 1F           BZR GET_VAR_INDEX_16 ; $D864
5264   D845 A5 78 89        LDA  ($7889)
5265   D848 6C 10           CPI  UH,$10
5266   D84A 83 05           BCS GET_VAR_INDEX_13 ; $D851
5267   D84C D5              SHR
5268   D84D 81 0A           BCR GET_VAR_INDEX_15 ; $D859
5269   D84F 8E 26           BCH GET_VAR_INDEX_18 ; $D877
5270   D851             
5271   D851             GET_VAR_INDEX_13:  ; $D851
5272   D851 6C 60           CPI  UH,$60
5273   D853 89 3E           BZR GET_VAR_INDEX_22 ; $D893
5274   D855 D5              SHR
5275   D856 83 3B           BCS GET_VAR_INDEX_22 ; $D893
5276   D858             
5277   D858             GET_VAR_INDEX_14:  ; $D858
5278   D858 56              DEC  Y
5279   D859             
5280   D859             GET_VAR_INDEX_15:  ; $D859
5281   D859 CD 28           VMJ  ($28) \ 
5281   D85B             
5282   D85B 9B                  ABRF(GET_VAR_INDEX_34) ; $D8F7
5283   D85C BE F9 2B        SJP  (ARX_INT_2_BCD) ; $F92B
5284   D85F C3 48           VCS  ($48) ; ($48)($24)
5285   D861 CD 4C           VMJ  ($4C) ; ($4C)($26)
5286   D863 38              NOP
5287   D864             
5288   D864             GET_VAR_INDEX_16:  ; $D864
5289   D864 0A              STA  XL
5290   D865 48 7A           LDI  XH,$7A
5291   D867 44              INC  X
5292   D868 05              LDA  (X)
5293   D869 A6              CPA  UH
5294   D86A 8B 1F           BZS GET_VAR_INDEX_21 ; $D88B
5295   D86C 81 25           BCR GET_VAR_INDEX_22 ; $D893
5296   D86E             
5297   D86E             GET_VAR_INDEX_17:  ; $D86E
5298   D86E FD 28           LDX  U
5299   D870 BE DB D3        SJP  (UREG_FRM_BSTK) ; $DBD3
5300   D873 6C 70           CPI  UH,$70
5301   D875 83 03           BCS GET_VAR_INDEX_19 ; $D87A
5302   D877             
5303   D877             GET_VAR_INDEX_18:  ; $D877
5304   D877 BA DA 25        JMP  BCMD_RLM_STR_3 ; $DA25
5305   D87A             
5306   D87A             GET_VAR_INDEX_19:  ; $D87A
5307   D87A FD 88           PSH  X
5308   D87C             
5309   D87C             GET_VAR_INDEX_20:  ; $D87C
5310   D87C FD 98           PSH  Y
5311   D87E 24              LDA  UL
5312   D87F 1A              STA  YL
5313   D880 A4              LDA  UH
5314   D881 18              STA  YH
5315   D882 B7 E0           CPI  A,$E0
5316   D884 81 51           BCR GET_VAR_INDEX_30 ; $D8D7
5317   D886 CD 1C           VMJ  ($1C) \ 
5317   D888             
5318   D888 01                  ABYT($01)
5319   D889 8E 67           BCH GET_VAR_INDEX_33 ; $D8F2
5320   D88B             
5321   D88B             GET_VAR_INDEX_21:  ; $D88B
5322   D88B 6C 60           CPI  UH,$60
5323   D88D 8B 04           BZS GET_VAR_INDEX_22 ; $D893
5324   D88F 6C 84           CPI  UH,$84
5325   D891 99 25           BZR GET_VAR_INDEX_17 ; $D86E
5326   D893             
5327   D893             GET_VAR_INDEX_22:  ; $D893
5328   D893 BE DB E0        SJP  (UREG_2_BSTK) ; $DBE0
5329   D896 C3 48           VCS  ($48) ; ($48)($24)
5330   D898 BE DB F5        SJP  (ARX_2_BSTK); $DBF5
5331   D89B C3 48           VCS  ($48) ; ($48)($24)
5332   D89D             
5333   D89D             GET_VAR_INDEX_23:  ; $D89D
5334   D89D C0              VEJ  (C0)
5335   D89E 91 AB           BCR GET_VAR_INDEX_3 ; $D7F5
5336   D8A0             
5337   D8A0             GET_VAR_INDEX_24:  ; $D8A0
5338   D8A0 A5 78 81        LDA  ($7881)
5339   D8A3 6E 80           CPI  UL,$80
5340   D8A5 81 06           BCR GET_VAR_INDEX_25 ; $D8AD
5341   D8A7 56              DEC  Y
5342   D8A8 56              DEC  Y
5343   D8A9 68 00           LDI  UH,$00
5344   D8AB 8E 12           BCH GET_VAR_INDEX_27 ; $D8BF
5345   D8AD             
5346   D8AD             GET_VAR_INDEX_25:  ; $D8AD
5347   D8AD 6E 60           CPI  UL,$60
5348   D8AF 83 15           BCS GET_VAR_INDEX_28 ; $D8C6
5349   D8B1 6E 50           CPI  UL,$50
5350   D8B3 8B 04           BZS GET_VAR_INDEX_26 ; $D8B9
5351   D8B5 6E 51           CPI  UL,$51
5352   D8B7 89 16           BZR GET_VAR_INDEX_29 ; $D8CF
5353   D8B9             
5354   D8B9             GET_VAR_INDEX_26:  ; $D8B9
5355   D8B9 6C F1           CPI  UH,$F1
5356   D8BB 89 12           BZR GET_VAR_INDEX_29 ; $D8CF
5357   D8BD 68 70           LDI  UH,$70
5358   D8BF             
5359   D8BF             GET_VAR_INDEX_27:  ; $D8BF
5360   D8BF BF 22           BII  A,$22
5361   D8C1 9B 4C           BZS GET_VAR_INDEX_18 ; $D877
5362   D8C3 BA D7 7A        JMP  CALC_EXPR_18 ; $D77A
5363   D8C6             
5364   D8C6             GET_VAR_INDEX_28:  ; $D8C6
5365   D8C6 BF 1D           BII  A,$1D
5366   D8C8 9B 53           BZS GET_VAR_INDEX_18 ; $D877
5367   D8CA B5 10           LDI  A,$10
5368   D8CC BA D7 5F        JMP  CALC_EXPR_14 ; $D75F
5369   D8CF             
5370   D8CF             GET_VAR_INDEX_29:  ; $D8CF
5371   D8CF BF 1D           BII  A,$1D
5372   D8D1 9B 5C           BZS GET_VAR_INDEX_18 ; $D877
5373   D8D3 FD A8           PSH  U
5374   D8D5 9E 5B           BCH GET_VAR_INDEX_20 ; $D87C
5375   D8D7             
5376   D8D7             GET_VAR_INDEX_30:  ; $D8D7
5377   D8D7 CD 28           VMJ  ($28) \ 
5377   D8D9             
5378   D8D9 18                  ABRF(GET_VAR_INDEX_33) ; D8F2
5379   D8DA 5C 83           CPI  YH,$83
5380   D8DC 89 2B           BZR GET_VAR_INDEX_36 ; $D909
5381   D8DE D2              VEJ  (D2) \ 
5381   D8DF             
5382   D8DF 12                  ABRF($D8F2) \ 
5382   D8E0             
5383   D8E0 80                      ABYT($80)
5384   D8E1 5E 2D           CPI  YL,$2D
5385   D8E3 81 0B           BCR GET_VAR_INDEX_32 ; $D8F0
5386   D8E5 4A 02           LDI  XL,$02
5387   D8E7 48 7A           LDI  XH,$7A
5388   D8E9 47              LDE  X
5389   D8EA 8B 04           BZS GET_VAR_INDEX_32 ; $D8F0
5390   D8EC B5 80           LDI  A,$80
5391   D8EE 0D              EOR  (X)
5392   D8EF             
5393   D8EF             GET_VAR_INDEX_31:  ; $D8EF
5394   D8EF 0E              STA  (X)
5395   D8F0             
5396   D8F0             GET_VAR_INDEX_32:  ; $D8F0
5397   D8F0 68 00           LDI  UH,$00
5398   D8F2             
5399   D8F2             GET_VAR_INDEX_33:  ; $D8F2
5400   D8F2 FD 1A           POP  Y
5401   D8F4 FD 0A           POP  X
5402   D8F6 A4              LDA  UH
5403   D8F7             
5404   D8F7             GET_VAR_INDEX_34:  ; $D8F7
5405   D8F7 C9 48           VZR  ($48) ; ($48)($24)
5406   D8F9 4C E0           CPI  XH,$E0
5407   D8FB 81 04           BCR GET_VAR_INDEX_35 ; $D901
5408   D8FD 4E 60           CPI  XL,$60
5409   D8FF 91 E6           BCR GET_VAR_INDEX_6 ; $D81B
5410   D901             
5411   D901             GET_VAR_INDEX_35:  ; $D901
5412   D901 DD              INC  A
5413   D902 AE 78 8C        STA  (NUMARGS)
5414   D905 FD 6A           STX  U
5415   D907 9E CF           BCH GET_VAR_INDEX_12 ; $D83A
5416   D909             
5417   D909             GET_VAR_INDEX_36:  ; $D909
5418   D909 8F 68           BVS STR_CONCAT_8 ; $D973
5419   D90B FD 98           PSH  Y
5420   D90D BE DB 95        SJP  (ARX_IN_STRBUF) ; $DB95
5421   D910 3E              STA  (V)
5422   D911 E6              VEJ  (E6)
5423   D912 CD 30           VMJ  ($30)
5424   D914 BE DB 95        SJP  (ARX_IN_STRBUF) ; $DB95
5425   D917 55              LIN  Y
5426   D918 FD 1A           POP  Y
5427   D91A 94              LDA  YH
5428   D91B DF              DEC  A
5429   D91C 85 25           BHR STR_CONCAT_2 ; $D943
5430   D91E DF              DEC  A
5431   D91F 87 4E           BHS STR_CONCAT_6 ; $D96F
5432   D921 5E 2B           CPI  YL,$2B
5433   D923 89 4A           BZR STR_CONCAT_6 ; $D96F
5434   D925             
5435   D925             
5436   D925             
5437   D925             ;------------------------------------------------------------------------------
5438   D925             ; $DFA0 - Concatenate two strings
5439   D925             ;------------------------------------------------------------------------------
5440   D925             STR_CONCAT:  
5441   D925 BE DF A0        SJP  (STR_2_STRBUF)
5442   D928 48 DC           LDI  XH,$DC
5443   D92A FD 5A           STX  Y
5444   D92C FD A8           PSH  U
5445   D92E 6A 15           LDI  UL,$15
5446   D930 BE DE BE        SJP  (CSI_ARX_2_XREG_1) ; $DEBE
5447   D933 BE DF A1        SJP  (STR_2_STRBUF_1) \ 
5447   D936             
5448   D936 F2                  ABRF(BCMD_RLM_STR_4) ; $DA29
5449   D937 A5 7A 07        LDA  (ARX + $07)
5450   D93A FD 2A           POP  U
5451   D93C 22              ADC  UL
5452   D93D FD 18           LDX  Y
5453   D93F CD 24           VMJ  ($24)
5454   D941             
5455   D941             STR_CONCAT_1:  ; $D941
5456   D941 9E 53           BCH GET_VAR_INDEX_32 ; $D8F0
5457   D943             
5458   D943             STR_CONCAT_2:  ; $D943
5459   D943 14              LDA  YL
5460   D944 BE D0 F9        SJP  (COMPARE_STR) ; $D0F9
5461   D947 9E 59           BCH GET_VAR_INDEX_32 ; $D8F0
5462   D949             
5463   D949             STR_CONCAT_3:  ; $D949
5464   D949 14              LDA  YL
5465   D94A BE D0 D2        SJP  (COMPARE_BCD) ; $D0D2
5466   D94D 9E 5F           BCH GET_VAR_INDEX_32 ; $D8F0
5467   D94F D2              VEJ  (D2) \ 
5467   D950             
5468   D950 01                  ABRF($D952) \ 
5468   D951             
5469   D951 80                  ABYT($80)
5470   D952 E6              VEJ  (E6)
5471   D953 CD 30           VMJ  ($30)
5472   D955 D2              VEJ  (D2) \ 
5472   D956             
5473   D956 16                  ABRF($D96D) \ 
5473   D957             
5474   D957 80                  ABYT($80) ; ABRF address +1 off
5475   D958 FD 1A           POP  Y
5476   D95A 94              LDA  YH
5477   D95B DF              DEC  A
5478   D95C 95 15           BHR STR_CONCAT_3 ; $D949
5479   D95E DF              DEC  A
5480   D95F 87 03           BHS STR_CONCAT_4 ; $D964
5481   D961 BA EF 94        JMP  OUTBUF_CLR_3 ; $EF94
5482   D964             
5483   D964             STR_CONCAT_4:  ; $D964
5484   D964 DF              DEC  A
5485   D965 87 03           BHS STR_CONCAT_5 ; $D96A
5486   D967 BA EF A5        JMP  OUTBUF_CLR_6 ; $EFA5
5487   D96A             
5488   D96A             STR_CONCAT_5:  ; $D96A
5489   D96A BA EF B1        JMP  OUTBUF_CLR_8 ; $EFB1
5490   D96D FD 1A           POP  Y
5491   D96F             
5492   D96F             STR_CONCAT_6:  ; $D96F
5493   D96F 68 11           LDI  UH,$11
5494   D971             
5495   D971             STR_CONCAT_7:  ; $D971
5496   D971 9E 81           BCH GET_VAR_INDEX_33 ; $D8F2
5497   D973             
5498   D973             STR_CONCAT_8:  ; $D973
5499   D973 D0              VEJ  (D0) \ 
5499   D974             
5500   D974 04                  ABYT($04) \ 
5500   D975             
5501   D975 B5                  ABRF(BCMD_RLM_STR_5) ; $DA2B
5502   D976 FD A8           PSH  U
5503   D978 CD 30           VMJ  ($30)
5504   D97A D0              VEJ  (D0) \ 
5504   D97B             
5505   D97B 04                  ABYT($04) \ 
5505   D97C             
5506   D97C AC                  ABRF(BCMD_RLM_STR_4) ; $DA29)
5507   D97D FD 2A           POP  U
5508   D97F 4A 06           LDI  XL,$06
5509   D981 48 7A           LDI  XH,$7A
5510   D983 24              LDA  UL
5511   D984 52              DEC  YL
5512   D985 87 06           BHS STR_CONCAT_9 ; $D98D
5513   D987 09              AND  (X)
5514   D988 43              SDE  X
5515   D989 A4              LDA  UH
5516   D98A 09              AND  (X)
5517   D98B 9E 9E           BCH GET_VAR_INDEX_31 ; $D8EF
5518   D98D             
5519   D98D             STR_CONCAT_9:  ; $D98D
5520   D98D 0B              ORA  (X)
5521   D98E 43              SDE  X
5522   D98F A4              LDA  UH
5523   D990 0B              ORA  (X)
5524   D991 9E A4           BCH GET_VAR_INDEX_31 ; $D8EF
5525   D993             
5526   D993             
5527   D993             
5528   D993             ;------------------------------------------------------------------------------
5529   D993             ; $D993 - Basic commands PEEK#/PEEK
5530   D993             ;------------------------------------------------------------------------------
5531   D993             BCMD_PEEK:
5532   D993 D0              VEJ  (D0) \ 
5532   D994             
5533   D994 00                  ABYT($00) \ 
5533   D995             
5534   D995 5C                  ABRF(ARUINT2ARX_1) ; $D9F2
5535   D996 50              INC  YL
5536   D997 25              LDA  (U)
5537   D998 87 02           BHS BCMD_PEEK_1 ; $D99C
5538   D99A FD 25           LDA  #(U)
5539   D99C             
5540   D99C             BCMD_PEEK_1: ; $D99C
5541   D99C 8E 46           BCH BCMD_LEN_2 ; $D9E4
5542   D99E             
5543   D99E             
5544   D99E             
5545   D99E             ;------------------------------------------------------------------------------
5546   D99E             ; $D99E - Basic command NOT
5547   D99E             ;------------------------------------------------------------------------------
5548   D99E             BCMD_NOT:
5549   D99E D0              VEJ  (D0) \ 
5549   D99F             
5550   D99F 04                  ABYT($04) \ 
5550   D9A0             
5551   D9A0 51                  ABRF(ARUINT2ARX_1) ; $D9F2
5552   D9A1 BE DA A8        SJP  (TWOSCOMP)
5553   D9A4 66              DEC  U
5554   D9A5 BE D9 E7        SJP  (ARUINT2ARX)
5555   D9A8 8E 97           BCH BCMD_RLM_STR_11 ; $DA41
5556   D9AA             
5557   D9AA             
5558   D9AA             
5559   D9AA             ;------------------------------------------------------------------------------
5560   D9AA             ; $D9AA - Basic INKEY$ command
5561   D9AA             ;------------------------------------------------------------------------------
5562   D9AA             BCMD_INKY:
5563   D9AA BE E4 2C        SJP  (KEY_2_ASCII)
5564   D9AD 48 D0           LDI  XH,$D0
5565   D9AF 8E 05           BCH BCMD_CHR_1 ; $D9B6
5566   D9B1             
5567   D9B1             
5568   D9B1             
5569   D9B1             ;------------------------------------------------------------------------------
5570   D9B1             ; $D981 - Basic CHR$ Command
5571   D9B1             ;------------------------------------------------------------------------------
5572   D9B1             BCMD_CHR:
5573   D9B1 D0              VEJ  (D0) \ 
5573   D9B2             
5574   D9B2 08                  ABYT($08) \ 
5574   D9B3             
5575   D9B3 3E                  ABRF(ARUINT2ARX_1) ; $D9F2
5576   D9B4 48 C1           LDI  XH,$C1
5577   D9B6             
5578   D9B6             BCMD_CHR_1: ; $D9B6
5579   D9B6 0A              STA  XL
5580   D9B7 2A              STA  UL
5581   D9B8 24              LDA  UL
5582   D9B9 8B 02           BZS BCMD_CHR_2 ; $D9BD
5583   D9BB B5 01           LDI  A,$01
5584   D9BD             
5585   D9BD             BCMD_CHR_2: ; $D9B6
5586   D9BD BE DF B4        SJP  (STRBUF_2FULL) ; $DFB4
5587   D9C0 83 30           BCS ARUINT2ARX_1 ; $D9F2
5588   D9C2 04              LDA  XL
5589   D9C3 8B 01           BZS BCMD_CHR_3 ; $D9C6
5590   D9C5 51              SIN  Y
5591   D9C6             
5592   D9C6             BCMD_CHR_3: ; $D9C6
5593   D9C6 84              LDA  XH
5594   D9C7 18              STA  YH
5595   D9C8 BE DF C5        SJP  (STRBUF_2_ARX_1) ; $DFC5
5596   D9CB 94              LDA  YH
5597   D9CC 2E              STA  (U)
5598   D9CD 8E 72           BCH BCMD_RLM_STR_11 ; $DA41
5599   D9CF             
5600   D9CF             
5601   D9CF             
5602   D9CF             ;------------------------------------------------------------------------------
5603   D9CF             ; $D9CF - Basic STRS command
5604   D9CF             ;------------------------------------------------------------------------------
5605   D9CF             BCMD_STR:
5606   D9CF D2              VEJ  (D2) \ 
5606   D9D0             
5607   D9D0 21                  ABRF(ARUINT2ARX_1) \ 
5607   D9D1             
5608   D9D1 80                  ABYT($80)
5609   D9D2 BE EF 1B        SJP  (ARX_2_STRNG)
5610   D9D5 8E 66           BCH BCMD_RLM_STR_10 ; $DA3D
5611   D9D7             
5612   D9D7             
5613   D9D7             
5614   D9D7             ;------------------------------------------------------------------------------
5615   D9D7             ; $D9D7 - Basic VAL command
5616   D9D7             ;------------------------------------------------------------------------------
5617   D9D7             BCMD_LEN:
5618   D9D7 BE D1 4C        SJP  (COMPARE_STR_7) ; $D14C
5619   D9DA 17              CPA  (Y)
5620   D9DB 8E 64           BCH BCMD_RLM_STR_11 ; $DA41
5621   D9DD             
5622   D9DD             
5623   D9DD             
5624   D9DD             ;------------------------------------------------------------------------------
5625   D9DD             ; $D9DD - Basic LEN / ASC Command 
5626   D9DD             ;------------------------------------------------------------------------------
5627   D9DD             BCMD_LEN_1:
5628   D9DD DC              VEJ  (DC)
5629   D9DE 8B 05           BZS BCMD_LEN_3 ; $D9E5
5630   D9E0 52              DEC  YL
5631   D9E1 87 02           BHS BCMD_LEN_3 ; $D9E5
5632   D9E3 05              LDA  (X)
5633   D9E4             
5634   D9E4             BCMD_LEN_2: ; $D9E4
5635   D9E4 2A              STA  UL
5636   D9E5             
5637   D9E5             BCMD_LEN_3: ; $D9E5
5638   D9E5 68 00           LDI  UH,$00
5639   D9E7             
5640   D9E7             
5641   D9E7             
5642   D9E7             ;------------------------------------------------------------------------------
5643   D9E7             ; $D9E7 - Transfers U-Reg as an integer to AR-X in the format '82 UH UL '.
5644   D9E7             ;------------------------------------------------------------------------------
5645   D9E7             ARUINT2ARX:
5646   D9E7 4A 04           LDI  XL,$04
5647   D9E9 48 7A           LDI  XH,$7A
5648   D9EB B5 B2           LDI  A,$B2
5649   D9ED 41              SIN  X
5650   D9EE A4              LDA  UH
5651   D9EF 41              SIN  X
5652   D9F0 24              LDA  UL
5653   D9F1 0E              STA  (X)
5654   D9F2             
5655   D9F2             ARUINT2ARX_1: ; $D9F2
5656   D9F2 9A              RTN
5657   D9F3             
5658   D9F3             
5659   D9F3             
5660   D9F3             ;------------------------------------------------------------------------------
5661   D9F3             ; $D9F3 - Basic RIGHT$ / LEFT$ / MID$ Commands
5662   D9F3             ;------------------------------------------------------------------------------
5663   D9F3             BCMD_RLM_STR:
5664   D9F3 14              LDA  YL
5665   D9F4 B9 03           ANI  A,$03
5666   D9F6 BE DB B3        SJP  (S_VAR_1DIM_1) ; $DBB3
5667   D9F9 9D              .BYTE $9D
5668   D9FA D0              VEJ (D0) \ 
5668   D9FB             
5669   D9FB 0C                  ABYT($0C) \ 
5669   D9FC             
5670   D9FC 9A                  ABRF(MULT_16x16_6) ; $DA97
5671   D9FD 18              STA  YH
5672   D9FE 68 00           LDI  UH,$00
5673   DA00 5E 7B           CPI  YL,$7B
5674   DA02 89 07           BZR BCMD_RLM_STR_1 ; $DA0B
5675   DA04 CD 30           VMJ  ($30)
5676   DA06 D0              VEJ  (D0) \ 
5676   DA07             
5677   DA07 0D                  ABYT($0D) \ 
5677   DA08             
5678   DA08 8E                  ABRF(MULT_16x16_6) ; $DA97
5679   DA09 DF              DEC  A
5680   DA0A 28              STA  UH
5681   DA0B             
5682   DA0B             BCMD_RLM_STR_1: ; DA0B
5683   DA0B CD 30           VMJ  ($30)
5684   DA0D BE DB 95        SJP  (ARX_IN_STRBUF) ; $DB95
5685   DA10 86              CPA  XH
5686   DA11 4A 07           LDI  XL,$07
5687   DA13 48 7A           LDI  XH,$7A
5688   DA15 05              LDA  (X)
5689   DA16 FB              SEC
5690   DA17 A0              SBC  UH
5691   DA18 81 20           BCR BCMD_RLM_STR_8 ; $DA3A
5692   DA1A 90              SBC  YH
5693   DA1B 81 12           BCR BCMD_RLM_STR_6 ; $DA2F
5694   DA1D 5E 7A           CPI  YL,$7A
5695   DA1F 83 01           BCS BCMD_RLM_STR_2 ; $DA22
5696   DA21 28              STA  UH
5697   DA22             
5698   DA22             BCMD_RLM_STR_2: ; $DA22
5699   DA22 94              LDA  YH
5700   DA23 8E 0B           BCH BCMD_RLM_STR_7 ; $DA30
5701   DA25             
5702   DA25             BCMD_RLM_STR_3: ; $DA25
5703   DA25 68 01           LDI  UH,$01
5704   DA27 CD 48           VMJ  ($48) ; ($48)($24)
5705   DA29             
5706   DA29             BCMD_RLM_STR_4: ; $DA29
5707   DA29 FD 0A           POP  X
5708   DA2B             
5709   DA2B             BCMD_RLM_STR_5: ; $DA2B
5710   DA2B 9E BC           BCH STR_CONCAT_7 ; $D971
5711   DA2D 9E EE           BCH STR_CONCAT_1 ; $D941
5712   DA2F             
5713   DA2F             BCMD_RLM_STR_6: ; $DA2F
5714   DA2F 92              ADC  YH
5715   DA30             
5716   DA30             BCMD_RLM_STR_7: ;$ DA30
5717   DA30 43              SDE  X
5718   DA31 05              LDA  (X)
5719   DA32 F9              REC
5720   DA33 A2              ADC  UH
5721   DA34 43              SDE  X
5722   DA35 05              LDA  (X)
5723   DA36 B3 00           ADI  A,$00
5724   DA38 8E 02           BCH BCMD_RLM_STR_9 ; $DA3C
5725   DA3A             
5726   DA3A             BCMD_RLM_STR_8: ; $DA3A
5727   DA3A B5 00           LDI  A,$00
5728   DA3C             
5729   DA3C             BCMD_RLM_STR_9: ; $DA3C
5730   DA3C 0E              STA  (X)
5731   DA3D             
5732   DA3D             BCMD_RLM_STR_10: ; $DA3D
5733   DA3D BE DF A0        SJP  (STR_2_STRBUF) ; $DFA0
5734   DA40 66              DEC  U
5735   DA41             
5736   DA41             BCMD_RLM_STR_11: ; $DA41
5737   DA41 68 00           LDI  UH,$00
5738   DA43 9A              RTN
5739   DA44             
5740   DA44             
5741   DA44             
5742   DA44             ;------------------------------------------------------------------------------
5743   DA44             ; $DA44 - Basic STATUS Command
5744   DA44             ;------------------------------------------------------------------------------
5745   DA44             BCMD_STATUS:
5746   DA44 D0              VEJ  (D0) \ 
5746   DA45             
5747   DA45 08                  ABYT($08) \ 
5747   DA46             
5748   DA46 60                  ABRF(SEARCH_OP_TBL_2) ; $DAA7
5749   DA47 62              DEC  UL
5750   DA48 81 13           BCR BCMD_MEM
5751   DA4A 8B 16           BZS BCMD_MEM_1 ; $DA62
5752   DA4C CC              VEJ  (CC) \ 
5752   DA4D             
5753   DA4D 67                  ABYTL(BASPRG_END_H) ; 7867
5754   DA4E 44              INC  X
5755   DA4F 62              DEC  UL
5756   DA50 8B 07           BZS BCMD_STATUS_1 ; $DA59
5757   DA52 CC              VEJ  (CC) \ 
5757   DA53             
5758   DA53 99                  ABYTL($7899)
5759   DA54 62              DEC  UL
5760   DA55 8B 02           BZS BCMD_STATUS_1 ; $DA59
5761   DA57 CC              VEJ  (CC) \ 
5761   DA58             
5762   DA58 A2                  ABYTL(PREV_LINE_H) ; $78A2
5763   DA59             
5764   DA59             BCMD_STATUS_1: ; $DA59
5765   DA59 FD 6A           STX  U
5766   DA5B 8E 0F           BCH BCMD_MEM_3 ; $DA6C
5767   DA5D             
5768   DA5D             
5769   DA5D             
5770   DA5D             ;------------------------------------------------------------------------------
5771   DA5D             ; $DA5D - Basic MEM Command
5772   DA5D             ;------------------------------------------------------------------------------
5773   DA5D             BCMD_MEM:
5774   DA5D BE DF EE        SJP  (MEM_IN_UREG)
5775   DA60 8E 03           BCH BCMD_MEM_2 ; $DA65
5776   DA62             
5777   DA62             BCMD_MEM_1: ; $DA62
5778   DA62 CD 14           VMJ  ($14)
5779   DA64 64              INC  U
5780   DA65             
5781   DA65             BCMD_MEM_2: ; $DA65
5782   DA65 64              INC  U
5783   DA66 83 04           BCS BCMD_MEM_3 ; $DA6C
5784   DA68 6A 00           LDI  UL,$00
5785   DA6A 68 00           LDI  UH,$00
5786   DA6C             
5787   DA6C             BCMD_MEM_3: ; $DA6C
5788   DA6C CD 10           VMJ  ($10) \ 
5788   DA6E             
5789   DA6E 00                  ABYT($00)
5790   DA6F 9E 30           BCH BCMD_RLM_STR_11 ; $DA41
5791   DA71             
5792   DA71             
5793   DA71             
5794   DA71             ;------------------------------------------------------------------------------
5795   DA71             ; $DA71 (50) - 16 * 16 Bit Multiplication (U-Reg * Y-Reg)
5796   DA71             ;            Address: DA71 (50)
5797   DA71             ;   Entry parameters: At entry, U-Reg and Y-Reg each contain a hex value that is to be multiplied with one another.
5798   DA71             ; 
5799   DA71             ; Modified registers: The result is in X-Reg and Y-Reg
5800   DA71             ;   Error conditions: Carry=1 when overflow occurs
5801   DA71             ;------------------------------------------------------------------------------
5802   DA71             MULT_16x16: ; $DA71
5803   DA71 4A 00           LDI  XL,$00
5804   DA73 48 00           LDI  XH,$00
5805   DA75             
5806   DA75             MULT_16x16_1: ; $DA75
5807   DA75 A4              LDA  UH
5808   DA76 D5              SHR
5809   DA77 28              STA  UH
5810   DA78 24              LDA  UL
5811   DA79 D1              ROR
5812   DA7A 2A              STA  UL
5813   DA7B 81 09           BCR MULT_16x16_2 ; $DA86
5814   DA7D F9              REC
5815   DA7E 14              LDA  YL
5816   DA7F 02              ADC  XL
5817   DA80 0A              STA  XL
5818   DA81 94              LDA  YH
5819   DA82 82              ADC  XH
5820   DA83 08              STA  XH
5821   DA84 83 0E           BCS MULT_16x16_4 ; $DA94
5822   DA86             
5823   DA86             MULT_16x16_2: ; $DA86
5824   DA86 24              LDA  UL
5825   DA87 89 03           BZR MULT_16x16_3 ; $DA8C
5826   DA89 A4              LDA  UH
5827   DA8A 8B 09           BZS MULT_16x16_5 ; $DA95
5828   DA8C             
5829   DA8C             MULT_16x16_3: ; $DA8C
5830   DA8C 14              LDA  YL
5831   DA8D D9              SHL
5832   DA8E 1A              STA  YL
5833   DA8F 94              LDA  YH
5834   DA90 DB              ROL
5835   DA91 18              STA  YH
5836   DA92 91 1F           BCR MULT_16x16_1 ; $DA75
5837   DA94             
5838   DA94             MULT_16x16_4: ; $DA94
5839   DA94 9A              RTN
5840   DA95             
5841   DA95             MULT_16x16_5: ; $DA95
5842   DA95 FD 5A           STX  Y
5843   DA97             
5844   DA97             MULT_16x16_6: ; $DA97
5845   DA97 9A              RTN
5846   DA98             
5847   DA98             
5848   DA98             
5849   DA98             ;------------------------------------------------------------------------------
5850   DA98             ; $DA98 - Searches operator table by value in accumulator
5851   DA98             ;------------------------------------------------------------------------------
5852   DA98             SEARCH_OP_TBL: ; 
5853   DA98 4A A7           LDI  XL,$A7
5854   DA9A 48 C3           LDI  XH,$C3
5855   DA9C             
5856   DA9C             SEARCH_OP_TBL_1: ; $DA9C
5857   DA9C 44              INC  X
5858   DA9D 44              INC  X
5859   DA9E 44              INC  X
5860   DA9F 44              INC  X
5861   DAA0 F7              CIN
5862   DAA1 8B 04           BZS SEARCH_OP_TBL_2 ; $DAA7
5863   DAA3 88 09           LOP  UL,SEARCH_OP_TBL_1 ; $DA9C
5864   DAA5 4A D4           LDI  XL,$D4
5865   DAA7             
5866   DAA7             SEARCH_OP_TBL_2: ; $DAA7
5867   DAA7 9A              RTN
5868   DAA8             
5869   DAA8             
5870   DAA8             
5871   DAA8             ;------------------------------------------------------------------------------
5872   DAA8             ; $DAA8 - Forms a two’s complement of U-Reg
5873   DAA8             ;------------------------------------------------------------------------------
5874   DAA8             TWOSCOMP:
5875   DAA8 A4              LDA  UH
5876   DAA9 BD FF           EAI  $FF
5877   DAAB 28              STA  UH
5878   DAAC 24              LDA  UL
5879   DAAD BD FF           EAI  $FF
5880   DAAF 2A              STA  UL
5881   DAB0 64              INC  U
5882   DAB1 9A              RTN
5883   DAB2             
5884   DAB2             
5885   DAB2             
5886   DAB2             ;------------------------------------------------------------------------------
5887   DAB2             ; $DAB2 - Y-Reg points to a string with USING parameters. Evaluation and transfer to 
5888   DAB2             ; the using pointers.
5889   DAB2             ;------------------------------------------------------------------------------
5890   DAB2             EVAL_USING:
5891   DAB2 B5 00           LDI  A,$00
5892   DAB4             
5893   DAB4             ;------------------------------------------------------------------------------
5894   DAB4             ; $DAB4 - Read USING parameters and update in memory. Jump in case of error.
5895   DAB4             ;------------------------------------------------------------------------------
5896   DAB4             EVAL_USING_1:
5897   DAB4 AE 78 82        STA  (STK_PTR_GSB_FOR)
5898   DAB7 CD 36           VMJ  ($36)
5899   DAB9 81 05           BCR EVAL_USING_2 ; $DAC0
5900   DABB FD 98           PSH  Y
5901   DABD DC              VEJ  (DC)
5902   DABE 8E 08           BCH EVAL_USING_3 ; $DAC8
5903   DAC0             
5904   DAC0             EVAL_USING_2: ; $DAC0
5905   DAC0 6C 15           CPI  UH,$15
5906   DAC2 89 80           BZR EVAL_USING_16 ; $DB44
5907   DAC4 6A 00           LDI  UL,$00
5908   DAC6 FD 88           PSH  X
5909   DAC8             
5910   DAC8             EVAL_USING_3: ; $DAC8
5911   DAC8 B5 00           LDI  A,$00
5912   DACA 5A 08           LDI  YL,$08
5913   DACC 58 7A           LDI  YH,$7A
5914   DACE 28              STA  UH
5915   DACF 51              SIN  Y
5916   DAD0 51              SIN  Y
5917   DAD1 1E              STA  (Y)
5918   DAD2 62              DEC  UL
5919   DAD3 83 51           BCS EVAL_USING_12 ; $DB26
5920   DAD5             
5921   DAD5             EVAL_USING_4: ; $DAD5
5922   DAD5 FD 1A           POP  Y
5923   DAD7 55              LIN  Y
5924   DAD8 B7 E0           CPI  A,$E0
5925   DADA 81 05           BCR EVAL_USING_6 ; $DAE1
5926   DADC 54              INC  Y
5927   DADD             
5928   DADD             EVAL_USING_5: ; $DADD
5929   DADD 68 01           LDI  UH,$01
5930   DADF CD 48           VMJ  ($48) ; ($48)($24)
5931   DAE1             
5932   DAE1             EVAL_USING_6: ; $DAE1
5933   DAE1 B7 3B           CPI  A,$3B
5934   DAE3 8B 09           BZS EVAL_USING_8 ; $DAEE
5935   DAE5 B7 3A           CPI  A,$3A
5936   DAE7 8B 04           BZS EVAL_USING_7 ; $DAED
5937   DAE9 B7 0D           CPI  A,$0D
5938   DAEB 99 10           BZR EVAL_USING_5 ; $DADD
5939   DAED             
5940   DAED             EVAL_USING_7: ; $DAED
5941   DAED F9              REC
5942   DAEE             
5943   DAEE             EVAL_USING_8: ; $DAEE
5944   DAEE DB              ROL
5945   DAEF AD 78 82        EOR  (STK_PTR_GSB_FOR)
5946   DAF2 D1              ROR
5947   DAF3 91 18           BCR EVAL_USING_5 ; $DADD
5948   DAF5 FD 98           PSH  Y
5949   DAF7 5A 95           LDI  YL,$95
5950   DAF9 58 78           LDI  YH,$78
5951   DAFB 4A 0A           LDI  XL,$0A
5952   DAFD 48 7A           LDI  XH,$7A
5953   DAFF A4              LDA  UH
5954   DB00 8B 0D           BZS EVAL_USING_10 ; $DB0F
5955   DB02 51              SIN  Y
5956   DB03 4A 08           LDI  XL,$08
5957   DB05 F5              TIN
5958   DB06 45              LIN  X
5959   DB07 54              INC  Y
5960   DB08 53              SDE  Y
5961   DB09 05              LDA  (X)
5962   DB0A CB 4E           VZS  ($4E) ; ($4E)($27)
5963   DB0C             
5964   DB0C             EVAL_USING_9: ; $DB0C
5965   DB0C 1E              STA  (Y)
5966   DB0D CD 4E           VMJ  ($4E) ; ($4E)($27)
5967   DB0F             
5968   DB0F             EVAL_USING_10: ; $DB0F
5969   DB0F 5A 97           LDI  YL,$97
5970   DB11 05              LDA  (X)
5971   DB12 99 08           BZR EVAL_USING_9 ; $DB0C
5972   DB14 54              INC  Y
5973   DB15 53              SDE  Y
5974   DB16 53              SDE  Y
5975   DB17 53              SDE  Y
5976   DB18 9E 0E           BCH EVAL_USING_9 ; $DB0C
5977   DB1A             
5978   DB1A             EVAL_USING_11: ; $DB1A
5979   DB1A 5F 01           ADI  (Y),$01
5980   DB1C 62              DEC  UL
5981   DB1D 91 4A           BCR EVAL_USING_4 ; $DAD5
5982   DB1F F7              CIN
5983   DB20 9B 08           BZS EVAL_USING_11 ; $DB1A
5984   DB22 A4              LDA  UH
5985   DB23 89 1D           BZR EVAL_USING_15 ; $DB42
5986   DB25 46              DEC  X
5987   DB26             
5988   DB26             EVAL_USING_12: ; $DB26
5989   DB26 45              LIN  X
5990   DB27 B7 26           CPI  A,$26
5991   DB29 9B 11           BZS EVAL_USING_11 ; $DB1A
5992   DB2B 5A 08           LDI  YL,$08
5993   DB2D             
5994   DB2D             EVAL_USING_13: ; $DB2D
5995   DB2D FD 88           PSH  X
5996   DB2F CD 34           VMJ  ($34) \ ABYT($06) \ ABYT($23) \ ABRF(EVAL_USING_18) \
5996   DB31 06          
5996   DB32 23          
5996   DB33 15          
5996   DB34             
5997   DB34 2A                                       ABYT($2A) \ ABRF(EVAL_USING_17) \ 
5997   DB35 10          
5997   DB36             
5998   DB36 2B                                       ABYT($2B) \ ABRF(EVAL_USING_21) \ 
5998   DB37 25          
5998   DB38             
5999   DB38 5E                                       ABYT($5E) \ ABRF(EVAL_USING_24) \
5999   DB39 31          
5999   DB3A             
6000   DB3A 2C                                       ABYT($2C) \ ABRF(EVAL_USING_26) \ 
6000   DB3B 47          
6000   DB3C             
6001   DB3C 2E                                       ABYT($2E) \ ABRF(EVAL_USING_23) \ 
6001   DB3D 24          
6001   DB3E             
6002   DB3E 26                                       ABYT($26) \ ABRF(EVAL_USING_25)
6002   DB3F 38          
6003   DB40             
6004   DB40             EVAL_USING_14: ; $DB40
6005   DB40 FD 0A           POP  X
6006   DB42             
6007   DB42             EVAL_USING_15: ; $DB42
6008   DB42 68 0C           LDI  UH,$0C
6009   DB44             
6010   DB44             EVAL_USING_16: ; $DB44
6011   DB44 CD 4A           VMJ  ($4A) ;  ($4A)($25)
6012   DB46             
6013   DB46             EVAL_USING_17: ; $DB46
6014   DB46 BB 40           ORI  A,$40
6015   DB48 28              STA  UH
6016   DB49             
6017   DB49             EVAL_USING_18: ; $DB49
6018   DB49 15              LDA  (Y)
6019   DB4A DD              INC  A
6020   DB4B 87 01           BHS EVAL_USING_19 ; $DB4E
6021   DB4D 1E              STA  (Y)
6022   DB4E             
6023   DB4E             EVAL_USING_19: ; $DB4E
6024   DB4E 6C 80           CPI  UH,$80
6025   DB50 93 12           BCS EVAL_USING_14 ; $DB40
6026   DB52 A4              LDA  UH
6027   DB53 BB 01           ORI  A,$01
6028   DB55 28              STA  UH
6029   DB56             
6030   DB56             EVAL_USING_20: ; $DB56
6031   DB56 FD 0A           POP  X
6032   DB58 45              LIN  X
6033   DB59 88 2E           LOP  UL,EVAL_USING_13 ; $DB2D
6034   DB5B 9E 88           BCH EVAL_USING_4 ; $DAD5
6035   DB5D             
6036   DB5D             EVAL_USING_21: ; $DB5D
6037   DB5D BB 20           ORI  A,$20
6038   DB5F             
6039   DB5F             EVAL_USING_22: ; $DB5F
6040   DB5F 28              STA  UH
6041   DB60 9E 14           BCH EVAL_USING_19 ; $DB4E
6042   DB62             
6043   DB62             EVAL_USING_23: ; $DB62
6044   DB62 5E 08           CPI  YL,$08
6045   DB64 99 26           BZR EVAL_USING_14 ; $DB40
6046   DB66 54              INC  Y
6047   DB67 5B 01           ORI  (Y),$01
6048   DB69 9E 1D           BCH EVAL_USING_19 ; $DB4E
6049   DB6B             
6050   DB6B             EVAL_USING_24: ; $DB6B
6051   DB6B BB 80           ORI  A,$80
6052   DB6D 28              STA  UH
6053   DB6E 5A 08           LDI  YL,$08
6054   DB70 B5 02           LDI  A,$02
6055   DB72 17              CPA  (Y)
6056   DB73 91 1F           BCR EVAL_USING_20 ; $DB56
6057   DB75 1E              STA  (Y)
6058   DB76 9E 22           BCH EVAL_USING_20 ; $DB56
6059   DB78             
6060   DB78             EVAL_USING_25: ; $DB78
6061   DB78 5A 0A           LDI  YL,$0A
6062   DB7A 15              LDA  (Y)
6063   DB7B 99 3D           BZR EVAL_USING_14 ; $DB40
6064   DB7D FD 0A           POP  X
6065   DB7F B5 26           LDI  A,$26
6066   DB81 9E 69           BCH EVAL_USING_11 ; $DB1A
6067   DB83             
6068   DB83             EVAL_USING_26: ; $DB83
6069   DB83 BB 10           ORI  A,$10
6070   DB85 9E 28           BCH EVAL_USING_22 ; $DB5F
6071   DB87             
6072   DB87             
6073   DB87             
6074   DB87             ;------------------------------------------------------------------------------
6075   DB87             ; $DB87 (26) - Checks AR-X for BCD format and branches
6076   DB87             ; Branches to offset address P1 if a BCD value is present in AR-X. 
6077   DB87             ; If a CSI could be recognized in the AR-X, continue after the address following P1.
6078   DB87             ; 
6079   DB87             ;            Address:	DB87 (26)
6080   DB87             ;    Entry Parameter:	No
6081   DB87             ; Modified Registers:	X-Reg contains return address. U Reg, accumulator
6082   DB87             ;   Error conditions:	UH contains error code 11 if a BCD value is detected.
6083   DB87             ;------------------------------------------------------------------------------
6084   DB87             IS_ARX_BCD: ; $DB87
6085   DB87 B5 B2           LDI  A,$B2
6086   DB89 A7 7A 04        CPA  (ARX + $04)
6087   DB8C 81 03           BCR IS_ARX_BCD_1 ; $DB91
6088   DB8E BA DC F1        JMP  RTN_2_MAIN_1 ; $DCF1
6089   DB91             
6090   DB91             IS_ARX_BCD_1: ; $DB91
6091   DB91 68 11           LDI  UH,$11
6092   DB93 CD 48           VMJ  ($48) ; ($48)($24)
6093   DB95             
6094   DB95             
6095   DB95             
6096   DB95             ;------------------------------------------------------------------------------
6097   DB95             ; $DB95 - Checks whether the address in the AR-X is within the string buffer.  
6098   DB95             ; If OK, resets the string buffer pointer. If not, set error 11 in UH and jump.
6099   DB95             ;------------------------------------------------------------------------------
6100   DB95             ARX_IN_STRBUF:
6101   DB95 4A 04           LDI  XL,$04
6102   DB97 48 7A           LDI  XH,$7A
6103   DB99 45              LIN  X
6104   DB9A B7 C1           CPI  A,$C1
6105   DB9C 91 0D           BCR IS_ARX_BCD_1 ; $DB91
6106   DB9E 45              LIN  X
6107   DB9F B7 7B           CPI  A,$7B
6108   DBA1 C9 4C           VZR  ($4C) ; ($4C)($26)
6109   DBA3 05              LDA  (X)
6110   DBA4 B7 10           CPI  A,$10
6111   DBA6 C1 4C           VCR  ($4C) ; ($4C)($26)
6112   DBA8 B7 60           CPI  A,$60
6113   DBAA C3 4C           VCS  ($4C) ; ($4C)($26)
6114   DBAC AE 78 94        STA  (STR_BUF_PTR_L)
6115   DBAF CD 4C           VMJ  ($4C) ; ($4C)($26)
6116   DBB1             
6117   DBB1             
6118   DBB1             
6119   DBB1             ;------------------------------------------------------------------------------
6120   DBB1             ; (28) $DBB1 - Checks in $788C to see if the variable was one-dimensional. 
6121   DBB1             ; If not, load error code 12 to UH and jump.
6122   DBB1             ;------------------------------------------------------------------------------
6123   DBB1             IS_VAR_1DIM: 
6124   DBB1 B5 01           LDI  A,$01
6125   DBB3             
6126   DBB3             ;------------------------------------------------------------------------------
6127   DBB3             ; $DBB3 - Checks whether the variable is one-dimensional. Jump, if not to D1
6128   DBB3             ;------------------------------------------------------------------------------
6129   DBB3             S_VAR_1DIM_1:
6130   DBB3 A7 78 8C        CPA  (NUMARGS)
6131   DBB6 CB 4C           VZS  ($4C) ; ($4C)($26) 
6132   DBB8 68 12           LDI  UH,$12
6133   DBBA CD 48           VMJ  ($48) ; ($48)
6134   DBBC             
6135   DBBC             
6136   DBBC             
6137   DBBC             ;------------------------------------------------------------------------------
6138   DBBC             ; $D8BC (F4) - Loads U-Reg with address from main memory
6139   DBBC             ;            Address:	D8BC (F4)
6140   DBBC             ;          Parameter: D1 & D2 identify address to load into U-Reg.
6141   DBBC             ;
6142   DBBC             ; Modified Registers: U-Reg, Accumulator
6143   DBBC             ;   Error conditions: None
6144   DBBC             ;------------------------------------------------------------------------------
6145   DBBC             ADDR_2_UREG: ; $D8BC 
6146   DBBC FD 2A           POP  U
6147   DBBE 65              LIN  U
6148   DBBF 64              INC  U
6149   DBC0 FD A8           PSH  U
6150   DBC2 66              DEC  U
6151   DBC3 FD C8           PSH  A
6152   DBC5 25              LDA  (U)
6153   DBC6 2A              STA  UL
6154   DBC7 FD 8A           POP  A
6155   DBC9 28              STA  UH
6156   DBCA             
6157   DBCA             ADDR_2_UREG_1: ; $DBCA
6158   DBCA 65              LIN  U
6159   DBCB FD C8           PSH  A
6160   DBCD 25              LDA  (U)
6161   DBCE 2A              STA  UL
6162   DBCF FD 8A           POP  A
6163   DBD1 28              STA  UH
6164   DBD2 9A              RTN
6165   DBD3             
6166   DBD3             
6167   DBD3             
6168   DBD3             ;------------------------------------------------------------------------------
6169   DBD3             ; $DBD3 - Gets U-Reg from basic stack
6170   DBD3             ;------------------------------------------------------------------------------
6171   DBD3             UREG_FRM_BSTK: ; 
6172   DBD3 EF 78 93 02     ADI  (BAS_PENOP_STK_L),$02
6173   DBD7 A5 78 93        LDA  (BAS_PENOP_STK_L)
6174   DBDA 2A              STA  UL
6175   DBDB 62              DEC  UL
6176   DBDC 68 7A           LDI  UH,$7A
6177   DBDE 9E 16           BCH ADDR_2_UREG_1 ; $DBCA
6178   DBE0             
6179   DBE0             
6180   DBE0             
6181   DBE0             ;------------------------------------------------------------------------------
6182   DBE0             ; $DBE0 - Save U-Reg on the basic stack. Loads error code 0E to UH in case of stack 
6183   DBE0             ; overflow. If o.k. C = 0.
6184   DBE0             ;------------------------------------------------------------------------------
6185   DBE0             UREG_2_BSTK:
6186   DBE0 A5 78 93        LDA  (BAS_PENOP_STK_L)
6187   DBE3 0A              STA  XL
6188   DBE4 A5 78 92        LDA  (BAS_DATA_STK_L)
6189   DBE7 06              CPA  XL
6190   DBE8 83 45           BCS ARX_FRM_BSTK_4 ; $DC2F
6191   DBEA 48 7A           LDI  XH,$7A
6192   DBEC 24              LDA  UL
6193   DBED 43              SDE  X
6194   DBEE A4              LDA  UH
6195   DBEF 43              SDE  X
6196   DBF0 04              LDA  XL
6197   DBF1 AE 78 93        STA  (BAS_PENOP_STK_L)
6198   DBF4 9A              RTN
6199   DBF5             
6200   DBF5             
6201   DBF5             
6202   DBF5             ;------------------------------------------------------------------------------
6203   DBF5             ; $DBF5 - Transfer AR-X to Basic Stack
6204   DBF5             ;------------------------------------------------------------------------------
6205   DBF5             ARX_2_BSTK:
6206   DBF5 A5 78 92        LDA  (BAS_DATA_STK_L)
6207   DBF8 0A              STA  XL
6208   DBF9 B7 38           CPI  A,$38
6209   DBFB 81 32           BCR ARX_FRM_BSTK_4 ; $DC2F
6210   DBFD B3 06           ADI  A,$06
6211   DBFF 83 2E           BCS ARX_FRM_BSTK_4 ; $DC2F
6212   DC01 A7 78 93        CPA  (BAS_PENOP_STK_L)
6213   DC04 83 29           BCS ARX_FRM_BSTK_4 ; $DC2F
6214   DC06 EF 78 92 08     ADI  (BAS_DATA_STK_L),$08
6215   DC0A 48 7A           LDI  XH,$7A
6216   DC0C             
6217   DC0C             ;------------------------------------------------------------------------------
6218   DC0C             ; $DC0C - Transfers AR-X from the memory cell pointed to by X-Reg. (8-bytes).
6219   DC0C             ;------------------------------------------------------------------------------
6220   DC0C             ARX_FRM_MEM:
6221   DC0C FD 98           PSH  Y
6222   DC0E FD 5A           STX  Y
6223   DC10 4A 00           LDI  XL,$00
6224   DC12 48 7A           LDI  XH,$7A
6225   DC14 8E 10           BCH ARX_FRM_BSTK_2 ; $DC26
6226   DC16             
6227   DC16             
6228   DC16             
6229   DC16             ;------------------------------------------------------------------------------
6230   DC16             ; (30) $DC16 - Get AR-X from Basic Stack 
6231   DC16             ;------------------------------------------------------------------------------
6232   DC16             ARX_FRM_BSTK:  
6233   DC16 EF 78 92 F8     ADI  (BAS_DATA_STK_L),$F8
6234   DC1A A5 78 92        LDA  (BAS_DATA_STK_L)
6235   DC1D 0A              STA  XL
6236   DC1E 48 7A           LDI  XH,$7A
6237   DC20             
6238   DC20             ; Stores 8 bytes from address X-Reg to AR-X.
6239   DC20             ARX_FRM_BSTK_1: ; $ DC20
6240   DC20 FD 98           PSH  Y
6241   DC22 5A 00           LDI  YL,$00
6242   DC24 58 7A           LDI  YH,$7A
6243   DC26             
6244   DC26             ARX_FRM_BSTK_2: ; $ DC26
6245   DC26 6A 07           LDI  UL,$07
6246   DC28             
6247   DC28             ARX_FRM_BSTK_3: ; $ DC28
6248   DC28 F5              TIN
6249   DC29 88 03           LOP  UL,ARX_FRM_BSTK_3 ; $DC28
6250   DC2B FD 1A           POP  Y
6251   DC2D F9              REC
6252   DC2E 9A              RTN
6253   DC2F             
6254   DC2F             ARX_FRM_BSTK_4: ; $ DC2F
6255   DC2F 68 0E           LDI  UH,$0E
6256   DC31 9A              RTN
6257   DC32             
6258   DC32             ARX_FRM_BSTK_5: ; $ DC32
6259   DC32 FD 2A           POP  U
6260   DC34 FD 98           PSH  Y
6261   DC36             
6262   DC36 ED 78 80 10     BII  (DISPARAM),$10
6263   DC3A 8B 0D           BZS ARX_FRM_BSTK_7 ; $DC49
6264   DC3C 62              DEC  UL
6265   DC3D 8B 05           BZS ARX_FRM_BSTK_6 ; $DC44
6266   DC3F BE D2 D3        SJP  (LINE_ADDR_SEARCH) ; $D2D3
6267   DC42 8E 5C           BCH ARX_FRM_BSTK_13 ; $DCA0
6268   DC44             
6269   DC44             ARX_FRM_BSTK_6: ; $ DC44
6270   DC44 BE D2 B3        SJP  ($D2B3)
6271   DC47 8E 57           BCH ARX_FRM_BSTK_13 ; $DCA0
6272   DC49             
6273   DC49             ARX_FRM_BSTK_7: ; $ DC49
6274   DC49 ED 78 8A E0     BII  (BREAKPARAM),$E0
6275   DC4D 8B 05           BZS ARX_FRM_BSTK_8 ; $DC54
6276   DC4F BE D2 4E        SJP  (PROC_LINE_2_INBUF) ; $D24E
6277   DC52 8E 0A           BCH ARX_FRM_BSTK_9 ; $DC5E
6278   DC54             
6279   DC54             ARX_FRM_BSTK_8: ; $ DC54
6280   DC54 CC              VEJ  (CC) \ ABYTL(ERR_LINE_H) ; $78B4
6280   DC55 B4          
6281   DC56 AB 78 B5        ORA  (ERR_LINE_L)
6282   DC59 8B 38           BZS ARX_FRM_BSTK_11 ; $DC93
6283   DC5B BE D2 46        SJP  (ERR_LINE_2_INBUF) ; $D246
6284   DC5E             
6285   DC5E             ARX_FRM_BSTK_9: ; $ DC5E
6286   DC5E 81 2F           BCR ARX_FRM_BSTK_10 ; $DC8F
6287   DC60 B5 54           LDI  A,$54
6288   DC62 ED 76 4F 20     BII  (DISP_BUFF + $4F),$20
6289   DC66 C9 44           VZR  ($44) ; ($44)($22)
6290   DC68 BE EE 80        SJP  (SAVE_LCD_CURS)
6291   DC6B CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880)
6291   DC6C 80          
6292   DC6D FD C8           PSH  A
6293   DC6F B5 54           LDI  A,$54
6294   DC71 AE 78 80        STA  (DISPARAM)
6295   DC74 BE E8 CA        SJP  (PRGM_DISP)
6296   DC77 E9 7B 0E BF     ANI  (CURS_CTRL),$BF
6297   DC7B BE E2 3D        SJP  (WAITNOKEYS)
6298   DC7E BE EE 99        SJP  (RESTORE_LCD_CURS)
6299   DC81 FD 8A           POP  A
6300   DC83 B9 DF           ANI  A,$DF
6301   DC85 AE 78 80        STA  (DISPARAM)
6302   DC88 BF C0           BII  A,$C0
6303   DC8A 8B 03           BZS ARX_FRM_BSTK_10 ; $DC8F
6304   DC8C F2              VEJ  (F2)
6305   DC8D CD 42           VMJ  ($42) ; ($42)($21)
6306   DC8F             
6307   DC8F             ARX_FRM_BSTK_10: ; $DC8F
6308   DC8F FD 1A           POP  Y
6309   DC91 CD 46           VMJ  ($46) ; ($46)($23)
6310   DC93             
6311   DC93             ARX_FRM_BSTK_11: ; $DC93
6312   DC93 62              DEC  UL
6313   DC94 91 07           BCR ARX_FRM_BSTK_10 ; $DC8F
6314   DC96 8B 05           BZS ARX_FRM_BSTK_12 ; $DC9D
6315   DC98 BE D2 77        SJP  (LAST_LINE_2_INBUF) ; $D277
6316   DC9B 8E 03           BCH ARX_FRM_BSTK_13 ; $DCA0
6317   DC9D             
6318   DC9D             ARX_FRM_BSTK_12: ; $DC9D
6319   DC9D BE D2 6F        SJP  (FIRST_LINE_2_INBUF) ; $D26F
6320   DCA0             
6321   DCA0             ARX_FRM_BSTK_13: ; $DCA0
6322   DCA0 91 13           BCR ARX_FRM_BSTK_10 ; $DC8F
6323   DCA2 B5 14           LDI  A,$14
6324   DCA4 CD 44           VMJ  ($44) ; ($44)($22)
6325   DCA6             
6326   DCA6             
6327   DCA6             
6328   DCA6             ;------------------------------------------------------------------------------
6329   DCA6             ; $DCA6 (2C) - Passes function result to AR-X. $DCA6
6330   DCA6             ;------------------------------------------------------------------------------
6331   DCA6             FUNC_2_ARX:    
6332   DCA6 B5 01           LDI  A,$01
6333   DCA8 AE 78 89        STA  ($7889) ; $7889
6334   DCAB BA D6 E5        JMP  CALC_EXPR_5 ; $D6E5
6335   DCAE             
6336   DCAE             
6337   DCAE             
6338   DCAE             ;------------------------------------------------------------------------------
6339   DCAE             ; $DCAE - Compares accumulator with pointer to the input buffer
6340   DCAE             ;------------------------------------------------------------------------------
6341   DCAE             CMP_A_IBUF_PTR:
6342   DCAE DF              DEC  A
6343   DCAF A7 78 8B        CPA  (INBUFPTR_L)
6344   DCB2 9A              RTN
6345   DCB3 80 00 FF        .BYTE $80,$00,$FF
6346   DCB6             
6347   DCB6             
6348   DCB6             
6349   DCB6             ;------------------------------------------------------------------------------
6350   DCB6             ; $DCB6 (02) - Is next character in main memory in specific ASCII code range
6351   DCB6             ;            Address:	DCB6 (02)
6352   DCB6             ;                       D1 = Smallest value within the interval
6353   DCB6             ;                       D2 = Smallest value above the interval
6354   DCB6             ;                       D3 = Distance 
6355   DCB6             ; 
6356   DCB6             ;    Entry Parameter:	Y-Reg points to character to be tested. U-Reg contains 
6357   DCB6             ;                       the character loaded from memory in UL.
6358   DCB6             ; Modified Registers:	X-Reg return address, accumulators, Y-Reg points to 
6359   DCB6             ;                       the next character
6360   DCB6             ;   Error conditions:	A token or character read outside of the interval 
6361   DCB6             ;                       continues the program at offset D3
6362   DCB6             ;------------------------------------------------------------------------------
6363   DCB6             CHAR_MEM_N_RANGE_: ; $DCB6
6364   DCB6 C0              VEJ  (C0) ; $DCB6
6365   DCB7                 
6366   DCB7             
6367   DCB7             
6368   DCB7             ;------------------------------------------------------------------------------
6369   DCB7             ; $DCB7 (00) - Checks whether character in U-Reg in specific ASCII code range
6370   DCB7             ;            Address: DCB7 (00)
6371   DCB7             ;                     D1 = smallest value within the interval
6372   DCB7             ;                     D2 = smallest value above the interval
6373   DCB7             ;                     D3 = distance address
6374   DCB7             ; 
6375   DCB7             ;    Entry Parameter: U-Reg contains character loaded from memory in UL.
6376   DCB7             ; Modified Registers: X-Reg return address, accumulator
6377   DCB7             ;   Error conditions: Token/caracter read outside interval continues program 
6378   DCB7             ;                     at offset D3
6379   DCB7             ;------------------------------------------------------------------------------
6380   DCB7             CHAR_IN_RANGE: ; $DCB7
6381   DCB7 FD 0A           POP  X 
6382   DCB9 A4              LDA  UH
6383   DCBA 89 39           BZR RTN_2_MAIN_2 ; $DCF5
6384   DCBC 24              LDA  UL
6385   DCBD F7              CIN
6386   DCBE 81 36           BCR RTN_2_MAIN_3 ; $DCF6
6387   DCC0 F7              CIN
6388   DCC1 81 23           BCR CHECK_CHAR_TOKEN_3 ; $DCE6
6389   DCC3 8E 3E           BCH RTN_2_DA_2 ; $DD03
6390   DCC5             
6391   DCC5             
6392   DCC5             
6393   DCC5             ;------------------------------------------------------------------------------
6394   DCC5             ; $DCC5 (C8) - Branch if not end of command sequence or end of line
6395   DCC5             ;            Address: DCC5 (C8)
6396   DCC5             ;                 D1: Distance Address
6397   DCC5             ;    Entry Parameter: None
6398   DCC5             ; Modified Registers: X-Reg contains return address
6399   DCC5             ;   Error conditions: Carry-Flag = 1 if an end of the command sequence was 
6400   DCC5             ;                     recognized in a Basic program (:).
6401   DCC5             ;------------------------------------------------------------------------------
6402   DCC5             CHECK_AT_END: ; $DCC5 (C8)
6403   DCC5 C0              VEJ  (C0)
6404   DCC6 D8              VEJ  (D8)
6405   DCC7 8B 04           BZS CHECK_AT_END_1 ; $DCCD
6406   DCC9 6E 3A           CPI  UL,$3A
6407   DCCB 8B 24           BZS RTN_2_MAIN_1 ; $DCF1
6408   DCCD             
6409   DCCD             CHECK_AT_END_1: ; $DCCD
6410   DCCD 6E 0D           CPI  UL,$0D
6411   DCCF F9              REC
6412   DCD0 8B 1F           BZS RTN_2_MAIN_1 ; $DCF1
6413   DCD2 8E 2D           BCH RTN_2_DA_1 ; $DD01
6414   DCD4             
6415   DCD4             
6416   DCD4             
6417   DCD4             ;------------------------------------------------------------------------------
6418   DCD4             ; $DCD4 (C2) - Checks for the presence of a specific character or token.   
6419   DCD4             ;              If found, a branch is made to the offset address.
6420   DCD4             ;            Address:	1. DCD4 (C2) with character/token loading
6421   DCD4             ;                       2. DCD5 (C4) character/token already in U-Reg.
6422   DCD4             ;                       D1, D2: character or token expected.
6423   DCD4             ;                       D3: Distance Address
6424   DCD4             ; 
6425   DCD4             ;    Entry Parameter: Y-Reg points to main memory
6426   DCD4             ; Modified Registers: Y-Reg has been incremented.
6427   DCD4             ;   Error conditions: None
6428   DCD4             ;------------------------------------------------------------------------------ 
6429   DCD4             CHECK_CHAR_TOKEN: ; $DCD4 (C2)
6430   DCD4 C0              VEJ  (C0)
6431   DCD5             
6432   DCD5             ;------------------------------------------------------------------------------ 
6433   DCD5             ; $DCD5 (C4) - Checks tokens/characters in U-Reg with data bytes If !=, branch.
6434   DCD5             ;------------------------------------------------------------------------------ 
6435   DCD5             CHECK_CHAR_TOKEN_1:
6436   DCD5 FD 0A           POP  X
6437   DCD7 45              LIN  X
6438   DCD8 B7 E0           CPI  A,$E0
6439   DCDA 83 03           BCS CHECK_CHAR_TOKEN_2 ; $DCDF
6440   DCDC 46              DEC  X
6441   DCDD B5 00           LDI  A,$00
6442   DCDF             
6443   DCDF             CHECK_CHAR_TOKEN_2: ; $DCDF
6444   DCDF A6              CPA  UH
6445   DCE0 89 14           BZR RTN_2_MAIN_3 ; $DCF6
6446   DCE2 45              LIN  X
6447   DCE3 26              CPA  UL
6448   DCE4 89 1D           BZR RTN_2_DA_2 ; $DD03
6449   DCE6             
6450   DCE6             CHECK_CHAR_TOKEN_3: ; $DCE6
6451   DCE6 44              INC  X
6452   DCE7 FD 5E           STX  P
6453   DCE9 FD 0A           POP  X
6454   DCEB 8E 04           BCH RTN_2_MAIN_1 ; $DCF1
6455   DCED             
6456   DCED             
6457   DCED             
6458   DCED             ;------------------------------------------------------------------------------
6459   DCED             ; $DCE9 (4C) - Return to a main program (after the last data byte)
6460   DCED             ;            Address:	(4C) DCE9
6461   DCED             ;   Entry parameters: The stack must show an address of main program pointing
6462   DCED             ;                     to the last of data bytes following the subprogram call.
6463   DCED             ; 
6464   DCED             ; Modified registers: X-Reg contains return address
6465   DCED             ;   Error conditions: None
6466   DCED             ;------------------------------------------------------------------------------
6467   DCED             RTN_2_MAIN: ; $DCE9
6468   DCED FD 0A           POP  X
6469   DCEF FD 1A           POP  Y
6470   DCF1             
6471   DCF1             ;------------------------------------------------------------------------------
6472   DCF1             ; $DCF1 (4E) - Return to main program (after data byte). 
6473   DCF1             ;              Restore Basic program pointer
6474   DCF1             ;            Address:  (4E) DCED
6475   DCF1             ;   Entry parameters:  As (4C). In addition, Basic program pointer is on stack.
6476   DCF1             ; 
6477   DCF1             ; Modified registers:  Basic program pointer (Y-Reg) restored, else like (4C).
6478   DCF1             ;   Error conditions:  None
6479   DCF1             ;------------------------------------------------------------------------------
6480   DCF1             RTN_2_MAIN_1: ; $DCF1
6481   DCF1 FD 0A           POP  X
6482   DCF3 9E 0F           BCH CHECK_CHAR_TOKEN_3 ; $DCE6
6483   DCF5             
6484   DCF5             RTN_2_MAIN_2: ; $DCF5
6485   DCF5 44              INC  X
6486   DCF6             
6487   DCF6             RTN_2_MAIN_3: ; $DCF6
6488   DCF6 44              INC  X
6489   DCF7 8E 0A           BCH RTN_2_DA_2 ; $DD03
6490   DCF9             
6491   DCF9             ;------------------------------------------------------------------------------
6492   DCF9             ; (48) Return to a main program (relative jump)
6493   DCF9             ;            Address: (48) DCF9
6494   DCF9             ;   Entry parameters: The stack must show an address of the main program that 
6495   DCF9             ;                     points to last of data bytes following subprogram call.
6496   DCF9             ; 
6497   DCF9             ; Modified registers: X-Reg contains address where the main program continues.
6498   DCF9             ;   Error conditions: None
6499   DCF9             ;------------------------------------------------------------------------------
6500   DCF9             RTN_2_MAIN_4: ; $DCF9
6501   DCF9 FD 0A           POP  X
6502   DCFB 8E 04           BCH RTN_2_DA_1 ; $DD01
6503   DCFD             
6504   DCFD             
6505   DCFD             
6506   DCFD             ;------------------------------------------------------------------------------
6507   DCFD             ; (4A) $DCFD - Return to distance address. Restore Y-Reg $DCFD
6508   DCFD             ;------------------------------------------------------------------------------
6509   DCFD             RTN_2_DA:
6510   DCFD FD 0A           POP  X
6511   DCFF FD 1A           POP  Y
6512   DD01             
6513   DD01             RTN_2_DA_1: ; $DD01
6514   DD01 FD 0A           POP  X
6515   DD03             
6516   DD03             RTN_2_DA_2: ; $DD03
6517   DD03 45              LIN  X
6518   DD04 FD CA           ADR  X
6519   DD06 FD 5E           STX  P
6520   DD08             
6521   DD08             
6522   DD08             
6523   DD08             ;------------------------------------------------------------------------------
6524   DD08             ; $DD08 (C0) - Load next character/token into U-REG
6525   DD08             ;------------------------------------------------------------------------------
6526   DD08             LOAD_NEXT:   
6527   DD08 68 00           LDI  UH,$00
6528   DD0A 55              LIN  Y
6529   DD0B B7 E0           CPI  A,$E0
6530   DD0D 81 02           BCR LOAD_NEXT_1 ; $DD11
6531   DD0F 28              STA  UH
6532   DD10 55              LIN  Y
6533   DD11             
6534   DD11             LOAD_NEXT_1: ; $DD11
6535   DD11 2A              STA  UL
6536   DD12 9A              RTN
6537   DD13             
6538   DD13             
6539   DD13             
6540   DD13             ;------------------------------------------------------------------------------
6541   DD13             ; $DD13 (C6) - Decrements Y-Reg for tokens in U-Reg by 2-bytes, or by 1-byte 
6542   DD13             ; for characters. Correct program pointer
6543   DD13             ;------------------------------------------------------------------------------
6544   DD13             DEC_YREG:  
6545   DD13 6C 00           CPI  UH,$00
6546   DD15 8B 01           BZS DEC_YREG_1 ; $DD18
6547   DD17 56              DEC  Y
6548   DD18             
6549   DD18             DEC_YREG_1: ; $DD18
6550   DD18 56              DEC  Y
6551   DD19 9A              RTN
6552   DD1A             
6553   DD1A             
6554   DD1A             
6555   DD1A             ;------------------------------------------------------------------------------
6556   DD1A             ; (D2) Convert AR-X with subroutine DD2D (10) if it is integer value.
6557   DD1A             ; Else if address of a string is there, a branch is made to offset address D1.
6558   DD1A             ;            Address:	DD1A (D2)
6559   DD1A             ; 	                    D1: Distance Address if AR-X contains string address
6560   DD1A             ;                       D2: Data byte for possibly called subprogram DD2D (10)
6561   DD1A             ;
6562   DD1A             ;    Entry Parameter:	None
6563   DD1A             ; Modified Registers:	X-Reg, U-Reg, Accumulator
6564   DD1A             ;   Error conditions:	None
6565   DD1A             ;------------------------------------------------------------------------------
6566   DD1A             CONV_ARX_IF_INT: ; $DD1A (D2)
6567   DD1A A5 7A 04        LDA  (ARX + $04)
6568   DD1D B7 B2           CPI  A,$B2
6569   DD1F 81 02           BCR CONV_ARX_IF_INT_1 ; $DD23
6570   DD21 99 22           BZR RTN_2_DA_1 ; $DD01
6571   DD23             
6572   DD23             CONV_ARX_IF_INT_1: ; $DD23
6573   DD23 FD 0A           POP  X
6574   DD25 44              INC  X
6575   DD26 91 42           BCR CHECK_CHAR_TOKEN_3 ; $DCE6
6576   DD28 FD 88           PSH  X
6577   DD2A F4              VEJ  (F4) \ 
6577   DD2B             
6578   DD2B 7A 05               AWRD(ARX + $05)
6579   DD2D                 
6580   DD2D             
6581   DD2D             
6582   DD2D             ;------------------------------------------------------------------------------
6583   DD2D             ; (10)  Convert U-Reg according to data bytes
6584   DD2D             ;       00: Save U-Reg to AR-X in BCD format. (0-65535)
6585   DD2D             ;       40: Save to (Y-Reg) in ASCII
6586   DD2D             ;       8D: Save U-Reg in AR-X as BCD. (integer number)
6587   DD2D             ;       E0: Save to Y-Reg with 2 digits in ASCII
6588   DD2D             ;------------------------------------------------------------------------------
6589   DD2D             CONV_UREG:   
6590   DD2D FD 28           LDX  U ; $DD2D
6591   DD2F             
6592   DD2F             ;------------------------------------------------------------------------------
6593   DD2F             ; $DD2F Like subroutine (10) $DD2D
6594   DD2F             ;------------------------------------------------------------------------------
6595   DD2F             CONV_UREG_1:
6596   DD2F FD 2A           POP  U
6597   DD31 65              LIN  U
6598   DD32 FD A8           PSH  U
6599   DD34 FD 98           PSH  Y
6600   DD36 FD C8           PSH  A
6601   DD38 FD 88           PSH  X
6602   DD3A EC              VEJ  (EC)
6603   DD3B BE F7 5B        SJP  (CLR_ARITHMETIC_REGS_1)
6604   DD3E EB 7A 0C 10     ORI  (ARZ + $04),$10
6605   DD42 FD 2A           POP  U
6606   DD44 FD 8A           POP  A
6607   DD46 D9              SHL
6608   DD47 FD C8           PSH  A
6609   DD49 58 7A           LDI  YH,$7A
6610   DD4B 81 0B           BCR CONV_UREG_2 ; $DD58
6611   DD4D 6C 80           CPI  UH,$80
6612   DD4F 81 07           BCR CONV_UREG_2 ; $DD58
6613   DD51 BE DA A8        SJP  (TWOSCOMP)
6614   DD54 EB 7A 01 80     ORI  (ARX + $01),$80
6615   DD58             
6616   DD58             CONV_UREG_2: ; $DD58
6617   DD58 4A 04           LDI  XL,$04
6618   DD5A 5A 0C           LDI  YL,$0C
6619   DD5C 24              LDA  UL
6620   DD5D 89 38           BZR CONV_UREG_7 ; $DD97
6621   DD5F A4              LDA  UH
6622   DD60 89 36           BZR CONV_UREG_8 ; $DD98
6623   DD62 04              LDA  XL
6624   DD63 AE 7A 00        STA  (ARX)
6625   DD66 BE F6 5D        SJP  (ARX_2_BCD_ABS)
6626   DD69 A5 7A 00        LDA  (ARX)
6627   DD6C 2A              STA  UL
6628   DD6D FD 8A           POP  A
6629   DD6F D9              SHL
6630   DD70 FD 1A           POP  Y
6631   DD72 81 22           BCR CONV_UREG_6 ; $DD96
6632   DD74 4A 01           LDI  XL,$01
6633   DD76 D9              SHL
6634   DD77 81 0E           BCR CONV_UREG_4 ; $DD87
6635   DD79 47              LDE  X
6636   DD7A D9              SHL
6637   DD7B B5 20           LDI  A,$20
6638   DD7D 81 02           BCR CONV_UREG_3 ; $DD81
6639   DD7F B5 2D           LDI  A,$2D
6640   DD81             
6641   DD81             CONV_UREG_3: ; $DD81
6642   DD81 51              SIN  Y
6643   DD82 24              LDA  UL
6644   DD83 6A 01           LDI  UL,$01
6645   DD85 8B 0A           BZS CONV_UREG_5 ; $DD91
6646   DD87             
6647   DD87             CONV_UREG_4: ; $DD87
6648   DD87 4A 04           LDI  XL,$04
6649   DD89 D7              DRL  (X)
6650   DD8A 46              DEC  X
6651   DD8B D7              DRL  (X)
6652   DD8C 46              DEC  X
6653   DD8D D7              DRL  (X)
6654   DD8E F1              AEX
6655   DD8F B9 0F           ANI  A,$0F
6656   DD91             
6657   DD91             CONV_UREG_5: ; $DD91
6658   DD91 BB 30           ORI  A,$30
6659   DD93 51              SIN  Y
6660   DD94 88 0F           LOP  UL,CONV_UREG_4 ; $DD87
6661   DD96             
6662   DD96             CONV_UREG_6: ; $DD96
6663   DD96 9A              RTN
6664   DD97             
6665   DD97             CONV_UREG_7: ; $DD97
6666   DD97 A4              LDA  UH
6667   DD98             
6668   DD98             CONV_UREG_8: ; $DD98
6669   DD98 D5              SHR
6670   DD99 28              STA  UH
6671   DD9A 24              LDA  UL
6672   DD9B D1              ROR
6673   DD9C 2A              STA  UL
6674   DD9D 81 0B           BCR CONV_UREG_9 ; $DDAA
6675   DD9F F9              REC
6676   DDA0 57              LDE  Y
6677   DDA1 8C              DCA  (X)
6678   DDA2 43              SDE  X
6679   DDA3 57              LDE  Y
6680   DDA4 8C              DCA  (X)
6681   DDA5 43              SDE  X
6682   DDA6 55              LIN  Y
6683   DDA7 8C              DCA  (X)
6684   DDA8 0E              STA  (X)
6685   DDA9 54              INC  Y
6686   DDAA             
6687   DDAA             CONV_UREG_9: ; $DDAA
6688   DDAA 15              LDA  (Y)
6689   DDAB 9C              DCA  (Y)
6690   DDAC 53              SDE  Y
6691   DDAD 15              LDA  (Y)
6692   DDAE 9C              DCA  (Y)
6693   DDAF 53              SDE  Y
6694   DDB0 15              LDA  (Y)
6695   DDB1 9C              DCA  (Y)
6696   DDB2 1E              STA  (Y)
6697   DDB3 9E 5D           BCH CONV_UREG_2 ; $DD58
6698   DDB5             
6699   DDB5             
6700   DDB5             
6701   DDB5             ;------------------------------------------------------------------------------
6702   DDB5             ; $DDB5 (F6) - U-Reg transferred to main memory
6703   DDB5             ;            Address: DDB5 (F6)
6704   DDB5             ;          Parameter: D1 & D2 identify address to which U-Reg is transferred
6705   DDB5             ; 
6706   DDB5             ; Modified Registers: X-Reg contains address of 2nd memory cell, accumulator
6707   DDB5             ;   Error conditions: None
6708   DDB5             ;------------------------------------------------------------------------------
6709   DDB5             UREG_2_MEM: ; $DDB5
6710   DDB5 FD 0A           POP  X
6711   DDB7 45              LIN  X
6712   DDB8 44              INC  X
6713   DDB9 FD 88           PSH  X
6714   DDBB 46              DEC  X
6715   DDBC FD C8           PSH  A
6716   DDBE 05              LDA  (X)
6717   DDBF 0A              STA  XL
6718   DDC0 FD 8A           POP  A
6719   DDC2 08              STA  XH
6720   DDC3 A4              LDA  UH
6721   DDC4 41              SIN  X
6722   DDC5 24              LDA  UL
6723   DDC6 0E              STA  (X)
6724   DDC7 9A              RTN
6725   DDC8             
6726   DDC8             
6727   DDC8             
6728   DDC8             ;------------------------------------------------------------------------------
6729   DDC8             ; $DDC8 (CC) - Load X-Reg with 16-bit value from memory page 78XX
6730   DDC8             ;            Address: DDC8 (CC)
6731   DDC8             ;                     D1: Low byte of address in memory page 78XX
6732   DDC8             ;   Entry parameters: None
6733   DDC8             ;
6734   DDC8             ; Modified registers: X-Reg contains value from (7801 f.). Accumulator includes (78D1)
6735   DDC8             ;   Error conditions: None
6736   DDC8             ;------------------------------------------------------------------------------
6737   DDC8             LOAD_XREG:   
6738   DDC8 FD 0A           POP  X
6739   DDCA 45              LIN  X
6740   DDCB FD 88           PSH  X
6741   DDCD 0A              STA  XL
6742   DDCE 48 78           LDI  XH,$78
6743   DDD0 45              LIN  X
6744   DDD1 FD C8           PSH  A
6745   DDD3 05              LDA  (X)
6746   DDD4 0A              STA  XL
6747   DDD5 FD 8A           POP  A
6748   DDD7 08              STA  XH
6749   DDD8 9A              RTN
6750   DDD9             
6751   DDD9             
6752   DDD9             
6753   DDD9             ;------------------------------------------------------------------------------
6754   DDD9             ; $DDD9(08) - Transfers result from AR-X to a fixed variable or clock module
6755   DDD9             ;            Address: DDD9 (08)
6756   DDD9             ;                     Distance Address
6757   DDD9             ;   Entry parameters: AR-X contains BCD value, integer value or CSI (7883 ff.) 
6758   DDD9             ;                     contains pointer of prepared variable with bit 7 of 
6759   DDD9             ;                     address set if variable is not already set up in variable 
6760   DDD9             ;                     memory. If there is a pointer greater than DB00 in 
6761   DDD9             ;                     (7883 f.), the clock module is written with value from 
6762   DDD9             ;                     AR-X. The subprogram checks whether the variable type of 
6763   DDD9             ;                     prepared variable (output variable) matches that in AR-X.
6764   DDD9             ; 
6765   DDD9             ; Modified registers: X-Reg contains return address.
6766   DDD9             ;                     Y-Reg pointer to main memory.
6767   DDD9             ;   Error conditions: If an error is detected (wrong format, insufficient 
6768   DDD9             ;                     variable memory or invalid value for the clock module), 
6769   DDD9             ;                     the process continues with the distance address D1.
6770   DDD9             ;------------------------------------------------------------------------------
6771   DDD9             ARX_2_VAR: ; $DDD9
6772   DDD9 FD 98           PSH  Y
6773   DDDB CD 26           VMJ  ($26)
6774   DDDD 00              SBC  XL
6775   DDDE D1              ROR
6776   DDDF AD 78 85        EOR  (CURVARTYPE) ; $7885
6777   DDE2 D9              SHL
6778   DDE3 68 07           LDI  UH,$07
6779   DDE5 C3 4A           VCS  ($4A) ;($4A)($25)
6780   DDE7 CC              VEJ  (CC) \ 
6780   DDE8             
6781   DDE8 83                  ABYTL(CURVARADD_H) ; $7883
6782   DDE9 4C 80           CPI  XH,$80
6783   DDEB 81 0B           BCR ARX_2_VAR_1 ; $DDF8
6784   DDED 4C DB           CPI  XH,$DB
6785   DDEF 83 2C           BCS ARX_2_VAR_5 ;  $DE1D
6786   DDF1 BE D3 71        SJP  (RES_VAR_SPACE) ; $D371
6787   DDF4 C3 4A           VCS  ($4A) ;($4A)($25)
6788   DDF6 FD 18           LDX  Y
6789   DDF8             
6790   DDF8             ARX_2_VAR_1: ; $DDF8
6791   DDF8 ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
6792   DDFC 8B 05           BZS ARX_2_VAR_2 ; $DE03
6793   DDFE BE DC 0C        SJP  (ARX_FRM_MEM) ; $DC0C
6794   DE01 CD 4E           VMJ  ($4E) ; ($4E)($27)
6795   DE03             
6796   DE03             ARX_2_VAR_2: ; $DE03
6797   DE03 FD 5A           STX  Y
6798   DE05 DC              VEJ  (DC)
6799   DE06 FB              SEC
6800   DE07 A1 78 85        SBC  (CURVARTYPE); $7885
6801   DE0A 68 00           LDI  UH,$00
6802   DE0C 81 06           BCR ARX_2_VAR_3 ; $DE14
6803   DE0E A5 78 85        LDA  (CURVARTYPE); $7885
6804   DE11 2A              STA  UL
6805   DE12 68 01           LDI  UH,$01
6806   DE14             
6807   DE14             ARX_2_VAR_3: ; $DE14
6808   DE14 BE D0 49        SJP  (SYSMSG_3)
6809   DE17 A4              LDA  UH
6810   DE18 89 01           BZR ARX_2_VAR_4 ; $DE1B
6811   DE1A 1E              STA  (Y)
6812   DE1B             
6813   DE1B             ARX_2_VAR_4: ; $DE1B
6814   DE1B CD 4E           VMJ  ($4E) ; ($4E)($27)
6815   DE1D             
6816   DE1D             ARX_2_VAR_5: ; $DE1D
6817   DE1D E6              VEJ  (E6)
6818   DE1E A5 7A 00        LDA  (ARX)
6819   DE21 BF 80           BII  A,$80
6820   DE23 89 08           BZR ARX_2_VAR_7 ; $DE2D
6821   DE25 B1 06           SBI  A,$06
6822   DE27 81 0C           BCR ARX_2_VAR_8 ; $DE35
6823   DE29             
6824   DE29             ARX_2_VAR_6: ; $DE29
6825   DE29 68 17           LDI  UH,$17
6826   DE2B CD 4A           VMJ  ($4A) ; ($4A)($25)
6827   DE2D             
6828   DE2D             ARX_2_VAR_7: ; $DE2D
6829   DE2D B7 FC           CPI  A,$FC
6830   DE2F 68 F6           LDI  UH,$F6
6831   DE31 81 03           BCR ARX_2_VAR_9 ; $DE36
6832   DE33 B3 F9           ADI  A,$F9
6833   DE35             
6834   DE35             ARX_2_VAR_8: ; $DE35
6835   DE35 28              STA  UH
6836   DE36             
6837   DE36             ARX_2_VAR_9: ; $DE36
6838   DE36 48 7A           LDI  XH,$7A
6839   DE38             
6840   DE38             ARX_2_VAR_10: ; $DE38
6841   DE38 4A 02           LDI  XL,$02
6842   DE3A FD 60           INC  UH
6843   DE3C 83 0A           BCS ARX_2_VAR_12 ; $DE48
6844   DE3E 6A 04           LDI  UL,$04
6845   DE40 B5 00           LDI  A,$00
6846   DE42             
6847   DE42             ARX_2_VAR_11: ; $DE42
6848   DE42 D3              DRR  (X)
6849   DE43 44              INC  X
6850   DE44 88 04           LOP  UL,ARX_2_VAR_11 ; $DE42
6851   DE46 9E 10           BCH ARX_2_VAR_10 ; $DE38
6852   DE48             
6853   DE48             ARX_2_VAR_12: ; $DE48
6854   DE48 05              LDA  (X)
6855   DE49 B7 13           CPI  A,$13
6856   DE4B 93 24           BCS ARX_2_VAR_6 ; $DE29
6857   DE4D B7 10           CPI  A,$10
6858   DE4F 81 02           BCR ARX_2_VAR_13 ; $DE53
6859   DE51 B3 09           ADI  A,$09
6860   DE53             
6861   DE53             ARX_2_VAR_13: ; $DE53
6862   DE53 B9 0F           ANI  A,$0F
6863   DE55 F1              AEX
6864   DE56 0E              STA  (X)
6865   DE57 BE E5 9A        SJP  (ARX_2_TIME)
6866   DE5A CD 56           VMJ  ($56) ; ($56)($2B)
6867   DE5C CD 4E           VMJ  ($4E) ; ($4E)($27)
6868   DE5E             
6869   DE5E             
6870   DE5E             
6871   DE5E             ;------------------------------------------------------------------------------
6872   DE5E             ; $DE5E (0A) - Variable, whose address is in AR-X, is transferred numerically 
6873   DE5E             ;              to AR-X, if string: determine length
6874   DE5E             ;            Address: DE5E (0A)
6875   DE5E             ;   Entry parameters: AR-X must contain the CSI of a variable. If the clock 
6876   DE5E             ;                     module is to be read out, the high byte of the address 
6877   DE5E             ;                     must be greater than DB.
6878   DE5E             ; 
6879   DE5E             ; Modified registers: Variable was transferred to AR-X. X-Reg points to the 1st
6880   DE5E             ;                     byte after the transmitted value. Y Reg on 7A08
6881   DE5E             ;   Error conditions: Like (CE)
6882   DE5E             ;------------------------------------------------------------------------------
6883   DE5E             VAR_2_ARX: ; $DE5E
6884   DE5E DC              VEJ  (DC) 
6885   DE5F 4C 80           CPI  XH,$80
6886   DE61 B9 80           ANI  A,$80
6887   DE63 83 15           BCS VAR_2_ARX_4 ; $DE7A
6888   DE65 8B 03           BZS VAR_2_ARX_1 ; $DE6A
6889   DE67 BA DC 20        JMP  ARX_FRM_BSTK_1 ; $DC20
6890   DE6A             
6891   DE6A             VAR_2_ARX_1: ; $DE6A
6892   DE6A FD 88           PSH  X
6893   DE6C 62              DEC  UL
6894   DE6D 68 00           LDI  UH,$00
6895   DE6F             
6896   DE6F             VAR_2_ARX_2: ; $DE6F
6897   DE6F 45              LIN  X
6898   DE70 8B 04           BZS VAR_2_ARX_3 ; $DE76
6899   DE72 FD 60           INC  UH
6900   DE74 88 07           LOP  UL,VAR_2_ARX_2 ; $DE6F
6901   DE76             
6902   DE76             VAR_2_ARX_3: ; $DE76
6903   DE76 FD 0A           POP  X
6904   DE78 8E 34           BCH CREATE_CSI_3 ; $DEAE
6905   DE7A             
6906   DE7A             VAR_2_ARX_4: ; $DE71
6907   DE7A 8B 33           BZS CREATE_CSI_4 ; $DEAF
6908   DE7C 4C DB           CPI  XH,$DB
6909   DE7E 83 02           BCS BCMD_TIME
6910   DE80 EC              VEJ  (EC)
6911   DE81 9A              RTN
6912   DE82             
6913   DE82             
6914   DE82             
6915   DE82             ;------------------------------------------------------------------------------
6916   DE82             ; $DE82 - Basic command TIME
6917   DE82             ;------------------------------------------------------------------------------
6918   DE82             BCMD_TIME:
6919   DE82 EC              VEJ  (EC)
6920   DE83 BE E5 B4        SJP  (TIME2ARX)
6921   DE86 4A 02           LDI  XL,$02
6922   DE88 B5 00           LDI  A,$00
6923   DE8A D3              DRR  (X)
6924   DE8B B7 A0           CPI  A,$A0
6925   DE8D 81 02           BCR BCMD_TIME_1 ; $DE91
6926   DE8F 4F 06           ADI  (X),$06
6927   DE91             
6928   DE91             BCMD_TIME_1: ; $DE91
6929   DE91 EB 7A 00 05     ORI  (ARX),$05
6930   DE95 E8              VEJ  (E8)
6931   DE96 9A              RTN
6932   DE97             
6933   DE97             
6934   DE97             
6935   DE97             ;------------------------------------------------------------------------------
6936   DE97             ; $DE97 (0C) - Gets length of the string from U-Reg and creates CSI in AR-X.
6937   DE97             ;------------------------------------------------------------------------------
6938   DE97             CREATE_CSI:
6939   DE97 6A 50           LDI  UL,$50
6940   DE99 FD 18           LDX  Y
6941   DE9B 68 00           LDI  UH,$00
6942   DE9D             
6943   DE9D             CREATE_CSI_1: ; $DE9D
6944   DE9D 62              DEC  UL
6945   DE9E 81 0E           BCR CREATE_CSI_3 ; $DEAE
6946   DEA0 55              LIN  Y
6947   DEA1 B7 22           CPI  A,$22
6948   DEA3 8B 09           BZS CREATE_CSI_3 ; $DEAE
6949   DEA5 B7 0D           CPI  A,$0D
6950   DEA7 8B 04           BZS CREATE_CSI_2 ; $DEAD
6951   DEA9 FD 60           INC  UH
6952   DEAB 9E 10           BCH CREATE_CSI_1 ; $DE9D
6953   DEAD             
6954   DEAD             CREATE_CSI_2: ; $DEAD
6955   DEAD 56              DEC  Y
6956   DEAE             
6957   DEAE             CREATE_CSI_3: ; $DEAE
6958   DEAE A4              LDA  UH
6959   DEAF             
6960   DEAF             
6961   DEAF             ;------------------------------------------------------------------------------
6962   DEAF             ; (24) Creates CSI in AR-X
6963   DEAF             ;            Address: DEAF (24)
6964   DEAF             ;          Parameter: X-Reg contains the start address of the string
6965   DEAF             ;                     Accumulator contains the string length
6966   DEAF             ; Modified Registers: (7A04) = D0
6967   DEAF             ;                     (7A05 - 7A06) = address of the string
6968   DEAF             ;                     (7A07) = String length
6969   DEAF             ;                      U-Reg = 7A04, Accumulator
6970   DEAF             ;   Error conditions: None
6971   DEAF             ;------------------------------------------------------------------------------
6972   DEAF             CREATE_CSI_4: ; $DEAF
6973   DEAF 6A 07           LDI  UL,$07
6974   DEB1 68 7A           LDI  UH,$7A
6975   DEB3 63              SDE  U
6976   DEB4 04              LDA  XL
6977   DEB5 63              SDE  U
6978   DEB6 84              LDA  XH
6979   DEB7 63              SDE  U
6980   DEB8 B5 D0           LDI  A,$D0
6981   DEBA 2E              STA  (U)
6982   DEBB 9A              RTN
6983   DEBC             
6984   DEBC             
6985   DEBC             ;------------------------------------------------------------------------------
6986   DEBC             ; (DC) $DEBC - Loads CSI from AR-X address to X-Reg length to UL and accumulator
6987   DEBC             ;------------------------------------------------------------------------------
6988   DEBC             CSI_ARX_2_XREG: 
6989   DEBC                 
6990   DEBC 6A 05           LDI  UL,$05
6991   DEBE             
6992   DEBE             ; Transfers from address 7A UL, 16-bit address to X-Reg and length to UL.
6993   DEBE             CSI_ARX_2_XREG_1: ; $DEBE
6994   DEBE 68 7A           LDI  UH,$7A
6995   DEC0 65              LIN  U
6996   DEC1 08              STA  XH
6997   DEC2 65              LIN  U
6998   DEC3 0A              STA  XL
6999   DEC4 25              LDA  (U)
7000   DEC5 2A              STA  UL
7001   DEC6 9A              RTN
7002   DEC7             
7003   DEC7             
7004   DEC7             
7005   DEC7             ;------------------------------------------------------------------------------
7006   DEC7             ; $DEC7 - Get program pointer from basic stack
7007   DEC7             ;------------------------------------------------------------------------------
7008   DEC7             PRG_PNT_FRM_BSTK: 
7009   DEC7 D4              VEJ  (D4) \ ABYT($A0)
7009   DEC8 A0          
7010   DEC9 A5 78 82        LDA  (STK_PTR_GSB_FOR)
7011   DECC 2A              STA  UL
7012   DECD 68 7A           LDI  UH,$7A
7013   DECF 8E 08           BCH PRG_PNT_FRM_BSTK_2 ; $DED9
7014   DED1             
7015   DED1             
7016   DED1             ;------------------------------------------------------------------------------
7017   DED1             ; $DED1 (D6) - Loads address pointer from memory to AR-Y: 
7018   DED1             ;              A6=PROGRAM, AC=BREAK, B8=0N ERROR.
7019   DED1             ;------------------------------------------------------------------------------
7020   DED1             PRG_PNT_FRM_BSTK_1:   
7021   DED1 FD 0A           POP  X
7022   DED3 45              LIN  X
7023   DED4 2A              STA  UL
7024   DED5 FD 88           PSH  X
7025   DED7 68 78           LDI  UH,$78
7026   DED9             
7027   DED9             PRG_PNT_FRM_BSTK_2: ; $DED9
7028   DED9 4A 9C           LDI  XL,$9C
7029   DEDB 48 78           LDI  XH,$78
7030   DEDD 65              LIN  U
7031   DEDE 18              STA  YH
7032   DEDF 65              LIN  U
7033   DEE0 1A              STA  YL
7034   DEE1 8E 10           BCH PROC_STAT_2_MEM_3 ; $DEF3
7035   DEE3             
7036   DEE3             
7037   DEE3             
7038   DEE3             ;------------------------------------------------------------------------------
7039   DEE3             ; $DEE3 (D4) - Save the pointer of the current processing status to memory
7040   DEE3             ;            Address: DEE3 (D4)
7041   DEE3             ;                     D1 determines which area of program pointer is updated.
7042   DEE3             ;                     D1 can assume the following values:
7043   DEE3             ;                     A0: The address of the line currently being processed is 
7044   DEE3             ;                         transferred to (78A0-78A1). Contents of the Y Reg. 
7045   DEE3             ;                         The current line number is taken from (789C-789D) and 
7046   DEE3             ;                         transferred to (78A2 f.). The program start address
7047   DEE3             ;                         is taken from (789E f.) and transferred to (78A4 f.).
7048   DEE3             ;                     AC: Information about a BREAK that has been carried out 
7049   DEE3             ;                         is saved in same way as data byte A0 to (78AC ff.).
7050   DEE3             ;                     B2: Similar ERROR information as (78B2 ff.)
7051   DEE3             ;   Entry parameters: Y-Reg points to Basic main memory
7052   DEE3             ;
7053   DEE3             ; Modified registers: X-Reg, Y-Reg
7054   DEE3             ;   Error conditions: None
7055   DEE3             ;------------------------------------------------------------------------------
7056   DEE3             PROC_STAT_2_MEM:
7057   DEE3 FD 2A           POP  U
7058   DEE5 65              LIN  U
7059   DEE6 0A              STA  XL
7060   DEE7 FD A8           PSH  U
7061   DEE9 48 78           LDI  XH,$78
7062   DEEB             
7063   DEEB             PROC_STAT_2_MEM_1: ; $DEEB
7064   DEEB 68 78           LDI  UH,$78
7065   DEED 6A 9C           LDI  UL,$9C
7066   DEEF 94              LDA  YH
7067   DEF0 41              SIN  X
7068   DEF1 14              LDA  YL
7069   DEF2             
7070   DEF2             PROC_STAT_2_MEM_2: ; $DEF2
7071   DEF2 41              SIN  X
7072   DEF3             
7073   DEF3             PROC_STAT_2_MEM_3: ; $DEF3
7074   DEF3 65              LIN  U
7075   DEF4 41              SIN  X
7076   DEF5 65              LIN  U
7077   DEF6 41              SIN  X
7078   DEF7 65              LIN  U
7079   DEF8 41              SIN  X
7080   DEF9 65              LIN  U
7081   DEFA 41              SIN  X
7082   DEFB 9A              RTN
7083   DEFC             
7084   DEFC             
7085   DEFC             
7086   DEFC             ;------------------------------------------------------------------------------
7087   DEFC             ; $DEFC - Write address, line #, and start address of nth instruction to BSTK
7088   DEFC             ;------------------------------------------------------------------------------
7089   DEFC             INST_2_BSTK: 
7090   DEFC C8              VEJ  (C8) \ 
7090   DEFD             
7091   DEFD 00                  ABRF(INST_2_BSTK_1) ; $DEFE
7092   DEFE             
7093   DEFE             ;------------------------------------------------------------------------------
7094   DEFE             ; $DEFE - Address, line number, program start of current instruction on BSTK
7095   DEFE             ;------------------------------------------------------------------------------
7096   DEFE             INST_2_BSTK_1: ; 
7097   DEFE CD 18           VMJ  ($18)
7098   DF00 CC              VEJ  (CC) \ 
7098   DF01             
7099   DF01 81                  ABYTL($7881)
7100   DF02 48 7A           LDI  XH,$7A
7101   DF04 9E 1B           BCH PROC_STAT_2_MEM_1 ; $DEEB
7102   DF06             
7103   DF06             
7104   DF06             ;------------------------------------------------------------------------------
7105   DF06             ; $DF06 - Transfers 3 addresses (program pointer) within memory map
7106   DF06             ;         Relocate 6 bytes starting from address 78UL to 78XL.
7107   DF06             ;------------------------------------------------------------------------------
7108   DF06             XFER_3_ADDR: ; 
7109   DF06 68 78           LDI  UH,$78
7110   DF08 48 78           LDI  XH,$78
7111   DF0A 65              LIN  U
7112   DF0B 41              SIN  X
7113   DF0C 65              LIN  U
7114   DF0D 9E 1D           BCH PROC_STAT_2_MEM_2 ; $DEF2
7115   DF0F             
7116   DF0F             
7117   DF0F             
7118   DF0F             ;------------------------------------------------------------------------------
7119   DF0F             ; $DF0F (36) - Create CSI in AR-X for string. C=0 if no string found
7120   DF0F             ;            Address: DF0F (36)
7121   DF0F             ;   Entry parameters: Y-Reg points to double quotes or name of string variable 
7122   DF0F             ;                     in main memory.
7123   DF0F             ;
7124   DF0F             ; Modified registers: AR-X contains the CSI of the string
7125   DF0F             ;   Error conditions: If no string was recognized, Carry=0
7126   DF0F             ;------------------------------------------------------------------------------
7127   DF0F             STRING_2_CSI: ; 
7128   DF0F FD 98           PSH  Y
7129   DF11 C2              VEJ  (C2) \ 
7129   DF12             
7130   DF12 22                  ACHR($22) \ 
7130   DF13             
7131   DF13 04                  ABRF(STRING_2_CSI_1) ; $DF18
7132   DF14 CD 0C           VMJ  ($0C)
7133   DF16 8E 04           BCH STRING_2_CSI_2 ; $DF1C
7134   DF18             
7135   DF18             STRING_2_CSI_1: ; $DF18
7136   DF18 C6              VEJ  (C6)
7137   DF19 CE              VEJ  (CE) \ 
7137   DF1A             
7138   DF1A 40                  ABYT($40) \ 
7138   DF1B             
7139   DF1B 03                  ABRF(STRING_2_CSI_3) ; $DF1F
7140   DF1C             
7141   DF1C             STRING_2_CSI_2: ; $DF1C
7142   DF1C FB              SEC
7143   DF1D 8E 01           BCH STRING_2_CSI_4 ; $DF20
7144   DF1F             
7145   DF1F             STRING_2_CSI_3: ; $DF1F
7146   DF1F F9              REC
7147   DF20             
7148   DF20             STRING_2_CSI_4: ; $DF20
7149   DF20 FD 0A           POP  X
7150   DF22 9A              RTN
7151   DF23             
7152   DF23             
7153   DF23             ;------------------------------------------------------------------------------
7154   DF23             ; $DF23 (34) - Syntax check and multiple branching
7155   DF23             ;              Multiple branching after character test
7156   DF23             ; 
7157   DF23             ; Address:	DF23 (34)
7158   DF23             ;      D1: Number of character tests +1
7159   DF23             ;      D2: Sign that the accumulator is being checked for agreement.
7160   DF23             ;      D3: Relative jump by D3 bytes if agreement with the accumulator was
7161   DF23             ;          found. Each additional character that is tested for agreement
7162   DF23             ;          with the accumulator always occupies two bytes analogous to D2 & D3
7163   DF23             ;                     
7164   DF23             ; 
7165   DF23             ;    Entry Parameter: Accumulator contains characters whose occurrences are 
7166   DF23             ;                     searched for in the branching table. The character to be 
7167   DF23             ;                     tested should be stored in UH, otherwise it will be lost.
7168   DF23             ; Modified Registers: X-Reg contains return address. U Reg, accumulator
7169   DF23             ;   Error conditions: None
7170   DF23             ;------------------------------------------------------------------------------
7171   DF23             SWITCH_CASE: ; $DF23
7172   DF23 FD 0A           POP  X
7173   DF25 FD A8           PSH  U
7174   DF27 28              STA  UH
7175   DF28 45              LIN  X
7176   DF29 2A              STA  UL
7177   DF2A A4              LDA  UH
7178   DF2B             
7179   DF2B             SWITCH_CASE_1: ; $DF2B
7180   DF2B F7              CIN
7181   DF2C 8B 05           BZS SWITCH_CASE_2 ; $DF33
7182   DF2E 44              INC  X
7183   DF2F 88 06           LOP  UL,SWITCH_CASE_1 ; $DF2B
7184   DF31 8E 03           BCH SWITCH_CASE_3 ; $DF36
7185   DF33             
7186   DF33             SWITCH_CASE_2: ; $DF33
7187   DF33 45              LIN  X
7188   DF34 FD CA           ADR  X
7189   DF36             
7190   DF36             SWITCH_CASE_3: ; $DF36
7191   DF36 FD 2A           POP  U
7192   DF38 A4              LDA  UH
7193   DF39 FD 5E           STX  P
7194   DF3B             
7195   DF3B             
7196   DF3B             
7197   DF3B             ;------------------------------------------------------------------------------
7198   DF3B             ; (D8) Checks calculator mode $DF3B
7199   DF3B             ;            Address: DF3B (D8)
7200   DF3B             ; 
7201   DF3B             ;    Entry Parameter: None
7202   DF3B             ; Modified Registers: Zero flag= 1 if calculator is in direct mode
7203   DF3B             ;   Error conditions: None
7204   DF3B             ;------------------------------------------------------------------------------
7205   DF3B             CHECK_CALC_MODE: ; $DF38 (d8)
7206   DF3B A5 78 9D        LDA  (CURR_LINE_L)
7207   DF3E AB 78 9C        ORA  (CURR_LINE_H)
7208   DF41 9A              RTN
7209   DF42             
7210   DF42             
7211   DF42             
7212   DF42             ;------------------------------------------------------------------------------
7213   DF42             ; $DF42 - Syntax check: Checks if the string enclosed in “…” max 80 characters. 
7214   DF42             ;         Whether the program is running. If so, Z=0.
7215   DF42             ;------------------------------------------------------------------------------
7216   DF42             CHECK_QUOTES: ; 
7217   DF42 6A 50           LDI  UL,$50
7218   DF44             
7219   DF44             ;------------------------------------------------------------------------------
7220   DF44             ; $DF44 - As above, check whether the string is enclosed by “…”. If not UL=FF.
7221   DF44             ;------------------------------------------------------------------------------
7222   DF44             CHECK_QUOTES_1: ; 
7223   DF44 68 00           LDI  UH,$00
7224   DF46 62              DEC  UL
7225   DF47             
7226   DF47             CHECK_QUOTES_2: ; $DF47
7227   DF47 55              LIN  Y
7228   DF48 CD 34           VMJ  ($34) \ ABYT($03) \ ABYT($2C) \ 
7228   DF4A 03          
7228   DF4B 2C          
7228   DF4C             
7229   DF4C 0C                   ABRF(CHECK_QUOTES_5) \ ABYT($22) \ ABRF(CHECK_QUOTES_6) \ 
7229   DF4D 22          
7229   DF4E 0F          
7229   DF4F             
7230   DF4F 0D                   ABYT($0D) \ ABRF(CHECK_QUOTES_4) \ ABYT($3A) \ ABRF(CHECK_QUOTES_3)
7230   DF50 06          
7230   DF51 3A          
7230   DF52 02          
7231   DF53 9E 0E           BCH CHECK_QUOTES_2 ; $DF47
7232   DF55             
7233   DF55             CHECK_QUOTES_3: ; $DF55
7234   DF55 99 10           BZR CHECK_QUOTES_2 ; $DF47
7235   DF57             
7236   DF57             CHECK_QUOTES_4: ; $DF57
7237   DF57 56              DEC  Y
7238   DF58 9A              RTN
7239   DF59             
7240   DF59             CHECK_QUOTES_5: ; $DF59
7241   DF59 99 14           BZR CHECK_QUOTES_2 ; $DF47
7242   DF5B 88 16           LOP  UL,CHECK_QUOTES_2 ; $DF47
7243   DF5D 9A              RTN
7244   DF5E             
7245   DF5E             CHECK_QUOTES_6: ; $DF5E
7246   DF5E BD 01           EAI  $01
7247   DF60 28              STA  UH
7248   DF61 9E 1C           BCH CHECK_QUOTES_2 ; $DF47
7249   DF63             
7250   DF63             
7251   DF63             
7252   DF63             ;------------------------------------------------------------------------------
7253   DF63             ; (22) $DF63 - If string constant follows in main memory, save CSI to AR-X $DF63
7254   DF63             ;            Address:	DF63 (22)
7255   DF63             ; 
7256   DF63             ;    Entry Parameter:	Y-Reg must point to main memory
7257   DF63             ; Modified Registers:	Y-Reg points to the next memory location in main memory following the string. AR-X may contain CSI. U-Reg contains the next character/token.
7258   DF63             ;   Error conditions:	Carry=1 if string found and CSI created in AR-X Carry=0 if no string found
7259   DF63             ;------------------------------------------------------------------------------
7260   DF63             IS_STRING: ;    
7261   DF63 C2              VEJ  (C2) \ 
7261   DF64             
7262   DF64 22                  ACHR($22) \ 
7262   DF65             
7263   DF65 0A                  ABRF($DF70)
7264   DF66 CD 0C           VMJ  ($0C)
7265   DF68 C2              VEJ  (C2) \ 
7265   DF69             
7266   DF69 0D                  ACHR($0D) \ 
7266   DF6A             
7267   DF6A 01                  ABRF($DF6C)
7268   DF6B 9A              RTN
7269   DF6C C4              VEJ  (C4) \ 
7269   DF6D             
7270   DF6D 3A                  ACHR($3A) \ 
7270   DF6E             
7271   DF6E 01                  ABRF($DF70)
7272   DF6F C0              VEJ  (C0)
7273   DF70 F9              REC
7274   DF71 9A              RTN
7275   DF72             
7276   DF72             
7277   DF72             
7278   DF72             ;------------------------------------------------------------------------------
7279   DF72             ; (20) $DF72 - Find next beginning of line from (Y-Reg)
7280   DF72             ; Increments Y-Reg to the low byte of the next line number (REM).
7281   DF72             ;------------------------------------------------------------------------------
7282   DF72             FIND_NEXT_LINE:  
7283   DF72 B5 0D           LDI  A,$0D
7284   DF74 6A 4C           LDI  UL,$4C
7285   DF76 FD 18           LDX  Y
7286   DF78             
7287   DF78             FIND_NEXT_LINE_1: ; $DF78
7288   DF78 F7              CIN
7289   DF79 8B 02           BZS FIND_NEXT_LINE_2 ; $DF7D
7290   DF7B 88 05           LOP  UL,FIND_NEXT_LINE_1 ; $DF78
7291   DF7D             
7292   DF7D             FIND_NEXT_LINE_2: ; $DF7D
7293   DF7D FD 5A           STX  Y
7294   DF7F 9A              RTN
7295   DF80             
7296   DF80             
7297   DF80             
7298   DF80             ;------------------------------------------------------------------------------
7299   DF80             ; (18) $DF80 - Updates program parameters for next instruction
7300   DF80             ;------------------------------------------------------------------------------
7301   DF80             UPDATE_PRG_PARAM:   
7302   DF80 D4              VEJ  (D4) \ 
7302   DF81             
7303   DF81 A0                  ABYT($A0)
7304   DF82 83 0A           BCS UPDATE_PRG_PARAM_1 ; $DF8E
7305   DF84 55              LIN  Y
7306   DF85 AE 78 9C        STA  (CURR_LINE_H)
7307   DF88 55              LIN  Y
7308   DF89 AE 78 9D        STA  (CURR_LINE_L)
7309   DF8C 54              INC  Y
7310   DF8D 9A              RTN
7311   DF8E             
7312   DF8E             UPDATE_PRG_PARAM_1: ; $DF8E
7313   DF8E 94              LDA  YH
7314   DF8F BB 80           ORI  A,$80
7315   DF91 18              STA  YH
7316   DF92 9A              RTN
7317   DF93             
7318   DF93             
7319   DF93             
7320   DF93             ;------------------------------------------------------------------------------
7321   DF93             ; (12) $DF93 - Loads program start address to X-Reg
7322   DF93             ;------------------------------------------------------------------------------
7323   DF93             PRG_SA_2_XREG:
7324   DF93 CC              VEJ  (CC) \ ABYTL($61) ; $7861
7324   DF94 61          
7325   DF95 DB              ROL
7326   DF96 81 02           BCR PRG_SA_2_XREG_1 ; $DF9A
7327   DF98 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
7327   DF99 65          
7328   DF9A             
7329   DF9A             PRG_SA_2_XREG_1: ; $DF9A
7330   DF9A 9A              RET
7331   DF9B             
7332   DF9B B5 10           LDI  A,$10
7333   DF9D AE 78 94        STA  (STR_BUF_PTR_L)
7334   DFA0             
7335   DFA0             
7336   DFA0             ;------------------------------------------------------------------------------
7337   DFA0             ; $DFA0 - Inserts a string, the address of which is stored in AR-X, into
7338   DFA0             ; the string buffer. Jump if overflow to D1. Update buffer pointers.
7339   DFA0             ;------------------------------------------------------------------------------
7340   DFA0             STR_2_STRBUF: ; $DFA0
7341   DFA0 DC              VEJ  (DC)
7342   DFA1             
7343   DFA1             ;------------------------------------------------------------------------------
7344   DFA1             ; $DFA1 - Inserts String pointed to by X-Res into String buffer. Jump if overflow.
7345   DFA1             ;------------------------------------------------------------------------------
7346   DFA1             STR_2_STRBUF_1: ; 
7347   DFA1 FD 98           PSH  Y
7348   DFA3 BE DF B4        SJP  (STRBUF_2FULL) ; $DFB4
7349   DFA6 C3 4A           VCS  ($4A) ;($4A)($25)
7350   DFA8 24              LDA  UL
7351   DFA9             
7352   DFA9             STR_2_STRBUF_2: ; $DFA9
7353   DFA9 DF              DEC  A
7354   DFAA 81 03           BCR STR_2_STRBUF_3 ; $DFAF
7355   DFAC F5              TIN
7356   DFAD 9E 06           BCH STR_2_STRBUF_2 ; $DFA9
7357   DFAF             
7358   DFAF             STR_2_STRBUF_3: ; $DFAF
7359   DFAF BE DF C5        SJP  (STRBUF_2_ARX_1) ; $DFC5
7360   DFB2 CD 4E           VMJ  ($4E) ; ($4E)($27)
7361   DFB4             
7362   DFB4             
7363   DFB4             
7364   DFB4             ;------------------------------------------------------------------------------
7365   DFB4             ; $DFB4 - Checks whether the string buffer can still hold the number of 
7366   DFB4             ; characters contained in the accumulator. If not, C=1.
7367   DFB4             ;------------------------------------------------------------------------------
7368   DFB4             STRBUF_2FULL: ; $DFB4
7369   DFB4 2A              STA  UL
7370   DFB5 A5 78 94        LDA  (STR_BUF_PTR_L)
7371   DFB8 1A              STA  YL
7372   DFB9 F9              REC
7373   DFBA 22              ADC  UL
7374   DFBB 68 0F           LDI  UH,$0F
7375   DFBD 83 02           BCS STRBUF_2FULL_1 ; $DFC1
7376   DFBF B7 61           CPI  A,$61
7377   DFC1             
7378   DFC1             STRBUF_2FULL_1: ; $DFC1
7379   DFC1 58 7B           LDI  YH,$7B
7380   DFC3 9A              RTN
7381   DFC4             
7382   DFC4             
7383   DFC4             
7384   DFC4             ;------------------------------------------------------------------------------
7385   DFC4             ; $DFC4 - Save String buff pointers to X-Reg and AR-X. Updating pointer with YL
7386   DFC4             ;------------------------------------------------------------------------------
7387   DFC4             STRBUF_2_ARX: ; 
7388   DFC4 2A              STA  UL
7389   DFC5             
7390   DFC5             ; $DFC5 Loads AR-X with a pointer to the string buffer.
7391   DFC5             STRBUF_2_ARX_1: ; $DFC5
7392   DFC5 A5 78 94        LDA  (STR_BUF_PTR_L)
7393   DFC8 0A              STA  XL
7394   DFC9 14              LDA  YL
7395   DFCA AE 78 94        STA  (STR_BUF_PTR_L)
7396   DFCD 48 7B           LDI  XH,$7B
7397   DFCF 24              LDA  UL
7398   DFD0 8B 04           BZS STRBUF_2_ARX_2 ; $DFD6
7399   DFD2 E9 78 74 7F     ANI  (CURSOR_ENA),$7F
7400   DFD6             
7401   DFD6             STRBUF_2_ARX_2: ; $DFD6
7402   DFD6 BA DE AF        JMP  CREATE_CSI_4 ; $DEAF
7403   DFD9 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
7403   DFDA 65          
7404   DFDB             
7405   DFDB             STRBUF_2_ARX_3: ; $DFD8
7406   DFDB A5 78 64        LDA  (RAM_END_H)
7407   DFDE 28              STA  UH
7408   DFDF 6A 00           LDI  UL,$00
7409   DFE1             
7410   DFE1             STRBUF_2_ARX_4: ; $DFE1
7411   DFE1 66              DEC  U
7412   DFE2             
7413   DFE2             
7414   DFE2             ;------------------------------------------------------------------------------
7415   DFE2             ;  $DFE2 U-Reg=U-Reg-X-Reg. If overflow occurs C=0 and UH=16
7416   DFE2             ;------------------------------------------------------------------------------
7417   DFE2             U_MINUS_X: ; 
7418   DFE2 FB              SEC
7419   DFE3 24              LDA  UL
7420   DFE4 00              SBC  XL
7421   DFE5 2A              STA  UL
7422   DFE6 A4              LDA  UH
7423   DFE7 80              SBC  XH
7424   DFE8 28              STA  UH
7425   DFE9 83 02           BCS U_MINUS_X_1 ; $DFED
7426   DFEB 68 16           LDI  UH,$16
7427   DFED             
7428   DFED             U_MINUS_X_1: ; $DFED
7429   DFED 9A              RTN
7430   DFEE             
7431   DFEE             
7432   DFEE             
7433   DFEE             ;------------------------------------------------------------------------------
7434   DFEE             ; $DFEE - Calculates the free memory space "MEM" in U-Reg
7435   DFEE             ;------------------------------------------------------------------------------
7436   DFEE             MEM_IN_UREG: ; 
7437   DFEE CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
7437   DFEF 67          
7438   DFF0 44              INC  X
7439   DFF1 9E 18           BCH STRBUF_2_ARX_3 ; $DFDB
7440   DFF3             
7441   DFF3             
7442   DFF3             
7443   DFF3             ;------------------------------------------------------------------------------
7444   DFF3             ; $DFF3 - U-Reg = STATUS 1-2. Program start after X-Reg; length according to U.
7445   DFF3             ;------------------------------------------------------------------------------
7446   DFF3             STATUS_2_UREG: ; $DFF3
7447   DFF3 CD 12           VMJ  ($12)
7448   DFF5             
7449   DFF5             
7450   DFF5             
7451   DFF5             ;------------------------------------------------------------------------------
7452   DFF5             ; $DFF5 (16) - U-Reg = U-Reg - X-Reg. Determines the difference between 
7453   DFF5             ; the X-Reg and the end of the program memory (STATUS 1-2).
7454   DFF5             ;------------------------------------------------------------------------------
7455   DFF5             STATUS_2_UREG_1: ; $DFF5
7456   DFF5 F4              VEJ  (F4) \ 
7456   DFF6             
7457   DFF6 78 67               AWRD(BASPRG_END_H)
7458   DFF8 9E 19           BCH STRBUF_2_ARX_4 ; $DFE1
7459   DFFA             
7460   DFFA             
7461   DFFA             
7462   DFFA             ;------------------------------------------------------------------------------
7463   DFFA             ; $DFFA (14) - U-Reg = STATUS 1-2 . Loads X with program start, U with length.
7464   DFFA             ;------------------------------------------------------------------------------
7465   DFFA             STATUS_1M2_UREG:   
7466   DFFA CC              VEJ  (CC) \ 
7466   DFFB             
7467   DFFB 65                  ABYTL(BASPRG_ST_H) ; $7865
7468   DFFC 9E 09           BCH STATUS_2_UREG_1 ; $DFF5
7469   DFFE E4              VEJ  (E4)
7470   DFFF E4              VEJ  (E4)
7471   E000             
7472   E000             
7473   E000             
7474   E000             ;------------------------------------------------------------------------------
7475   E000             ; $E000 - Reset-Routine
7476   E000             ;------------------------------------------------------------------------------
7477   E000             RESET: ; 
7478   E000 FD BE           RIE
7479   E002 B5 00           LDI  A,$00
7480   E004 FD CE           AM0
7481   E006 FD C0           RDP
7482   E008 6A C0           LDI  UL,$C0
7483   E00A             
7484   E00A             RESET_1: ; $E00A
7485   E00A 88 02           LOP  UL,RESET_1 ; $E00A
7486   E00C FD C1           SDP
7487   E00E 6A C0           LDI  UL,$C0
7488   E010             
7489   E010             RESET_2: ; $E010
7490   E010 88 02           LOP  UL,RESET_2 ; $E010
7491   E012 FD C0           RDP
7492   E014 68 96           LDI  UH,$96
7493   E016 6A FF           LDI  UL,$FF
7494   E018             
7495   E018             RESET_3: ; $E018
7496   E018 88 02           LOP  UL,RESET_3 ; $E018
7497   E01A FD 62           DEC  UH
7498   E01C 93 06           BCS RESET_3 ; $E018
7499   E01E B5 00           LDI  A,$00
7500   E020 FD AE F0 0A     STA  #(PC1500_MSK_REG)
7501   E024 FD AE B0 0A     STA  #(CE150_MSK_REG) ; $B00A)
7502   E028 FD AE F0 0B     STA  #(PC1500_IF_REG)
7503   E02C FD AE DC 00     STA  #(CE158_IR_PING) ; $DC00
7504   E030 FD AE B0 0B     STA  #(CE150_IF_REG) ; $B00B)
7505   E034 48 7A           LDI  XH,$7A
7506   E036 4A 10           LDI  XL,$10
7507   E038 6A 0F           LDI  UL,$0F
7508   E03A B5 A0           LDI  A,$A0
7509   E03C 07              CPA  (X)
7510   E03D 8B 01           BZS RESET_4 ; $E040
7511   E03F D5              SHR
7512   E040             
7513   E040             RESET_4: ; $E040
7514   E040 07              CPA  (X)
7515   E041 44              INC  X
7516   E042 89 09           BZR RESET_5 ; $E04D
7517   E044 DD              INC  A
7518   E045 88 07           LOP  UL,RESET_4 ; $E040
7519   E047 D9              SHL
7520   E048 B5 00           LDI  A,$00
7521   E04A DB              ROL
7522   E04B 8E 10           BCH RESET_6 ; $E05D
7523   E04D             
7524   E04D             RESET_5: ; $E04D
7525   E04D B5 41           LDI  A,$41
7526   E04F AE 76 4E        STA  (DISP_BUFF + $4E)
7527   E052 B5 43           LDI  A,$43
7528   E054 AE 76 4F        STA  (DISP_BUFF + $4F)
7529   E057 E9 78 6B 00     ANI  (BEEP_PTR),$00
7530   E05B B5 02           LDI  A,$02
7531   E05D             
7532   E05D             RESET_6: ; $E05D
7533   E05D 48 7A           LDI  XH,$7A
7534   E05F 4A 20           LDI  XL,$20
7535   E061 41              SIN  X
7536   E062 B5 00           LDI  A,$00
7537   E064 41              SIN  X
7538   E065 43              SDE  X
7539   E066 46              DEC  X
7540   E067 4D 01           BII  (X),$01
7541   E069 89 DC           BZR RESET_22 ; $E147
7542   E06B AA 78 4F        LDI  S,(CPU_STACK + $4F)
7543   E06E EB 78 5D FF     ORI  (KATAFLAGS),$FF
7544   E072 E9 7B 0E 01     ANI  (CURS_CTRL),$01
7545   E076 B5 60           LDI  A,$60
7546   E078 AE 79 D1        STA  (OPN)
7547   E07B BE F5 B5        SJP  (BCMD_PI)
7548   E07E CD 5C           VMJ  ($5C) ; ($5C)($2E)
7549   E080 48 79           LDI  XH,$79
7550   E082 4A D2           LDI  XL,$D2
7551   E084 6A 0C           LDI  UL,$0C
7552   E086 CD BA           VMJ  ($BA) ; ($BA)($5D)
7553   E088             
7554   E088             RESET_7: ; $E088
7555   E088 BE E1 53        SJP  (IO_INT)
7556   E08B 58 7A           LDI  YH,$7A
7557   E08D 5A 14           LDI  YL,$14
7558   E08F B5 FF           LDI  A,$FF
7559   E091 6A 04           LDI  UL,$04
7560   E093             
7561   E093             RESET_8: ; $E093
7562   E093 53              SDE  Y
7563   E094 88 03           LOP  UL,RESET_8 ; $E093
7564   E096 48 00           LDI  XH,$00
7565   E098             
7566   E098             RESET_9: ; $E098
7567   E098 4A 00           LDI  XL,$00
7568   E09A 05              LDA  (X)
7569   E09B 2A              STA  UL
7570   E09C B5 5A           LDI  A,$5A
7571   E09E 0E              STA  (X)
7572   E09F 07              CPA  (X)
7573   E0A0 89 22           BZR RESET_13 ; $E0C4
7574   E0A2 B5 A5           LDI  A,$A5
7575   E0A4 0E              STA  (X)
7576   E0A5 07              CPA  (X)
7577   E0A6 89 1C           BZR RESET_13 ; $E0C4
7578   E0A8 24              LDA  UL
7579   E0A9 0E              STA  (X)
7580   E0AA 5A 13           LDI  YL,$13
7581   E0AC 15              LDA  (Y)
7582   E0AD DD              INC  A
7583   E0AE 81 02           BCR RESET_10 ; $E0B2
7584   E0B0 84              LDA  XH
7585   E0B1 1E              STA  (Y)
7586   E0B2             
7587   E0B2             RESET_10: ; $E0B2
7588   E0B2 FD 40           INC  XH
7589   E0B4 4C 70           CPI  XH,$70
7590   E0B6 91 20           BCR RESET_9 ; $E098
7591   E0B8 5A 14           LDI  YL,$14
7592   E0BA             
7593   E0BA             RESET_11: ; $E0BA
7594   E0BA 84              LDA  XH
7595   E0BB 53              SDE  Y
7596   E0BC 15              LDA  (Y)
7597   E0BD DD              INC  A
7598   E0BE 81 02           BCR RESET_12 ; $E0C2
7599   E0C0 84              LDA  XH
7600   E0C1 1E              STA  (Y)
7601   E0C2             
7602   E0C2             RESET_12: ; $E0C2
7603   E0C2 8E 29           BCH RESET_16 ; $E0ED
7604   E0C4             
7605   E0C4             RESET_13: ; $E0C4
7606   E0C4 5A 13           LDI  YL,$13
7607   E0C6 45              LIN  X
7608   E0C7 B7 55           CPI  A,$55
7609   E0C9 89 1C           BZR RESET_15 ; $E0E7
7610   E0CB 55              LIN  Y
7611   E0CC DD              INC  A
7612   E0CD 91 15           BCR RESET_11 ; $E0BA
7613   E0CF 5A 10           LDI  YL,$10
7614   E0D1 15              LDA  (Y)
7615   E0D2 DD              INC  A
7616   E0D3 91 23           BCR RESET_10 ; $E0B2
7617   E0D5 45              LIN  X
7618   E0D6 DD              INC  A
7619   E0D7 83 02           BCS RESET_14 ; $E0DB
7620   E0D9 DF              DEC  A
7621   E0DA 08              STA  XH
7622   E0DB             
7623   E0DB             RESET_14: ; $E0DB
7624   E0DB 84              LDA  XH
7625   E0DC 51              SIN  Y
7626   E0DD 05              LDA  (X)
7627   E0DE D9              SHL
7628   E0DF 93 2F           BCS RESET_10 ; $E0B2
7629   E0E1 45              LIN  X
7630   E0E2 82              ADC  XH
7631   E0E3 51              SIN  Y
7632   E0E4 F5              TIN
7633   E0E5 9E 35           BCH RESET_10 ; $E0B2
7634   E0E7             
7635   E0E7             RESET_15: ; $E0E8
7636   E0E7 55              LIN  Y
7637   E0E8 DD              INC  A
7638   E0E9 91 31           BCR RESET_11 ; $E0BA
7639   E0EB 9E 3B           BCH RESET_10 ; $E0B2
7640   E0ED             
7641   E0ED             RESET_16: ; $E0ED
7642   E0ED 48 78           LDI  XH,$78
7643   E0EF 4A 64           LDI  XL,$64
7644   E0F1 54              INC  Y
7645   E0F2 6A 04           LDI  UL,$04
7646   E0F4             
7647   E0F4             RESET_17: ; $E0F4
7648   E0F4 57              LDE  Y
7649   E0F5 07              CPA  (X)
7650   E0F6 8B 04           BZS RESET_18 ; $E0FC
7651   E0F8 EB 7A 20 04     ORI  (ARV),$04
7652   E0FC             
7653   E0FC             RESET_18: ; $E0FC
7654   E0FC 43              SDE  X
7655   E0FD 88 0B           LOP  UL,RESET_17 ; $E0F4
7656   E0FF B5 00           LDI  A,$00
7657   E101 CD 5A           VMJ  ($5A) ; ($5A)($2D)
7658   E103 EB 7B 0E 01     ORI  (CURS_CTRL),$01
7659   E107 CD BE           VMJ  ($BE) ; ($BE)($5F)
7660   E109 81 15           BCR RESET_20 ; $E120
7661   E10B             
7662   E10B             RESET_19: ; $E10B
7663   E10B FD C8           PSH  A
7664   E10D FD 88           PSH  X
7665   E10F 4A 0A           LDI  XL,$0A
7666   E111 68 E1           LDI  UH,$E1
7667   E113 6A 18           LDI  UL,$18
7668   E115 BA E2 0E        JMP  ISR_HANDLER_8 ; $E20E
7669   E118 FD 0A           POP  X
7670   E11A FD 8A           POP  A
7671   E11C CD BC           VMJ  ($BC) ; ($BC)($5E)
7672   E11E 93 15           BCS RESET_19 ; $E10B
7673   E120             
7674   E120             RESET_20: ; $E120
7675   E120 FD EB F0 0A     ORI  #(PC1500_MSK_REG),$01
7675   E124 01 
7676   E125 FD EB B0 0A     ORI  #(CE150_MSK_REG),$01 ; $B00A
7676   E129 01 
7677   E12A FD C1           SDP
7678   E12C FD 81           SIE
7679   E12E 48 7A           LDI  XH,$7A
7680   E130 4A 20           LDI  XL,$20
7681   E132 45              LIN  X
7682   E133 BF 01           BII  A,$01
7683   E135 8B 0D           BZS RESET_21 ; $E144
7684   E137 45              LIN  X
7685   E138 89 0A           BZR RESET_21 ; $E144
7686   E13A 05              LDA  (X)
7687   E13B 89 07           BZR RESET_21 ; $E144
7688   E13D FD 2A           POP  U
7689   E13F FD 1A           POP  Y
7690   E141 BA E2 43        JMP  WAIT_4_KB ; $E243
7691   E144             
7692   E144             RESET_21: ; $E144
7693   E144 BA C9 E4        JMP  COLD_START ; $C9E4
7694   E147             
7695   E147             RESET_22: ; $E147
7696   E147 A5 7A 30        LDA  (ARS)
7697   E14A 08              STA  XH
7698   E14B A5 7A 31        LDA  (ARS + $01)
7699   E14E 0A              STA  XL
7700   E14F FD 4E           STX  S
7701   E151 9E CB           BCH RESET_7 ; $E088
7702   E153             
7703   E153             
7704   E153             
7705   E153             ;------------------------------------------------------------------------------
7706   E153             ; $E153 Initializes I/O module with table from E168.
7707   E153             ;------------------------------------------------------------------------------
7708   E153             IO_INT:
7709   E153 FD 98           PSH  Y
7710   E155 48 E1           LDI  XH,$E1
7711   E157 4A 68           LDI  XL,$68
7712   E159 58 F0           LDI  YH,$F0
7713   E15B 5A 07           LDI  YL,$07
7714   E15D 6A 08           LDI  UL,$08
7715   E15F             
7716   E15F             IO_INT_1: ; $E15F
7717   E15F 45              LIN  X
7718   E160 FD 1E           STA  #(Y)
7719   E162 54              INC  Y
7720   E163 88 06           LOP  UL,IO_INT_1 ; $E15F
7721   E165 FD 1A           POP  Y
7722   E167 9A              RTN
7723   E168             
7724   E168             
7725   E168             ;------------------------------------------------------------------------------
7726   E168             ; $E168 - Parameters for initializing the I/0 ports
7727   E168             ;------------------------------------------------------------------------------
7728   E168             IO_TBL: ; 
7729   E168 23              .BYTE $23 ; #F007 PC1500_F_REG
7730   E169 C0              .BYTE $C0 ; #F008 PC1500_PRT_C
7731   E16A D7              .BYTE $D7 ; #F009 PC1500_G_REG
7732   E16B 00              .BYTE $00 ; #F00A PC1500_MSK_REG
7733   E16C 00              .BYTE $00 ; #F00B PC1500_IF_REG
7734   E16D 00              .BYTE $00 ; #F00C PC1500_PRT_A_DIR
7735   E16E 00              .BYTE $00 ; #F00D PC1500_PRT_B_DIR
7736   E16F FF              .BYTE $FF ; #F00E PC1500_PRT_A
7737   E170 00              .BYTE $00 ; #F00F PC1500_PRT_B
7738   E171             
7739   E171             
7740   E171             
7741   E171             ;------------------------------------------------------------------------------
7742   E171             ; (F8) $E171 - Maskable interrupt routine
7743   E171             ;------------------------------------------------------------------------------
7744   E171             ISR_HANDLER: ; 
7745   E171 FD C8           PSH  A
7746   E173 FD 88           PSH  X
7747   E175 FD 98           PSH  Y
7748   E177 FD A8           PSH  U
7749   E179 A5 79 D0        LDA  (PU_PV)
7750   E17C FD C8           PSH  A
7751   E17E FD ED F0 0B     BII  #(PC1500_IF_REG),$01
7751   E182 01 
7752   E183 8B 65           BZS $E1EA
7753   E185 FD E9 F0 0A     ANI  #(PC1500_MSK_REG),$FE
7753   E189 FE 
7754   E18A FD E9 B0 0A     ANI  #(CE150_MSK_REG),$FE ; $B00A
7754   E18E FE 
7755   E18F FD A5 DE 00     LDA  #(CE158_IR_REG) ; $DE00
7756   E193 FD E9 B0 0B     ANI  #(CE150_IF_REG),$FE ; #B00B
7756   E197 FE 
7757   E198 FD AE DC 00     STA  #(CE158_IR_PING) ; $DC00
7758   E19C BD FF           EAI  $FF
7759   E19E 8B 2E           BZS ISR_HANDLER_6 ; $E1CE
7760   E1A0             
7761   E1A0             ISR_HANDLER_1: ; $E1A0
7762   E1A0 B8              RPV
7763   E1A1             
7764   E1A1             ISR_HANDLER_2:  ;$E1A1
7765   E1A1 48 B0           LDI  XH,$B0
7766   E1A3 4A 00           LDI  XL,$00
7767   E1A5             
7768   E1A5             ISR_HANDLER_3: ; $E1A5
7769   E1A5 FD 88           PSH  X
7770   E1A7 D5              SHR
7771   E1A8 FD C8           PSH  A
7772   E1AA 81 0D           BCR ISR_HANDLER_4 ; $E1B9
7773   E1AC B5 55           LDI  A,$55
7774   E1AE 07              CPA  (X)
7775   E1AF 89 08           BZR ISR_HANDLER_4 ; $E1B9
7776   E1B1 68 E1           LDI  UH,$E1
7777   E1B3 6A B9           LDI  UL,$B9
7778   E1B5 4A 13           LDI  XL,$13
7779   E1B7 8E 55           BCH ISR_HANDLER_8 ; $E20E
7780   E1B9             
7781   E1B9             ISR_HANDLER_4: ; $E189
7782   E1B9 FD 8A           POP  A
7783   E1BB FD 0A           POP  X
7784   E1BD 8B 0F           BZS ISR_HANDLER_6 ; $E1CE
7785   E1BF 4C 90           CPI  XH,$90
7786   E1C1 81 08           BCR ISR_HANDLER_5 ; $E1CB
7787   E1C3 1A              STA  YL
7788   E1C4 B5 EF           LDI  A,$EF
7789   E1C6 82              ADC  XH
7790   E1C7 08              STA  XH
7791   E1C8 14              LDA  YL
7792   E1C9 9E 26           BCH ISR_HANDLER_3 ; $E1A5
7793   E1CB             
7794   E1CB             ISR_HANDLER_5: ; $E1CB
7795   E1CB A8              SPV
7796   E1CC 9E 2D           BCH ISR_HANDLER_2 ; $E1A1
7797   E1CE             
7798   E1CE             ISR_HANDLER_6: ; $E1CE
7799   E1CE FD ED F0 0B     BII  #(PC1500_IF_REG),$01
7799   E1D2 01 
7800   E1D3 8B 15           BZS ISR_HANDLER_7 ; $E1EA
7801   E1D5 FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FE
7801   E1D9 FE 
7802   E1DA FD A5 B0 0B     LDA  #(CE150_IF_REG ) ; $B00B
7803   E1DE FD A9 B0 0A     AND  #(CE150_MSK_REG) ; $B00A
7804   E1E2 B9 0E           ANI  A,$0E
7805   E1E4 8B 04           BZS ISR_HANDLER_7 ; $E1EA
7806   E1E6 B5 01           LDI  A,$01
7807   E1E8 9E 4A           BCH ISR_HANDLER_1 ; $E1A0
7808   E1EA             
7809   E1EA             ISR_HANDLER_7: ; $E1EA
7810   E1EA A5 79 DA        LDA  ($79DA)
7811   E1ED B7 55           CPI  A,$55
7812   E1EF 89 21           BZR ISR_HANDLER_9 ; $E212
7813   E1F1 FD A5 F0 0B     LDA  #(PC1500_IF_REG)
7814   E1F5 FD A9 F0 0A     AND  #(PC1500_MSK_REG)
7815   E1F9 B9 0E           ANI  A,$0E
7816   E1FB 8B 15           BZS ISR_HANDLER_9 ; $E212
7817   E1FD 68 E2           LDI  UH,$E2
7818   E1FF 6A 12           LDI  UL,$12
7819   E201 A5 79 DB        LDA  ($79DB)
7820   E204 08              STA  XH
7821   E205 A5 79 DC        LDA  ($79DC)
7822   E208 0A              STA  XL
7823   E209 D5              SHR
7824   E20A B8              RPV
7825   E20B 81 01           BCR ISR_HANDLER_8 ; $E20E
7826   E20D A8              SPV
7827   E20E             
7828   E20E             ISR_HANDLER_8: ; $E20E
7829   E20E FD A8           PSH  U
7830   E210 FD 5E           STX  P
7831   E212             
7832   E212             ISR_HANDLER_9: ; $E212
7833   E212 FD EB B0 0A     ORI  #(CE150_MSK_REG),$01 ; $B00A
7833   E216 01 
7834   E217 FD EB F0 0A     ORI  #(PC1500_MSK_REG),$01
7834   E21B 01 
7835   E21C FD 8A           POP  A
7836   E21E AE 79 D0        STA  (PU_PV)
7837   E221 CD A0           VMJ  ($A0) ; ($A0)($50)
7838   E223 FD 2A           POP  U
7839   E225 FD 1A           POP  Y
7840   E227 FD 0A           POP  X
7841   E229             
7842   E229             ISR_HANDLER_10: ; $E229
7843   E229 FD 8A           POP  A
7844   E22B             
7845   E22B             
7846   E22B             
7847   E22B             ;------------------------------------------------------------------------------
7848   E22B             ; $E22B (FC) - Non-Maskable Interrupt
7849   E22B             ;------------------------------------------------------------------------------
7850   E22B             NMI_HANDLER: ; 
7851   E22B 8A              RTI
7852   E22C             
7853   E22C             
7854   E22C             
7855   E22C             ;------------------------------------------------------------------------------
7856   E22C             ; $E22C (FA) - Timer Interrupt
7857   E22C             ;------------------------------------------------------------------------------
7858   E22C             TIMER_ISR:  ; 
7859   E22C FD C8           PSH  A
7860   E22E B5 00           LDI  A,$00
7861   E230 FD CE           AM0
7862   E232 9E 0B           BCH ISR_HANDLER_10 ; $E229
7863   E234             
7864   E234             
7865   E234             
7866   E234             ;------------------------------------------------------------------------------
7867   E234             ; $E234 (A0) - PV-banking according to status of Bit 0 in $7900. If 0, PV=1.
7868   E234             ;------------------------------------------------------------------------------
7869   E234             PVBANK: 
7870   E234 B8              RPV
7871   E235 ED 79 D0 01     BII  (PU_PV),$01
7872   E239 8B 01           BZS PVBANK_1 ;$E23C
7873   E23B A8              SPV
7874   E23C             
7875   E23C             PVBANK_1: ; $E23C
7876   E23C 9A              RTN
7877   E23D             
7878   E23D             
7879   E23D             
7880   E23D             ;------------------------------------------------------------------------------
7881   E23D             ; $E23D - Waits until no more keys are pressed
7882   E23D             ;------------------------------------------------------------------------------
7883   E23D             WAITNOKEYS: 
7884   E23D EB 7B 0E 03     ORI  (CURS_CTRL),$03
7885   E241 8E 0B           BCH WAIT_4_KB_2 ; $E24E
7886   E243             
7887   E243             
7888   E243             
7889   E243             ;------------------------------------------------------------------------------
7890   E243             ; $E243 - Entering a Character Using the Keyboard (Page 324:Keyboard Status)
7891   E243             ; Waiting for input from keyboard. Character is in accumulator
7892   E243             ;------------------------------------------------------------------------------
7893   E243             WAIT_4_KB:
7894   E243 A5 79 D4        LDA  ($79D4)
7895   E246             
7896   E246             WAIT_4_KB_1: ; $E246
7897   E246 B7 55           CPI  A,$55
7898   E248 8B 6D           BZS WAIT_4_KB_8 $E2B7
7899   E24A E9 7B 0E FD     ANI  (CURS_CTRL),$FD
7900   E24E             
7901   E24E             WAIT_4_KB_2: ; $E24E
7902   E24E 48 7B           LDI  XH,$7B
7903   E250 ED 7B 0E 40     BII  (CURS_CTRL),$40
7904   E254 89 05           BZR WAIT_4_KB_3 ; $E25B
7905   E256 4A 09           LDI  XL,$09
7906   E258 B5 60           LDI  A,$60
7907   E25A 41              SIN  X
7908   E25B             
7909   E25B             WAIT_4_KB_3: ; $E25B
7910   E25B 4A 0A           LDI  XL,$0A
7911   E25D B5 FE           LDI  A,$FE
7912   E25F 41              SIN  X
7913   E260 B5 1D           LDI  A,$1D
7914   E262 41              SIN  X
7915   E263 41              SIN  X
7916   E264 B5 80           LDI  A,$80
7917   E266 41              SIN  X
7918   E267 68 F8           LDI  UH,$F8
7919   E269             
7920   E269             WAIT_4_KB_4: ; $E269
7921   E269 CD A6           VMJ  ($A6) ; ($A6)($53)
7922   E26B 89 CD           BZR WAIT_4_KB_21 ; $E33A
7923   E26D BE E4 18        SJP  (ISKEY)
7924   E270 8B 52           BZS WAIT_4_KB_10 ; $E2C4
7925   E272 BE E4 2C        SJP  (KEY_2_ASCII)
7926   E275 83 4D           BCS WAIT_4_KB_10 ; $E2C4
7927   E277 38              NOP
7928   E278 ED 7B 0E 01     BII  (CURS_CTRL),$01
7929   E27C 8B 2E           BZS WAIT_4_KB_7 ; $E2AC
7930   E27E ED 7B 0E 40     BII  (CURS_CTRL),$40
7931   E282 8B 7B           BZS WAIT_4_KB_16 ; $E2FF
7932   E284 04              LDA  XL
7933   E285 A7 7B 0F        CPA  (KEY_LAST)
7934   E288 89 6C           BZR WAIT_4_KB_15 ; $E2F6
7935   E28A 48 7B           LDI  XH,$7B
7936   E28C 4A 09           LDI  XL,$09
7937   E28E 05              LDA  (X)
7938   E28F DD              INC  A
7939   E290 81 0B           BCR WAIT_4_KB_5 ; $E29D
7940   E292 B5 F2           LDI  A,$F2
7941   E294 0E              STA  (X)
7942   E295 48 FE           LDI  XH,$FE
7943   E297 A5 7B 0F        LDA  (KEY_LAST)
7944   E29A 0A              STA  XL
7945   E29B 8E C9           BCH AUTO_OFF_2 ; $E366
7946   E29D             
7947   E29D             WAIT_4_KB_5: ; $E29D
7948   E29D 0E              STA  (X)
7949   E29E             
7950   E29E             WAIT_4_KB_6: ; $E29E
7951   E29E E9 79 D9 00     ANI  ($79D9),$00
7952   E2A2 B5 57           LDI  A,$57
7953   E2A4 FD CE           AM0
7954   E2A6 FD 81           SIE
7955   E2A8 FD B1           HLT
7956   E2AA 9E 43           BCH WAIT_4_KB_4 ; $E269
7957   E2AC             
7958   E2AC             WAIT_4_KB_7: ; $E2AC
7959   E2AC BE E4 2C        SJP  (KEY_2_ASCII)
7960   E2AF 83 13           BCS WAIT_4_KB_10 ; $E2C4
7961   E2B1 04              LDA  XL
7962   E2B2 AE 7B 0F        STA  (KEY_LAST)
7963   E2B5 8E AF           BCH AUTO_OFF_2 ; $E366
7964   E2B7             
7965   E2B7             WAIT_4_KB_8: ; $E2B7
7966   E2B7 CC              VEJ  (CC) \ ABYTL($785B)
7966   E2B8 5B          
7967   E2B9 38              NOP
7968   E2BA 04              LDA  XL
7969   E2BB D5              SHR
7970   E2BC FD BE           RIE
7971   E2BE B8              RPV
7972   E2BF 81 01           BCR WAIT_4_KB_9 ; $E2C2
7973   E2C1 A8              SPV
7974   E2C2             
7975   E2C2             WAIT_4_KB_9: ; $E2C2
7976   E2C2 FD 5E           STX  P
7977   E2C4             
7978   E2C4             WAIT_4_KB_10: ; $E2C4
7979   E2C4 ED 7B 0E 01     BII  (CURS_CTRL),$01
7980   E2C8 8B 0E           BZS WAIT_4_KB_11 ; $E2D8
7981   E2CA ED 7B 0E 40     BII  (CURS_CTRL),$40
7982   E2CE 89 26           BZR WAIT_4_KB_15 ; $E2F6
7983   E2D0 FD 60           INC  UH
7984   E2D2 81 0A           BCR WAIT_4_KB_12 ; $E2DE
7985   E2D4 E9 7B 0E FE     ANI  (CURS_CTRL),$FE
7986   E2D8             
7987   E2D8             WAIT_4_KB_11: ; $E2D8
7988   E2D8 ED 7B 0E 02     BII  (CURS_CTRL),$02
7989   E2DC 89 14           BZR WAIT_4_KB_14 ; $E2F2
7990   E2DE             
7991   E2DE             WAIT_4_KB_12: ; $E2DE
7992   E2DE 6A 02           LDI  UL,$02
7993   E2E0 48 7B           LDI  XH,$7B
7994   E2E2 4A 0D           LDI  XL,$0D
7995   E2E4             
7996   E2E4             WAIT_4_KB_13: ; $E2E4
7997   E2E4 46              DEC  X
7998   E2E5 4F 01           ADI  (X),$01
7999   E2E7 81 1A           BCR WAIT_4_KB_17 ; $E303
8000   E2E9 88 07           LOP  UL,WAIT_4_KB_13 ; $E2E4
8001   E2EB B5 FF           LDI  A,$FF
8002   E2ED 41              SIN  X
8003   E2EE 41              SIN  X
8004   E2EF 0E              STA  (X)
8005   E2F0 8E 4D           BCH AUTO_OFF
8006   E2F2             
8007   E2F2             WAIT_4_KB_14: ; $E2F2
8008   E2F2 B5 00           LDI  A,$00
8009   E2F4 F9              REC
8010   E2F5 9A              RTN
8011   E2F6             
8012   E2F6             WAIT_4_KB_15: ; $E2F6
8013   E2F6 B5 60           LDI  A,$60
8014   E2F8 AE 7B 09        STA  (KEY_REPEAT)
8015   E2FB E9 7B 0E 9F     ANI  (CURS_CTRL),$9F
8016   E2FF             
8017   E2FF             WAIT_4_KB_16: ; $E2FF
8018   E2FF 68 F8           LDI  UH,$F8
8019   E301 9E 25           BCH WAIT_4_KB_12 ; $E2DE
8020   E303             
8021   E303             WAIT_4_KB_17: ; $E303
8022   E303 4A 0B           LDI  XL,$0B
8023   E305 45              LIN  X
8024   E306 BF 07           BII  A,$07
8025   E308 89 0B           BZR WAIT_4_KB_19 ; $E315
8026   E30A 05              LDA  (X)
8027   E30B 89 08           BZR WAIT_4_KB_19 ; $E315
8028   E30D FD C0           RDP
8029   E30F 6A BC           LDI  UL,$BC
8030   E311             
8031   E311             WAIT_4_KB_18: ; $E311
8032   E311 88 02           LOP  UL,WAIT_4_KB_18 ; $E311
8033   E313 FD C1           SDP
8034   E315             
8035   E315             WAIT_4_KB_19: ; $E315
8036   E315 ED 78 7C 01     BII  (CURSOR_BLNK),$01
8037   E319 9B 7D           BZS WAIT_4_KB_6 ; $E29E
8038   E31B EF 7B 0D 01     ADI  (CURS_BLNK_CTR),$01
8039   E31F 91 83           BCR WAIT_4_KB_6 ; $E29E
8040   E321 EB 7B 0D 80     ORI  (CURS_BLNK_CTR),$80
8041   E325 FD A8           PSH  U
8042   E327 CC              VEJ  (CC) \ ABYTL(CURS_POS_NBUF_H) ; $787E
8042   E328 7E          
8043   E329 EF 78 7C 80     ADI  (CURSOR_BLNK),$80
8044   E32D B5 7F           LDI  A,$7F
8045   E32F 81 03           BCR WAIT_4_KB_20 ; $E334
8046   E331 A5 78 7D        LDA  (BLNKD_CHAR_CODE)
8047   E334             
8048   E334             WAIT_4_KB_20: ; $E334
8049   E334 CD 8A           VMJ  ($8A) ; ($8A)($45) ; ($8A)($45)
8050   E336 FD 2A           POP  U
8051   E338 9E 9C           BCH WAIT_4_KB_6 ; $E29E
8052   E33A             
8053   E33A             WAIT_4_KB_21: ; $E33A
8054   E33A B5 0E           LDI  A,$0E
8055   E33C FB              SEC
8056   E33D 9A              RTN
8057   E33E 38              NOP
8058   E33F             
8059   E33F             
8060   E33F             
8061   E33F             ;------------------------------------------------------------------------------
8062   E33F             ; $E33F - Auto-Power-Off Routine
8063   E33F             ;------------------------------------------------------------------------------
8064   E33F             AUTO_OFF: ; 
8065   E33F B5 A0           LDI  A,$A0
8066   E341 48 7A           LDI  XH,$7A
8067   E343 4A 10           LDI  XL,$10
8068   E345 6A 0F           LDI  UL,$0F
8069   E347             
8070   E347             AUTO_OFF_1: ; $E347
8071   E347 41              SIN  X
8072   E348 DD              INC  A
8073   E349 88 04           LOP  UL,AUTO_OFF_1 ; $E347
8074   E34B FD 98           PSH  Y
8075   E34D FD A8           PSH  U
8076   E34F FD 48           LDX  S
8077   E351 84              LDA  XH
8078   E352 AE 7A 30        STA  (ARS)
8079   E355 04              LDA  XL
8080   E356 AE 7A 31        STA  (ARS + $01)
8081   E359 FD 4C           OFF
8082   E35B FD 4C           OFF
8083   E35D FD 4C           OFF
8084   E35F FD 2A           POP  U
8085   E361 FD 1A           POP  Y
8086   E363 BA E2 69        JMP  WAIT_4_KB_4 ; $E269
8087   E366             
8088   E366             AUTO_OFF_2: ; $E366
8089   E366 68 76           LDI  UH,$76
8090   E368 6A 4E           LDI  UL,$4E
8091   E36A EB 7B 0E 01     ORI  (CURS_CTRL),$01
8092   E36E 05              LDA  (X)
8093   E36F B7 3E           CPI  A,$3E
8094   E371 81 55           BCR AUTO_OFF_14 ; $E3C8
8095   E373 B7 41           CPI  A,$41
8096   E375 83 16           BCS AUTO_OFF_5 ; $E38D
8097   E377 6D 04           BII  (U),$04
8098   E379 8B 36           BZS AUTO_OFF_10 ; $E3B1
8099   E37B             
8100   E37B             AUTO_OFF_3: ; $E37B
8101   E37B FD BE           RIE
8102   E37D A5 78 5D        LDA  (KATAFLAGS)
8103   E380 D9              SHL
8104   E381 B8              RPV
8105   E382 81 01           BCR AUTO_OFF_4 ; $E385
8106   E384 A8              SPV
8107   E385             
8108   E385             AUTO_OFF_4: ; $E385
8109   E385 A5 78 5E        LDA  (KATACHAR)
8110   E388 DF              DEC  A
8111   E389 08              STA  XH
8112   E38A 05              LDA  (X)
8113   E38B 8E 26           BCH AUTO_OFF_11 ; $E3B3
8114   E38D             
8115   E38D             AUTO_OFF_5: ; $E38D
8116   E38D 6D 80           BII  (U),$80
8117   E38F 89 16           BZR AUTO_OFF_8 ; $E3A7
8118   E391 6D 04           BII  (U),$04
8119   E393 99 1A           BZR AUTO_OFF_3 ; $E37B
8120   E395 6D 08           BII  (U),$08
8121   E397 89 08           BZR AUTO_OFF_7 ; $E3A1
8122   E399 6D 02           BII  (U),$02
8123   E39B 89 0F           BZR AUTO_OFF_9 ; $E3AC
8124   E39D             
8125   E39D             AUTO_OFF_6: ; $E39D
8126   E39D F9              REC
8127   E39E 69 7D           ANI  (U),$7D
8128   E3A0 9A              RTN
8129   E3A1             
8130   E3A1             AUTO_OFF_7: ; $E3A1
8131   E3A1 6D 02           BII  (U),$02
8132   E3A3 8B 07           BZS AUTO_OFF_9 ; $E3AC
8133   E3A5 9E 0A           BCH AUTO_OFF_6 ; $E39D
8134   E3A7             
8135   E3A7             AUTO_OFF_8: ; $E3A7
8136   E3A7 F9              REC
8137   E3A8 B3 40           ADI  A,$40
8138   E3AA 9E 0F           BCH AUTO_OFF_6 ; $E39D
8139   E3AC             
8140   E3AC             AUTO_OFF_9: ; $E3AC
8141   E3AC F9              REC
8142   E3AD B3 20           ADI  A,$20
8143   E3AF 9E 14           BCH AUTO_OFF_6 ; $E39D
8144   E3B1             
8145   E3B1             AUTO_OFF_10: ; $E3B1
8146   E3B1 FD BE           RIE
8147   E3B3             
8148   E3B3             AUTO_OFF_11: ; $E3B3
8149   E3B3 6D 02           BII  (U),$02
8150   E3B5 8B 05           BZS AUTO_OFF_12 ; $E3BC
8151   E3B7 B5 40           LDI  A,$40
8152   E3B9 FD CA           ADR  X
8153   E3BB 05              LDA  (X)
8154   E3BC             
8155   E3BC             AUTO_OFF_12: ; $E3BC
8156   E3BC CD A0           VMJ  ($A0) ; ($A0)($50)
8157   E3BE FD 81           SIE
8158   E3C0 9E 25           BCH AUTO_OFF_6 ; $E39D
8159   E3C2             
8160   E3C2             AUTO_OFF_13: ; $E3C2
8161   E3C2 6D 04           BII  (U),$04
8162   E3C4 99 4B           BZR AUTO_OFF_3 ; $E37B
8163   E3C6 9E 17           BCH AUTO_OFF_10 ; $E3B1
8164   E3C8             
8165   E3C8             AUTO_OFF_14: ; $E3C8
8166   E3C8 B7 01           CPI  A,$01
8167   E3CA 8B 1C           BZS AUTO_OFF_15 ; $E3E8
8168   E3CC B7 02           CPI  A,$02
8169   E3CE 8B 26           BZS AUTO_OFF_17 ; $E3F6
8170   E3D0 B7 1B           CPI  A,$1B
8171   E3D2 8B 1B           BZS AUTO_OFF_16 ; $E3EF
8172   E3D4 6D 80           BII  (U),$80
8173   E3D6 9B 16           BZS AUTO_OFF_13 ; $E3C2
8174   E3D8 B7 20           CPI  A,$20
8175   E3DA 8B 08           BZS $E3E4
8176   E3DC B7 3D           CPI  A,$3D
8177   E3DE 99 1E           BZR AUTO_OFF_13 ; $E3C2
8178   E3E0 B5 9D           LDI  A,$9D
8179   E3E2 9E 47           BCH AUTO_OFF_6 ; $E39D
8180   E3E4 B5 80           LDI  A,$80
8181   E3E6 9E 4B           BCH AUTO_OFF_6 ; $E39D
8182   E3E8             
8183   E3E8             AUTO_OFF_15: ; $E3E8
8184   E3E8 25              LDA  (U)
8185   E3E9 BD 02           EAI  $02
8186   E3EB B9 7F           ANI  A,$7F
8187   E3ED 8E 19           BCH AUTO_OFF_18 ; $E408
8188   E3EF             
8189   E3EF             AUTO_OFF_16: ; $E3EF
8190   E3EF 25              LDA  (U)
8191   E3F0 BD 80           EAI  $80
8192   E3F2 B9 FD           ANI  A,$FD
8193   E3F4 8E 12           BCH AUTO_OFF_18 ; $E408
8194   E3F6             
8195   E3F6             AUTO_OFF_17: ; $E3F6
8196   E3F6 FD ED F0 0F     BII  #(PC1500_PRT_B),$08
8196   E3FA 08 
8197   E3FB 89 0F           BZR AUTO_OFF_19 ; $E40C
8198   E3FD A5 78 5D        LDA  (KATAFLAGS)
8199   E400 D9              SHL
8200   E401 89 10           BZR AUTO_OFF_20 ; $E413
8201   E403 25              LDA  (U)
8202   E404 BD 04           EAI  $04
8203   E406 B9 77           ANI  A,$77
8204   E408             
8205   E408             AUTO_OFF_18: ; $E408
8206   E408 2E              STA  (U)
8207   E409 BA E2 43        JMP  WAIT_4_KB ; $E243
8208   E40C             
8209   E40C             AUTO_OFF_19: ; $E40C
8210   E40C 25              LDA  (U)
8211   E40D BD 08           EAI  $08
8212   E40F B9 7B           ANI  A,$7B
8213   E411 9E 0B           BCH AUTO_OFF_18 ; $E408
8214   E413             
8215   E413             AUTO_OFF_20: ; $E413
8216   E413 25              LDA  (U)
8217   E414 B9 73           ANI  A,$73
8218   E416 9E 10           BCH AUTO_OFF_18 ; $E408
8219   E418             
8220   E418             
8221   E418             
8222   E418             ;------------------------------------------------------------------------------
8223   E418             ; $E418 - Checks whether key is pressed. If not, Z=1.
8224   E418             ;------------------------------------------------------------------------------
8225   E418             ISKEY:
8226   E418 B5 FF           LDI  A,$FF
8227   E41A             
8228   E41A             ; Keyboard query. If no key is pressed Z=0.
8229   E41A             ISKEY_1: ; $E41A
8230   E41A FD AE F0 0C     STA  #(PC1500_PRT_A_DIR)
8231   E41E FD E9 F0 0E     ANI  #(PC1500_PRT_A),$00
8231   E422 00 
8232   E423 6A 03           LDI  UL,$03
8233   E425             
8234   E425             ISKEY_2: ; $E425
8235   E425 88 02           LOP  UL,ISKEY_2 ; $E425
8236   E427 FD BA           ITA
8237   E429 BD FF           EAI  $FF
8238   E42B 9A              RTN
8239   E42C             
8240   E42C             
8241   E42C             
8242   E42C             ;------------------------------------------------------------------------------
8243   E42C             ; $E42C - Keyboard query: ASCII code in accumulator. If no key pressed: C=1.
8244   E42C             ;------------------------------------------------------------------------------
8245   E42C             KEY_2_ASCII:
8246   E42C 4A 80           LDI  XL,$80
8247   E42E B5 01           LDI  A,$01
8248   E430             
8249   E430             KEY_2_ASCII_1: ; $E430
8250   E430 08              STA  XH
8251   E431 BE E4 1A        SJP  (ISKEY_1) ; $E41A
8252   E434 89 0E           BZR KEY_2_ASCII_3 ; $E444
8253   E436 F9              REC
8254   E437 B5 08           LDI  A,$08
8255   E439 02              ADC  XL
8256   E43A 0A              STA  XL
8257   E43B 84              LDA  XH
8258   E43C D9              SHL
8259   E43D 83 02           BCS KEY_2_ASCII_2 ; $E441
8260   E43F 99 11           BZR KEY_2_ASCII_1 ; $E430
8261   E441             
8262   E441             KEY_2_ASCII_2: ; $E441
8263   E441 B5 00           LDI  A,$00
8264   E443 9A              RTN
8265   E444             
8266   E444             KEY_2_ASCII_3: ; $E444
8267   E444 D9              SHL
8268   E445 83 05           BCS KEY_2_ASCII_4 ; $E44C
8269   E447 40              INC  XL
8270   E448 91 06           BCR KEY_2_ASCII_3 ; $E444
8271   E44A 9E 0B           BCH KEY_2_ASCII_2 ; $E441
8272   E44C             
8273   E44C             KEY_2_ASCII_4: ; $E44C
8274   E44C 48 FE           LDI  XH,$FE
8275   E44E 05              LDA  (X)
8276   E44F F9              REC
8277   E450 9A              RTN
8278   E451             
8279   E451             
8280   E451             
8281   E451             ;------------------------------------------------------------------------------
8282   E451             ; $E451 (A6) - Checks if Break was pressed. If so, Z=0; if no Z=1.
8283   E451             ;------------------------------------------------------------------------------
8284   E451             CHK_BRK:
8285   E451 FD ED F0 0B     BII  #(PC1500_IF_REG),$02
8285   E455 02 
8286   E456 9A              RTN
8287   E457             
8288   E457             
8289   E457             
8290   E457             ;------------------------------------------------------------------------------
8291   E457             ; $E466 - Basic command OPN
8292   E457             ;------------------------------------------------------------------------------
8293   E457             BCMD_OPN:   
8294   E457 C8              VEJ  (C8) \ ABRF(BCMD_OPN_3) ; 
8294   E458 0D          
8295   E459 FD 98           PSH  Y
8296   E45B             
8297   E45B             BCMD_OPN_1: ; $E45B
8298   E45B B5 60           LDI  A,$60
8299   E45D             
8300   E45D             BCMD_OPN_2: ; $E45D
8301   E45D AE 79 D1        STA  (OPN)
8302   E460 FD 1A           POP  Y
8303   E462 FD 81           SIE
8304   E464 56              DEC  Y
8305   E465 E2              VEJ  (E2)
8306   E466             
8307   E466             BCMD_OPN_3: ; $E466
8308   E466 C6              VEJ  (C6)
8309   E467 CD 36           VMJ  ($36)
8310   E469 81 BF           BCR BCMD_PRINT_8 ; $E52A
8311   E46B C8              VEJ  (C8) \ ABRF(BCMD_PRINT_8) ; $E52A
8311   E46C BD          
8312   E46D FD 98           PSH  Y
8313   E46F 48 7A           LDI  XH,$7A
8314   E471 58 7A           LDI  YH,$7A
8315   E473 CD 82           VMJ  ($82) ; ($82)($41)
8316   E475 58 E4           LDI  YH,$E4
8317   E477 5A E3           LDI  YL,$E3
8318   E479 CD 9E           VMJ  ($9E) ; ($9E)($4F)
8319   E47B 99 22           BZR BCMD_OPN_1 ; $E45B
8320   E47D CD BE           VMJ  ($BE) ; ($BE)($5F)
8321   E47F 81 14           BCR BCMD_OPN_5 ; $E495
8322   E481             
8323   E481             BCMD_OPN_4: ; $E481
8324   E481 FD A8           PSH  U
8325   E483 FD 88           PSH  X
8326   E485 4A 02           LDI  XL,$02
8327   E487 FD 5A           STX  Y
8328   E489 CD 9E           VMJ  ($9E) ; ($9E)($4F)
8329   E48B FD 0A           POP  X
8330   E48D FD 2A           POP  U
8331   E48F 89 09           BZR BCMD_OPN_6 ; $E49A
8332   E491 CD BC           VMJ  ($BC) ; ($BC)($5E)
8333   E493 93 14           BCS BCMD_OPN_4 ; $E481
8334   E495             
8335   E495             BCMD_OPN_5: ; $E495
8336   E495 FD 1A           POP  Y
8337   E497 68 22           LDI  UH,$22
8338   E499 E0              VEJ  (E0)
8339   E49A             
8340   E49A             BCMD_OPN_6: ; $E49A
8341   E49A A4              LDA  UH
8342   E49B D5              SHR
8343   E49C 84              LDA  XH
8344   E49D D1              ROR
8345   E49E 9E 43           BCH BCMD_OPN_2 ; $E45D
8346   E4A0             
8347   E4A0             
8348   E4A0             
8349   E4A0             ;------------------------------------------------------------------------------
8350   E4A0             ; $E4A0 (9E) - Comparison of two strings
8351   E4A0             ; Checks string 1st byte Y-Reg points to matches string CSI is stored in AR-Y.
8352   E4A0             ; Address:	E4A0 (9E)
8353   E4A0             ; 
8354   E4A0             ;    Entry Parameter:	Y-Reg points to the 1st byte of string to be checked
8355   E4A0             ;                       AR-Y contains CSI of the 2nd string
8356   E4A0             ; Modified Registers:	All
8357   E4A0             ;   Error conditions:	If match, numeric value (BCD format) loaded into AR-X
8358   E4A0             ;------------------------------------------------------------------------------
8359   E4A0             STR_COMP: ; $E4A0 (9E)
8360   E4A0 CD 0C           VMJ  ($0C)
8361   E4A2 B5 04           LDI  A,$04
8362   E4A4 BE D0 F9        SJP  (COMPARE_STR) ; $D0F9
8363   E4A7 9A              RTN
8364   E4A8             
8365   E4A8             
8366   E4A8             
8367   E4A8             ;------------------------------------------------------------------------------
8368   E4A8             ; (BE) Searches 1st token table below C000
8369   E4A8             ;      If CE-158 or CE-150 connected C = 1. With CE-150 UH =2, CE-158 UH = 1.
8370   E4A8             ;------------------------------------------------------------------------------
8371   E4A8             TOK_TABL_SRCH: ; $E4A8
8372   E4A8 FD BE           RIE
8373   E4AA B8              RPV
8374   E4AB B5 02           LDI  A,$02
8375   E4AD             
8376   E4AD             TOK_TABL_SRCH_1: ; $E4AD
8377   E4AD 48 B8           LDI  XH,$B8
8378   E4AF 28              STA  UH
8379   E4B0             
8380   E4B0             TOK_TABL_SRCH_2: ; $E4B0
8381   E4B0 B5 55           LDI  A,$55
8382   E4B2 4A 00           LDI  XL,$00
8383   E4B4 07              CPA  (X)
8384   E4B5 8B 16           BZS TOK_TABL_SRCH_6 ; $E4CD
8385   E4B7             
8386   E4B7             
8387   E4B7             
8388   E4B7             ;------------------------------------------------------------------------------
8389   E4B7             ; (BC) $E4B7 Searches for the next lower token table (8000-BFFF) based on the
8390   E4B7             ; address area pointed to by X-Reg.
8391   E4B7             ;------------------------------------------------------------------------------
8392   E4B7             TOK_TABL_SRCH_3:   
8393   E4B7 A4              LDA  UH
8394   E4B8 4C 88           CPI  XH,$88
8395   E4BA 81 06           BCR TOK_TABL_SRCH_4 ; $E4C2
8396   E4BC 84              LDA  XH
8397   E4BD B3 F7           ADI  A,$F7
8398   E4BF 08              STA  XH
8399   E4C0 9E 12           BCH TOK_TABL_SRCH_2 ; $E4B0
8400   E4C2             
8401   E4C2             TOK_TABL_SRCH_4: ; $E4C2
8402   E4C2 D5              SHR
8403   E4C3 83 03           BCS TOK_TABL_SRCH_5 ; $E4C8
8404   E4C5 A8              SPV
8405   E4C6 9E 1B           BCH TOK_TABL_SRCH_1 ; $E4AD
8406   E4C8             
8407   E4C8             TOK_TABL_SRCH_5: ; $E4C8
8408   E4C8 CD A0           VMJ  ($A0) ; ($A0)($50)
8409   E4CA F9              REC
8410   E4CB FD 81           SIE
8411   E4CD             
8412   E4CD             TOK_TABL_SRCH_6: ; $E4CD
8413   E4CD 9A              RTN
8414   E4CE             
8415   E4CE             
8416   E4CE             
8417   E4CE             ;------------------------------------------------------------------------------
8418   E4CE             ; $E4CE Searches for token table whose number is in UL
8419   E4CE             ; Searches for the start address of the token table, the number of which is in
8420   E4CE             ; the accumulator. C=0 if not found. If available C=1.
8421   E4CE             ;------------------------------------------------------------------------------
8422   E4CE             TOK_TABL_SRCH_7:   
8423   E4CE CD BE           VMJ  ($BE) ; ($BE)($5F)
8424   E4D0 81 09           BCR TOK_TABL_SRCH_9 ; $E4DB
8425   E4D2             
8426   E4D2             TOK_TABL_SRCH_8: ; $E4D2
8427   E4D2 44              INC  X
8428   E4D3 24              LDA  UL
8429   E4D4 07              CPA  (X)
8430   E4D5 8B 05           BZS TOK_TABL_SRCH_10 ; $E4DC
8431   E4D7 CD BC           VMJ  ($BC) ; ($BC)($5E)
8432   E4D9 93 09           BCS TOK_TABL_SRCH_8 ; $E4D2
8433   E4DB             
8434   E4DB             TOK_TABL_SRCH_9: ; $E4DB
8435   E4DB 9A              RTN
8436   E4DC             
8437   E4DC             TOK_TABL_SRCH_10: ; $E4DC
8438   E4DC A4              LDA  UH
8439   E4DD AE 79 D0        STA  (PU_PV)
8440   E4E0 FD 81           SIE
8441   E4E2 9A              RTN
8442   E4E3             
8443   E4E3             
8444   E4E3             
8445   E4E3             ;------------------------------------------------------------------------------
8446   E4E3             ; $E4E3 - Text for comparison OPN "LCD"
8447   E4E3             ;------------------------------------------------------------------------------
8448   E4E3 4C 43 44 0D     .BYTE $4C,$43,$44,$0D ; LCD/CR
8449   E4E7             
8450   E4E7             
8451   E4E7             
8452   E4E7             ;------------------------------------------------------------------------------
8453   E4E7             ; $E427 - INPUT# - Routine
8454   E4E7             ;------------------------------------------------------------------------------
8455   E4E7             BCMD_INPUTNUM: ; 
8456   E4E7 B5 84           LDI  A,$84
8457   E4E9 8E 05           BCH BCMD_PRINT_1 ; $E4F0
8458   E4EB             
8459   E4EB             
8460   E4EB             
8461   E4EB             ;------------------------------------------------------------------------------
8462   E4EB             ; $E4EB - Basic-Command PRINT
8463   E4EB             ;------------------------------------------------------------------------------
8464   E4EB             BCMD_PRINT: ; 
8465   E4EB C2              VEJ  (C2) \ ACHR($23) \ ABRF(BCMD_PRINT_3) ; $E513
8465   E4EC 23          
8465   E4ED 25          
8466   E4EE B5 04           LDI  A,$04
8467   E4F0             
8468   E4F0             BCMD_PRINT_1: ; $E4F0
8469   E4F0 AE 78 79        STA  (CASS_FLAG)
8470   E4F3 C2              VEJ  (C2) \ ACHR($2D) \ ABRF(BCMD_PRINT_5) ; $E51E
8470   E4F4 2D          
8470   E4F5 28          
8471   E4F6 DE              VEJ  (DE) \ ABRF(BCMD_PRINT_7) ; $E529
8471   E4F7 31          
8472   E4F8 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_PRINT_8) ; $E52A
8472   E4F9 2C          
8472   E4FA 2F          
8473   E4FB D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_PRINT_7) ; $E529
8473   E4FC 08          
8473   E4FD 2B          
8474   E4FE B7 02           CPI  A,$02
8475   E500 81 15           BCR BCMD_PRINT_4 ; $E517
8476   E502 BE E4 CE        SJP  ($E4CE)
8477   E505 81 20           BCR BCMD_PRINT_6 ; $E527
8478   E507 4A 10           LDI  XL,$10
8479   E509 ED 78 79 80     BII  (CASS_FLAG),$80
8480   E50D 8B 02           BZS BCMD_PRINT_2 ; $E511
8481   E50F 4A 0D           LDI  XL,$0D
8482   E511             
8483   E511             BCMD_PRINT_2: ; $E511
8484   E511 FD 5E           STX  P
8485   E513             
8486   E513             BCMD_PRINT_3: ; $E513
8487   E513 C6              VEJ  (C6)
8488   E514 BA E6 B6        JMP  BCMD_PAUSE_2 ; $E6B6
8489   E517             
8490   E517             BCMD_PRINT_4: ; $E517
8491   E517 D5              SHR
8492   E518 81 04           BCR BCMD_PRINT_5 ; $E51E
8493   E51A EB 78 79 10     ORI  (CASS_FLAG),$10
8494   E51E             
8495   E51E             BCMD_PRINT_5: ; $E51E
8496   E51E B5 5C           LDI  A,$5C
8497   E520 CD 3C           VMJ  ($3C)
8498   E522 81 03           BCR BCMD_PRINT_6 ; $E527
8499   E524 BA B8 A3        JMP  PCJUMP01 ; CE-150
8500   E527             
8501   E527             BCMD_PRINT_6: ; $E527
8502   E527 68 23           LDI  UH,$23
8503   E529             
8504   E529             BCMD_PRINT_7: ; $E529
8505   E529 E0              VEJ  (E0)
8506   E52A             
8507   E52A             BCMD_PRINT_8: ; $E52A
8508   E52A E4              VEJ  (E4)
8509   E52B             
8510   E52B             
8511   E52B             
8512   E52B             ;------------------------------------------------------------------------------
8513   E52B             ; $E52B - Writes to clock chip
8514   E52B             ;------------------------------------------------------------------------------
8515   E52B             WRITE_2_CLOCK: ; 
8516   E52B FD AA           TTA
8517   E52D FD C8           PSH  A
8518   E52F FD BE           RIE
8519   E531 B5 08           LDI  A,$08
8520   E533 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8521   E535 B5 00           LDI  A,$00
8522   E537 FD AE F0 0D     STA  #(PC1500_PRT_B_DIR)
8523   E53B 48 7A           LDI  XH,$7A
8524   E53D 4A 06           LDI  XL,$06
8525   E53F 68 04           LDI  UH,$04
8526   E541             
8527   E541             WRITE_2_CLOCK_1: ; $E541
8528   E541 05              LDA  (X)
8529   E542 6A 07           LDI  UL,$07
8530   E544             
8531   E544             WRITE_2_CLOCK_2: ; $E544
8532   E544 FD ED F0 0F     BII  #(PC1500_PRT_B),$40
8532   E548 40 
8533   E549 F9              REC
8534   E54A 8B 01           BZS WRITE_2_CLOCK_3 ; $E54D
8535   E54C FB              SEC
8536   E54D             
8537   E54D             WRITE_2_CLOCK_3: ; $E54D
8538   E54D D1              ROR
8539   E54E 83 1B           BCS $E56B
8540   E550 FD 59 FE        ANI  #(Y),$FE
8541   E553 FD 59 FE        ANI  #(Y),$FE
8542   E556             
8543   E556             WRITE_2_CLOCK_4: ; $E54D
8544   E556 FD 5B 04        ORI  #(Y),$04
8545   E559 FD 5B 04        ORI  #(Y),$04
8546   E55C FD 59 FB        ANI  #(Y),$FB
8547   E55F 88 1D           LOP  UL,WRITE_2_CLOCK_2 ; $E544
8548   E561 43              SDE  X
8549   E562 FD 62           DEC  UH
8550   E564 93 25           BCS WRITE_2_CLOCK_1 ; $E541
8551   E566                 
8552   E566             WRITE_2_CLOCK_5: ; $E566 
8553   E566 FD 8A           POP  A
8554   E568 FD EC           ATT
8555   E56A 9A              RTN
8556   E56B             
8557   E56B             WRITE_2_CLOCK_6: ; $E56B
8558   E56B FD 5B 01        ORI  #(Y),$01
8559   E56E FD 5B 01        ORI  #(Y),$01
8560   E571 9E 1D           BCH WRITE_2_CLOCK_4 ; $E556
8561   E573             
8562   E573             
8563   E573             
8564   E573             ;------------------------------------------------------------------------------
8565   E573             ; $E573 - (5A) Timer-mode-select routine. PD 1990AC timer module is switched to 
8566   E573             ; its various operating modes via its inputs C0, C1, C2, which are fed via I/O 
8567   E573             ; ports PC3, PC4 and PC5 (#F008).
8568   E573             ;          Address:	E573 (5A)
8569   E573             ;   Entry parameters: At entry, Accumulator contains the control byte of the 
8570   E573             ;                     timer module. The timer can be operated with 4 modes.
8571   E573             ;                       C2	C1	C0	Mode	Effect
8572   E573             ;                       0	0	0	0	    Register hold
8573   E573             ;                       0 	0	1	1	    Register shift
8574   E573             ;                       0	1	0	2	    Time set
8575   E573             ;                       0	1	1	3	    Time read
8576   E573             ;                       B5	B4	B3 of Accumulator
8577   E573             ;
8578   E573             ; Modified registers: U-Reg
8579   E573             ;                     Y-Reg contains F008
8580   E573             ;                     Accumulator
8581   E573             ;   Error conditions: None
8582   E573             ;------------------------------------------------------------------------------
8583   E573             TIMER_MODE: ; $E573
8584   E573 58 F0           LDI  YH,$F0
8585   E575 5A 08           LDI  YL,$08
8586   E577 28              STA  UH
8587   E578 FD AA           TTA
8588   E57A FD C8           PSH  A
8589   E57C FD BE           RIE
8590   E57E FD 15           LDA  #(Y)
8591   E580 B9 C0           ANI  A,$C0
8592   E582 F9              REC
8593   E583 A2              ADC  UH
8594   E584 FD 1E           STA  #(Y)
8595   E586 FD 1E           STA  #(Y)
8596   E588 B3 02           ADI  A,$02
8597   E58A FD 1E           STA  #(Y)
8598   E58C FD 1E           STA  #(Y)
8599   E58E B3 FE           ADI  A,$FE
8600   E590 FD 1E           STA  #(Y)
8601   E592 FD 1E           STA  #(Y)
8602   E594 6A 02           LDI  UL,$02
8603   E596             
8604   E596             TIMER_MODE_1: ; $E596
8605   E596 88 02           LOP  UL,TIMER_MODE_1 ; $E596
8606   E598 9E 34           BCH WRITE_2_CLOCK_5 ; $E566
8607   E59A             
8608   E59A             
8609   E59A             
8610   E59A             ;------------------------------------------------------------------------------
8611   E59A             ; $E59A - Transfers TIME from AR-X to clock module
8612   E59A             ;------------------------------------------------------------------------------
8613   E59A             ARX_2_TIME: ; 
8614   E59A FD 98           PSH  Y
8615   E59C FD 88           PSH  X
8616   E59E BE E5 2B        SJP  (WRITE_2_CLOCK)
8617   E5A1 B5 10           LDI  A,$10
8618   E5A3 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8619   E5A5             
8620   E5A5             ARX_2_TIME_1: ; $ E5A5
8621   E5A5 B5 00           LDI  A,$00
8622   E5A7 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8623   E5A9 FD 59 C7        ANI  #(Y),$C7
8624   E5AC FD 5B 08        ORI  #(Y),$08
8625   E5AF             
8626   E5AF             ARX_2_TIME_2: ; $ E5AF
8627   E5AF FD 0A           POP  X
8628   E5B1 FD 1A           POP  Y
8629   E5B3 9A              RTN
8630   E5B4             
8631   E5B4             
8632   E5B4             
8633   E5B4             ;------------------------------------------------------------------------------
8634   E5B4             ; $E5B4 - Reads clock chip to AR-X
8635   E5B4             ;------------------------------------------------------------------------------
8636   E5B4             TIME2ARX: ; 
8637   E5B4 FD 98           PSH  Y
8638   E5B6 FD 88           PSH  X
8639   E5B8 B5 18           LDI  A,$18
8640   E5BA CD 5A           VMJ  ($5A) ; ($5A)($2D)
8641   E5BC BE E5 2B        SJP  (WRITE_2_CLOCK)
8642   E5BF             
8643   E5BF             
8644   E5BF             
8645   E5BF             ;------------------------------------------------------------------------------
8646   E5BF             ; $E5C1 - Basic command BEEP
8647   E5BF             ;------------------------------------------------------------------------------
8648   E5BF             BCMD_BEEP:   
8649   E5BF 9E 1C           BCH ARX_2_TIME_1 ; 
8650   E5C1 C2              VEJ  (C2) \ AWRD($F19C) \ ABRF(BCMD_BEEP_2) ; $E5CC
8650   E5C2 F1 9C       
8650   E5C4 07          
8651   E5C5 E9 78 6B FE     ANI  (BEEP_PTR),$FE
8652   E5C9             
8653   E5C9             BCMD_BEEP_1: ; $ E5C9
8654   E5C9 CD A2           VMJ  ($A2) ; ($A2)($51)
8655   E5CB E2              VEJ  (E2)
8656   E5CC             
8657   E5CC             BCMD_BEEP_2: ; $ E5CC
8658   E5CC C4              VEJ  (C4) \ AWRD($F19E) \ ABRF(BCMD_BEEP_3) ; $E5D6
8658   E5CD F1 9E       
8658   E5CF 06          
8659   E5D0 EB 78 6B 01     ORI  (BEEP_PTR),$01
8660   E5D4 9E 0D           BCH BCMD_BEEP_1 ; $E5C9
8661   E5D6             
8662   E5D6             BCMD_BEEP_3: ; $ E5D6
8663   E5D6 C6              VEJ  (C6)
8664   E5D7 ED 78 6B 01     BII  (BEEP_PTR),$01
8665   E5DB 89 73           BZR BCMD_BEEP_13 ; $E650
8666   E5DD DE              VEJ  (DE) \ ABRF(BCMD_BEEP_14) ; $E653
8666   E5DE 74          
8667   E5DF D2              VEJ  (D2) \ ABRF(BCMD_BEEP_14) \ ABYT($80)
8667   E5E0 72          
8667   E5E1 80          
8668   E5E2 ED 7A 01 80     BII  (ARX + $01),$80
8669   E5E6 89 68           BZR BCMD_BEEP_13 ; $E650
8670   E5E8 ED 7A 02 F0     BII  (ARX + $02),$F0
8671   E5EC 8B 62           BZS BCMD_BEEP_13 ; $E650
8672   E5EE D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_BEEP_14) ; $E653
8672   E5EF 00          
8672   E5F0 62          
8673   E5F1 FD A8           PSH  U
8674   E5F3 C8              VEJ  (C8) \ ABRF(BCMD_BEEP_9) ; $E622
8674   E5F4 2D          
8675   E5F5 B5 FF           LDI  A,$FF
8676   E5F7             
8677   E5F7             BCMD_BEEP_4: ; $ E5F7
8678   E5F7 FD 2A           POP  U
8679   E5F9 FD 98           PSH  Y
8680   E5FB 1A              STA  YL
8681   E5FC FD A8           PSH  U
8682   E5FE             
8683   E5FE             BCMD_BEEP_5: ; $ E5FE
8684   E5FE 14              LDA  YL
8685   E5FF 8B 18           BZS BCMD_BEEP_8 ; $E619
8686   E601 BE E6 69        SJP  (BEEP_STD)
8687   E604             
8688   E604             BCMD_BEEP_6: ; $ E604
8689   E604 FD 2A           POP  U
8690   E606 89 42           BZR BCMD_BEEP_12 ; $E64A
8691   E608 66              DEC  U
8692   E609 24              LDA  UL
8693   E60A 89 03           BZR BCMD_BEEP_7 ; $E60F
8694   E60C A4              LDA  UH
8695   E60D 8B 3B           BZS BCMD_BEEP_12 ; $E64A
8696   E60F             
8697   E60F             BCMD_BEEP_7: ; $ E60F
8698   E60F FD A8           PSH  U
8699   E611 68 00           LDI  UH,$00
8700   E613 6A 06           LDI  UL,$06
8701   E615 CD AC           VMJ  ($AC) ; ($AC)($56)
8702   E617 9E 1B           BCH BCMD_BEEP_5 ; $E5FE
8703   E619             
8704   E619             BCMD_BEEP_8: ; $ E619
8705   E619 A5 78 78        LDA  (BEEP_FREQ)
8706   E61C 2A              STA  UL
8707   E61D BE E6 6F        SJP  (BEEP)
8708   E620 9E 1E           BCH BCMD_BEEP_6 ; $E604
8709   E622             
8710   E622             BCMD_BEEP_9: ; $ E622
8711   E622 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_BEEP_15) ; $E654
8711   E623 2C          
8711   E624 2F          
8712   E625 DE              VEJ  (DE) \ ABRF(BCMD_BEEP_14) ; $E653
8712   E626 2C          
8713   E627 D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_BEEP_14) ; $E653
8713   E628 08          
8713   E629 29          
8714   E62A 24              LDA  UL
8715   E62B AE 78 78        STA  (BEEP_FREQ)
8716   E62E C8              VEJ  (C8) \ ABRF(BCMD_BEEP_10) ; $E636
8716   E62F 06          
8717   E630 48 01           LDI  XH,$01
8718   E632 4A A0           LDI  XL,$A0
8719   E634 8E 10           BCH BCMD_BEEP_11 ; $E646
8720   E636             
8721   E636             BCMD_BEEP_10: ; $ E636
8722   E636 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_BEEP_15) ; $E654
8722   E637 2C          
8722   E638 1B          
8723   E639 DE              VEJ  (DE) \ ABRF(BCMD_BEEP_14) ; $E653
8723   E63A 18          
8724   E63B D0              VEJ  (D0) \ ABYT($02) \ ABRF(BCMD_BEEP_14) ; $E653
8724   E63C 02          
8724   E63D 15          
8725   E63E FD A8           PSH  U
8726   E640 C8              VEJ  (C8) \ ABRF(BCMD_BEEP_15) ; $E654
8726   E641 12          
8727   E642 FD 0A           POP  X
8728   E644 FD 40           INC  XH
8729   E646             
8730   E646             BCMD_BEEP_11: ; $ E646
8731   E646 B5 00           LDI  A,$00
8732   E648 9E 53           BCH BCMD_BEEP_4 ; $E5F7
8733   E64A             
8734   E64A             BCMD_BEEP_12: ; $ E64A
8735   E64A FD 1A           POP  Y
8736   E64C CD A2           VMJ  ($A2) ; ($A2)($51)
8737   E64E 56              DEC  Y
8738   E64F E2              VEJ  (E2)
8739   E650             
8740   E650             BCMD_BEEP_13: ; $ E650
8741   E650 BA C6 84        JMP  BCMD_DATA ; $C684
8742   E653             
8743   E653             BCMD_BEEP_14: ; $ E653
8744   E653 E0              VEJ  (E0)
8745   E654             
8746   E654             BCMD_BEEP_15: ; $ E654
8747   E654 E4              VEJ  (E4)
8748   E655             
8749   E655             
8750   E655             
8751   E655             ;------------------------------------------------------------------------------
8752   E655             ; $E655 (A2) - Beep-On/Off
8753   E655             ;            Address: (A2) E655
8754   E655             ;   Entry parameters: (7868) contains in bit 0 the information whether beep ON 
8755   E655             ;                     (bit 0=1) or beep OFF (bit 0=1) should be switched.
8756   E655             ; 
8757   E655             ; Modified registers: Bit 6 in #(F008), i.e. PC6 is set to 0 at Beep Off. No 
8758   E655             ;                     registers changed. If beep off: Carry flag=1
8759   E655             ;   Error conditions: None
8760   E655             ;------------------------------------------------------------------------------
8761   E655             BEEP_ON_OFF: ; $E655
8762   E655 ED 78 6B 01     BII  (BEEP_PTR),$01
8763   E659 8B 07           BZS BEEP_ON_OFF_1 ; $E662
8764   E65B FD E9 F0 08     ANI  #(PC1500_PRT_C),$BF
8764   E65F BF 
8765   E660 FB              SEC
8766   E661 9A              RTN
8767   E662             
8768   E662             BEEP_ON_OFF_1: ; $E662
8769   E662 FD EB F0 08     ORI  #(PC1500_PRT_C),$40
8769   E666 40 
8770   E667 F9              REC
8771   E668 9A              RTN
8772   E669             
8773   E669             
8774   E669             
8775   E669             ;------------------------------------------------------------------------------
8776   E669             ; $E669 - Standard Beep
8777   E669             ;------------------------------------------------------------------------------
8778   E669             BEEP_STD:
8779   E669 6A 08           LDI  UL,$08
8780   E66B 48 01           LDI  XH,$01
8781   E66D 4A A0           LDI  XL,$A0
8782   E66F             
8783   E66F             ;------------------------------------------------------------------------------
8784   E66F             ; $E66F - Beep with duration in X-Reg and pitch in UL
8785   E66F             ;------------------------------------------------------------------------------
8786   E66F             BEEP: ; 
8787   E66F FD 98           PSH  Y
8788   E671 FD 88           PSH  X
8789   E673 FD A8           PSH  U
8790   E675 58 F0           LDI  YH,$F0
8791   E677 5A 08           LDI  YL,$08
8792   E679 24              LDA  UL
8793   E67A 28              STA  UH
8794   E67B             
8795   E67B             BEEP_5: ; $E67B
8796   E67B B5 C8           LDI  A,$C8
8797   E67D FD 1E           STA  #(Y)
8798   E67F A4              LDA  UH
8799   E680 2A              STA  UL
8800   E681             
8801   E681             BEEP_1: ; $E681
8802   E681 88 02           LOP  UL,BEEP_1 ; $E681
8803   E683 FD ED F0 0B     BII  #(PC1500_IF_REG),$03
8803   E687 03 
8804   E688 89 14           BZR BEEP_2 ; $E69E
8805   E68A 46              DEC  X
8806   E68B 84              LDA  XH
8807   E68C 8B 10           BZS BEEP_2 ; $E69E
8808   E68E B5 88           LDI  A,$88
8809   E690 FD 1E           STA  #(Y)
8810   E692 A4              LDA  UH
8811   E693 2A              STA  UL
8812   E694             
8813   E694             BEEP_3: ; $E694
8814   E694 88 02           LOP  UL,BEEP_3 ; $E694
8815   E696 6A 01           LDI  UL,$01
8816   E698             
8817   E698             BEEP_4: ; $E698
8818   E698 88 02           LOP  UL,BEEP_4 ; $E698
8819   E69A 49 FF           ANI  (X),$FF
8820   E69C 9E 23           BCH BEEP_5 ; $E67B
8821   E69E             
8822   E69E             BEEP_2: ; $E69E
8823   E69E FD 2A           POP  U
8824   E6A0 9E F3           BCH ARX_2_TIME_2 ; $E5AF
8825   E6A2 E4              VEJ  (E4)
8826   E6A3 E4              VEJ  (E4)
8827   E6A4 E4              VEJ  (E4)
8828   E6A5             
8829   E6A5             
8830   E6A5             
8831   E6A5             ;------------------------------------------------------------------------------
8832   E6A5             ; $E6A5 - Basic command PAUSE
8833   E6A5             ;------------------------------------------------------------------------------
8834   E6A5             BCMD_PAUSE: ; 
8835   E6A5 B5 FF           LDI  A,$FF
8836   E6A7 8E 0F           BCH BCMD_PAUSE_3 ; $E6B8
8837   E6A9             
8838   E6A9             BCMD_PAUSE_1: ; $E6A9
8839   E6A9 B5 AA           LDI  A,$AA
8840   E6AB FD C8           PSH  A
8841   E6AD B5 60           LDI  A,$60
8842   E6AF AE 78 8F        STA  ($788F)
8843   E6B2 FD 98           PSH  Y
8844   E6B4 8E 57           BCH BCMD_PAUSE_14 ; $E70D
8845   E6B6             
8846   E6B6             BCMD_PAUSE_2: ; $E6B6
8847   E6B6 B5 00           LDI  A,$00
8848   E6B8             
8849   E6B8             BCMD_PAUSE_3: ; $E6B8
8850   E6B8 FD C8           PSH  A
8851   E6BA B5 60           LDI  A,$60
8852   E6BC AE 78 8F        STA  ($788F)
8853   E6BF C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_13); $E6FD
8853   E6C0 3C          
8854   E6C1             
8855   E6C1             BCMD_PAUSE_4: ; $E6C1
8856   E6C1 BE EC AE        SJP  (INIT_CURS)
8857   E6C4             
8858   E6C4             BCMD_PAUSE_5: ; $E6C4
8859   E6C4 CD 84           VMJ  ($84) ; ($84)($84)($42)
8860   E6C6 FD 8A           POP  A
8861   E6C8 D9              SHL
8862   E6C9 83 17           BCS BCMD_PAUSE_10 ; $E6E2
8863   E6CB             
8864   E6CB             BCMD_PAUSE_6: ; $E6CB
8865   E6CB D8              VEJ  (D8)
8866   E6CC 89 04           BZR BCMD_PAUSE_7 ; $E6D2
8867   E6CE B5 20           LDI  A,$20
8868   E6D0 8E 24           BCH BCMD_PAUSE_12 ; $E6F6
8869   E6D2             
8870   E6D2             BCMD_PAUSE_7: ; $E6D2
8871   E6D2 A5 78 71        LDA  (WAIT_CFG)
8872   E6D5 D5              SHR
8873   E6D6 83 08           BCS BCMD_PAUSE_9 ; $E6E0
8874   E6D8 D5              SHR
8875   E6D9 81 11           BCR BCMD_PAUSE_11 ; $E6EC
8876   E6DB F4              VEJ  (F4) \ AWRD(WAIT_CTR_H)
8876   E6DC 78 72       
8877   E6DE             
8878   E6DE             BCMD_PAUSE_8: ; $E6DE
8879   E6DE CD AC           VMJ  ($AC) ; ($AC)($56)
8880   E6E0             
8881   E6E0             BCMD_PAUSE_9: ; $E6E0
8882   E6E0 56              DEC  Y
8883   E6E1 E2              VEJ  (E2)
8884   E6E2             
8885   E6E2             BCMD_PAUSE_10: ; $E6E2
8886   E6E2 D9              SHL
8887   E6E3 68 00           LDI  UH,$00
8888   E6E5 6A 36           LDI  UL,$36
8889   E6E7 93 0B           BCS  BCMD_PAUSE_8 ; $E6DE
8890   E6E9 BA EE F7        JMP  BCMD_POINT_4 ; $EEF7
8891   E6EC             
8892   E6EC             BCMD_PAUSE_11: ; $E6EC
8893   E6EC EB 78 8A 20     ORI  (BREAKPARAM),$20
8894   E6F0 D4              VEJ  (D4) \ ABYT($AC)
8894   E6F1 AC          
8895   E6F2 D4              VEJ  (D4) \ ABYT($A0)
8895   E6F3 A0          
8896   E6F4 B5 02           LDI  A,$02
8897   E6F6             
8898   E6F6             BCMD_PAUSE_12: ; $E6F6
8899   E6F6 AE 78 80        STA  (DISPARAM)
8900   E6F9 CD 84           VMJ  ($84) ; ($84)($42)
8901   E6FB CD 46           VMJ  ($46)
8902   E6FD             
8903   E6FD             BCMD_PAUSE_13: ; $E6FD
8904   E6FD CD 9A           VMJ  ($9A) ; ($9A)($4D)
8905   E6FF C3 E0           VCS  ($E0)
8906   E701 DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_24) ; $E7A8
8906   E702 A5          
8907   E703 C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_19) ; $E744
8907   E704 3F          
8908   E705 FD 98           PSH  Y
8909   E707 ED 78 74 01     BII  (CURSOR_ENA),$01
8910   E70B 89 26           BZR BCMD_PAUSE_17 ; $E733
8911   E70D             
8912   E70D             BCMD_PAUSE_14: ; $E70D
8913   E70D BE EF 81        SJP  (OUTBUF_CLR)
8914   E710 CD 98           VMJ  ($98) ; ($98)($4C
8915   E712 83 10           BCS BCMD_PAUSE_15 ; $E724
8916   E714 B5 02           LDI  A,$02
8917   E716 CD 96           VMJ  ($96) ; ($96)($4B)
8918   E718 83 8A           BCS BCMD_PAUSE_23 ; $E7A4
8919   E71A 2A              STA  UL
8920   E71B BD FF           EAI  $FF
8921   E71D B3 7B           ADI  A,$7B
8922   E71F AE 78 8F        STA  ($788F)
8923   E722 CD 94           VMJ  ($94) ; ($94)($4A)
8924   E724             
8925   E724             BCMD_PAUSE_15: ; $E724
8926   E724 B5 1A           LDI  A,$1A
8927   E726 BE EC B2        SJP  (INIT_MTRX)
8928   E729             
8929   E729             BCMD_PAUSE_16: ; $E729
8930   E729 68 7B           LDI  UH,$7B
8931   E72B 6A 60           LDI  UL,$60
8932   E72D CD 92           VMJ  ($92) ; ($92)($49)
8933   E72F FD 1A           POP  Y
8934   E731 9E 72           BCH BCMD_PAUSE_4 ; $E6C1
8935   E733             
8936   E733             BCMD_PAUSE_17: ; $E733
8937   E733 CD 98           VMJ  ($98) ; ($98)($4C)
8938   E735 83 07           BCS BCMD_PAUSE_18 ; $E73E
8939   E737 B5 01           LDI  A,$01
8940   E739 BE EC D6        SJP  (ARX_2_OUTBUF_5)
8941   E73C 83 66           BCS BCMD_PAUSE_23 ; $E7A4
8942   E73E             
8943   E73E             BCMD_PAUSE_18: ; $E73E
8944   E73E FB              SEC
8945   E73F 14              LDA  YL
8946   E740 B1 60           SBI  A,$60
8947   E742 9E 1B           BCH BCMD_PAUSE_16 ; $E729
8948   E744             
8949   E744             BCMD_PAUSE_19: ; $E744
8950   E744 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_PAUSE_22) ; $E785
8950   E745 2C          
8950   E746 3E          
8951   E747 FD 98           PSH  Y
8952   E749 CD 9C           VMJ  ($9C); ($9C)($4E)
8953   E74B 83 57           BCS BCMD_PAUSE_23 ; $E7A4
8954   E74D FD 1A           POP  Y
8955   E74F C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_20) ; $E766
8955   E750 15          
8956   E751 E9 78 74 FE     ANI  (CURSOR_ENA),$FE
8957   E755 BE EC 9C        SJP  (CLR_NO_CURSOR)
8958   E758 68 7B           LDI  UH,$7B
8959   E75A 6A 60           LDI  UL,$60
8960   E75C CD 92           VMJ  ($92) ; ($92)($49)
8961   E75E EB 78 74 01     ORI  (CURSOR_ENA),$01
8962   E762 91 A0           BCR BCMD_PAUSE_5 ; $E6C4
8963   E764 9E A5           BCH BCMD_PAUSE_4 ; $E6C1
8964   E766             
8965   E766             BCMD_PAUSE_20: ; $E766
8966   E766 CD 9A           VMJ  ($9A) ; ($9A)($4D)
8967   E768 C3 E0           VCS  ($E0)
8968   E76A DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_24) ; $E7A8
8968   E76B 3C          
8969   E76C C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_PAUSE_21) ; $E770
8969   E76D 2C          
8969   E76E 01          
8970   E76F E4              VEJ  (E4)
8971   E770             
8972   E770             BCMD_PAUSE_21: ; $E770
8973   E770 CD 04           VMJ  ($04) \ ABRF(BCMD_PAUSE_25) ; $E7A9
8973   E772 36          
8974   E773 FD 98           PSH  Y
8975   E775 CD 9C           VMJ  ($9C) ; ($9C)($4E)
8976   E777 83 2B           BCS BCMD_PAUSE_23 ; $E7A4
8977   E779 BE EC B2        SJP  (INIT_MTRX)
8978   E77C 9E 40           BCH BCMD_PAUSE_18 ; $E73E
8979   E77E CD 9A           VMJ  ($9A) ; ($9A)($4D)
8980   E780 C3 E0           VCS  ($E0)
8981   E782 DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_24) ; $E7A8
8981   E783 24          
8982   E784 C0              VEJ  (C0)
8983   E785             
8984   E785             BCMD_PAUSE_22: ; $E785
8985   E785 C4              VEJ  (C4) \ ACHR($3B) \ ABRF($E795)
8985   E786 3B          
8985   E787 0D          
8986   E788 FD 98           PSH  Y
8987   E78A BE EC E3        SJP  (XFER_2_OUTBUF)
8988   E78D 83 15           BCS BCMD_PAUSE_23 ; $E7A4
8989   E78F FD 1A           POP  Y
8990   E791 C8              VEJ  (C8) \ ABRF($E7AA)
8990   E792 17          
8991   E793 9E 40           BCH $E755
8992   E795 CD 04           VMJ  ($04) \ ABRF(BCMD_PAUSE_25) ; $E7A9
8992   E797 11          
8993   E798 FD 98           PSH  Y
8994   E79A BE EC E3        SJP  (XFER_2_OUTBUF)
8995   E79D 83 05           BCS BCMD_PAUSE_23 ; $E7A4
8996   E79F BE EC 9C        SJP  (CLR_NO_CURSOR)
8997   E7A2 9E 7B           BCH BCMD_PAUSE_16 ; $E729
8998   E7A4             
8999   E7A4             BCMD_PAUSE_23: ; $E7A4
9000   E7A4 68 24           LDI  UH,$24
9001   E7A6 FD 1A           POP  Y
9002   E7A8             
9003   E7A8             BCMD_PAUSE_24: ; $E7A8
9004   E7A8 E0              VEJ  (E0)
9005   E7A9             
9006   E7A9             BCMD_PAUSE_25: ; $E7A9
9007   E7A9 E4              VEJ  (E4)
9008   E7AA 9E 2E           BCH $E77E
9009   E7AC             
9010   E7AC             
9011   E7AC             
9012   E7AC             ;------------------------------------------------------------------------------
9013   E7AC             ; $E7AC - Basic command GPRINT
9014   E7AC             ;------------------------------------------------------------------------------
9015   E7AC             BCMD_GPRINT: ; 
9016   E7AC C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_1) ; $E7B0
9016   E7AD 02          
9017   E7AE 8E 5B           BCH $E80B
9018   E7B0             
9019   E7B0             BCMD_GPRINT_1: ; $E7B0
9020   E7B0 FD A8           PSH  U
9021   E7B2 BE EC 9C        SJP  (CLR_NO_CURSOR)
9022   E7B5 FD 2A           POP  U
9023   E7B7             
9024   E7B7             BCMD_GPRINT_2: ; $E7B7
9025   E7B7 C6              VEJ  (C6)
9026   E7B8 DE              VEJ  (DE) \ ABRF($E831)
9026   E7B9 77          
9027   E7BA BE ED AB        SJP  (MTRX_IN_RANGE);($48)
9028   E7BD 83 38           BCS BCMD_GPRINT_7 ; $E7F7
9029   E7BF FD 98           PSH  Y
9030   E7C1 CD 8C           VMJ  ($8C) ; ($8C)($46)
9031   E7C3 FD 88           PSH  X
9032   E7C5 A5 7A 04        LDA  (ARX + $04)
9033   E7C8 B7 C0           CPI  A,$C0
9034   E7CA 81 1C           BCR BCMD_GPRINT_4 ; $E7E8
9035   E7CC DC              VEJ  (DC)
9036   E7CD             
9037   E7CD             BCMD_GPRINT_3: ; $E7CD
9038   E7CD 6E 02           CPI  UL,$02
9039   E7CF 81 22           BCR BCMD_GPRINT_5 ; $E7F3
9040   E7D1 BE ED 95        SJP  (ASCII_2_HEX)
9041   E7D4 FD 5A           STX  Y
9042   E7D6 FD 0A           POP  X
9043   E7D8 81 58           BCR BCMD_GPRINT_17 ; $E832
9044   E7DA CD 88           VMJ  ($88) ; ($88)($44)
9045   E7DC 62              DEC  UL
9046   E7DD 62              DEC  UL
9047   E7DE CD 8E           VMJ  ($8E) ; ($8E)($47)
9048   E7E0 83 13           BCS BCMD_GPRINT_6 ; $E7F5
9049   E7E2 FD 88           PSH  X
9050   E7E4 FD 18           LDX  Y
9051   E7E6 9E 1B           BCH BCMD_GPRINT_3 ; $E7CD
9052   E7E8             
9053   E7E8             BCMD_GPRINT_4: ; $E7E8
9054   E7E8 D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_GPRINT_18) ; $E836
9054   E7E9 08          
9054   E7EA 4B          
9055   E7EB FD 0A           POP  X
9056   E7ED CD 88           VMJ  ($88) ; ($88)($44)
9057   E7EF CD 8E           VMJ  ($8E) ; ($8E)($47)
9058   E7F1 8E 02           BCH BCMD_GPRINT_6 ; $E7F5
9059   E7F3             
9060   E7F3             BCMD_GPRINT_5: ; $E7F3
9061   E7F3 FD 0A           POP  X
9062   E7F5             
9063   E7F5             BCMD_GPRINT_6: ; $E7F5
9064   E7F5 FD 1A           POP  Y
9065   E7F7             
9066   E7F7             BCMD_GPRINT_7: ; $E7F7
9067   E7F7 C2              VEJ  (C2) \ ACHR($3B) \ ABRF(BCMD_GPRINT_10) ; $E808
9067   E7F8 3B          
9067   E7F9 0E          
9068   E7FA C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_20) ; $E83C
9068   E7FB 40          
9069   E7FC             
9070   E7FC             BCMD_GPRINT_8: ; $E7FC
9071   E7FC EB 78 74 01     ORI  (CURSOR_ENA),$01
9072   E800 BE ED AB        SJP  (MTRX_IN_RANGE);($48)
9073   E803 83 0A           BCS BCMD_GPRINT_11 ; $E80F
9074   E805             
9075   E805             BCMD_GPRINT_9: ; $E805
9076   E805 BA E6 CB        JMP  BCMD_PAUSE_6 ; $E6CB
9077   E808             
9078   E808             BCMD_GPRINT_10: ; $E808
9079   E808 CD 04           VMJ  ($04) \ ABRF(BCMD_GPRINT_12) ; $E814
9079   E80A 09          
9080   E80B E9 78 74 FE     ANI  (CURSOR_ENA),$FE
9081   E80F             
9082   E80F             BCMD_GPRINT_11: ; $E80F
9083   E80F BE EC B2        SJP  (INIT_MTRX)
9084   E812 9E 0F           BCH BCMD_GPRINT_9 ; $E805
9085   E814             
9086   E814             BCMD_GPRINT_12: ; $E814
9087   E814 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_GPRINT_14) ; $E827
9087   E815 2C          
9087   E816 10          
9088   E817 BE ED AB        SJP  (MTRX_IN_RANGE);($48)
9089   E81A 83 07           BCS BCMD_GPRINT_13 ; $E823
9090   E81C B5 00           LDI  A,$00
9091   E81E BE ED EF        SJP  (GPRINT_OUT)
9092   E821 CD 8E           VMJ  ($8E) ; ($8E)($47)
9093   E823             
9094   E823             BCMD_GPRINT_13: ; $E823
9095   E823 C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_20) ; $E83C
9095   E824 17          
9096   E825 9E 2B           BCH BCMD_GPRINT_8 ; $E7FC
9097   E827             
9098   E827             BCMD_GPRINT_14: ; $E827
9099   E827 68 01           LDI  UH,$01
9100   E829             
9101   E829             BCMD_GPRINT_15: ; $E829
9102   E829 BE ED AB        SJP  (MTRX_IN_RANGE);($48)
9103   E82C 81 03           BCR BCMD_GPRINT_16 ; $E831
9104   E82E BE EC B2        SJP  (INIT_MTRX)
9105   E831             
9106   E831             BCMD_GPRINT_16: ; $E831
9107   E831 E0              VEJ  (E0)
9108   E832             
9109   E832             BCMD_GPRINT_17: ; $E932
9110   E832 68 24           LDI  UH,$24
9111   E834 8E 02           BCH BCMD_GPRINT_19 ; $E838
9112   E836             
9113   E836             BCMD_GPRINT_18: ; $E836
9114   E836 FD 0A           POP  X
9115   E838             
9116   E838             BCMD_GPRINT_19: ; $E838
9117   E838 FD 1A           POP  Y
9118   E83A 9E 13           BCH BCMD_GPRINT_15 ; $E829
9119   E83C             
9120   E83C             BCMD_GPRINT_20: ; $E82C
9121   E83C 9E 87           BCH BCMD_GPRINT_2 ; $E7B7
9122   E83E             
9123   E83E             
9124   E83E             
9125   E83E             ;------------------------------------------------------------------------------
9126   E83E             ; $E83E - Basic command GCURSOR
9127   E83E             ;------------------------------------------------------------------------------
9128   E83E             BCMD_GCURSOR: ; 
9129   E83E DE              VEJ  (DE) \ ABRF(BCMD_WAIT_3) ; $E88A
9129   E83F 4A          
9130   E840 D0              VEJ  (D0) \ ABYT($0A) \ ABRF(BCMD_WAIT_3) ; $E88A
9130   E841 0A          
9130   E842 47          
9131   E843 24              LDA  UL
9132   E844 8E 17           BCH BCMD_CURSOR_2 ; $E85D
9133   E846             
9134   E846             
9135   E846             
9136   E846             ;------------------------------------------------------------------------------
9137   E846             ; $E846 - Basic command CURSOR
9138   E846             ;------------------------------------------------------------------------------
9139   E846             BCMD_CURSOR: ; 
9140   E846 C8              VEJ  (C8) \ ABRF(BCMD_CURSOR_1) ; $E852
9140   E847 0A          
9141   E848 E9 78 75 00     ANI  (CURSOR_PTR),$00
9142   E84C E9 78 74 FE     ANI  (CURSOR_ENA),$FE
9143   E850 56              DEC  Y
9144   E851 E2              VEJ  (E2)
9145   E852             
9146   E852             BCMD_CURSOR_1: ; $E852
9147   E852 C6              VEJ  (C6)
9148   E853 DE              VEJ  (DE) \ ABRF(BCMD_WAIT_3) ; $E88A
9148   E854 35          
9149   E855 D0              VEJ  (D0) \ ABYT($10) \ ABRF(BCMD_WAIT_3) ; $E88A
9149   E856 10          
9149   E857 32          
9150   E858 24              LDA  UL
9151   E859 D9              SHL
9152   E85A F9              REC
9153   E85B 22              ADC  UL
9154   E85C D9              SHL
9155   E85D             
9156   E85D             BCMD_CURSOR_2: ; $E85D
9157   E85D AE 78 75        STA  (CURSOR_PTR)
9158   E860 EB 78 74 01     ORI  (CURSOR_ENA),$01
9159   E864 E2              VEJ  (E2)
9160   E865             
9161   E865             
9162   E865             
9163   E865             ;------------------------------------------------------------------------------
9164   E865             ; $E865 - Basic Command CLS
9165   E865             ;------------------------------------------------------------------------------
9166   E865             BCMD_CLS: ; 
9167   E865 F2              VEJ  (F2)
9168   E866 BE EC AE        SJP  (INIT_CURS)
9169   E869 E2              VEJ  (E2)
9170   E86A             
9171   E86A             
9172   E86A             
9173   E86A             ;------------------------------------------------------------------------------
9174   E86A             ; $E86A - Basic Command WAIT
9175   E86A             ;------------------------------------------------------------------------------
9176   E86A             BCMD_WAIT: ; 
9177   E86A C8              VEJ  (C8) \ ABRF(BCMD_WAIT_1) ; $E871
9177   E86B 05          
9178   E86C 56              DEC  Y
9179   E86D B5 00           LDI  A,$00
9180   E86F 8E 15           BCH BCMD_WAIT_2 ; $E886
9181   E871             
9182   E871             BCMD_WAIT_1: ; $E871
9183   E871 C6              VEJ  (C6)
9184   E872 DE              VEJ  (DE) \ ABRF(BCMD_WAIT_3) ; $E88A
9184   E873 16          
9185   E874 D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_WAIT_3) ; $E88A
9185   E875 00          
9185   E876 13          
9186   E877 F6              VEJ  (F6) \ AWRD(WAIT_CTR_H)
9186   E878 78 72       
9187   E87A B5 02           LDI  A,$02
9188   E87C 6C 00           CPI  UH,$00
9189   E87E 89 06           BZR BCMD_WAIT_2 ; $E886
9190   E880 6E 00           CPI  UL,$00
9191   E882 89 02           BZR BCMD_WAIT_2 ; $E886
9192   E884 B5 03           LDI  A,$03
9193   E886             
9194   E886             BCMD_WAIT_2: ; $E886
9195   E886 AE 78 71        STA  (WAIT_CFG)
9196   E889 E2              VEJ  (E2)
9197   E88A             
9198   E88A             BCMD_WAIT_3: ; $E86A
9199   E88A E0              VEJ  (E0)
9200   E88B E4              VEJ  (E4)
9201   E88C             
9202   E88C             
9203   E88C             
9204   E88C             ;------------------------------------------------------------------------------
9205   E88C             ; $E88C - Time delay by 15.625 ms * U-Reg
9206   E88C             ;            Address: E88C (AC)
9207   E88C             ;   Entry parameters: U-Reg contains the number of delay loops.
9208   E88C             ; 
9209   E88C             ; Modified registers: U-Reg
9210   E88C             ;   Error conditions: It is possible to abort with the break key
9211   E88C             ;------------------------------------------------------------------------------
9212   E88C             TIME_DELAY: ; 
9213   E88C FD 98           PSH  Y
9214   E88E FD A8           PSH  U
9215   E890 B5 20           LDI  A,$20
9216   E892 CD 5A           VMJ  ($5A) ; ($5A)($2D)
9217   E894 FD 2A           POP  U
9218   E896 B5 00           LDI  A,$00
9219   E898 FD AE F0 0D     STA  #(PC1500_PRT_B_DIR)
9220   E89C             
9221   E89C             TIME_DELAY_1: ; $E89C
9222   E89C FD ED F0 0F     BII  #(PC1500_PRT_B),$20
9222   E8A0 20 
9223   E8A1 8B 06           BZS TIME_DELAY_2 ; $E8A9
9224   E8A3 CD A6           VMJ  ($A6) ; ($A6)($53)
9225   E8A5 9B 0B           BZS TIME_DELAY_1 ; $E89C
9226   E8A7 8E 0B           BCH TIME_DELAY_3 ; $E8B4
9227   E8A9             
9228   E8A9             TIME_DELAY_2: ; $E8A9
9229   E8A9 FD ED F0 0F     BII  #(PC1500_PRT_B),$20
9229   E8AD 20 
9230   E8AE 89 0C           BZR TIME_DELAY_5 ; $E8BC
9231   E8B0 CD A6           VMJ  ($A6) ; ($A6)($53)
9232   E8B2 9B 0B           BZS TIME_DELAY_2 ; $E8A9
9233   E8B4             
9234   E8B4             TIME_DELAY_3: ; $E8B4
9235   E8B4 B5 00           LDI  A,$00
9236   E8B6 CD 5A           VMJ  ($5A) ; ($5A)($2D)
9237   E8B8 FB              SEC
9238   E8B9             
9239   E8B9             TIME_DELAY_4: ; $E8B9
9240   E8B9 FD 1A           POP  Y
9241   E8BB 9A              RTN
9242   E8BC             
9243   E8BC             TIME_DELAY_5: ; $E8BC
9244   E8BC 62              DEC  UL
9245   E8BD 93 23           BCS TIME_DELAY_1 ; $E89C
9246   E8BF FD 62           DEC  UH
9247   E8C1 93 27           BCS TIME_DELAY_1 ; $E89C
9248   E8C3 B5 00           LDI  A,$00
9249   E8C5 CD 5A           VMJ  ($5A) ; ($5A)($2D)
9250   E8C7 F9              REC
9251   E8C8 9E 11           BCH TIME_DELAY_4 ; $E8B9
9252   E8CA             
9253   E8CA             
9254   E8CA             
9255   E8CA             ;------------------------------------------------------------------------------
9256   E8CA             ; $E8CA - Display Program
9257   E8CA             ;------------------------------------------------------------------------------
9258   E8CA             PRGM_DISP: ; 
9259   E8CA A5 78 80        LDA  (DISPARAM)
9260   E8CD BF 31           BII  A,$31
9261   E8CF 89 96           BZR PRGM_DISP_16 ; $E967
9262   E8D1 FD 98           PSH  Y
9263   E8D3 14              LDA  YL
9264   E8D4 FD C8           PSH  A
9265   E8D6 48 7A           LDI  XH,$7A
9266   E8D8 4A 08           LDI  XL,$08
9267   E8DA ED 78 8A 10     BII  (BREAKPARAM),$10
9268   E8DE 89 10           BZR PRGM_DISP_2 ; $E8F0
9269   E8E0 ED 78 80 40     BII  (DISPARAM),$40
9270   E8E4 8B 11           BZS PRGM_DISP_3 ; $E8F7
9271   E8E6 FD 88           PSH  X
9272   E8E8 B5 E5           LDI  A,$E5
9273   E8EA             
9274   E8EA             PRGM_DISP_1: ; $E8EA
9275   E8EA 68 7B           LDI  UH,$7B
9276   E8EC 6A B0           LDI  UL,$B0
9277   E8EE 8E 28           BCH PRGM_DISP_6 ; $E918
9278   E8F0             
9279   E8F0             PRGM_DISP_2: ; $E8F0
9280   E8F0 FD 88           PSH  X
9281   E8F2 A5 78 77        LDA  ($7877)
9282   E8F5 9E 0D           BCH PRGM_DISP_1 ; $E8EA
9283   E8F7             
9284   E8F7             PRGM_DISP_3: ; $E8F7
9285   E8F7 58 7B           LDI  YH,$7B
9286   E8F9 5A B0           LDI  YL,$B0
9287   E8FB 8E 71           BCH PRGM_DISP_17 ; $E96E
9288   E8FD             
9289   E8FD             PRGM_DISP_4: ; $E8FF
9290   E8FD ED 78 80 40     BII  (DISPARAM),$40
9291   E901 8B 6B           BZS PRGM_DISP_17 ; $E96E
9292   E903 FD 8A           POP  A
9293   E905 FD C8           PSH  A
9294   E907 FD 88           PSH  X
9295   E909 FD 98           PSH  Y
9296   E90B FD 2A           POP  U
9297   E90D ED 78 7B FF     BII  ($787B),$FF
9298   E911 89 01           BZR PRGM_DISP_5 ; $E914
9299   E913 1A              STA  YL
9300   E914             
9301   E914             PRGM_DISP_5: ; $E914
9302   E914 F9              REC
9303   E915 04              LDA  XL
9304   E916 B3 DD           ADI  A,$DD
9305   E918             
9306   E918             PRGM_DISP_6: ; $E918
9307   E918 64              INC  U
9308   E919 FD C8           PSH  A
9309   E91B FD A8           PSH  U
9310   E91D C0              VEJ  (C0)
9311   E91E 81 16           BCR PRGM_DISP_9 ; $E936
9312   E920 CD 1C           VMJ  ($1C) \ ABYT($04)
9312   E922 04          
9313   E923 8B 11           BZS PRGM_DISP_9 ; $E936
9314   E925 2A              STA  UL
9315   E926 FD 0A           POP  X
9316   E928 F9              REC
9317   E929 FD 8A           POP  A
9318   E92B 22              ADC  UL
9319   E92C 83 02           BCS PRGM_DISP_7 ; $E930
9320   E92E 8E 11           BCH PRGM_DISP_11 ; $E941
9321   E930             
9322   E930             PRGM_DISP_7: ; $E930
9323   E930 C6              VEJ  (C6)
9324   E931 8E 28           BCH PRGM_DISP_14 ; $E95B
9325   E933             
9326   E933             PRGM_DISP_8: ; $E933
9327   E933 C0              VEJ  (C0)
9328   E934 83 29           BCS PRGM_DISP_15 ; $E95F
9329   E936             
9330   E936             PRGM_DISP_9: ; $E936
9331   E936 B5 01           LDI  A,$01
9332   E938             
9333   E938             PRGM_DISP_10: ; $E938
9334   E938 2A              STA  UL
9335   E939 FD 0A           POP  X
9336   E93B F9              REC
9337   E93C FD 8A           POP  A
9338   E93E 22              ADC  UL
9339   E93F 83 1A           BCS PRGM_DISP_14 ; $E95B
9340   E941             
9341   E941             PRGM_DISP_11: ; $E941
9342   E941 C6              VEJ  (C6)
9343   E942 FD C8           PSH  A
9344   E944 14              LDA  YL
9345   E945 06              CPA  XL
9346   E946 81 11           BCR PRGM_DISP_13 ; $E959
9347   E948 FD 88           PSH  X
9348   E94A 8B 0A           BZS PRGM_DISP_12 ; $E956
9349   E94C 56              DEC  Y
9350   E94D 56              DEC  Y
9351   E94E 15              LDA  (Y)
9352   E94F B7 E0           CPI  A,$E0
9353   E951 93 20           BCS PRGM_DISP_8 ; $E933
9354   E953 54              INC  Y
9355   E954 9E 23           BCH PRGM_DISP_8 ; $E933
9356   E956             
9357   E956             PRGM_DISP_12: ; $E956
9358   E956 56              DEC  Y
9359   E957 9E 26           BCH PRGM_DISP_8 ;  $E933
9360   E959             
9361   E959             PRGM_DISP_13: ; $E959
9362   E959 FD 8A           POP  A
9363   E95B             
9364   E95B             PRGM_DISP_14: ; $E95B
9365   E95B FD 0A           POP  X
9366   E95D 8E 0F           BCH PRGM_DISP_17 ; $E96E
9367   E95F             
9368   E95F             PRGM_DISP_15: ; $E95F
9369   E95F CD 1C           VMJ  ($1C) \ ABYT($04)
9369   E961 04          
9370   E962 9B 2E           BZS PRGM_DISP_9 ; $E936
9371   E964 DD              INC  A
9372   E965 9E 2F           BCH PRGM_DISP_10 ; $E938
9373   E967             
9374   E967             PRGM_DISP_16: ; $E967
9375   E967 F1              AEX
9376   E968 D5              SHR
9377   E969 83 BB           BCS STATUS_CHK_7 $EA26
9378   E96B BA EE EC        JMP  BCMD_POINT_3 ; $EEEC
9379   E96E             
9380   E96E             PRGM_DISP_17: ; $E96E
9381   E96E FD 8A           POP  A
9382   E970 FD C8           PSH  A
9383   E972 16              CPA  YL
9384   E973 89 04           BZR PRGM_DISP_18 ; $E979
9385   E975 04              LDA  XL
9386   E976 AE 78 7B        STA  ($787B)
9387   E979             
9388   E979             PRGM_DISP_18: ; $E979
9389   E979 C0              VEJ  (C0)
9390   E97A 83 1B           BCS PRGM_DISP_22 ; $E997
9391   E97C B7 0D           CPI  A,$0D
9392   E97E 8B 2C           BZS PRGM_DISP_25 ; $E9AC
9393   E980             
9394   E980             PRGM_DISP_19: ; $E980
9395   E980 41              SIN  X
9396   E981 4E 22           CPI  XL,$22
9397   E983 91 17           BCR PRGM_DISP_17 ; $E96E
9398   E985 BE E9 EB        SJP  (STATUS_CHK)
9399   E988 83 2E           BCS PRGM_DISP_27 ; $E9B8
9400   E98A B5 1A           LDI  A,$1A
9401   E98C             
9402   E98C             PRGM_DISP_20: ; $E98C
9403   E98C 28              STA  UH
9404   E98D             
9405   E98D             PRGM_DISP_21: ; $E98D
9406   E98D FD 8A           POP  A
9407   E98F A5 78 75        LDA  (CURSOR_PTR)
9408   E992 FD C8           PSH  A
9409   E994 A4              LDA  UH
9410   E995 8E 2E           BCH PRGM_DISP_28 ; $E9C5
9411   E997             
9412   E997             PRGM_DISP_22: ; $E997
9413   E997 FD 98           PSH  Y
9414   E999 FD 5A           STX  Y
9415   E99B CD 1C           VMJ  ($1C) \ ABYT($02)
9415   E99D 02          
9416   E99E 8B 08           BZS PRGM_DISP_24 ; $E9A8
9417   E9A0 B5 20           LDI  A,$20
9418   E9A2             
9419   E9A2             PRGM_DISP_23: ; $E9A2
9420   E9A2 FD 18           LDX  Y
9421   E9A4 FD 1A           POP  Y
9422   E9A6 9E 28           BCH PRGM_DISP_19 ; $E980
9423   E9A8             
9424   E9A8             PRGM_DISP_24: ; $E9A8
9425   E9A8 B5 7E           LDI  A,$7E
9426   E9AA 9E 0A           BCH PRGM_DISP_23 ; $E9A2
9427   E9AC             
9428   E9AC             PRGM_DISP_25: ; $E9AC
9429   E9AC BE E9 EB        SJP  (STATUS_CHK)
9430   E9AF 81 1C           BCR PRGM_DISP_29 ; $E9CD
9431   E9B1 B5 00           LDI  A,$00
9432   E9B3             
9433   E9B3             PRGM_DISP_26: ; $E9B3
9434   E9B3 41              SIN  X
9435   E9B4 4E 22           CPI  XL,$22
9436   E9B6 91 05           BCR PRGM_DISP_26 ; $E9B3
9437   E9B8             
9438   E9B8             PRGM_DISP_27: ; $E9B8
9439   E9B8 FD 8A           POP  A
9440   E9BA A5 78 75        LDA  (CURSOR_PTR)
9441   E9BD FD C8           PSH  A
9442   E9BF E9 78 75 00     ANI  (CURSOR_PTR),$00
9443   E9C3 B5 1A           LDI  A,$1A
9444   E9C5             
9445   E9C5             PRGM_DISP_28: ; $E9C5
9446   E9C5 68 7A           LDI  UH,$7A
9447   E9C7 6A 08           LDI  UL,$08
9448   E9C9 CD 92           VMJ  ($92) ; ($92)($49)
9449   E9CB 8E 2C           BCH STATUS_CHK_2 ; $E9F9
9450   E9CD             
9451   E9CD             PRGM_DISP_29: ; $E9CD
9452   E9CD 49 00           ANI  (X),$00
9453   E9CF 04              LDA  XL
9454   E9D0 B1 06           SBI  A,$06
9455   E9D2 A7 78 76        CPA  (CHARPOS_LCD)
9456   E9D5 83 0F           BCS PRGM_DISP_31 ; $E9E6
9457   E9D7 2A              STA  UL
9458   E9D8 A5 78 76        LDA  (CHARPOS_LCD)
9459   E9DB 28              STA  UH
9460   E9DC DD              INC  A
9461   E9DD 20              SBC  UL
9462   E9DE 2A              STA  UL
9463   E9DF B5 00           LDI  A,$00
9464   E9E1             
9465   E9E1             PRGM_DISP_30: ; $E9E1
9466   E9E1 41              SIN  X
9467   E9E2 88 03           LOP  UL,PRGM_DISP_30 ; $E9E1
9468   E9E4 9E 59           BCH PRGM_DISP_21 ; $E98D
9469   E9E6             
9470   E9E6             PRGM_DISP_31: ; $E9E6
9471   E9E6 AE 78 76        STA  (CHARPOS_LCD)
9472   E9E9 9E 5F           BCH PRGM_DISP_20 ; $E98C
9473   E9EB             
9474   E9EB             
9475   E9EB             
9476   E9EB             ;------------------------------------------------------------------------------
9477   E9EB             ; $E9EB - Checks display and input status. Checks computer status.
9478   E9EB             ;------------------------------------------------------------------------------
9479   E9EB             STATUS_CHK: ; 
9480   E9EB ED 78 80 10     BII  (DISPARAM),$10
9481   E9EF 89 07           BZR STATUS_CHK_1 ; $E9F8
9482   E9F1 ED 78 8A 10     BII  (BREAKPARAM),$10
9483   E9F5 8B 01           BZS STATUS_CHK_1 ; $E9F8
9484   E9F7 F9              REC
9485   E9F8             
9486   E9F8             STATUS_CHK_1: ; $E9F8
9487   E9F8 9A              RTN
9488   E9F9             
9489   E9F9             STATUS_CHK_2: ; $E9F9
9490   E9F9 ED 78 80 40     BII  (DISPARAM),$40
9491   E9FD 8B 19           BZS STATUS_CHK_5 ; $EA18
9492   E9FF CC              VEJ  (CC) \ ABYTL(CURS_POS_NBUF_H) ; $787E
9492   EA00 7E          
9493   EA01 A5 78 7D        LDA  (BLNKD_CHAR_CODE)
9494   EA04 B7 20           CPI  A,$20
9495   EA06 81 16           BCR STATUS_CHK_6 ; $EA1E
9496   EA08 B5 7F           LDI  A,$7F
9497   EA0A EB 78 7C 81     ORI  (CURSOR_BLNK),$81
9498   EA0E             
9499   EA0E             STATUS_CHK_3: ; $EA0E
9500   EA0E CD 8A           VMJ  ($8A) ; ($8A)($45)
9501   EA10             
9502   EA10             STATUS_CHK_4: ; $EA10
9503   EA10 FD 8A           POP  A
9504   EA12 AE 78 75        STA  (CURSOR_PTR)
9505   EA15 FD 1A           POP  Y
9506   EA17 9A              RTN
9507   EA18             
9508   EA18             STATUS_CHK_5: ; $EA18
9509   EA18 E9 78 7C 7E     ANI  (CURSOR_BLNK),$7E
9510   EA1C 9E 0E           BCH STATUS_CHK_4 ; $EA10
9511   EA1E             
9512   EA1E             STATUS_CHK_6: ; $EA1E
9513   EA1E B5 5F           LDI  A,$5F
9514   EA20 E9 78 7C 7E     ANI  (CURSOR_BLNK),$7E
9515   EA24 9E 18           BCH STATUS_CHK_3 ; $EA0E
9516   EA26             
9517   EA26             STATUS_CHK_7: ; $EA26
9518   EA26 FD 98           PSH  Y
9519   EA28 E9 78 7B 00     ANI  ($787B),$00
9520   EA2C ED 78 80 40     BII  (DISPARAM),$40
9521   EA30 89 02           BZR STATUS_CHK_8 ; $EA34
9522   EA32 5A B0           LDI  YL,$B0
9523   EA34             
9524   EA34             STATUS_CHK_8: ; $EA34
9525   EA34 14              LDA  YL
9526   EA35 FD C8           PSH  A
9527   EA37 48 7A           LDI  XH,$7A
9528   EA39 4A 08           LDI  XL,$08
9529   EA3B 5A B0           LDI  YL,$B0
9530   EA3D             
9531   EA3D             STATUS_CHK_9: ; $EA3D
9532   EA3D FD 8A           POP  A
9533   EA3F FD C8           PSH  A
9534   EA41 16              CPA  YL
9535   EA42 8B 23           BZS STATUS_CHK_14 ; $EA67
9536   EA44 C0              VEJ  (C0)
9537   EA45 B7 3A           CPI  A,$3A
9538   EA47 83 17           BCS STATUS_CHK_13 ; $EA60
9539   EA49 B7 30           CPI  A,$30
9540   EA4B 81 13           BCR STATUS_CHK_13 ; $EA60
9541   EA4D 41              SIN  X
9542   EA4E 4E 0E           CPI  XL,$0E
9543   EA50 91 15           BCR STATUS_CHK_9 ; $EA3D
9544   EA52             
9545   EA52             STATUS_CHK_10: ; $EA52
9546   EA52 B5 20           LDI  A,$20
9547   EA54 ED 78 80 04     BII  (DISPARAM),$04
9548   EA58 8B 02           BZS STATUS_CHK_11 ; $EA5C
9549   EA5A B5 3A           LDI  A,$3A
9550   EA5C             
9551   EA5C             STATUS_CHK_11: ; $EA5C
9552   EA5C 41              SIN  X
9553   EA5D             
9554   EA5D             STATUS_CHK_12: ; $EA5D
9555   EA5D BA E8 FD        JMP  PRGM_DISP_4 ; $E8FD
9556   EA60             
9557   EA60             STATUS_CHK_13: ; $EA60
9558   EA60 C6              VEJ  (C6)
9559   EA61 4E 09           CPI  XL,$09
9560   EA63 91 08           BCR STATUS_CHK_12 ; $EA5D
9561   EA65 9E 15           BCH STATUS_CHK_10 ; $EA52
9562   EA67             
9563   EA67             STATUS_CHK_14: ; $EA67
9564   EA67 C0              VEJ  (C0)
9565   EA68 B7 3A           CPI  A,$3A
9566   EA6A 93 0C           BCS STATUS_CHK_13 ; $EA60
9567   EA6C B7 30           CPI  A,$30
9568   EA6E 91 10           BCR STATUS_CHK_13 ; $EA60
9569   EA70 0E              STA  (X)
9570   EA71 04              LDA  XL
9571   EA72 AE 78 7B        STA  ($787B)
9572   EA75 44              INC  X
9573   EA76 9E 2A           BCH $EA4E
9574   EA78             
9575   EA78             
9576   EA78             
9577   EA78             ;------------------------------------------------------------------------------
9578   EA78             ; $EA78 (96) - Using formatting. If error C=1.
9579   EA78             ;------------------------------------------------------------------------------
9580   EA78             USING_FORMAT: ; 
9581   EA78 FD C8           PSH  A
9582   EA7A CD 54           VMJ  ($54) ; ($54)($2A)
9583   EA7C 4A 10           LDI  XL,$10
9584   EA7E 6A 0D           LDI  UL,$0D
9585   EA80 B5 20           LDI  A,$20
9586   EA82             
9587   EA82             USING_FORMAT_1: ; $EA82
9588   EA82 41              SIN  X
9589   EA83 88 03           LOP  UL,USING_FORMAT_1 ; $EA82
9590   EA85 ED 78 96 FF     BII  (USINGM),$FF
9591   EA89 8B 43           BZS USING_FORMAT_9 ; $EACE
9592   EA8B ED 78 95 80     BII  (USINGF),$80
9593   EA8F 89 95           BZR USING_FORMAT_15 ; $EB26
9594   EA91 A5 78 98        LDA  (USINGMD)
9595   EA94 CD 86           VMJ  ($86) ; ($86)($43)
9596   EA96 83 A4           BCS USING_FORMAT_17 ; $EB3C
9597   EA98 A4              LDA  UH
9598   EA99 1A              STA  YL
9599   EA9A             
9600   EA9A             USING_FORMAT_2: ; $EA9A
9601   EA9A FD 8A           POP  A
9602   EA9C D5              SHR
9603   EA9D 81 06           BCR USING_FORMAT_4 ; $EAA5
9604   EA9F             
9605   EA9F             USING_FORMAT_3: ; $EA9F
9606   EA9F FB              SEC
9607   EAA0 14              LDA  YL
9608   EAA1 00              SBC  XL
9609   EAA2 DD              INC  A
9610   EAA3 F9              REC
9611   EAA4 9A              RTN
9612   EAA5             
9613   EAA5             USING_FORMAT_4: ; $EAA5
9614   EAA5 D5              SHR
9615   EAA6 81 09           BCR USING_FORMAT_5 ; $EAB1
9616   EAA8 5E 2A           CPI  YL,$2A
9617   EAAA 91 0D           BCR USING_FORMAT_3 ; $EA9F
9618   EAAC 14              LDA  YL
9619   EAAD B3 E6           ADI  A,$E6
9620   EAAF 8E 03           BCH USING_FORMAT_6 ; $EAB4
9621   EAB1             
9622   EAB1             USING_FORMAT_5: ; $EAB1
9623   EAB1 14              LDA  YL
9624   EAB2 B3 F4           ADI  A,$F4
9625   EAB4             
9626   EAB4             USING_FORMAT_6: ; $EAB4
9627   EAB4 0A              STA  XL
9628   EAB5             
9629   EAB5             USING_FORMAT_7: ; $EAB5
9630   EAB5 05              LDA  (X)
9631   EAB6 B7 20           CPI  A,$20
9632   EAB8 9B 1B           BZS USING_FORMAT_3 ; $EA9F
9633   EABA B7 2D           CPI  A,$2D
9634   EABC 9B 1F           BZS USING_FORMAT_3 ; $EA9F
9635   EABE B7 2B           CPI  A,$2B
9636   EAC0 9B 23           BZS USING_FORMAT_3 ; $EA9F
9637   EAC2 8E 08           BCH USING_FORMAT_8 ; $EACC
9638   EAC4 8B 06           BZS USING_FORMAT_8 ; $EACC
9639   EAC6 46              DEC  X
9640   EAC7 52              DEC  YL
9641   EAC8 5E 1E           CPI  YL,$1E
9642   EACA 93 17           BCS USING_FORMAT_7 ; $EAB5
9643   EACC             
9644   EACC             USING_FORMAT_8: ; $EACC
9645   EACC FB              SEC
9646   EACD 9A              RTN
9647   EACE             
9648   EACE             USING_FORMAT_9: ; $EACE
9649   EACE BE EC 3C        SJP  (ARX_9DEC_CHK)
9650   EAD1 83 09           BCS USING_FORMAT_10 ; $EADC
9651   EAD3 B5 0A           LDI  A,$0A
9652   EAD5 CD 86           VMJ  ($86) ; ($86)($43)
9653   EAD7 BE EC 2F        SJP  (TRUNC_DEC)
9654   EADA 9E 42           BCH USING_FORMAT_2 ; $EA9A
9655   EADC             
9656   EADC             USING_FORMAT_10: ; $EADC
9657   EADC 4A 00           LDI  XL,$00
9658   EADE 05              LDA  (X)
9659   EADF 49 00           ANI  (X),$00
9660   EAE1 FD C8           PSH  A
9661   EAE3 B5 0A           LDI  A,$0A
9662   EAE5 CD 86           VMJ  ($86) ; ($86)($43)
9663   EAE7 BE EC 2F        SJP  (TRUNC_DEC)
9664   EAEA             
9665   EAEA             USING_FORMAT_11: ; $EAEA
9666   EAEA 54              INC  Y
9667   EAEB FD 8A           POP  A
9668   EAED AE 7A 00        STA  (ARX)
9669   EAF0 2A              STA  UL
9670   EAF1 FD 8A           POP  A
9671   EAF3 FD C8           PSH  A
9672   EAF5 8B 27           BZS USING_FORMAT_14 ; $EB1E
9673   EAF7             
9674   EAF7             USING_FORMAT_12: ; $EAF7
9675   EAF7 B5 45           LDI  A,$45
9676   EAF9 51              SIN  Y
9677   EAFA FD 88           PSH  X
9678   EAFC FD 98           PSH  Y
9679   EAFE 24              LDA  UL
9680   EAFF FD C8           PSH  A
9681   EB01 CD 80           VMJ  ($80) ; ($80)($40)
9682   EB03 FD 8A           POP  A
9683   EB05 2A              STA  UL
9684   EB06 68 00           LDI  UH,$00
9685   EB08 D9              SHL
9686   EB09 81 02           BCR USING_FORMAT_13 ; $EB0D
9687   EB0B 68 FF           LDI  UH,$FF
9688   EB0D             
9689   EB0D             USING_FORMAT_13: ; $EB0D
9690   EB0D FD 1A           POP  Y
9691   EB0F CD 10           VMJ  ($10) \ ABYT($E0)
9691   EB11 E0          
9692   EB12 FD 98           PSH  Y
9693   EB14 BE F7 37        SJP  (XFER_ARS_2_ARX)
9694   EB17 FD 1A           POP  Y
9695   EB19 56              DEC  Y
9696   EB1A FD 0A           POP  X
9697   EB1C 9E 84           BCH USING_FORMAT_2 ; $EA9A
9698   EB1E             
9699   EB1E             USING_FORMAT_14: ; $EB1E
9700   EB1E 5E 27           CPI  YL,$27
9701   EB20 91 2B           BCR USING_FORMAT_12 ; $EAF7
9702   EB22 5A 26           LDI  YL,$26
9703   EB24 9E 2F           BCH USING_FORMAT_12 ; $EAF7
9704   EB26             
9705   EB26             USING_FORMAT_15: ; $EB26
9706   EB26 4A 00           LDI  XL,$00
9707   EB28 05              LDA  (X)
9708   EB29 49 00           ANI  (X),$00
9709   EB2B FD C8           PSH  A
9710   EB2D A5 78 98        LDA  (USINGMD)
9711   EB30 B7 0E           CPI  A,$0E
9712   EB32 81 02           BCR USING_FORMAT_16 ; $EB36
9713   EB34 B5 0D           LDI  A,$0D
9714   EB36             
9715   EB36             USING_FORMAT_16: ; $EB36
9716   EB36 CD 86           VMJ  ($86) ; ($86)($43)
9717   EB38 A4              LDA  UH
9718   EB39 1A              STA  YL
9719   EB3A 9E 52           BCH USING_FORMAT_11 ; $EAEA
9720   EB3C             
9721   EB3C             USING_FORMAT_17: ; $EB3C
9722   EB3C FD 8A           POP  A
9723   EB3E FB              SEC
9724   EB3F 9A              RTN
9725   EB40             
9726   EB40             
9727   EB40             
9728   EB40             ;------------------------------------------------------------------------------
9729   EB40             ; $EB40 (86) - Converts AR-X to ASCII according to USING parameters
9730   EB40             ;------------------------------------------------------------------------------
9731   EB40             ARX_2_ASCII: ; 
9732   EB40 F9              REC
9733   EB41 B3 1E           ADI  A,$1E
9734   EB43 28              STA  UH
9735   EB44 CD 80           VMJ  ($80) ; ($80)($40)
9736   EB46 4A 31           LDI  XL,$31
9737   EB48 05              LDA  (X)
9738   EB49 49 00           ANI  (X),$00
9739   EB4B FD C8           PSH  A
9740   EB4D 46              DEC  X
9741   EB4E 05              LDA  (X)
9742   EB4F BF 80           BII  A,$80
9743   EB51 89 79           BZR ARX_2_ASCII_15 ; $EBCC
9744   EB53 ED 78 95 10     BII  (USINGF),$10
9745   EB57 89 32           BZR ARX_2_ASCII_8 ; $EB8B
9746   EB59 B7 0E           CPI  A,$0E
9747   EB5B 93 21           BCS USING_FORMAT_17 ; $EB3C
9748   EB5D             
9749   EB5D             ARX_2_ASCII_1: ; $EB5D
9750   EB5D BD FF           EAI  $FF
9751   EB5F B3 1E           ADI  A,$1E
9752   EB61 1A              STA  YL
9753   EB62 FD C8           PSH  A
9754   EB64 54              INC  Y
9755   EB65             
9756   EB65             ARX_2_ASCII_2: ; $EB65
9757   EB65 B5 09           LDI  A,$09
9758   EB67             
9759   EB67             ARX_2_ASCII_3: ; $EB67
9760   EB67 FD C8           PSH  A
9761   EB69 BE F7 8C        SJP  (ARS_SHL_4BITS)
9762   EB6C F1              AEX
9763   EB6D B9 0F           ANI  A,$0F
9764   EB6F BB 30           ORI  A,$30
9765   EB71 51              SIN  Y
9766   EB72             
9767   EB72             ARX_2_ASCII_4: ; $EB72
9768   EB72 A4              LDA  UH
9769   EB73 16              CPA  YL
9770   EB74 81 B5           BCR ARX_2_ASCII_26 ; $EC2B
9771   EB76 5E 1F           CPI  YL,$1F
9772   EB78 8B 0E           BZS ARX_2_ASCII_7 ; $EB88
9773   EB7A FD 8A           POP  A
9774   EB7C DF              DEC  A
9775   EB7D 93 18           BCS ARX_2_ASCII_3 ; $EB67
9776   EB7F             
9777   EB7F             ARX_2_ASCII_6: ; $EB7F
9778   EB7F B5 30           LDI  A,$30
9779   EB81 51              SIN  Y
9780   EB82 A4              LDA  UH
9781   EB83 16              CPA  YL
9782   EB84 93 07           BCS ARX_2_ASCII_6 ; $EB7F
9783   EB86 8E 64           BCH ARX_2_ASCII_18 ; $EBEC
9784   EB88             
9785   EB88             ARX_2_ASCII_7: ; $EB88
9786   EB88 54              INC  Y
9787   EB89 9E 19           BCH ARX_2_ASCII_4 ; $EB72
9788   EB8B             
9789   EB8B             ARX_2_ASCII_8: ; $EB8B
9790   EB8B B7 0B           CPI  A,$0B
9791   EB8D 93 53           BCS USING_FORMAT_17 ; $EB3C
9792   EB8F B7 03           CPI  A,$03
9793   EB91 91 36           BCR ARX_2_ASCII_1 ; $EB5D
9794   EB93 B7 06           CPI  A,$06
9795   EB95 81 87           BCR ARX_2_ASCII_24 ; $EC1E
9796   EB97 B7 09           CPI  A,$09
9797   EB99 B3 02           ADI  A,$02
9798   EB9B             
9799   EB9B             ARX_2_ASCII_9: ; $EB9B
9800   EB9B F9              REC
9801   EB9C BD FF           EAI  $FF
9802   EB9E B3 1E           ADI  A,$1E
9803   EBA0 1A              STA  YL
9804   EBA1 FD C8           PSH  A
9805   EBA3 54              INC  Y
9806   EBA4 B5 09           LDI  A,$09
9807   EBA6             
9808   EBA6             ARX_2_ASCII_10: ; $EBA6
9809   EBA6 FD C8           PSH  A
9810   EBA8 BE F7 8C        SJP  (ARS_SHL_4BITS)
9811   EBAB F1              AEX
9812   EBAC B9 0F           ANI  A,$0F
9813   EBAE BB 30           ORI  A,$30
9814   EBB0 51              SIN  Y
9815   EBB1             
9816   EBB1             ARX_2_ASCII_13: ; $EBB1
9817   EBB1 A4              LDA  UH
9818   EBB2 16              CPA  YL
9819   EBB3 81 76           BCR ARX_2_ASCII_26 ; $EC2B
9820   EBB5 5E 1F           CPI  YL,$1F
9821   EBB7 9B 31           BZS ARX_2_ASCII_7 ; $EB88
9822   EBB9 14              LDA  YL
9823   EBBA BD FF           EAI  $FF
9824   EBBC BF 03           BII  A,$03
9825   EBBE 8B 07           BZS ARX_2_ASCII_14 ; $EBC7
9826   EBC0 FD 8A           POP  A
9827   EBC2 DF              DEC  A
9828   EBC3 93 1F           BCS ARX_2_ASCII_10 ; $EBA6
9829   EBC5 9E 48           BCH ARX_2_ASCII_6 ; $EB7F
9830   EBC7             
9831   EBC7             ARX_2_ASCII_14: ; $EBC7
9832   EBC7 B5 2C           LDI  A,$2C
9833   EBC9 51              SIN  Y
9834   EBCA 9E 1B           BCH ARX_2_ASCII_13 ; $EBB1
9835   EBCC             
9836   EBCC             ARX_2_ASCII_15: ; $EBCC
9837   EBCC 2A              STA  UL
9838   EBCD 5A 1E           LDI  YL,$1E
9839   EBCF A5 78 96        LDA  (USINGM)
9840   EBD2 B7 01           CPI  A,$01
9841   EBD4 8B 03           BZS ARX_2_ASCII_16 ; $EBD9
9842   EBD6 B5 30           LDI  A,$30
9843   EBD8 53              SDE  Y
9844   EBD9             
9845   EBD9             ARX_2_ASCII_16: ; $EBD9
9846   EBD9 14              LDA  YL
9847   EBDA FD C8           PSH  A
9848   EBDC 24              LDA  UL
9849   EBDD BD FF           EAI  $FF
9850   EBDF 2A              STA  UL
9851   EBE0 5A 20           LDI  YL,$20
9852   EBE2             
9853   EBE2             ARX_2_ASCII_17: ; $EBE2
9854   EBE2 62              DEC  UL
9855   EBE3 91 80           BCR ARX_2_ASCII_2 ; $EB65
9856   EBE5 B5 30           LDI  A,$30
9857   EBE7 51              SIN  Y
9858   EBE8 A4              LDA  UH
9859   EBE9 16              CPA  YL
9860   EBEA 93 0A           BCS ARX_2_ASCII_17 ; $EBE2
9861   EBEC             
9862   EBEC             ARX_2_ASCII_18: ; $EBEC
9863   EBEC B5 2E           LDI  A,$2E
9864   EBEE AE 7A 1F        STA  (ARU + $07)
9865   EBF1 FD 8A           POP  A
9866   EBF3 1A              STA  YL
9867   EBF4 A5 78 96        LDA  (USINGM)
9868   EBF7 8B 19           BZS ARX_2_ASCII_20 ; $EC12
9869   EBF9 BD FF           EAI  $FF
9870   EBFB B3 20           ADI  A,$20
9871   EBFD 0A              STA  XL
9872   EBFE 05              LDA  (X)
9873   EBFF B7 20           CPI  A,$20
9874   EC01 99 C7           BZR USING_FORMAT_17 ; $EB3C
9875   EC03 ED 78 95 40     BII  (USINGF),$40
9876   EC07 8B 0B           BZS ARX_2_ASCII_21 ; $EC14
9877   EC09             
9878   EC09             ARX_2_ASCII_19: ; $EC09
9879   EC09 04              LDA  XL
9880   EC0A 16              CPA  YL
9881   EC0B 8B 07           BZS ARX_2_ASCII_21 ; $EC14
9882   EC0D B5 2A           LDI  A,$2A
9883   EC0F 53              SDE  Y
9884   EC10 9E 09           BCH ARX_2_ASCII_19 ; $EC09
9885   EC12             
9886   EC12             ARX_2_ASCII_20: ; $EC12
9887   EC12 FD 18           LDX  Y
9888   EC14             
9889   EC14             ARX_2_ASCII_21: ; $EC14
9890   EC14 FD 8A           POP  A
9891   EC16 D9              SHL
9892   EC17 81 08           BCR ARX_2_ASCII_25 ; $EC21
9893   EC19 B5 2D           LDI  A,$2D
9894   EC1B             
9895   EC1B             ARX_2_ASCII_22: ; $EC1B
9896   EC1B 1E              STA  (Y)
9897   EC1C             
9898   EC1C             ARX_2_ASCII_23: ; $EC1C
9899   EC1C F9              REC
9900   EC1D 9A              RTN
9901   EC1E             
9902   EC1E             ARX_2_ASCII_24: ; $EC1E
9903   EC1E DD              INC  A
9904   EC1F 9E 86           BCH ARX_2_ASCII_9 ; $EB9B
9905   EC21             
9906   EC21             ARX_2_ASCII_25: ; $EC21
9907   EC21 ED 78 95 20     BII  (USINGF),$20
9908   EC25 9B 0B           BZS ARX_2_ASCII_23 ; $EC1C
9909   EC27 B5 2B           LDI  A,$2B
9910   EC29 9E 10           BCH ARX_2_ASCII_22 ; $EC1B
9911   EC2B             
9912   EC2B             ARX_2_ASCII_26: ; $EC2B
9913   EC2B FD 8A           POP  A
9914   EC2D 9E 43           BCH ARX_2_ASCII_18 ; $EBEC
9915   EC2F             
9916   EC2F             
9917   EC2F             
9918   EC2F             ;------------------------------------------------------------------------------
9919   EC2F             ; $EC2F - Determines the address at which the rightmost character is located
9920   EC2F             ; from the ASCII number string below 7A28 in the Y-Reg. (Truncation of the 
9921   EC2F             ; decimal places).
9922   EC2F             ;------------------------------------------------------------------------------
9923   EC2F             TRUNC_DEC: ; $EC2F
9924   EC2F 5A 28           LDI  YL,$28
9925   EC31             
9926   EC31             TRUNC_DEC_1: ; $EC31
9927   EC31 57              LDE  Y
9928   EC32 B7 30           CPI  A,$30
9929   EC34 9B 05           BZS TRUNC_DEC_1 ; $EC31
9930   EC36 B7 2E           CPI  A,$2E
9931   EC38 8B 01           BZS TRUNC_DEC_2 ; $EC3B
9932   EC3A 54              INC  Y
9933   EC3B             
9934   EC3B             TRUNC_DEC_2: ;$EC3B
9935   EC3B 9A              RTN
9936   EC3C             
9937   EC3C             
9938   EC3C             ;------------------------------------------------------------------------------
9939   EC3C             ; $EC3C - Checks whether the value in AR-X can be completely represented with 
9940   EC3C             ;         9 decimal places. If not, C=1.
9941   EC3C             ;------------------------------------------------------------------------------
9942   EC3C             ARX_9DEC_CHK: ; 
9943   EC3C A5 7A 00        LDA  (ARX)
9944   EC3F BF 80           BII  A,$80
9945   EC41 89 03           BZR ARX_9DEC_CHK_1 ; $EC46
9946   EC43 B7 0A           CPI  A,$0A
9947   EC45 9A              RTN
9948   EC46             
9949   EC46             ARX_9DEC_CHK_1: ; $EC46
9950   EC46 B7 F7           CPI  A,$F7
9951   EC48 81 4B           BCR XREG_STR_2_OUTBUF_2 ; $EC95
9952   EC4A B3 0C           ADI  A,$0C
9953   EC4C D5              SHR
9954   EC4D 1A              STA  YL
9955   EC4E 55              LIN  Y
9956   EC4F 83 08           BCS ARX_9DEC_CHK_3 ; $EC59
9957   EC51 BF 0F           BII  A,$0F
9958   EC53             
9959   EC53             ARX_9DEC_CHK_2: ; $EC53
9960   EC53 89 40           BZR XREG_STR_2_OUTBUF_2 ; $EC95
9961   EC55 5E 07           CPI  YL,$07
9962   EC57 93 3D           BCS ARX_2_ASCII_23 ; $EC1C
9963   EC59             
9964   EC59             ARX_9DEC_CHK_3: ; $EC59
9965   EC59 55              LIN  Y
9966   EC5A 9E 09           BCH ARX_9DEC_CHK_2 ; $EC53
9967   EC5C             
9968   EC5C             
9969   EC5C             
9970   EC5C             ;------------------------------------------------------------------------------
9971   EC5C             ; $EC5C (94) - Transfers string whose address is in the X-Reg (lengh in UL) to
9972   EC5C             ;              free area of the output buffer. If error C=1.
9973   EC5C             ;------------------------------------------------------------------------------
9974   EC5C             STR_2_OUTBUF: ; 
9975   EC5C A5 78 8F        LDA  ($788F)
9976   EC5F 1A              STA  YL
9977   EC60 58 7B           LDI  YH,$7B
9978   EC62 8E 05           BCH STR_2_OUTBUF_2 ; $EC69
9979   EC64             
9980   EC64             STR_2_OUTBUF_1: ; $EC64
9981   EC64 5E B0           CPI  YL,$B0
9982   EC66 83 03           BCS STR_2_OUTBUF_3 ; $EC6B
9983   EC68 F5              TIN
9984   EC69             
9985   EC69             STR_2_OUTBUF_2: ; $EC69
9986   EC69 88 07           LOP  UL,STR_2_OUTBUF_1 ; $EC64
9987   EC6B             
9988   EC6B             STR_2_OUTBUF_3: ; $EC6B
9989   EC6B 9A              RTN
9990   EC6C             
9991   EC6C             
9992   EC6C             
9993   EC6C             ;------------------------------------------------------------------------------
9994   EC6C             ; $EC6C - If AR-X contains numeric value, convert if needed, integer to BCD:
9995   EC6C             ; C=0. If CSI available: Address from X-Reg; load length from to UL; C=1.
9996   EC6C             ;------------------------------------------------------------------------------
9997   EC6C             ARX_2_BCD:
9998   EC6C D2              VEJ  (D2) \ ABRF(ARX_2_BCD_1) \ ABYT($80)
9998   EC6D 03          
9998   EC6E 80          
9999   EC6F F9              REC
10000  EC70 9A              RTN
10001  EC71             
10002  EC71             ARX_2_BCD_1: ; $ 
10003  EC71 DC              VEJ  (DC)
10004  EC72             
10005  EC72             ARX_2_BCD_2: ; $EC72
10006  EC72 FB              SEC
10007  EC73 9A              RTN
10008  EC74             
10009  EC74             
10010  EC74             
10011  EC74             ;------------------------------------------------------------------------------
10012  EC74             ; $EC74 (98) - Converts AR-X from BCD to ASCII and transfers to Output buffer
10013  EC74             ;------------------------------------------------------------------------------
10014  EC74             BCD_2_ASCII_OUTBUF: ; 
10015  EC74 BE EC 6C        SJP  (ARX_2_BCD)
10016  EC77 81 1D           BCR $EC96
10017  EC79 2A              STA  UL
10018  EC7A A5 78 97        LDA  (USING_CHR)
10019  EC7D 8B 19           BZS $EC98
10020  EC7F 26              CPA  UL
10021  EC80 81 15           BCR XREG_STR_2_OUTBUF_4 ; $EC97
10022  EC82             
10023  EC82             ;------------------------------------------------------------------------------
10024  EC82             ; $EC82 - Transfers string pointed to by X-Reg into output buffer. Then writes
10025  EC82             ; A-UL spaces to the output buffer. Sets C=1 if the output buffer is full
10026  EC82             ;------------------------------------------------------------------------------
10027  EC82             XREG_STR_2_OUTBUF:
10028  EC82 20              SBC  UL
10029  EC83 FD C8           PSH  A
10030  EC85 CD 94           VMJ  ($94) ; ($94)($4A)
10031  EC87 FD 8A           POP  A
10032  EC89 2A              STA  UL
10033  EC8A B5 20           LDI  A,$20
10034  EC8C 8E 05           BCH XREG_STR_2_OUTBUF_1 ; $EC93
10035  EC8E 5E B0           CPI  YL,$B0
10036  EC90 83 04           BCS XREG_STR_2_OUTBUF_3 ; $EC96
10037  EC92 51              SIN  Y
10038  EC93             
10039  EC93             XREG_STR_2_OUTBUF_1: ; $EC93
10040  EC93 88 07           LOP  UL,$EC8E
10041  EC95             
10042  EC95             XREG_STR_2_OUTBUF_2: ; $EC82
10043  EC95 FB              SEC
10044  EC96             
10045  EC96             XREG_STR_2_OUTBUF_3: ; $EC96
10046  EC96 9A              RTN
10047  EC97             
10048  EC97             XREG_STR_2_OUTBUF_4: ; $EC97 
10049  EC97 2A              STA  UL
10050  EC98 CD 94           VMJ  ($94) ; ($94)($4A)
10051  EC9A 9E 07           BCH XREG_STR_2_OUTBUF_2 ; $EC95
10052  EC9C             
10053  EC9C             
10054  EC9C             
10055  EC9C             ;------------------------------------------------------------------------------
10056  EC9C             ; $EC9C - Clears LCD if cursor is not allowed and sets matrix pointer to 00
10057  EC9C             ;------------------------------------------------------------------------------
10058  EC9C             CLR_NO_CURSOR: ; 
10059  EC9C ED 78 74 01     BII  (CURSOR_ENA),$01
10060  ECA0 89 05           BZR $ECA7
10061  ECA2 F2              VEJ  (F2)
10062  ECA3 E9 78 75 00     ANI  (CURSOR_PTR),$00
10063  ECA7 A5 78 8F        LDA  ($788F)
10064  ECAA FB              SEC
10065  ECAB B1 60           SBI  A,$60
10066  ECAD 9A              RTN
10067  ECAE             
10068  ECAE             
10069  ECAE             
10070  ECAE             ;------------------------------------------------------------------------------
10071  ECAE             ; $ECAE - Deletes cursor flag and matrix pointer
10072  ECAE             ;            Address: ECAE
10073  ECAE             ;          Parameter: None
10074  ECAE             ;
10075  ECAE             ; Modified Registers: Cursor flag (7874) and matrix pointer are deleted
10076  ECAE             ;   Error conditions: None
10077  ECAE             ;------------------------------------------------------------------------------
10078  ECAE             INIT_CURS: ; $ECAE
10079  ECAE E9 78 74 FE     ANI  (CURSOR_ENA),$FE
10080  ECB2             
10081  ECB2             INIT_MTRX: ; $ECB2
10082  ECB2 E9 78 75 00     ANI  (CURSOR_PTR),$00
10083  ECB6 9A              RTN
10084  ECB7             
10085  ECB7             
10086  ECB7             
10087  ECB7             ;------------------------------------------------------------------------------
10088  ECB7             ; $ECB7 (97) - Transfers value to output buffer
10089  ECB7             ;------------------------------------------------------------------------------
10090  ECB7             ARX_2_OUTBUF: 
10091  ECB7 BE EC 6C        SJP  (ARX_2_BCD)
10092  ECBA 81 18           BCR ARX_2_OUTBUF_4 ; $ECD4
10093  ECBC 2A              STA  UL
10094  ECBD A5 78 97        LDA  (USING_CHR)
10095  ECC0 8B 04           BZS ARX_2_OUTBUF_1 ; $ECC6
10096  ECC2 B7 0E           CPI  A,$0E
10097  ECC4 81 02           BCR ARX_2_OUTBUF_2 ; $ECC8
10098  ECC6             
10099  ECC6             ARX_2_OUTBUF_1: ; $ECC6
10100  ECC6 B5 0D           LDI  A,$0D
10101  ECC8             
10102  ECC8             ARX_2_OUTBUF_2: ; $ECC8
10103  ECC8 26              CPA  UL
10104  ECC9 83 01           BCS ARX_2_OUTBUF_3 ; $ECCC
10105  ECCB 2A              STA  UL
10106  ECCC             
10107  ECCC             ARX_2_OUTBUF_3: ; $ECCC
10108  ECCC B5 0D           LDI  A,$0D
10109  ECCE FB              SEC
10110  ECCF BE EC 82        SJP  (XREG_STR_2_OUTBUF)
10111  ECD2 8E 09           BCH ARX_2_OUTBUF_6 ; $ECDD
10112  ECD4             
10113  ECD4             ARX_2_OUTBUF_4: ; $ECD4
10114  ECD4 B5 00           LDI  A,$00
10115  ECD6             
10116  ECD6             ;------------------------------------------------------------------------------
10117  ECD6             ; $ECD6 - Transfer AR-X formatted to Output Buffer
10118  ECD6             ;------------------------------------------------------------------------------
10119  ECD6             ARX_2_OUTBUF_5: ; 
10120  ECD6 CD 96           VMJ  ($96) ; ($96)($4B)
10121  ECD8 83 08           BCS ARX_2_OUTBUF_7 ; $ECE2
10122  ECDA 2A              STA  UL
10123  ECDB CD 94           VMJ  ($94) ; ($94)($4A)
10124  ECDD             
10125  ECDD             ARX_2_OUTBUF_6: ; $ECDD
10126  ECDD 14              LDA  YL
10127  ECDE AE 78 8F        STA  ($788F)
10128  ECE1 F9              REC
10129  ECE2             
10130  ECE2             ARX_2_OUTBUF_7: ; $ECE2
10131  ECE2 9A              RTN
10132  ECE3             
10133  ECE3             
10134  ECE3             
10135  ECE3             ;------------------------------------------------------------------------------
10136  ECE3             ; $ECE3 - Xfer value (string/numeric) to OUTBUF and resets OUTBUF pointer.
10137  ECE3             ;------------------------------------------------------------------------------
10138  ECE3             XFER_2_OUTBUF: 
10139  ECE3 CD 98           VMJ  ($98) ; ($98)($4C)
10140  ECE5 93 0A           BCS ARX_2_OUTBUF_6 ; $ECDD
10141  ECE7 B5 01           LDI  A,$01
10142  ECE9 9E 15           BCH ARX_2_OUTBUF_5
10143  ECEB             
10144  ECEB             
10145  ECEB             
10146  ECEB             ;------------------------------------------------------------------------------
10147  ECEB             ; $ECEB (9A) - Executes using command pointed to by Y-Reg. If an error occurs C=1.
10148  ECEB             ;------------------------------------------------------------------------------
10149  ECEB             USING_PARAM: ; 
10150  ECEB C4              VEJ  (C4) \ AWRD($F085) \ ABRF($ECF5)
10150  ECEC F0 85       
10150  ECEE 06          
10151  ECEF BE DA B2        SJP  (EVAL_USING)
10152  ECF2 05              LDA  (X)
10153  ECF3 F9              REC
10154  ECF4 9A              RTN
10155  ECF5 C6              VEJ  (C6)
10156  ECF6 F9              REC
10157  ECF7 9A              RTN
10158  ECF8 FB              SEC
10159  ECF9 9A              RTN
10160  ECFA             
10161  ECFA             
10162  ECFA             
10163  ECFA             ;------------------------------------------------------------------------------
10164  ECFA             ; $ECFA - Output of 26 characters of the output buffer
10165  ECFA             ;------------------------------------------------------------------------------
10166  ECFA             OUTBUF_2_LCD: ; 
10167  ECFA B5 1A           LDI  A,$1A
10168  ECFC 68 7B           LDI  UH,$7B
10169  ECFE 6A 60           LDI  UL,$60
10170  ED00             
10171  ED00             ;------------------------------------------------------------------------------
10172  ED00             ; $ED00 (92) - Output text on LCD. U-Reg contains start address; A the length.
10173  ED00             ;------------------------------------------------------------------------------
10174  ED00             OUTBUF_2_LCD_1: ; 
10175  ED00 FD C8           PSH  A
10176  ED02 CD 8C           VMJ  ($8C) ; ($8C)($46)
10177  ED04 FD 8A           POP  A
10178  ED06 FD 98           PSH  Y
10179  ED08 FD C8           PSH  A
10180  ED0A 66              DEC  U
10181  ED0B             
10182  ED0B             OUTBUF_2_LCD_2: ; $ED0B
10183  ED0B 64              INC  U
10184  ED0C A5 78 7B        LDA  ($787B)
10185  ED0F 26              CPA  UL
10186  ED10 8B 16           BZS OUTBUF_2_LCD_3 ; $ED28
10187  ED12 FD 8A           POP  A
10188  ED14 DF              DEC  A
10189  ED15 81 21           BCR OUTBUF_2_LCD_5 ; $ED38
10190  ED17 FD C8           PSH  A
10191  ED19 FD A8           PSH  U
10192  ED1B 25              LDA  (U)
10193  ED1C CD 8A           VMJ  ($8A) ; ($8A)($45)
10194  ED1E FD 2A           POP  U
10195  ED20 83 14           BCS OUTBUF_2_LCD_4 ; $ED36
10196  ED22 EF 78 75 06     ADI  (CURSOR_PTR),$06
10197  ED26 9E 1D           BCH OUTBUF_2_LCD_2 ; $ED0B
10198  ED28             
10199  ED28             OUTBUF_2_LCD_3: ; $ED28
10200  ED28 84              LDA  XH
10201  ED29 AE 78 7E        STA  (CURS_POS_NBUF_H)
10202  ED2C 04              LDA  XL
10203  ED2D AE 78 7F        STA  (CURS_POS_NBUF_L)
10204  ED30 25              LDA  (U)
10205  ED31 AE 78 7D        STA  (BLNKD_CHAR_CODE)
10206  ED34 9E 24           BCH $ED12
10207  ED36             
10208  ED36             OUTBUF_2_LCD_4: ; $ED36
10209  ED36 FD 8A           POP  A
10210  ED38             
10211  ED38             OUTBUF_2_LCD_5: ; $ED38
10212  ED38 FD 1A           POP  Y
10213  ED3A 9A              RTN
10214  ED3B             
10215  ED3B             
10216  ED3B             
10217  ED3B             ;------------------------------------------------------------------------------
10218  ED3B             ; $ED3B - Outputs text from U-Reg on LCD, # characters in XL. The output is 
10219  ED3B             ; independent of the value of the matrix pointer. Its old value is then restored.
10220  ED3B             ;------------------------------------------------------------------------------
10221  ED3B             XREG_2_LCD:
10222  ED3B A5 78 75        LDA  (CURSOR_PTR)
10223  ED3E E9 78 75 00     ANI  (CURSOR_PTR),$00
10224  ED42 FD C8           PSH  A
10225  ED44 04              LDA  XL
10226  ED45 CD 92           VMJ  ($92) ; ($92)($49)
10227  ED47 FD 8A           POP  A
10228  ED49 AE 78 75        STA  (CURSOR_PTR)
10229  ED4C 9A              RTN
10230  ED4D             
10231  ED4D             
10232  ED4D             
10233  ED4D             ;------------------------------------------------------------------------------
10234  ED4D             ; $ED4D - Output a character at the next matrix column
10235  ED4D             ;------------------------------------------------------------------------------
10236  ED4D             CHAR_OUT: ; 
10237  ED4D BE ED 57        SJP  (CHAR_OUT_1)
10238  ED50 93 A0           BCS INIT_MTRX
10239  ED52 EF 78 75 06     ADI  (CURSOR_PTR),$06
10240  ED56 9A              RTN
10241  ED57             
10242  ED57             
10243  ED57             
10244  ED57             ;------------------------------------------------------------------------------
10245  ED57             ; $ED57 - Output of the character in accumulator at next matrix column. 
10246  ED57             ; The output address is calculated automatically.
10247  ED57             ;------------------------------------------------------------------------------
10248  ED57             CHAR_OUT_1: ; $ED57
10249  ED57 28              STA  UH
10250  ED58 CD 8C           VMJ  ($8C) ; ($8C)($46)
10251  ED5A A4              LDA  UH
10252  ED5B             
10253  ED5B             ;------------------------------------------------------------------------------
10254  ED5B             ; $ED5B (8A) - Output of ASCII character in accumulator starting at matrix
10255  ED5B             ; column address pointed to by X-Reg. Second character set is recognized.
10256  ED5B             ;------------------------------------------------------------------------------
10257  ED5B             CHAR_OUT_2: ; 
10258  ED5B FD 98           PSH  Y
10259  ED5D BE EE 48        SJP  (CHAR_2_ADDR)
10260  ED60 6A 04           LDI  UL,$04
10261  ED62             
10262  ED62             CHAR_OUT_3: ; $ED62
10263  ED62 55              LIN  Y
10264  ED63 CD 88           VMJ  ($88) ; ($88)($44)
10265  ED65 4C 78           CPI  XH,$78
10266  ED67 83 08           BCS CHAR_OUT_4 ; $ED71
10267  ED69 88 09           LOP  UL,CHAR_OUT_3 ; $ED62
10268  ED6B B5 00           LDI  A,$00
10269  ED6D CD 88           VMJ  ($88) ; ($88)($44)
10270  ED6F 4C 78           CPI  XH,$78
10271  ED71             
10272  ED71             CHAR_OUT_4: ; $ED71
10273  ED71 B8              RPV
10274  ED72 ED 79 D0 01     BII  (PU_PV),$01
10275  ED76 8B 01           BZS $ED79 ; CHAR_OUT_5
10276  ED78 A8              SPV
10277  ED79             
10278  ED79             CHAR_OUT_5: ; $ED79
10279  ED79 FD 81           SIE
10280  ED7B 9E 45           BCH OUTBUF_2_LCD_5 ; $ED38
10281  ED7D             
10282  ED7D             
10283  ED7D             
10284  ED7D             ;------------------------------------------------------------------------------
10285  ED7D             ; $ED7D - Converts characters in the accumulator to HEX nibble
10286  ED7D             ;            Address: ED7D
10287  ED7D             ;   Entry parameters: Accumulator contains ASCII characters
10288  ED7D             ;
10289  ED7D             ; Modified registers: Accumulator contains converted HEX nibble (00-0F)
10290  ED7D             ;   Error conditions: Carry=0 if ASCII characters cannot be converted
10291  ED7D             ;------------------------------------------------------------------------------
10292  ED7D             CHAR_2_HEX: ; $ED7D
10293  ED7D B7 47           CPI  A,$47
10294  ED7F 83 0C           BCS CHAR_2_HEX_1 ; $ED8D
10295  ED81 B7 41           CPI  A,$41
10296  ED83 83 0D           BCS CHAR_2_HEX_3 ; $ED92
10297  ED85 B7 3A           CPI  A,$3A
10298  ED87 83 04           BCS CHAR_2_HEX_1 ; $ED8D
10299  ED89 B7 30           CPI  A,$30
10300  ED8B 83 02           BCS CHAR_2_HEX_2 ; $ED8F
10301  ED8D             
10302  ED8D             CHAR_2_HEX_1: ; $ED8D
10303  ED8D F9              REC
10304  ED8E 9A              RTN
10305  ED8F             
10306  ED8F             CHAR_2_HEX_2: ; $ED8F
10307  ED8F B1 30           SBI  A,$30
10308  ED91 9A              RTN
10309  ED92             
10310  ED92             CHAR_2_HEX_3: ; $ED92
10311  ED92 B1 37           SBI  A,$37
10312  ED94 9A              RTN
10313  ED95             
10314  ED95             
10315  ED95             
10316  ED95             ;------------------------------------------------------------------------------
10317  ED95             ; Convert 2 ASCII characters to a hex byte
10318  ED95             ;            Address: ED95
10319  ED95             ;   Entry parameters: X-Reg must point to the 1st character to be converted
10320  ED95             ; 
10321  ED95             ; Modified registers: X-Reg was incremented by 2 Accumulator contains hex value. Carry=0
10322  ED95             ;   Error conditions: Carry=0 if ASCII characters cannot be converted to hex.
10323  ED95             ;------------------------------------------------------------------------------
10324  ED95             ASCII_2_HEX: ; $ED95
10325  ED95 FD A8           PSH  U
10326  ED97 45              LIN  X
10327  ED98 BE ED 7D        SJP  (CHAR_2_HEX)
10328  ED9B 81 0B           BCR ASCII_2_HEX_1 ; $EDA8
10329  ED9D F1              AEX
10330  ED9E 28              STA  UH
10331  ED9F 45              LIN  X
10332  EDA0 BE ED 7D        SJP  (CHAR_2_HEX)
10333  EDA3 81 03           BCR ASCII_2_HEX_1 ; $EDA8
10334  EDA5 F9              REC
10335  EDA6 A2              ADC  UH
10336  EDA7 FB              SEC
10337  EDA8             
10338  EDA8             ASCII_2_HEX_1: ; $EDA8
10339  EDA8 FD 2A           POP  U
10340  EDAA 9A              RTN
10341  EDAB             
10342  EDAB             
10343  EDAB             
10344  EDAB             ;------------------------------------------------------------------------------
10345  EDAB             ; $EDAB (90) - Checks whether the matrix pointer is still in the permissible 
10346  EDAB             ;              range 0-155. Set C=1 if not.
10347  EDAB             ;------------------------------------------------------------------------------
10348  EDAB             MTRX_IN_RANGE: 
10349  EDAB A5 78 75        LDA  (CURSOR_PTR)
10350  EDAE B7 9C           CPI  A,$9C
10351  EDB0 9A              RTN
10352  EDB1             
10353  EDB1             
10354  EDB1             
10355  EDB1             ;------------------------------------------------------------------------------
10356  EDB1             ; $EDB1 (8E) - Increases matrix pointer if still in the permissible range 
10357  EDB1             ;              0-155 C=1 if not.
10358  EDB1             ;------------------------------------------------------------------------------
10359  EDB1             MTRX_INC: 
10360  EDB1 A5 78 75        LDA  (CURSOR_PTR)
10361  EDB4 DD              INC  A
10362  EDB5 83 02           BCS MTRX_INC_1 ; $EDB9
10363  EDB7 B7 9C           CPI  A,$9C
10364  EDB9             
10365  EDB9             MTRX_INC_1: ; $EDB9
10366  EDB9 81 02           BCR $EDBD
10367  EDBB B5 9C           LDI  A,$9C
10368  EDBD             
10369  EDBD             MTRX_INC_2: ; $EDBD
10370  EDBD AE 78 75        STA  (CURSOR_PTR)
10371  EDC0 9A              RTN
10372  EDC1             
10373  EDC1             
10374  EDC1             
10375  EDC1             ;------------------------------------------------------------------------------
10376  EDC1             ; $EDC1 - Cache LCD display of 7810-7BFF
10377  EDC1             ;------------------------------------------------------------------------------
10378  EDC1             LCD_CACHE: ; 
10379  EDC1 FD 98           PSH  Y
10380  EDC3             
10381  EDC3             LCD_CACHE_1: ; $EDC3
10382  EDC3 FB              SEC
10383  EDC4 58 7B           LDI  YH,$7B
10384  EDC6 5A 10           LDI  YL,$10
10385  EDC8 48 76           LDI  XH,$76
10386  EDCA             
10387  EDCA             LCD_CACHE_2: ; $EDCA
10388  EDCA 4A 00           LDI  XL,$00
10389  EDCC 6A 4D           LDI  UL,$4D
10390  EDCE             
10391  EDCE             LCD_CACHE_3: ; $EDCE
10392  EDCE F5              TIN
10393  EDCF 88 03           LOP  UL,LCD_CACHE_3 ; $EDCE
10394  EDD1 91 9B           BCR OUTBUF_2_LCD_5 ; $ED38
10395  EDD3 F9              REC
10396  EDD4 48 77           LDI  XH,$77
10397  EDD6 9E 0E           BCH LCD_CACHE_2 ; $EDCA
10398  EDD8             
10399  EDD8             
10400  EDD8             
10401  EDD8             ;------------------------------------------------------------------------------
10402  EDD8             ; $EDD8 - Retrieve LCD display from $7B10-$7BFF
10403  EDD8             ;------------------------------------------------------------------------------
10404  EDD8             LCD_RESTORE: ; 
10405  EDD8 FD 98           PSH  Y
10406  EDDA             
10407  EDDA             LCD_RESTORE_1: ; $EDDA
10408  EDDA FB              SEC
10409  EDDB 48 7B           LDI  XH,$7B
10410  EDDD 4A 10           LDI  XL,$10
10411  EDDF 58 76           LDI  YH,$76
10412  EDE1             
10413  EDE1             LCD_RESTORE_2: ; $EDE1
10414  EDE1 5A 00           LDI  YL,$00
10415  EDE3 6A 4D           LDI  UL,$4D
10416  EDE5             
10417  EDE5             LCD_RESTORE_3: ; $EDD8
10418  EDE5 F5              TIN
10419  EDE6 88 03           LOP  UL,LCD_RESTORE_3 ; $EDE5
10420  EDE8 91 B2           BCR OUTBUF_2_LCD_5 ; $ED38
10421  EDEA F9              REC
10422  EDEB 58 77           LDI  YH,$77
10423  EDED 9E 0E           BCH LCD_RESTORE_2 ; $EDE1
10424  EDEF             
10425  EDEF             
10426  EDEF             
10427  EDEF             ;------------------------------------------------------------------------------
10428  EDEF             ; $EDEF - Output characters from accumulator to next matrix column address.
10429  EDEF             ;------------------------------------------------------------------------------
10430  EDEF             GPRINT_OUT: 
10431  EDEF 28              STA  UH
10432  EDF0 CD 8C           VMJ  ($8C) ; ($8C)($46)
10433  EDF2 A4              LDA  UH
10434  EDF3 8E 01           BCH GPRINT_OUT_1
10435  EDF5 55              LIN  Y
10436  EDF6             
10437  EDF6             ;------------------------------------------------------------------------------
10438  EDF6             ; (88) $EDF6 - Output of accumulator as "GPRINT" value on LCD
10439  EDF6             ; Output of the accumulator as a bit pattern on the LCD (X-Reg and f.).
10440  EDF6             ;------------------------------------------------------------------------------
10441  EDF6             GPRINT_OUT_1:
10442  EDF6 28              STA  UH
10443  EDF7 B9 0F           ANI  A,$0F
10444  EDF9 4C 76           CPI  XH,$76
10445  EDFB 83 16           BCS GPRINT_OUT_4 ; $EE13
10446  EDFD 49 F0           ANI  (X),$F0
10447  EDFF 0B              ORA  (X)
10448  EE00 41              SIN  X
10449  EE01 A4              LDA  UH
10450  EE02 F1              AEX
10451  EE03 B9 0F           ANI  A,$0F
10452  EE05 49 F0           ANI  (X),$F0
10453  EE07             
10454  EE07             GPRINT_OUT_2: ; $EE07
10455  EE07 0B              ORA  (X)
10456  EE08 41              SIN  X
10457  EE09 4E 4E           CPI  XL,$4E
10458  EE0B 83 01           BCS GPRINT_OUT_3 ; $EE0E
10459  EE0D 9A              RTN
10460  EE0E             
10461  EE0E             GPRINT_OUT_3: ; $EE0E
10462  EE0E 4A 00           LDI  XL,$00
10463  EE10 FD 40           INC  XH
10464  EE12 9A              RTN
10465  EE13             
10466  EE13             GPRINT_OUT_4: ; $EE13
10467  EE13 F1              AEX
10468  EE14 49 0F           ANI  (X),$0F
10469  EE16 0B              ORA  (X)
10470  EE17 41              SIN  X
10471  EE18 A4              LDA  UH
10472  EE19 B9 F0           ANI  A,$F0
10473  EE1B 49 0F           ANI  (X),$0F
10474  EE1D 9E 18           BCH GPRINT_OUT_2 ; $EE07
10475  EE1F             
10476  EE1F             
10477  EE1F             
10478  EE1F             ;------------------------------------------------------------------------------
10479  EE1F             ; $EE1F (8C) - Calculate in X-Reg matrix column address from pointer in $7875
10480  EE1F             ;------------------------------------------------------------------------------
10481  EE1F             XREG_2_MATRIX_COL:
10482  EE1F A5 78 75        LDA  (CURSOR_PTR)
10483  EE22             
10484  EE22             ;------------------------------------------------------------------------------
10485  EE22             ; $EE22 - Calculated from the accumulator matrix column address in the X-Reg.
10486  EE22             ;------------------------------------------------------------------------------
10487  EE22             XREG_2_MATRIX_COL_1: 
10488  EE22 B7 4E           CPI  A,$4E
10489  EE24 83 10           BCS XREG_2_MATRIX_COL_3 ; $EE36
10490  EE26 B7 27           CPI  A,$27
10491  EE28 83 05           BCS XREG_2_MATRIX_COL_2 ; $EE2F
10492  EE2A 48 74           LDI  XH,$74
10493  EE2C D9              SHL
10494  EE2D 0A              STA  XL
10495  EE2E 9A              RTN
10496  EE2F             
10497  EE2F             XREG_2_MATRIX_COL_2: ; $EE2F
10498  EE2F B1 27           SBI  A,$27
10499  EE31 48 75           LDI  XH,$75
10500  EE33 D9              SHL
10501  EE34 0A              STA  XL
10502  EE35 9A              RTN
10503  EE36             
10504  EE36             XREG_2_MATRIX_COL_3: ; $EE36
10505  EE36 B7 75           CPI  A,$75
10506  EE38 83 07           BCS XREG_2_MATRIX_COL_4 ; $EE41
10507  EE3A B1 4D           SBI  A,$4D
10508  EE3C 48 76           LDI  XH,$76
10509  EE3E D9              SHL
10510  EE3F 0A              STA  XL
10511  EE40 9A              RTN
10512  EE41             
10513  EE41             XREG_2_MATRIX_COL_4: ; $EE41
10514  EE41 B1 75           SBI  A,$75
10515  EE43 48 77           LDI  XH,$77
10516  EE45 D9              SHL
10517  EE46 0A              STA  XL
10518  EE47 9A              RTN
10519  EE48             
10520  EE48             
10521  EE48             
10522  EE48             ;------------------------------------------------------------------------------
10523  EE48             ; $EE48 - Retrieves the address in character set table for characters in the
10524  EE48             ;         accumulator. 2nd Character set is taken into account. 
10525  EE48             ;         Table address is passed to Y-Reg.
10526  EE48             ;------------------------------------------------------------------------------
10527  EE48             CHAR_2_ADDR: 
10528  EE48 D9              SHL
10529  EE49 83 0F           BCS CHAR_2_ADDR_4 ; $EE5A
10530  EE4B             
10531  EE4B             CHAR_2_ADDR_1: ; $EE4B
10532  EE4B 58 FC           LDI  YH,$FC
10533  EE4D B7 40           CPI  A,$40
10534  EE4F 83 02           BCS CHAR_2_ADDR_2 ; $EE53
10535  EE51 B5 40           LDI  A,$40
10536  EE53             
10537  EE53             CHAR_2_ADDR_2: ; $EE53
10538  EE53 1A              STA  YL
10539  EE54             
10540  EE54             CHAR_2_ADDR_3: ; $EE54
10541  EE54 FD DA           ADR  Y
10542  EE56 D5              SHR
10543  EE57 FD DA           ADR  Y
10544  EE59 9A              RTN
10545  EE5A             
10546  EE5A             CHAR_2_ADDR_4: ; $EE5A
10547  EE5A 1A              STA  YL
10548  EE5B A5 78 5D        LDA  (KATAFLAGS)
10549  EE5E D9              SHL
10550  EE5F 89 0D           BZR CHAR_2_ADDR_6 ; $EE6E
10551  EE61 FD BE           RIE
10552  EE63 B8              RPV
10553  EE64 81 01           BCR CHAR_2_ADDR_5 ; $EE67
10554  EE66 A8              SPV
10555  EE67             
10556  EE67             CHAR_2_ADDR_5: ; $EE67
10557  EE67 A5 78 5E        LDA  (KATACHAR)
10558  EE6A 18              STA  YH
10559  EE6B 14              LDA  YL
10560  EE6C 9E 1A           BCH CHAR_2_ADDR_3 ; $EE54
10561  EE6E             
10562  EE6E             CHAR_2_ADDR_6: ; $EE6E
10563  EE6E 14              LDA  YL
10564  EE6F 9E 26           BCH CHAR_2_ADDR_1 ; $EE4B
10565  EE71             
10566  EE71             
10567  EE71             
10568  EE71             ;------------------------------------------------------------------------------
10569  EE71             ; $EE71 (F2) - Clears the LCD display
10570  EE71             ;            Address: EE71 (F2)
10571  EE71             ;          Parameter: None
10572  EE71             ;
10573  EE71             ; Modified Registers: U-Reg, Accumulator
10574  EE71             ;   Error conditions: None
10575  EE71             ;------------------------------------------------------------------------------
10576  EE71             LCD_CLR: ; $EE71
10577  EE71 68 76           LDI  UH,$76
10578  EE73 BE EE 78        SJP  (LCD_CLR_1)
10579  EE76 68 77           LDI  UH,$77
10580  EE78             
10581  EE78             ;------------------------------------------------------------------------------
10582  EE78             ; $EE78 - Clears area from (UH00)-(UH4D)
10583  EE78             ;------------------------------------------------------------------------------
10584  EE78             LCD_CLR_1: ; 
10585  EE78 6A 4D           LDI  UL,$4D
10586  EE7A B5 00           LDI  A,$00
10587  EE7C             
10588  EE7C             LCD_CLR_2: ; $EE7C
10589  EE7C 2E              STA  (U)
10590  EE7D 88 03           LOP  UL,LCD_CLR_2 ; $EE7C
10591  EE7F 9A              RTN
10592  EE80             
10593  EE80             
10594  EE80             
10595  EE80             ;------------------------------------------------------------------------------
10596  EE80             ; $EE80 - Saves cursor parameters in cache from $786C. 
10597  EE80             ; Transfers the display to the buffer area.
10598  EE80             ;------------------------------------------------------------------------------
10599  EE80             SAVE_LCD_CURS: ; 
10600  EE80 E9 7A 07 00     ANI  (ARX + $07),$00
10601  EE84 EB 78 74 80     ORI  (CURSOR_ENA),$80
10602  EE88 FD 98           PSH  Y
10603  EE8A 48 78           LDI  XH,$78
10604  EE8C 4A 7C           LDI  XL,$7C
10605  EE8E 58 78           LDI  YH,$78
10606  EE90 5A 6C           LDI  YL,$6C
10607  EE92 6A 03           LDI  UL,$03
10608  EE94             
10609  EE94             SAVE_LCD_CURS_1: ; $EE94
10610  EE94 F5              TIN
10611  EE95 88 03           LOP  UL,SAVE_LCD_CURS_1 ; $EE94
10612  EE97 9E D6           BCH LCD_CACHE_1 ; $EDC3
10613  EE99             
10614  EE99             
10615  EE99             
10616  EE99             ;------------------------------------------------------------------------------
10617  EE99             ; $EE99 - Transfer back cursor parameters and display.
10618  EE99             ;------------------------------------------------------------------------------
10619  EE99             RESTORE_LCD_CURS:
10620  EE99 ED 78 74 80     BII  (CURSOR_ENA),$80
10621  EE9D 8B 21           BZS LCD_CHARS_OPEN_2 ; $EEC0
10622  EE9F FD 98           PSH  Y
10623  EEA1 48 78           LDI  XH,$78
10624  EEA3 4A 6C           LDI  XL,$6C
10625  EEA5 58 78           LDI  YH,$78
10626  EEA7 5A 7C           LDI  YL,$7C
10627  EEA9 6A 03           LDI  UL,$03
10628  EEAB             
10629  EEAB             RESTORE_LCD_CURS_1: ; $EEAB
10630  EEAB F5              TIN
10631  EEAC 88 03           LOP  UL,RESTORE_LCD_CURS_1 ; $EEAB
10632  EEAE 9E D6           BCH LCD_RESTORE_1 ; $EDDA
10633  EEB0             
10634  EEB0             
10635  EEB0             
10636  EEB0             ;------------------------------------------------------------------------------
10637  EEB0             ; $EEB0 - Determines from A number of characters that can be displayed. 
10638  EEB0             ;         If output not possible C=1.
10639  EEB0             ;------------------------------------------------------------------------------
10640  EEB0             LCD_CHARS_OPEN: ; 
10641  EEB0 6A 19           LDI  UL,$19
10642  EEB2 A5 78 75        LDA  (CURSOR_PTR)
10643  EEB5 8B 0E           BZS LCD_CHARS_OPEN_4 ; $EEC5
10644  EEB7 DF              DEC  A
10645  EEB8 68 06           LDI  UH,$06
10646  EEBA FB              SEC
10647  EEBB             
10648  EEBB             LCD_CHARS_OPEN_1: ; $EEBB
10649  EEBB A0              SBC  UH
10650  EEBC 81 04           BCR LCD_CHARS_OPEN_3 ; $EEC2
10651  EEBE 88 05           LOP  UL,LCD_CHARS_OPEN_1 ; $EEBB
10652  EEC0             
10653  EEC0             LCD_CHARS_OPEN_2: ; $EEC0
10654  EEC0 FB              SEC
10655  EEC1 9A              RTN
10656  EEC2             
10657  EEC2             LCD_CHARS_OPEN_3: ; $EEC2
10658  EEC2 A2              ADC  UH
10659  EEC3 89 01           BZR LCD_CHARS_OPEN_5 ; $EEC6
10660  EEC5             
10661  EEC5             LCD_CHARS_OPEN_4: ; $EEC5
10662  EEC5 60              INC  UL
10663  EEC6             
10664  EEC6             LCD_CHARS_OPEN_5: ; $EEC6
10665  EEC6 24              LDA  UL
10666  EEC7 9B 09           BZS LCD_CHARS_OPEN_2 ; $EEC0
10667  EEC9 F9              REC
10668  EECA 9A              RTN
10669  EECB             
10670  EECB             
10671  EECB             
10672  EECB             ;------------------------------------------------------------------------------
10673  EECB             ; $EECB - Basic command POINT
10674  EECB             ;------------------------------------------------------------------------------
10675  EECB             BCMD_POINT: ; 
10676  EECB D0              VEJ  (D0) \ ABYT($0A) \ ABRF($EF19) ; *** $EF19 mid of command, EF1A - RET perhaps?
10676  EECC 0A          
10676  EECD 4B          
10677  EECE BE EE 22        SJP  (XREG_2_MATRIX_COL_1)
10678  EED1 4C 76           CPI  XH,$76
10679  EED3 83 0D           BCS BCMD_POINT_2 ; $EEE2
10680  EED5 45              LIN  X
10681  EED6 B9 0F           ANI  A,$0F
10682  EED8 2A              STA  UL
10683  EED9 45              LIN  X
10684  EEDA B9 0F           ANI  A,$0F
10685  EEDC F1              AEX
10686  EEDD             
10687  EEDD             BCMD_POINT_1: ; $EEE2
10688  EEDD F9              REC
10689  EEDE 22              ADC  UL
10690  EEDF BA D9 E4        JMP  BCMD_LEN_2 ; $D9E4
10691  EEE2             
10692  EEE2             BCMD_POINT_2: ; $EEE2
10693  EEE2 45              LIN  X
10694  EEE3 B9 F0           ANI  A,$F0
10695  EEE5 F1              AEX
10696  EEE6 2A              STA  UL
10697  EEE7 45              LIN  X
10698  EEE8 B9 F0           ANI  A,$F0
10699  EEEA 9E 0F           BCH BCMD_POINT_1 ; $EEDD
10700  EEEC             
10701  EEEC             BCMD_POINT_3: ; $EEEC
10702  EEEC D5              SHR
10703  EEED 81 15           BCR CURSOR_OFF_1 ; $EF04
10704  EEEF FD 98           PSH  Y
10705  EEF1 BE EF 05        SJP  (USING_2_STK)
10706  EEF4 BA E6 A9        JMP  BCMD_PAUSE_1 ; $E6A9
10707  EEF7             
10708  EEF7             BCMD_POINT_4: ; $EEF7
10709  EEF7 E9 78 74 7F     ANI  (CURSOR_ENA),$7F
10710  EEFB BE EF 35        SJP  (STK_2_USING)
10711  EEFE FD 1A           POP  Y
10712  EF00             
10713  EF00             
10714  EF00             
10715  EF00             ;------------------------------------------------------------------------------
10716  EF00             ; (84) $EF00 - Turns off the blinking cursor.
10717  EF00             ;------------------------------------------------------------------------------
10718  EF00             CURSOR_OFF: ;
10719  EF00 E9 78 7C FC     ANI  (CURSOR_BLNK),$FC
10720  EF04             
10721  EF04             CURSOR_OFF_1: ; $EF04
10722  EF04 9A              RTN
10723  EF05             
10724  EF05             
10725  EF05             
10726  EF05             ;------------------------------------------------------------------------------
10727  EF05             ; $EF05 - Saves USING parameters on processor stack ($7895-$7897) 
10728  EF05             ;         and deletes USING parameters.
10729  EF05             ;------------------------------------------------------------------------------
10730  EF05             USING_2_STK: ; 
10731  EF05 48 78           LDI  XH,$78
10732  EF07 4A 95           LDI  XL,$95
10733  EF09 FD 1A           POP  Y
10734  EF0B 6A 02           LDI  UL,$02
10735  EF0D             
10736  EF0D             USING_2_STK_1: ; $EF0D
10737  EF0D 45              LIN  X
10738  EF0E FD C8           PSH  A
10739  EF10 88 05           LOP  UL,USING_2_STK_1 ; $EF0D
10740  EF12 46              DEC  X
10741  EF13 B5 00           LDI  A,$00
10742  EF15 43              SDE  X
10743  EF16 43              SDE  X
10744  EF17 0E              STA  (X)
10745  EF18             
10746  EF18             USING_2_STK_2: ; $EF18
10747  EF18 FD 98           PSH  Y
10748  EF1A 9A              RTN
10749  EF1B             
10750  EF1B             
10751  EF1B             
10752  EF1B             ;------------------------------------------------------------------------------
10753  EF1B             ; $EF1B - Convert AR-X to string
10754  EF1B             ;------------------------------------------------------------------------------
10755  EF1B             ARX_2_STRNG: ; 
10756  EF1B BE EF 05        SJP  (USING_2_STK)
10757  EF1E B5 01           LDI  A,$01
10758  EF20 CD 96           VMJ  ($96) ; ($96)($4B)
10759  EF22 2A              STA  UL
10760  EF23 05              LDA  (X)
10761  EF24 B7 20           CPI  A,$20
10762  EF26 89 02           BZR ARX_2_STRNG_1 ; $EF2A
10763  EF28 62              DEC  UL
10764  EF29 44              INC  X
10765  EF2A             
10766  EF2A             ARX_2_STRNG_1: ; $EF2A
10767  EF2A 24              LDA  UL
10768  EF2B CD 24           VMJ  ($24)
10769  EF2D E9 78 74 7F     ANI  (CURSOR_ENA),$7F
10770  EF31 BE EF 35        SJP  (STK_2_USING)
10771  EF34 9A              RTN
10772  EF35             
10773  EF35             
10774  EF35             
10775  EF35             ;------------------------------------------------------------------------------
10776  EF35             ; $EF35 - Gets USING parameters from stack
10777  EF35             ;------------------------------------------------------------------------------
10778  EF35             STK_2_USING: ; 
10779  EF35 48 78           LDI  XH,$78
10780  EF37 4A 97           LDI  XL,$97
10781  EF39 FD 1A           POP  Y
10782  EF3B 6A 02           LDI  UL,$02
10783  EF3D             
10784  EF3D             STK_2_USING_1: ; $EF3D
10785  EF3D FD 8A           POP  A
10786  EF3F 43              SDE  X
10787  EF40 88 05           LOP  UL,STK_2_USING_1 ; $EF3D
10788  EF42 9E 2C           BCH USING_2_STK_2 ; $EF18
10789  EF44             
10790  EF44             
10791  EF44             
10792  EF44             ;------------------------------------------------------------------------------
10793  EF44             ; $EF44 - Outputs text on LCD display
10794  EF44             ;------------------------------------------------------------------------------
10795  EF44             TXT_2_LCD: ; 
10796  EF44 FD 88           PSH  X
10797  EF46 B5 00           LDI  A,$00
10798  EF48 6A 19           LDI  UL,$19
10799  EF4A 4D FF           BII  (X),$FF
10800  EF4C 8B 04           BZS TXT_2_LCD_1 ; $EF52
10801  EF4E DD              INC  A
10802  EF4F 44              INC  X
10803  EF50 88 08           LOP  UL,$EF4A
10804  EF52             
10805  EF52             TXT_2_LCD_1: ; $EF52
10806  EF52 0A              STA  XL
10807  EF53 F2              VEJ  (F2)
10808  EF54 FD 2A           POP  U
10809  EF56 BE ED 3B        SJP  (XREG_2_LCD)
10810  EF59 9E 5B           BCH CURSOR_OFF
10811  EF5B             
10812  EF5B             
10813  EF5B             
10814  EF5B             ;------------------------------------------------------------------------------
10815  EF5B             ; $EF5B - Text output on LCD from (AR-Y)
10816  EF5B             ;------------------------------------------------------------------------------
10817  EF5B             TXT_2_LCD_2: ; 
10818  EF5B F9              REC
10819  EF5C B5 F0           LDI  A,$F0
10820  EF5E 02              ADC  XL
10821  EF5F 68 7A           LDI  UH,$7A
10822  EF61 6A 10           LDI  UL,$10
10823  EF63 FD A8           PSH  U
10824  EF65 9E 15           BCH TXT_2_LCD_1 ; $EF52
10825  EF67             
10826  EF67             
10827  EF67             
10828  EF67             ;------------------------------------------------------------------------------
10829  EF67             ; $EF67 - Prepare the LCD output
10830  EF67             ;------------------------------------------------------------------------------
10831  EF67             PREP_LCD_OUT:
10832  EF67 EB 78 8A 10     ORI  (BREAKPARAM),$10
10833  EF6B ED 78 74 01     BII  (CURSOR_ENA),$01
10834  EF6F 89 01           BZR PREP_LCD_OUT_1 ; $EF72
10835  EF71 F2              VEJ  (F2)
10836  EF72             
10837  EF72             PREP_LCD_OUT_1: ; $EF72
10838  EF72 E9 78 76 00     ANI  (CHARPOS_LCD),$00
10839  EF76 BE EE B0        SJP  (LCD_CHARS_OPEN)
10840  EF79 83 05           BCS PREP_LCD_OUT_2 ; $EF80
10841  EF7B BD FF           EAI  $FF
10842  EF7D AE 78 77        STA  ($7877)
10843  EF80             
10844  EF80             PREP_LCD_OUT_2: ; $EF80
10845  EF80 9A              RTN
10846  EF81             
10847  EF81             
10848  EF81             
10849  EF81             ;------------------------------------------------------------------------------
10850  EF81             ; Clears output buffer
10851  EF81             ;            Address: EF81
10852  EF81             ;          Parameter: None
10853  EF81             ; 
10854  EF81             ; Modified Registers: X-Reg, U-Reg, Accumulator
10855  EF81             ;   Error conditions: None
10856  EF81             ;------------------------------------------------------------------------------
10857  EF81             OUTBUF_CLR: ; $EF81
10858  EF81 48 7B           LDI  XH,$7B
10859  EF83 4A 60           LDI  XL,$60
10860  EF85 6A 4F           LDI  UL,$4F
10861  EF87 CD BA           VMJ  ($BA) ; ($BA)($5D)
10862  EF89 9A              RTN
10863  EF8A             
10864  EF8A             OUTBUF_CLR_1: ; $EF8A
10865  EF8A 5A 07           LDI  YL,$07
10866  EF8C B5 06           LDI  A,$06
10867  EF8E BA F3 BA        JMP  BCMD_SIN_3 ; $F3BA
10868  EF91             
10869  EF91             OUTBUF_CLR_2: ; $EF91
10870  EF91 BA F6 5D        JMP  ARX_2_BCD_ABS ; $F65D
10871  EF94             
10872  EF94             OUTBUF_CLR_3: ; $EF94
10873  EF94 5E 2B           CPI  YL,$2B
10874  EF96 8B 04           BZS OUTBUF_CLR_4 ; $EF9C
10875  EF98 EF 7A 11 80     ADI  (ARY + $01),$80
10876  EF9C             
10877  EF9C             OUTBUF_CLR_4: ; $EF9C
10878  EF9C F0              VEJ  (F0)
10879  EF9D             
10880  EF9D             OUTBUF_CLR_5: ; $EF9D
10881  EF9D 83 03           BCS $EFA2
10882  EF9F BA D8 F0        JMP  GET_VAR_INDEX_32 ; $D8F0
10883  EFA2 BA D8 F2        JMP  GET_VAR_INDEX_33 ; $D8F2
10884  EFA5             
10885  EFA5             OUTBUF_CLR_6: ; $EFA5
10886  EFA5 5E 2A           CPI  YL,$2A
10887  EFA7 89 04           BZR OUTBUF_CLR_7 ; $EFAD
10888  EFA9 CD 7E           VMJ  ($7E) ; ($7E)($3F)
10889  EFAB 9E 10           BCH OUTBUF_CLR_5 ; $EF9D
10890  EFAD             
10891  EFAD             OUTBUF_CLR_7: ; $EFAD
10892  EFAD CD 58           VMJ  ($58) ; ($58)($2C)
10893  EFAF 9E 14           BCH OUTBUF_CLR_5 ; $EF9D
10894  EFB1             
10895  EFB1             OUTBUF_CLR_8: ; $EFB1
10896  EFB1 BE F8 9C        SJP  ($F89C)
10897  EFB4 9E 19           BCH OUTBUF_CLR_5 ; $EF9D
10898  EFB6             
10899  EFB6             
10900  EFB6             
10901  EFB6             ;------------------------------------------------------------------------------
10902  EFB6             ; $EFB6 - Subtraction: AR-X = ARX – AR-Y
10903  EFB6             ;------------------------------------------------------------------------------
10904  EFB6             SUBTR: ; 
10905  EFB6 EF 7A 11 80     ADI  (ARY + $01),$80
10906  EFBA             
10907  EFBA             ;------------------------------------------------------------------------------
10908  EFBA             ; $EFBA (F0) - Addition: AR-X = AR-X + AR-Y
10909  EFBA             ;------------------------------------------------------------------------------
10910  EFBA             ADDIT: ; 
10911  EFBA CD 54           VMJ  ($54) ; ($54)($2A)
10912  EFBC 4A 02           LDI  XL,$02
10913  EFBE 5A 12           LDI  YL,$12
10914  EFC0 47              LDE  X
10915  EFC1 8B 33           BZS ADDIT_6 ; $EFF6
10916  EFC3 57              LDE  Y
10917  EFC4 8B 9F           BZS MULTIPLY_7 ; $F065
10918  EFC6 CD 7C           VMJ  ($7C) ; ($7C)($3E)
10919  EFC8 05              LDA  (X)
10920  EFC9 FB              SEC
10921  EFCA 11              SBC  (Y)
10922  EFCB 8B 18           BZS ADDIT_3 ; $EFE5
10923  EFCD 8F 2B           BVS ADDIT_3_7 ; $EFFA
10924  EFCF DB              ROL
10925  EFD0             
10926  EFD0             ADDIT_1: ; $EFD0
10927  EFD0 81 2C           BCR ADDIT_8 ; $EFFE
10928  EFD2 D1              ROR
10929  EFD3 BD FF           EAI  $FF
10930  EFD5 DD              INC  A
10931  EFD6 FD C8           PSH  A
10932  EFD8 15              LDA  (Y)
10933  EFD9 0E              STA  (X)
10934  EFDA FD 8A           POP  A
10935  EFDC 4A 07           LDI  XL,$07
10936  EFDE             
10937  EFDE             ADDIT_2: ; $EFDE
10938  EFDE B7 0C           CPI  A,$0C
10939  EFE0 83 21           BCS ADDIT_9 ; $F003
10940  EFE2 BE F7 F7        SJP  (ARX_MINUS_ARV_7) ; $F7F7
10941  EFE5             
10942  EFE5             ADDIT_3: ; $EFE5
10943  EFE5 FD 8A           POP  A
10944  EFE7 FD C8           PSH  A
10945  EFE9 D9              SHL
10946  EFEA 83 20           BCS PC1500_PRT_A_DIR
10947  EFEC EE              VEJ  (EE)
10948  EFED             
10949  EFED             ADDIT_4: ; $EFED
10950  EFED FD 8A           POP  A
10951  EFEF             
10952  EFEF             ADDIT_5: ; $EFEF
10953  EFEF 28              STA  UH
10954  EFF0 FD 8A           POP  A
10955  EFF2 F9              REC
10956  EFF3 A2              ADC  UH
10957  EFF4 8E 61           BCH MULTIPLY_3 ; $F057
10958  EFF6             
10959  EFF6             ADDIT_6: ; $EFF6
10960  EFF6 CD 56           VMJ  ($56) ; ($56)($2B)
10961  EFF8 9E 69           BCH OUTBUF_CLR_2 ; $EF91
10962  EFFA             
10963  EFFA             ADDIT_3_7: ; $EFFA
10964  EFFA B5 1F           LDI  A,$1F
10965  EFFC 9E 2E           BCH ADDIT_1 ; $EFD0
10966  EFFE             
10967  EFFE             ADDIT_8: ; $EFFE
10968  EFFE D1              ROR
10969  EFFF 4A 17           LDI  XL,$17
10970  F001 9E 25           BCH ADDIT_2 ; $EFDE
10971  F003             
10972  F003             ADDIT_9: ; $F003
10973  F003 04              LDA  XL
10974  F004 B9 F9           ANI  A,$F9
10975  F006 0A              STA  XL
10976  F007 BE F7 61        SJP  (CLR_ARITHMETIC_REGS_3)
10977  F00A 9E 27           BCH ADDIT_3 ; $EFE5
10978  F00C CD 7A           VMJ  ($7A) ; ($7A)($3D)
10979  F00E 93 23           BCS ADDIT_4 ; $EFED
10980  F010 BE F7 EB        SJP  (ARX_MINUS_ARV_5) ; $F7EB
10981  F013 FD 8A           POP  A
10982  F015 BD 80           EAI  $80
10983  F017 9E 2A           BCH ADDIT_5 ; $EFEF
10984  F019             
10985  F019             
10986  F019             
10987  F019             ;------------------------------------------------------------------------------
10988  F019             ; $F019 - AR-X = AR-X * AR-X
10989  F019             ;------------------------------------------------------------------------------
10990  F019             SQUARE: 
10991  F019 E6              VEJ  (E6)
10992  F01A             
10993  F01A             ;------------------------------------------------------------------------------
10994  F01A             ; $F01A (7E) - Multiplication: AR-X = AR-X* AR-Y
10995  F01A             ;------------------------------------------------------------------------------
10996  F01A             MULTIPLY: ;
10997  F01A CD 54           VMJ  ($54) ; ($54)($2A)
10998  F01C 4A 01           LDI  XL,$01
10999  F01E 5A 11           LDI  YL,$11
11000  F020 CD 7C           VMJ  ($7C) ; ($7C)($3E)
11001  F022 15              LDA  (Y)
11002  F023 F9              REC
11003  F024 03              ADC  (X)
11004  F025 8F 33           BVS MULTIPLY_4 ; $F05A
11005  F027 0E              STA  (X)
11006  F028 CD 78           VMJ  ($78) ; ($78)($3C)
11007  F02A CD 76           VMJ  ($76) ; ($76)($3B)
11008  F02C BE F8 20        SJP  (ARX_MINUS_ARV_12) ; $F820
11009  F02F 5A 0F           LDI  YL,$0F
11010  F031             
11011  F031             MULTIPLY_1: ; $F031
11012  F031 FD 98           PSH  Y
11013  F033 15              LDA  (Y)
11014  F034 FD C8           PSH  A
11015  F036 B9 0F           ANI  A,$0F
11016  F038 F1              AEX
11017  F039 BE F0 67        SJP  (ADD_N_AR)
11018  F03C CD 74           VMJ  ($74) ; ($74)($3A)
11019  F03E FD 8A           POP  A
11020  F040 B9 F0           ANI  A,$F0
11021  F042 BE F0 67        SJP  (ADD_N_AR)
11022  F045 FD 1A           POP  Y
11023  F047 56              DEC  Y
11024  F048 5E 0A           CPI  YL,$0A
11025  F04A 81 04           BCR MULTIPLY_2 ; $F050
11026  F04C CD 74           VMJ  ($74) ; ($74)($3A)
11027  F04E 9E 1F           BCH MULTIPLY_1 ; $F031
11028  F050             
11029  F050             MULTIPLY_2: ; $F050
11030  F050 FD 2A           POP  U
11031  F052 24              LDA  UL
11032  F053 AE 7A 11        STA  (ARY + $01)
11033  F056 A4              LDA  UH
11034  F057             
11035  F057             MULTIPLY_3: ; $F057
11036  F057 CD 52           VMJ  ($52) ; ($52)($29
11037  F059 9A              RTN
11038  F05A             
11039  F05A             MULTIPLY_4: ; $F05A
11040  F05A FD 2A           POP  U
11041  F05C 83 04           BCS MULTIPLY_5 ; $F062
11042  F05E 68 25           LDI  UH,$25
11043  F060 FB              SEC
11044  F061 9A              RTN
11045  F062             
11046  F062             MULTIPLY_5: ; $F062
11047  F062 EC              VEJ  (EC)
11048  F063             
11049  F063             MULTIPLY_6: ; $F063
11050  F063 68 00           LDI  UH,$00
11051  F065             
11052  F065             MULTIPLY_7: ; $F065
11053  F065 F9              REC
11054  F066 9A              RTN
11055  F067             
11056  F067             
11057  F067             
11058  F067             ;------------------------------------------------------------------------------
11059  F067             ; $F067 - Adds the mantissas of those AR to the AR-X that are preselected by 
11060  F067             ;         the value in the accumulator. If bit# is set 7:AR-W, 6:AR-V, 5:AR-U,
11061  F067             ;         4:AR-Y, 3:AR-Z are added.
11062  F067             ;------------------------------------------------------------------------------
11063  F067             ADD_N_AR: ; 
11064  F067 28              STA  UH
11065  F068 B5 2F           LDI  A,$2F
11066  F06A             
11067  F06A             ADD_N_AR_1: ; $F06A
11068  F06A FD C8           PSH  A
11069  F06C 1A              STA  YL
11070  F06D A4              LDA  UH
11071  F06E D9              SHL
11072  F06F 28              STA  UH
11073  F070 81 09           BCR ADD_N_AR_3 ; $F07B
11074  F072 CD 72           VMJ  ($72) ; ($72)($39)
11075  F074             
11076  F074             ADD_N_AR_2: ; $F074
11077  F074 F9              REC
11078  F075 FD 8A           POP  A
11079  F077 B3 F8           ADI  A,$F8
11080  F079 9E 11           BCH ADD_N_AR_1 ; $F06A
11081  F07B             
11082  F07B             ADD_N_AR_3: ; $F07B
11083  F07B 99 09           BZR ADD_N_AR_2 ; $F074
11084  F07D FD 8A           POP  A
11085  F07F 9A              RTN
11086  F080             
11087  F080             
11088  F080             
11089  F080             ;------------------------------------------------------------------------------
11090  F080             ; $F080 (6E) - Reciprocal of AR-X AR-X=1/AR-X (if error C=1).
11091  F080             ;------------------------------------------------------------------------------
11092  F080             RECIPRICAL: ; 
11093  F080 CD 6A           VMJ  ($6A) ; ($6A)($35)
11094  F082 CD 66           VMJ  ($66) ; ($66)($33)
11095  F084             
11096  F084             ;------------------------------------------------------------------------------
11097  F084             ; $F084 (58) - Division: AR-X = AR-X / AR- Y
11098  F084             ;------------------------------------------------------------------------------
11099  F084             DIVISION: ; 
11100  F084 CD 54           VMJ  ($54) ; ($54)($2A)
11101  F086 4A 01           LDI  XL,$01
11102  F088 5A 11           LDI  YL,$11
11103  F08A CD 7C           VMJ  ($7C) ; ($7C)($3E)
11104  F08C ED 7A 12 F0     BII  (ARY + $02),$F0
11105  F090 8B 51           BZS DIVISION_11 ; $F0E3
11106  F092 F9              REC
11107  F093 05              LDA  (X)
11108  F094 11              SBC  (Y)
11109  F095 9F 3D           BVS MULTIPLY_4 ; $F05A
11110  F097 0E              STA  (X)
11111  F098 BE F7 4B        SJP  (CLR_SM_ARZ)
11112  F09B BE F8 1C        SJP  (ARX_MINUS_ARV_11) ; $F81C
11113  F09E B5 0C           LDI  A,$0C
11114  F0A0 FD C8           PSH  A
11115  F0A2             
11116  F0A2             DIVISION_1: ; $F0A2
11117  F0A2 BE F7 D9        SJP  (ARX_MINUS_ARV) ; $F7D9
11118  F0A5 83 16           BCS DIVISION_5 ; $F0BD
11119  F0A7             
11120  F0A7             DIVISION_2: ; $F0A7
11121  F0A7 BE F7 C8        SJP  (ADD_ARU_ARX)
11122  F0AA 83 22           BCS DIVISION_7 ; $F0CE
11123  F0AC EE              VEJ  (EE)
11124  F0AD 83 29           BCS DIVISION_9 ; $F0D8
11125  F0AF             
11126  F0AF             DIVISION_3: ; $F0AF
11127  F0AF EE              VEJ  (EE)
11128  F0B0             
11129  F0B0             DIVISION_4: ; $F0B0
11130  F0B0 FD 8A           POP  A
11131  F0B2 DF              DEC  A
11132  F0B3 81 29           BCR DIVISION_10 ; $F0DE
11133  F0B5 FD C8           PSH  A
11134  F0B7 EA              VEJ  (EA)
11135  F0B8 BE F7 98        SJP  (ARZ_SHL_4BITS)
11136  F0BB 9E 1B           BCH DIVISION_1 ; $F0A2
11137  F0BD             
11138  F0BD             DIVISION_5: ; $F0BD
11139  F0BD BE F7 D9        SJP  (ARX_MINUS_ARV) ; $F7D9
11140  F0C0 83 06           BCS DIVISION_6 ; $F0C8
11141  F0C2 EB 7A 0F 04     ORI  (ARZ + $07),$04
11142  F0C6 9E 21           BCH DIVISION_2 ; $F0A7
11143  F0C8             
11144  F0C8             DIVISION_6: ; $F0C8
11145  F0C8 EB 7A 0F 08     ORI  (ARZ + $07),$08
11146  F0CC 8E 04           BCH DIVISION_8 ; $F0D2
11147  F0CE             
11148  F0CE             DIVISION_7: ; $F0CE
11149  F0CE EB 7A 0F 02     ORI  (ARZ + $07),$02
11150  F0D2             
11151  F0D2             DIVISION_8: ; $F0D2
11152  F0D2 CD 7A           VMJ  ($7A) ; ($7A)($3D)
11153  F0D4 83 02           BCS DIVISION_9 ; $F0D8
11154  F0D6 9E 29           BCH DIVISION_3 ; $F0AF
11155  F0D8             
11156  F0D8             DIVISION_9: ; $F0D8
11157  F0D8 EB 7A 0F 01     ORI  (ARZ + $07),$01
11158  F0DC 9E 2E           BCH DIVISION_4 ; $F0B0
11159  F0DE             
11160  F0DE             DIVISION_10: ; $F0DE
11161  F0DE BE F7 1F        SJP  (XFER_SM_ARZ2ARX)
11162  F0E1 9E 93           BCH MULTIPLY_2 ; $F050
11163  F0E3             
11164  F0E3             DIVISION_11: ; $F0E3
11165  F0E3 FD 0A           POP  X
11166  F0E5 68 26           LDI  UH,$26
11167  F0E7 FB              SEC
11168  F0E8 9A              RTN
11169  F0E9             
11170  F0E9             
11171  F0E9             
11172  F0E9             ;------------------------------------------------------------------------------
11173  F0E9             ; $F0E9 -  AR-X = SQR (AR-X)
11174  F0E9             ;------------------------------------------------------------------------------
11175  F0E9             SQR_ROOT: ; 
11176  F0E9 CD 54           VMJ  ($54) ; ($54)($2A)
11177  F0EB 4A 01           LDI  XL,$01
11178  F0ED 47              LDE  X
11179  F0EE D9              SHL
11180  F0EF 83 6C           BCS SQR_ROOT_12 ; $F15D
11181  F0F1 05              LDA  (X)
11182  F0F2 BF 80           BII  A,$80
11183  F0F4 8B 01           BZS SQR_ROOT_1 ; $F0F7
11184  F0F6 FB              SEC
11185  F0F7             
11186  F0F7             SQR_ROOT_1: ; $F0F7
11187  F0F7 D1              ROR
11188  F0F8 0E              STA  (X)
11189  F0F9 81 01           BCR SQR_ROOT_2 ; $F0FC
11190  F0FB EA              VEJ  (EA)
11191  F0FC             
11192  F0FC             SQR_ROOT_2: ; $F0FC
11193  F0FC CD 70           VMJ  ($70) ; ($70)($38)
11194  F0FE BE F7 4B        SJP  (CLR_SM_ARZ)
11195  F101 B5 24           LDI  A,$24
11196  F103 EB 7A 12 10     ORI  (ARY + $02),$10
11197  F107 8E 26           BCH SQR_ROOT_7 ; $F12F
11198  F109             
11199  F109             SQR_ROOT_3: ; $F109
11200  F109 EE              VEJ  (EE)
11201  F10A FD 1A           POP  Y
11202  F10C FD 18           LDX  Y
11203  F10E 04              LDA  XL
11204  F10F F9              REC
11205  F110 B3 F8           ADI  A,$F8
11206  F112 0A              STA  XL
11207  F113 FD 8A           POP  A
11208  F115 B7 0F           CPI  A,$0F
11209  F117 A4              LDA  UH
11210  F118 81 06           BCR SQR_ROOT_4 ; $F120
11211  F11A F1              AEX
11212  F11B 0E              STA  (X)
11213  F11C 5F F1           ADI  (Y),$F1
11214  F11E 8E 0B           BCH SQR_ROOT_6 ; $F12B
11215  F120             
11216  F120             SQR_ROOT_4: ; $F120
11217  F120 0B              ORA  (X)
11218  F121 0E              STA  (X)
11219  F122 5E 17           CPI  YL,$17
11220  F124 83 30           BCS SQR_ROOT_11 ; $F156
11221  F126 5F FF           ADI  (Y),$FF
11222  F128 54              INC  Y
11223  F129 5B 10           ORI  (Y),$10
11224  F12B             
11225  F12B             SQR_ROOT_6: ; $F12B
11226  F12B EA              VEJ  (EA)
11227  F12C FD 8A           POP  A
11228  F12E DD              INC  A
11229  F12F             
11230  F12F             SQR_ROOT_7: ; $F12F
11231  F12F FD C8           PSH  A
11232  F131 D5              SHR
11233  F132 1A              STA  YL
11234  F133 B5 20           LDI  A,$20
11235  F135 81 02           BCR SQR_ROOT_8 ; $F139
11236  F137 B5 02           LDI  A,$02
11237  F139             
11238  F139             SQR_ROOT_8: ; $F139
11239  F139 68 00           LDI  UH,$00
11240  F13B FD C8           PSH  A
11241  F13D FD 98           PSH  Y
11242  F13F             
11243  F13F             SQR_ROOT_9: ; $F13F
11244  F13F CD 7A           VMJ  ($7A) ; ($7A)($3D)
11245  F141 91 3A           BCR SQR_ROOT_3 ; $F109
11246  F143 FD 1A           POP  Y
11247  F145 FD 8A           POP  A
11248  F147 FD C8           PSH  A
11249  F149 FD 98           PSH  Y
11250  F14B F9              REC
11251  F14C             
11252  F14C             SQR_ROOT_10: ; $F14C
11253  F14C 9C              DCA  (Y)
11254  F14D 53              SDE  Y
11255  F14E B5 00           LDI  A,$00
11256  F150 93 06           BCS SQR_ROOT_10 ; $F14C
11257  F152 FD 60           INC  UH
11258  F154 9E 17           BCH SQR_ROOT_9 ; $F13F
11259  F156             
11260  F156             SQR_ROOT_11: ; $F156
11261  F156 BE F7 1F        SJP  (XFER_SM_ARZ2ARX)
11262  F159 FD 8A           POP  A
11263  F15B E8              VEJ  (E8)
11264  F15C 9A              RTN
11265  F15D             
11266  F15D             SQR_ROOT_12: ; $F15D
11267  F15D 68 27           LDI  UH,$27
11268  F15F 8E 5F           BCH BCMD_LOG_8 ; $F1C0
11269  F161             
11270  F161             
11271  F161             
11272  F161             ;------------------------------------------------------------------------------
11273  F161             ; $F161 - Basic command LN
11274  F161             ;------------------------------------------------------------------------------
11275  F161             BCMD_LN: ; 
11276  F161 B5 02           LDI  A,$02
11277  F163 8E 02           BCH BCMD_LOG_1 ; $F167
11278  F165             
11279  F165             ;------------------------------------------------------------------------------
11280  F165             ; $F165 - Basic command LOG
11281  F165             ;------------------------------------------------------------------------------
11282  F165             BCMD_LOG: ; 
11283  F165 B5 00           LDI  A,$00
11284  F167             
11285  F167             BCMD_LOG_1: ; $F167
11286  F167 CD 54           VMJ  ($54) ; ($54)($2A)
11287  F169 4A 02           LDI  XL,$02
11288  F16B 4A 02           LDI  XL,$02
11289  F16D 4D F0           BII  (X),$F0
11290  F16F 9B 14           BZS SQR_ROOT_12 ; $F15D
11291  F171 46              DEC  X
11292  F172 4D FF           BII  (X),$FF
11293  F174 99 19           BZR SQR_ROOT_12 ; $F15D
11294  F176 46              DEC  X
11295  F177 4D 80           BII  (X),$80
11296  F179 89 47           BZR BCMD_LOG_9 ; $F1C2
11297  F17B FD C8           PSH  A
11298  F17D             
11299  F17D             BCMD_LOG_2: ; $F17D
11300  F17D 05              LDA  (X)
11301  F17E FD C8           PSH  A
11302  F180             
11303  F180             BCMD_LOG_3: ; $F180
11304  F180 49 00           ANI  (X),$00
11305  F182 EF 7A 02 F0     ADI  (ARX + $02),$F0
11306  F186 E8              VEJ  (E8)
11307  F187 A5 7A 00        LDA  (ARX)
11308  F18A BD FF           EAI  $FF
11309  F18C DD              INC  A
11310  F18D 28              STA  UH
11311  F18E B5 01           LDI  A,$01
11312  F190 AE 7A 18        STA  (ARU)
11313  F193 BA F2 EC        JMP  EXPONENT_26 ; $F2EC
11314  F196             
11315  F196             BCMD_LOG_4: ; $F196
11316  F196 EF 7A 00 FF     ADI  (ARX),$FF
11317  F19A E8              VEJ  (E8)
11318  F19B E6              VEJ  (E6)
11319  F19C FD 8A           POP  A
11320  F19E 2A              STA  UL
11321  F19F B5 00           LDI  A,$00
11322  F1A1 28              STA  UH
11323  F1A2 83 04           BCS BCMD_LOG_5 ; $F1A8
11324  F1A4 CD 10           VMJ  ($10) \ ABYT($00)
11324  F1A6 00          
11325  F1A7 F0              VEJ  (F0)
11326  F1A8             
11327  F1A8             BCMD_LOG_5: ; $F1A8
11328  F1A8 FD 8A           POP  A
11329  F1AA 83 12           BCS BCMD_LOG_7 ; $F1BE
11330  F1AC D5              SHR
11331  F1AD 81 04           BCR BCMD_LOG_6 ; $F1B3
11332  F1AF EB 7A 01 80     ORI  (ARX + $01),$80
11333  F1B3             
11334  F1B3             BCMD_LOG_6: ; $F1B3
11335  F1B3 D5              SHR
11336  F1B4 81 7A           BCR EXPONENT_11 ; $F230
11337  F1B6 BE F8 7B        SJP  (ARX_MINUS_ARV_26) ; $F87B
11338  F1B9 CD 58           VMJ  ($58) ; ($58)($2C)
11339  F1BB 83 01           BCS BCMD_LOG_7 ; $F1BE
11340  F1BD 9A              RTN
11341  F1BE             
11342  F1BE             BCMD_LOG_7: ; $F1BE
11343  F1BE 68 25           LDI  UH,$25
11344  F1C0             
11345  F1C0             BCMD_LOG_8: ; $F1C0
11346  F1C0 FB              SEC
11347  F1C1 9A              RTN
11348  F1C2             
11349  F1C2             BCMD_LOG_9: ; $F1C2
11350  F1C2 DD              INC  A
11351  F1C3 FD C8           PSH  A
11352  F1C5 CD 6E           VMJ  ($6E) ; ($6E)($37)
11353  F1C7 4A 00           LDI  XL,$00
11354  F1C9 9E 4E           BCH BCMD_LOG_2 ; $F17D
11355  F1CB             
11356  F1CB             
11357  F1CB             
11358  F1CB             ;------------------------------------------------------------------------------
11359  F1CB             ; $F1CB - Basic command EXP
11360  F1CB             ;------------------------------------------------------------------------------
11361  F1CB             BCMD_EXP: ; 
11362  F1CB CD 54           VMJ  ($54) ; ($54)($2A)
11363  F1CD BE F8 7B        SJP  (ARX_MINUS_ARV_26) ; $F87B
11364  F1D0 CD 7E           VMJ  ($7E) ; ($7E)($3F)
11365  F1D2 93 16           BCS BCMD_LOG_7 ; $F1BE
11366  F1D4             
11367  F1D4             
11368  F1D4             
11369  F1D4             ;------------------------------------------------------------------------------
11370  F1D4             ; $F1D4 - AR-X = 10 to the power of AR-X
11371  F1D4             ;------------------------------------------------------------------------------
11372  F1D4             EXPONENT: ; 
11373  F1D4 CD 54           VMJ  ($54) ; ($54)($2A)
11374  F1D6 CD 6C           VMJ  ($6C) ; ($6C)($36)
11375  F1D8 FD C8           PSH  A
11376  F1DA 46              DEC  X
11377  F1DB 05              LDA  (X)
11378  F1DC 8B 48           BZS EXPONENT_9 ; $F226
11379  F1DE BF 80           BII  A,$80
11380  F1E0 89 40           BZR EXPONENT_8 ; $F222
11381  F1E2 B7 01           CPI  A,$01
11382  F1E4 89 43           BZR EXPONENT_10 ; $F229
11383  F1E6 4A 01           LDI  XL,$01
11384  F1E8 6A 05           LDI  UL,$05
11385  F1EA             
11386  F1EA             EXPONENT_1: ; $F1EA
11387  F1EA 44              INC  X
11388  F1EB 47              LDE  X
11389  F1EC 41              SIN  X
11390  F1ED 88 05           LOP  UL,EXPONENT_1 ; $F1EA
11391  F1EF 49 00           ANI  (X),$00
11392  F1F1             
11393  F1F1             EXPONENT_2: ; $F1F1
11394  F1F1 B5 00           LDI  A,$00
11395  F1F3             
11396  F1F3             EXPONENT_3: ; $F1F3
11397  F1F3 28              STA  UH
11398  F1F4 CD 6C           VMJ  ($6C) ; ($6C)($36)
11399  F1F6 FD C8           PSH  A
11400  F1F8 B5 01           LDI  A,$01
11401  F1FA AE 7A 18        STA  (ARU)
11402  F1FD 8E 34           BCH EXPONENT_12 ; $F233
11403  F1FF             
11404  F1FF             EXPONENT_4: ; $F1FF
11405  F1FF FD 8A           POP  A
11406  F201 4A 02           LDI  XL,$02
11407  F203 43              SDE  X
11408  F204 04              LDA  XL
11409  F205 46              DEC  X
11410  F206 0E              STA  (X)
11411  F207 E8              VEJ  (E8)
11412  F208 D0              VEJ  (D0) \ ABYT($08) \ ABRF(EXPONENT_7) ; $F220
11412  F209 08          
11412  F20A 15          
11413  F20B 48 7A           LDI  XH,$7A
11414  F20D 24              LDA  UL
11415  F20E AE 7A 00        STA  (ARX)
11416  F211 BE F7 1B        SJP  (XFER_SM_ARY2ARX)
11417  F214 CD 74           VMJ  ($74) ; ($74)($3A)
11418  F216 FD 8A           POP  A
11419  F218             
11420  F218             EXPONENT_5: ; $F218
11421  F218 D9              SHL
11422  F219 81 04           BCR EXPONENT_6 ; $F21F
11423  F21B CD 6E           VMJ  ($6E) ; ($6E)($37)
11424  F21D 93 61           BCS BCMD_LOG_7 ; $F1BE
11425  F21F             
11426  F21F             EXPONENT_6: ; $F21F
11427  F21F 9A              RTN
11428  F220             
11429  F220             EXPONENT_7: ; $F220
11430  F220 9E 64           BCH BCMD_LOG_7 ; $F1BE
11431  F222             
11432  F222             EXPONENT_8: ; $F222
11433  F222 BD FF           EAI  $FF
11434  F224 9E 33           BCH EXPONENT_3 ; $F1F3
11435  F226             
11436  F226             EXPONENT_9: ; $F226
11437  F226 EA              VEJ  (EA)
11438  F227 9E 38           BCH EXPONENT_2 ; $F1F1
11439  F229             
11440  F229             EXPONENT_10: ; $F229
11441  F229 EC              VEJ  (EC)
11442  F22A FD 8A           POP  A
11443  F22C BD 80           EAI  $80
11444  F22E 9E 18           BCH EXPONENT_5 ; $F218
11445  F230             
11446  F230             EXPONENT_11: ; $F230
11447  F230 BA F0 63        JMP  MULTIPLY_6 ; $F063
11448  F233             
11449  F233             EXPONENT_12: ; $F233
11450  F233 BE F7 4F        SJP  (CLR_SM_ARW)
11451  F236 CD 70           VMJ  ($70) ; ($70)($38)
11452  F238 B5 00           LDI  A,$00
11453  F23A FD C8           PSH  A
11454  F23C             
11455  F23C             EXPONENT_13: ; $F23C
11456  F23C A4              LDA  UH
11457  F23D ED 7A 18 01     BII  (ARU),$01
11458  F241 8B 08           BZS EXPONENT_14 ; $F24B
11459  F243 B7 0D           CPI  A,$0D
11460  F245 81 0D           BCR EXPONENT_15 ; $F254
11461  F247 B5 0C           LDI  A,$0C
11462  F249 8E 09           BCH EXPONENT_15 ; $F254
11463  F24B             
11464  F24B             EXPONENT_14: ; $F24B
11465  F24B F9              REC
11466  F24C B3 0D           ADI  A,$0D
11467  F24E B7 14           CPI  A,$14
11468  F250 81 02           BCR EXPONENT_15 ; $F254
11469  F252 B5 13           LDI  A,$13
11470  F254             
11471  F254             EXPONENT_15: ; $F254
11472  F254 D9              SHL
11473  F255 D9              SHL
11474  F256 D9              SHL
11475  F257 BB 07           ORI  A,$07
11476  F259 FD C8           PSH  A
11477  F25B 58 FC           LDI  YH,$FC
11478  F25D             
11479  F25D             EXPONENT_16: ; $F25D
11480  F25D FD 8A           POP  A
11481  F25F FD C8           PSH  A
11482  F261 1A              STA  YL
11483  F262 BE F7 DF        SJP  (ARX_MINUS_ARV_2) ; $F7DF
11484  F265 81 06           BCR EXPONENT_17 ; $F26D
11485  F267 EF 7A 2F 01     ADI  (ARW + $07),$01
11486  F26B 9E 10           BCH EXPONENT_16 ; $F25D
11487  F26D             
11488  F26D             EXPONENT_17: ; $F26D
11489  F26D FD 8A           POP  A
11490  F26F 1A              STA  YL
11491  F270 CD 72           VMJ  ($72) ; ($72)($39)
11492  F272 FD 8A           POP  A
11493  F274 B7 0C           CPI  A,$0C
11494  F276 83 0B           BCS EXPONENT_18 ; $F283
11495  F278 DD              INC  A
11496  F279 FD C8           PSH  A
11497  F27B FD 60           INC  UH
11498  F27D BE F7 94        SJP  (ARW_SHL_4BITS)
11499  F280 EA              VEJ  (EA)
11500  F281 9E 47           BCH EXPONENT_13 ; $F23C
11501  F283             
11502  F283             EXPONENT_18: ; $F283
11503  F283 58 7A           LDI  YH,$7A
11504  F285 FD C8           PSH  A
11505  F287 CD 76           VMJ  ($76) ; ($76)($3B)
11506  F289 CD 70           VMJ  ($70) ; ($70)($38)
11507  F28B EB 7A 11 01     ORI  (ARY + $01),$01
11508  F28F             
11509  F28F             EXPONENT_19: ; $F28F
11510  F28F A4              LDA  UH
11511  F290 B7 07           CPI  A,$07
11512  F292 ED 7A 18 01     BII  (ARU),$01
11513  F296 8B 02           BZS EXPONENT_20 ; $F29A
11514  F298 B7 0D           CPI  A,$0D
11515  F29A             
11516  F29A             EXPONENT_20: ; $F29A
11517  F29A 81 02           BCR EXPONENT_21 ; $F29E
11518  F29C B5 FF           LDI  A,$FF
11519  F29E             
11520  F29E             EXPONENT_21: ; $F29E
11521  F29E DD              INC  A
11522  F29F AE 7A 08        STA  (ARZ)
11523  F2A2             
11524  F2A2             EXPONENT_22: ; $F2A2
11525  F2A2 4A 2F           LDI  XL,$2F
11526  F2A4 4D 0F           BII  (X),$0F
11527  F2A6 8B 27           BZS EXPONENT_24 ; $F2CF
11528  F2A8 4F FF           ADI  (X),$FF
11529  F2AA ED 7A 18 01     BII  (ARU),$01
11530  F2AE 8B 08           BZS EXPONENT_23 ; $F2B8
11531  F2B0 BE F7 25        SJP  (XFER_SM_ARY2ARZ)
11532  F2B3 BE F8 3C        SJP  (ARX_MINUS_ARV_17) ; $F83C
11533  F2B6 9E 16           BCH EXPONENT_22 ; $F2A2
11534  F2B8             
11535  F2B8             EXPONENT_23: ; $F2B8
11536  F2B8 CD 78           VMJ  ($78) ; ($78)($3C)
11537  F2BA EE              VEJ  (EE)
11538  F2BB A5 7A 08        LDA  (ARZ)
11539  F2BE 9B 1E           BZS EXPONENT_22 ; $F2A2
11540  F2C0 DF              DEC  A
11541  F2C1 4A 0F           LDI  XL,$0F
11542  F2C3 BE F8 05        SJP  (ARX_MINUS_ARV_8) ; $F805
11543  F2C6 4A 17           LDI  XL,$17
11544  F2C8 5A 0F           LDI  YL,$0F
11545  F2CA BE F7 E1        SJP  (ARX_MINUS_ARV_3) ; $F7E1
11546  F2CD 9E 2D           BCH EXPONENT_22 ; $F2A2
11547  F2CF             
11548  F2CF             EXPONENT_24: ; $F2CF
11549  F2CF FD 8A           POP  A
11550  F2D1 DF              DEC  A
11551  F2D2 81 0F           BCR EXPONENT_25 ; $F2E3
11552  F2D4 FD 62           DEC  UH
11553  F2D6 FD C8           PSH  A
11554  F2D8 BE F7 69        SJP  (ARW_SHR_4BITS)
11555  F2DB ED 7A 18 01     BII  (ARU),$01
11556  F2DF CB 74           VZS  ($74) ; ($74)($3A)
11557  F2E1 9E 54           BCH EXPONENT_19 ; $F28F
11558  F2E3             
11559  F2E3             EXPONENT_25: ; $F2E3
11560  F2E3 ED 7A 18 01     BII  (ARU),$01
11561  F2E7 99 EA           BZR EXPONENT_4 ; $F1FF
11562  F2E9 BA F4 32        JMP  BCMD_SIN_11 ; $F432
11563  F2EC             
11564  F2EC             EXPONENT_26: ; $F2EC
11565  F2EC BE F7 4F        SJP  (CLR_SM_ARW)
11566  F2EF CD 6A           VMJ  ($6A) ; ($6A)($35)
11567  F2F1 B5 00           LDI  A,$00
11568  F2F3 FD C8           PSH  A
11569  F2F5             
11570  F2F5             EXPONENT_27: ; $F2F5
11571  F2F5 A4              LDA  UH
11572  F2F6 B7 07           CPI  A,$07
11573  F2F8 ED 7A 18 01     BII  (ARU),$01
11574  F2FC 8B 02           BZS EXPONENT_28 ; $F300
11575  F2FE B7 0D           CPI  A,$0D
11576  F300             
11577  F300             EXPONENT_28: ; $F300
11578  F300 81 02           BCR EXPONENT_29 ; $F304
11579  F302 B5 FF           LDI  A,$FF
11580  F304             
11581  F304             EXPONENT_29: ; $F304
11582  F304 DD              INC  A
11583  F305 AE 7A 08        STA  (ARZ)
11584  F308 ED 7A 18 01     BII  (ARU),$01
11585  F30C 8B 05           BZS EXPONENT_31 ; $F313
11586  F30E 8E 16           BCH EXPONENT_33 ; $F326
11587  F310             
11588  F310             EXPONENT_30: ; $F310
11589  F310 BE F8 4D        SJP  (ARX_MINUS_ARV_19) ; $F84D
11590  F313             
11591  F313             EXPONENT_31: ; $F313
11592  F313 CD 78           VMJ  ($78) ; ($78)($3C)
11593  F315             
11594  F315             EXPONENT_32: ; $F315
11595  F315 CD 7A           VMJ  ($7A) ; ($7A)($3D)
11596  F317 81 12           BCR EXPONENT_34 ; $F32B
11597  F319 EF 7A 2F 01     ADI  (ARW + $07),$01
11598  F31D ED 7A 18 01     BII  (ARU),$01
11599  F321 9B 13           BZS EXPONENT_30 ; $F310
11600  F323 BE F8 3C        SJP  (ARX_MINUS_ARV_17) ; $F83C
11601  F326             
11602  F326             EXPONENT_33: ; $F326
11603  F326 BE F7 25        SJP  (XFER_SM_ARY2ARZ)
11604  F329 9E 16           BCH EXPONENT_32 ; $F315
11605  F32B             
11606  F32B             EXPONENT_34: ; $F32B
11607  F32B EE              VEJ  (EE)
11608  F32C FD 8A           POP  A
11609  F32E B7 0C           CPI  A,$0C
11610  F330 83 0B           BCS EXPONENT_35 ; $F33D
11611  F332 DD              INC  A
11612  F333 FD C8           PSH  A
11613  F335 FD 60           INC  UH
11614  F337 BE F7 94        SJP  (ARW_SHL_4BITS)
11615  F33A EA              VEJ  (EA)
11616  F33B 9E 48           BCH EXPONENT_27 ; $F2F5
11617  F33D             
11618  F33D             EXPONENT_35: ; $F33D
11619  F33D FD C8           PSH  A
11620  F33F CD 76           VMJ  ($76) ; ($76)($3B)
11621  F341             
11622  F341             EXPONENT_36: ; $F341
11623  F341 A4              LDA  UH
11624  F342 ED 7A 18 01     BII  (ARU),$01
11625  F346 8B 08           BZS EXPONENT_37 ; $F350
11626  F348 B7 0D           CPI  A,$0D
11627  F34A 81 0D           BCR EXPONENT_38 ; $F359
11628  F34C B5 0C           LDI  A,$0C
11629  F34E 8E 09           BCH EXPONENT_38 ; $F359
11630  F350             
11631  F350             EXPONENT_37: ; $F350
11632  F350 F9              REC
11633  F351 B3 0D           ADI  A,$0D
11634  F353 B7 14           CPI  A,$14
11635  F355 81 02           BCR EXPONENT_38 ; $F359
11636  F357 B5 13           LDI  A,$13
11637  F359             
11638  F359             EXPONENT_38: ; $F359
11639  F359 D9              SHL
11640  F35A D9              SHL
11641  F35B D9              SHL
11642  F35C BB 07           ORI  A,$07
11643  F35E FD C8           PSH  A
11644  F360 58 FC           LDI  YH,$FC
11645  F362             
11646  F362             EXPONENT_39: ; $F362
11647  F362 4A 2F           LDI  XL,$2F
11648  F364 FD 8A           POP  A
11649  F366 4D 0F           BII  (X),$0F
11650  F368 8B 09           BZS EXPONENT_40 ; $F373
11651  F36A 4F FF           ADI  (X),$FF
11652  F36C FD C8           PSH  A
11653  F36E 1A              STA  YL
11654  F36F CD 72           VMJ  ($72) ; ($72)($39)
11655  F371 9E 11           BCH EXPONENT_39 ; $F362
11656  F373             
11657  F373             EXPONENT_40: ; $F373
11658  F373 FD 8A           POP  A
11659  F375 DF              DEC  A
11660  F376 81 0B           BCR EXPONENT_41 ; $F383
11661  F378 FD C8           PSH  A
11662  F37A FD 62           DEC  UH
11663  F37C BE F7 69        SJP  (ARW_SHR_4BITS)
11664  F37F CD 74           VMJ  ($74) ; ($74)($3A)
11665  F381 9E 42           BCH EXPONENT_36 ; $F341
11666  F383             
11667  F383             EXPONENT_41: ; $F383
11668  F383 58 7A           LDI  YH,$7A
11669  F385 ED 7A 18 01     BII  (ARU),$01
11670  F389 8B 03           BZS EXPONENT_42 ; $F38E
11671  F38B BA F1 96        JMP  BCMD_LOG_4 ; $F196
11672  F38E             
11673  F38E             EXPONENT_42: ; $F38E
11674  F38E BA F4 F7        JMP  BCMD_ASN_6 ; $F4F7
11675  F391             
11676  F391             
11677  F391             
11678  F391             ;------------------------------------------------------------------------------
11679  F391             ; $F391 - Basic command COS
11680  F391             ;------------------------------------------------------------------------------
11681  F391             BCMD_COS: ; 
11682  F391 E9 7A 01 00     ANI  (ARX + $01),$00
11683  F395 B5 00           LDI  A,$00
11684  F397 AE 7A 18        STA  (ARU)
11685  F39A B5 01           LDI  A,$01
11686  F39C 8E 0B           BCH BCMD_SIN_2 ; $F3A9
11687  F39E             
11688  F39E             
11689  F39E             
11690  F39E             ;------------------------------------------------------------------------------
11691  F39E             ; $F39E - Basic command TAN
11692  F39E             ;------------------------------------------------------------------------------
11693  F39E             BCMD_TAN: ; 
11694  F39E B5 40           LDI  A,$40
11695  F3A0 8E 02           BCH BCMD_SIN_1 ; $F3A4
11696  F3A2             
11697  F3A2             
11698  F3A2             
11699  F3A2             ;------------------------------------------------------------------------------
11700  F3A2             ; $F3A2 - Basic command SIN
11701  F3A2             ;------------------------------------------------------------------------------
11702  F3A2             BCMD_SIN: ; 
11703  F3A2 B5 00           LDI  A,$00
11704  F3A4             
11705  F3A4             BCMD_SIN_1: ; $F3A4
11706  F3A4 AE 7A 18        STA  (ARU)
11707  F3A7 B5 00           LDI  A,$00
11708  F3A9             
11709  F3A9             BCMD_SIN_2: ; $F3A9
11710  F3A9 AE 7A 20        STA  (ARV)
11711  F3AC CD 54           VMJ  ($54) ; ($54)($2A)
11712  F3AE BE F8 5A        SJP  (ARX_MINUS_ARV_20) ; $F85A
11713  F3B1 81 16           BCR BCMD_SIN_4 ; $F3C9
11714  F3B3 CD 7E           VMJ  ($7E) ; ($7E)($3F)
11715  F3B5 83 D7           BCS BCMD_SIN_16 ; $F48E
11716  F3B7 BA EF 8A        JMP  OUTBUF_CLR_1 ; $EF8A
11717  F3BA             
11718  F3BA             BCMD_SIN_3: ; $F3BA
11719  F3BA 9C              DCA  (Y)
11720  F3BB 53              SDE  Y
11721  F3BC B5 00           LDI  A,$00
11722  F3BE 93 06           BCS BCMD_SIN_3 ; $F3BA
11723  F3C0 E9 7A 07 F0     ANI  (ARX + $07),$F0
11724  F3C4 BE F6 5D        SJP  (ARX_2_BCD_ABS)
11725  F3C7 83 C5           BCS BCMD_SIN_16 ; $F48E
11726  F3C9             
11727  F3C9             BCMD_SIN_4: ; $F3C9
11728  F3C9 CD 6C           VMJ  ($6C) ; ($6C)($36)
11729  F3CB FD C8           PSH  A
11730  F3CD 46              DEC  X
11731  F3CE 05              LDA  (X)
11732  F3CF BF 80           BII  A,$80
11733  F3D1 89 56           BZR BCMD_SIN_10 ; $F429
11734  F3D3 B7 0A           CPI  A,$0A
11735  F3D5 83 B5           BCS BCMD_SIN_15 ; $F48C
11736  F3D7 CD 70           VMJ  ($70) ; ($70)($38)
11737  F3D9 EB 7A 11 36     ORI  (ARY + $01),$36
11738  F3DD CD 74           VMJ  ($74) ; ($74)($3A)
11739  F3DF BE F7 71        SJP  (ARY_SHR_4BITS)
11740  F3E2             
11741  F3E2             BCMD_SIN_5: ; $F3E2
11742  F3E2 FD 60           INC  UH
11743  F3E4             
11744  F3E4             BCMD_SIN_6: ; $F3E4
11745  F3E4 CD 7A           VMJ  ($7A) ; ($7A)($3D)
11746  F3E6 93 06           BCS BCMD_SIN_5 ; $F3E2
11747  F3E8 EE              VEJ  (EE)
11748  F3E9 ED 7A 11 0F     BII  (ARY + $01),$0F
11749  F3ED 8B 13           BZS BCMD_SIN_8 ; $F402
11750  F3EF EF 7A 00 FF     ADI  (ARX),$FF
11751  F3F3 81 03           BCR BCMD_SIN_7 ; $F3F8
11752  F3F5 EA              VEJ  (EA)
11753  F3F6 9E 16           BCH BCMD_SIN_5 ; $F3E2
11754  F3F8             
11755  F3F8             BCMD_SIN_7: ; $F3F8
11756  F3F8 CD 70           VMJ  ($70) ; ($70)($38)
11757  F3FA EB 7A 12 90     ORI  (ARY + $02),$90
11758  F3FE 68 00           LDI  UH,$00
11759  F400 9E 1E           BCH BCMD_SIN_6 ; $F3E4
11760  F402             
11761  F402             BCMD_SIN_8: ; $F402
11762  F402 EA              VEJ  (EA)
11763  F403 E9 7A 00 00     ANI  (ARX),$00
11764  F407 A4              LDA  UH
11765  F408 4A 20           LDI  XL,$20
11766  F40A F9              REC
11767  F40B 03              ADC  (X)
11768  F40C 0E              STA  (X)
11769  F40D F1              AEX
11770  F40E 0B              ORA  (X)
11771  F40F 0E              STA  (X)
11772  F410 CD 70           VMJ  ($70) ; ($70)($38)
11773  F412 4A 11           LDI  XL,$11
11774  F414 B5 04           LDI  A,$04
11775  F416 41              SIN  X
11776  F417 4B 50           ORI  (X),$50
11777  F419 CD 7A           VMJ  ($7A) ; ($7A)($3D)
11778  F41B 81 07           BCR BCMD_SIN_9 ; $F424
11779  F41D BE F7 EB        SJP  (ARX_MINUS_ARV_5) ; $F7EB
11780  F420 EF 7A 20 01     ADI  (ARV),$01
11781  F424             
11782  F424             BCMD_SIN_9: ; $F424
11783  F424 EE              VEJ  (EE)
11784  F425 E8              VEJ  (E8)
11785  F426 4A 00           LDI  XL,$00
11786  F428 05              LDA  (X)
11787  F429             
11788  F429             BCMD_SIN_10: ; $F429
11789  F429 DF              DEC  A
11790  F42A 0E              STA  (X)
11791  F42B BD FF           EAI  $FF
11792  F42D DD              INC  A
11793  F42E 28              STA  UH
11794  F42F BA F2 33        JMP  EXPONENT_12 ; $F233
11795  F432             
11796  F432             BCMD_SIN_11: ; $F432
11797  F432 E9 7A 10 00     ANI  (ARY),$00
11798  F436 E8              VEJ  (E8)
11799  F437 CD 66           VMJ  ($66) ; ($66)($33)
11800  F439 E8              VEJ  (E8)
11801  F43A CD 66           VMJ  ($66) ; ($66)($33)
11802  F43C CD 58           VMJ  ($58) ; ($58)($2C)
11803  F43E FD 8A           POP  A
11804  F440 AE 7A 01        STA  (ARX + $01)
11805  F443 ED 7A 18 40     BII  (ARU),$40
11806  F447 89 37           BZR BCMD_SIN_14 ; $F480
11807  F449 CD 80           VMJ  ($80) ; ($80)($40)
11808  F44B BE F0 19        SJP  (SQUARE)
11809  F44E 83 DE           BCS BCMD_ASN_10 ; $F52E
11810  F450 CD 6A           VMJ  ($6A) ; ($6A)($35)
11811  F452 F0              VEJ  (F0)
11812  F453 83 D9           BCS BCMD_ASN_10 ; $F52E
11813  F455 BE F0 E9        SJP  (SQR_ROOT)
11814  F458 83 D4           BCS BCMD_ASN_10 ; $F52E
11815  F45A CD 68           VMJ  ($68) ; ($68)($34)
11816  F45C CD 7C           VMJ  ($7C) ; ($7C)($3E)
11817  F45E ED 7A 20 01     BII  (ARV),$01
11818  F462 8B 02           BZS $F466
11819  F464 CD 6A           VMJ  ($6A) ; ($6A)($35)
11820  F466 CD 66           VMJ  ($66) ; ($66)($33)
11821  F468 CD 58           VMJ  ($58) ; ($58)($2C)
11822  F46A FD 8A           POP  A
11823  F46C AE 7A 01        STA  (ARX + $01)
11824  F46F FD 8A           POP  A
11825  F471 ED 7A 20 20     BII  (ARV),$20
11826  F475             
11827  F475             BCMD_SIN_12: ; $F475
11828  F475 83 B7           BCS BCMD_ASN_10 ; $F52E
11829  F477 8B 04           BZS BCMD_SIN_13 ; $F47D
11830  F479 EF 7A 01 80     ADI  (ARX + $01),$80
11831  F47D             
11832  F47D             BCMD_SIN_13: ; $F47D
11833  F47D BA F6 5D        JMP  ARX_2_BCD_ABS ; $F65D
11834  F480             
11835  F480             BCMD_SIN_14: ; $F480
11836  F480 ED 7A 20 01     BII  (ARV),$01
11837  F484 C9 6E           VZR  ($6E) ; ($6E)($37)
11838  F486 ED 7A 20 10     BII  (ARV),$10
11839  F48A 9E 17           BCH BCMD_SIN_12 ; $F475
11840  F48C             
11841  F48C             BCMD_SIN_15: ; $F48C
11842  F48C FD 8A           POP  A
11843  F48E             
11844  F48E             BCMD_SIN_16: ; $F48E
11845  F48E 68 27           LDI  UH,$27
11846  F490 FB              SEC
11847  F491 9A              RTN
11848  F492             
11849  F492             
11850  F492             
11851  F492             ;------------------------------------------------------------------------------
11852  F492             ; $F492 - Basic command ACS
11853  F492             ;------------------------------------------------------------------------------
11854  F492             BCMD_ACS: ; 
11855  F492 B5 20           LDI  A,$20
11856  F494 8E 06           BCH BCMD_ASN_1 ; $F49C
11857  F496             
11858  F496             
11859  F496             
11860  F496             ;------------------------------------------------------------------------------
11861  F496             ; $F496 - Basic command ATN
11862  F496             ;------------------------------------------------------------------------------
11863  F496             BCMD_ATN: ; 
11864  F496 B5 40           LDI  A,$40
11865  F498 8E 02           BCH BCMD_ASN_1 ; $F49C
11866  F49A             
11867  F49A             
11868  F49A             
11869  F49A             ;------------------------------------------------------------------------------
11870  F49A             ; $F49A - Basic command ASN
11871  F49A             ;------------------------------------------------------------------------------
11872  F49A             BCMD_ASN: ; 
11873  F49A B5 00           LDI  A,$00
11874  F49C             
11875  F49C             BCMD_ASN_1: ; $F49C
11876  F49C AE 7A 18        STA  (ARU)
11877  F49F CD 54           VMJ  ($54) ; ($54)($2A)
11878  F4A1 CD 6C           VMJ  ($6C) ; ($6C)($36)
11879  F4A3 FD C8           PSH  A
11880  F4A5 ED 7A 18 40     BII  (ARU),$40
11881  F4A9 89 27           BZR BCMD_ASN_3 ; $F4D2
11882  F4AB CD 80           VMJ  ($80) ; ($80)($40)
11883  F4AD BE F0 19        SJP  (SQUARE)
11884  F4B0 93 26           BCS BCMD_SIN_15 ; $F48C
11885  F4B2 CD 6A           VMJ  ($6A) ; ($6A)($35)
11886  F4B4 EF 7A 01 80     ADI  (ARX + $01),$80
11887  F4B8 F0              VEJ  (F0)
11888  F4B9 93 2F           BCS BCMD_SIN_15 ; $F48C
11889  F4BB BE F0 E9        SJP  (SQR_ROOT)
11890  F4BE 93 34           BCS BCMD_SIN_15 ; $F48C
11891  F4C0 CD 68           VMJ  ($68) ; ($68)($34)
11892  F4C2 ED 7A 18 20     BII  (ARU),$20
11893  F4C6 89 02           BZR BCMD_ASN_2 ; $F4CA
11894  F4C8 CD 66           VMJ  ($66) ; ($66)($33)
11895  F4CA             
11896  F4CA             BCMD_ASN_2: ; $F4CA
11897  F4CA ED 7A 12 F0     BII  (ARY + $02),$F0
11898  F4CE 8B 20           BZS BCMD_ASN_5 ; $F4F0
11899  F4D0 CD 58           VMJ  ($58) ; ($58)($2C)
11900  F4D2             
11901  F4D2             BCMD_ASN_3: ; $F4D2
11902  F4D2 ED 7A 02 F0     BII  (ARX + $02),$F0
11903  F4D6 8B 36           BZS BCMD_ASN_7 ; $F50E
11904  F4D8 ED 7A 00 80     BII  (ARX),$80
11905  F4DC 89 06           BZR BCMD_ASN_4 ; $F4E4
11906  F4DE CD 6E           VMJ  ($6E) ; ($6E)($37)
11907  F4E0 EF 7A 18 80     ADI  (ARU),$80
11908  F4E4             
11909  F4E4             BCMD_ASN_4: ; $F4E4
11910  F4E4 93 5A           BCS BCMD_SIN_15 ; $F48C
11911  F4E6 A5 7A 00        LDA  (ARX)
11912  F4E9 BD FF           EAI  $FF
11913  F4EB DD              INC  A
11914  F4EC 28              STA  UH
11915  F4ED BA F2 EC        JMP EXPONENT_26 ; $F2EC
11916  F4F0             
11917  F4F0             BCMD_ASN_5: ; $F4F0
11918  F4F0 BE F8 83        SJP  (ARX_MINUS_ARV_28) ; $F883
11919  F4F3 CD 56           VMJ  ($56) ; ($56)($2B)
11920  F4F5 8E 17           BCH BCMD_ASN_7 ; $F50E
11921  F4F7             
11922  F4F7             BCMD_ASN_6: ; $F4F7
11923  F4F7 EF 7A 00 01     ADI  (ARX),$01
11924  F4FB E8              VEJ  (E8)
11925  F4FC 83 2E           BCS BCMD_ASN_9 ; $F52C
11926  F4FE ED 7A 18 80     BII  (ARU),$80
11927  F502 8B 0A           BZS BCMD_ASN_7 ; $F50E
11928  F504 BE F8 83        SJP  (ARX_MINUS_ARV_28) ; $F883
11929  F507 EF 7A 01 80     ADI  (ARX + $01),$80
11930  F50B F0              VEJ  (F0)
11931  F50C 83 1E           BCS BCMD_ASN_9 ; $F52C
11932  F50E             
11933  F50E             BCMD_ASN_7: ; $F50E
11934  F50E FD 8A           POP  A
11935  F510 AE 7A 01        STA  (ARX + $01)
11936  F513 D9              SHL
11937  F514 81 0C           BCR BCMD_ASN_8 ; $F522
11938  F516 ED 7A 18 20     BII  (ARU),$20
11939  F51A 8B 06           BZS BCMD_ASN_8 ; $F522
11940  F51C BE F8 87        SJP  (ARX_MINUS_ARV_29) ; $F887
11941  F51F F0              VEJ  (F0)
11942  F520 83 0C           BCS BCMD_ASN_10 ; $F52E
11943  F522             
11944  F522             BCMD_ASN_8: ; $F522
11945  F522 BE F8 5A        SJP  (ARX_MINUS_ARV_20) ; $F85A
11946  F525 81 95           BCR BCMD_PI_1 ; $F5BC
11947  F527 CD 58           VMJ  ($58) ; ($58)($2C)
11948  F529 83 03           BCS BCMD_ASN_10 ; $F52E
11949  F52B 9A              RTN
11950  F52C             
11951  F52C             BCMD_ASN_9: ; $F52C
11952  F52C FD 8A           POP  A
11953  F52E             
11954  F52E             BCMD_ASN_10: ; $F52E
11955  F52E BA F6 98        JMP  ARX_2_BCD_ABS_8 ; $F698
11956  F531             
11957  F531             
11958  F531             
11959  F531             ;------------------------------------------------------------------------------
11960  F531             ; $F531 - Basic command DEG
11961  F531             ;------------------------------------------------------------------------------
11962  F531             BCMD_DEG: ; 
11963  F531 CD 54           VMJ  ($54) ; ($54)($2A)
11964  F533 CD 6C           VMJ  ($6C) ; ($6C)($36)
11965  F535 FD C8           PSH  A
11966  F537 BE F6 A9        SJP  (RND_2DEC_PLACES) ; $F6A9
11967  F53A CD 64           VMJ  ($64) ; ($64)($32)
11968  F53C CD 56           VMJ  ($56) ; ($56)($2B)
11969  F53E E8              VEJ  (E8)
11970  F53F CD 62           VMJ  ($62) ; ($62)($31)
11971  F541 CD 58           VMJ  ($58) ; ($58)($2C)
11972  F543 93 19           BCS BCMD_ASN_9 ; $F52C
11973  F545 CD 64           VMJ  ($64) ; ($64)($32)
11974  F547 E8              VEJ  (E8)
11975  F548 CD 60           VMJ  ($60) ; ($60)($30)
11976  F54A CD 64           VMJ  ($64) ; ($64)($32)
11977  F54C CD 66           VMJ  ($66) ; ($66)($33)
11978  F54E E8              VEJ  (E8)
11979  F54F F0              VEJ  (F0)
11980  F550 93 26           BCS BCMD_ASN_9 ; $F52C
11981  F552 CD 62           VMJ  ($62) ; ($62)($31)
11982  F554 CD 58           VMJ  ($58) ; ($58)($2C)
11983  F556 93 2C           BCS BCMD_ASN_9 ; $F52C
11984  F558 E6              VEJ  (E6)
11985  F559 CD 64           VMJ  ($64) ; ($64)($32)
11986  F55B E8              VEJ  (E8)
11987  F55C F0              VEJ  (F0)
11988  F55D 93 33           BCS BCMD_ASN_9 ; $F52C
11989  F55F FD 8A           POP  A
11990  F561 BA F6 63        JMP  ARX_2_BCD_ABS_2 ; $F663
11991  F564             
11992  F564             
11993  F564             
11994  F564             ;------------------------------------------------------------------------------
11995  F564             ; $F564 - Basic command DMS
11996  F564             ;------------------------------------------------------------------------------
11997  F564             BCMD_DMS: ; 
11998  F564 CD 54           VMJ  ($54) ; ($54)($2A)
11999  F566 CD 6C           VMJ  ($6C) ; ($6C)($36)
12000  F568 FD C8           PSH  A
12001  F56A CD 60           VMJ  ($60) ; ($60)($30)
12002  F56C CD 64           VMJ  ($64) ; ($64)($32)
12003  F56E CD 56           VMJ  ($56) ; ($56)($2B)
12004  F570 E8              VEJ  (E8)
12005  F571 CD 62           VMJ  ($62) ; ($62)($31)
12006  F573 CD 7E           VMJ  ($7E) ; ($7E)($3F)
12007  F575 E6              VEJ  (E6)
12008  F576 CD 64           VMJ  ($64) ; ($64)($32)
12009  F578 E8              VEJ  (E8)
12010  F579 F0              VEJ  (F0)
12011  F57A BE F6 A9        SJP  (RND_2DEC_PLACES) ; $F6A9
12012  F57D CD 80           VMJ  ($80) ; ($80)($40)
12013  F57F CD 56           VMJ  ($56) ; ($56)($2B)
12014  F581 E8              VEJ  (E8)
12015  F582 CD 62           VMJ  ($62) ; ($62)($31)
12016  F584 CD 7E           VMJ  ($7E) ; ($7E)($3F)
12017  F586 BE F6 3C        SJP  (RAND_GEN_7)
12018  F589 E6              VEJ  (E6)
12019  F58A CD 64           VMJ  ($64) ; ($64)($32)
12020  F58C E8              VEJ  (E8)
12021  F58D F0              VEJ  (F0)
12022  F58E 93 64           BCS BCMD_ASN_9 ; $F52C
12023  F590 FD 8A           POP  A
12024  F592 CD 52           VMJ  ($52) ; ($52)($29
12025  F594 BA F6 3C        JMP  RAND_GEN_7 ; $F63C
12026  F597             
12027  F597             
12028  F597             
12029  F597             ;------------------------------------------------------------------------------
12030  F597             ; Basic command ABS
12031  F597             ;------------------------------------------------------------------------------
12032  F597             BCMD_ABS: ; $F597
12033  F597 E9 7A 01 00     ANI  (ARX + $01),$00
12034  F59B 8E 1F           BCH BCMD_PI_1 ; $F5BC
12035  F59D             
12036  F59D             
12037  F59D             
12038  F59D             ;------------------------------------------------------------------------------
12039  F59D             ; $F59D - Basic command SGN
12040  F59D             ;------------------------------------------------------------------------------
12041  F59D             BCMD_SGN:
12042  F59D 48 7A           LDI  XH,$7A
12043  F59F 4A 01           LDI  XL,$01
12044  F5A1 45              LIN  X
12045  F5A2 28              STA  UH
12046  F5A3 05              LDA  (X)
12047  F5A4 FD C8           PSH  A
12048  F5A6 EC              VEJ  (EC)
12049  F5A7 FD 8A           POP  A
12050  F5A9 BF F0           BII  A,$F0
12051  F5AB 9B 12           BZS $F59B
12052  F5AD A4              LDA  UH
12053  F5AE 4A 01           LDI  XL,$01
12054  F5B0 41              SIN  X
12055  F5B1 4B 10           ORI  (X),$10
12056  F5B3 9E 1A           BCH $F59B
12057  F5B5             
12058  F5B5             
12059  F5B5             
12060  F5B5             ;------------------------------------------------------------------------------
12061  F5B5             ; $F5B5 - Basic command PI, Loads PI to AR-Y.
12062  F5B5             ;------------------------------------------------------------------------------
12063  F5B5             BCMD_PI: ; 
12064  F5B5 CD 54           VMJ  ($54) ; ($54)($2A)
12065  F5B7 BE F8 75        SJP  (ARX_MINUS_ARV_25) ; $F875
12066  F5BA CD 56           VMJ  ($56) ; ($56)($2B)
12067  F5BC             
12068  F5BC             BCMD_PI_1: ; $F5BC
12069  F5BC 8E E7           BCH ARX2BCD2_9 ; $F6A5
12070  F5BE             
12071  F5BE             
12072  F5BE             
12073  F5BE             ;------------------------------------------------------------------------------
12074  F5BE             ; $F5BE - Basic command INT
12075  F5BE             ;------------------------------------------------------------------------------
12076  F5BE             BCMD_INT: ; 
12077  F5BE CD 54           VMJ  ($54) ; ($54)($2A)
12078  F5C0 CD 6C           VMJ  ($6C) ; ($6C)($36)
12079  F5C2 FD C8           PSH  A
12080  F5C4 CD 60           VMJ  ($60) ; ($60)($30)
12081  F5C6 FD 8A           POP  A
12082  F5C8 8B 0B           BZS BCMD_INT_3 ; $F5D5
12083  F5CA 4A 11           LDI  XL,$11
12084  F5CC 6A 06           LDI  UL,$06
12085  F5CE             
12086  F5CE             BCMD_INT_1: ; $F5CE
12087  F5CE 45              LIN  X
12088  F5CF 89 07           BZR BCMD_INT_4 ; $F5D8
12089  F5D1 88 05           LOP  UL,BCMD_INT_1 ; $F5CE
12090  F5D3             
12091  F5D3             BCMD_INT_2: ; $F5D3
12092  F5D3 B5 80           LDI  A,$80
12093  F5D5             
12094  F5D5             BCMD_INT_3: ; $F5D5
12095  F5D5 CD 52           VMJ  ($52) ; ($52)($29
12096  F5D7 9A              RTN
12097  F5D8             
12098  F5D8             BCMD_INT_4: ; $F5D8
12099  F5D8 CD 6A           VMJ  ($6A) ; ($6A)($35)
12100  F5DA F0              VEJ  (F0)
12101  F5DB 9E 0A           BCH BCMD_INT_2 ; $F5D3
12102  F5DD             
12103  F5DD             
12104  F5DD             
12105  F5DD             ;------------------------------------------------------------------------------
12106  F5DD             ; $F5DD - Basic command RND
12107  F5DD             ;------------------------------------------------------------------------------
12108  F5DD             BCMD_RND:
12109  F5DD CD 54           VMJ  ($54) ; ($54)($2A)
12110  F5DF ED 7A 01 80     BII  (ARX + $01),$80
12111  F5E3 89 10           BZR RAND_GEN_2 ; $F5F5
12112  F5E5 ED 7A 00 80     BII  (ARX),$80
12113  F5E9 8B 10           BZS RAND_GEN_3 ; $F5FB
12114  F5EB             
12115  F5EB             
12116  F5EB             
12117  F5EB             ;------------------------------------------------------------------------------
12118  F5EB             ; $F5EB - Create random number in AR-X
12119  F5EB             ;------------------------------------------------------------------------------
12120  F5EB             RAND_GEN: ; 
12121  F5EB CD 5E           VMJ  ($5E) ; ($5E)($2F)
12122  F5ED             
12123  F5ED             RAND_GEN_1: ; $F5ED
12124  F5ED CD 5C           VMJ  ($5C) ; ($5C)($2E)
12125  F5EF EB 7A 00 FF     ORI  (ARX),$FF
12126  F5F3 E8              VEJ  (E8)
12127  F5F4 9A              RTN
12128  F5F5             
12129  F5F5             RAND_GEN_2: ; $F5F5
12130  F5F5 E9 7A 01 00     ANI  (ARX + $01),$00
12131  F5F9 9E 0E           BCH RAND_GEN_1 ; $F5ED
12132  F5FB             
12133  F5FB             RAND_GEN_3: ; $F5FB
12134  F5FB ED 7A 02 F0     BII  (ARX + $02),$F0
12135  F5FF 9B 16           BZS RAND_GEN
12136  F601 CD 80           VMJ  ($80) ; ($80)($40)
12137  F603 BE F5 EB        SJP  (RAND_GEN)
12138  F606 CD 68           VMJ  ($68) ; ($68)($34)
12139  F608 A5 7A 10        LDA  (ARY)
12140  F60B B7 0A           CPI  A,$0A
12141  F60D 83 09           BCS RAND_GEN_4 ; $F618
12142  F60F CD 7E           VMJ  ($7E) ; ($7E)($3F)
12143  F611 CD 60           VMJ  ($60) ; ($60)($30)
12144  F613 E8              VEJ  (E8)
12145  F614 CD 6A           VMJ  ($6A) ; ($6A)($35)
12146  F616 F0              VEJ  (F0)
12147  F617 9A              RTN
12148  F618             
12149  F618             RAND_GEN_4: ; $F618
12150  F618 BA F1 5D        JMP  SQR_ROOT_12 ; $F15D
12151  F61B             
12152  F61B             
12153  F61B             
12154  F61B             ;------------------------------------------------------------------------------
12155  F61B             ; $F61B (5C) - Generates RANDOM number and updates RND pointer
12156  F61B             ;------------------------------------------------------------------------------
12157  F61B             RAND_GEN_5: 
12158  F61B CD 82           VMJ  ($82) ; ($82)($41)
12159  F61D EE              VEJ  (EE)
12160  F61E EA              VEJ  (EA)
12161  F61F EE              VEJ  (EE)
12162  F620 EE              VEJ  (EE)
12163  F621 4A 07           LDI  XL,$07
12164  F623 5A 17           LDI  YL,$17
12165  F625 6A 05           LDI  UL,$05
12166  F627 FB              SEC
12167  F628             
12168  F628             RAND_GEN_6: ; $F628
12169  F628 57              LDE  Y
12170  F629 8C              DCA  (X)
12171  F62A 43              SDE  X
12172  F62B 88 05           LOP  UL,RAND_GEN_6 ; $F628
12173  F62D E9 7A 01 00     ANI  (ARX + $01),$00
12174  F631 58 7B           LDI  YH,$7B
12175  F633 5A 01           LDI  YL,$01
12176  F635 4A 01           LDI  XL,$01
12177  F637 BE F7 33        SJP  (XREG_2_YREG) ; $F733
12178  F63A 58 7A           LDI  YH,$7A
12179  F63C             
12180  F63C             
12181  F63C             ; $F63C Sets the 11th and 12th digit (byte 7) of the result to 00
12182  F63C             RAND_GEN_7: ; 
12183  F63C E9 7A 07 00     ANI  (ARX + $07),$00
12184  F640 9A              RTN
12185  F641             
12186  F641             
12187  F641             
12188  F641             ;------------------------------------------------------------------------------
12189  F641             ; $F641 - Basic command RANDOM
12190  F641             ;------------------------------------------------------------------------------
12191  F641             BCMD_RANDOM: ; 
12192  F641 FD 98           PSH  Y
12193  F643 CD 54           VMJ  ($54) ; ($54)($2A)
12194  F645 BE F7 53        SJP  (CLR_SM_ARX)
12195  F648 BE E5 B4        SJP  (TIME2ARX)
12196  F64B A5 7A 06        LDA  (ARX + $06)
12197  F64E B9 77           ANI  A,$77
12198  F650 BB 20           ORI  A,$20
12199  F652 AE 7A 12        STA  (ARY + $02)
12200  F655 CD 5E           VMJ  ($5E) ; ($5E)($2F)
12201  F657 EE              VEJ  (EE)
12202  F658 CD 5C           VMJ  ($5C) ; ($5C)($2E)
12203  F65A FD 1A           POP  Y
12204  F65C E2              VEJ  (E2)
12205  F65D             
12206  F65D             
12207  F65D             
12208  F65D             ;------------------------------------------------------------------------------
12209  F65D             ; $F65D - Converts AR-X into BCD form. AR-X to A. (absolute value).
12210  F65D             ;------------------------------------------------------------------------------
12211  F65D             ARX_2_BCD_ABS: 
12212  F65D CD 6C           VMJ  ($6C) ; ($6C)($36)
12213  F65F 8E 02           BCH ARX_2_BCD_ABS_2
12214  F661             
12215  F661             ;------------------------------------------------------------------------------
12216  F661             ; (E8) $F661 Converts AR-X to BCD form. Value already in A. (absolute value) 
12217  F661             ; Converts AR-X into BCD format, whereby the absolute value (positive number) is formed.  
12218  F661             ;------------------------------------------------------------------------------    
12219  F661             ARX_2_BCD_ABS_1:
12220  F661 B5 00          LDI  A,$00
12221  F663             
12222  F663             ;------------------------------------------------------------------------------ 
12223  F663             ; (52) $F663 Converts AR-X to BCD form
12224  F663             ; Converts the result in the AR-X into the correct BCD format. With overflow 
12225  F663             ; C=1. AR-X is set to 0 if below the permissible value range.
12226  F663             ;------------------------------------------------------------------------------ 
12227  F663             ARX_2_BCD_ABS_2: ; $F663
12228  F663 FD C8           PSH  A
12229  F665 4A 01           LDI  XL,$01
12230  F667 6A 06           LDI  UL,$06
12231  F669             
12232  F669             ARX_2_BCD_ABS_3: ; $F669
12233  F669 45              LIN  X
12234  F66A 89 04           BZR ARX_2_BCD_ABS_4 ; $F670
12235  F66C 88 05           LOP  UL,ARX_2_BCD_ABS_3 ; F669
12236  F66E 8E 32           BCH ARX_2_BCD_ABS_10 ; $F6A2
12237  F670             
12238  F670             ARX_2_BCD_ABS_4: ; $F670
12239  F670 4A 01           LDI  XL,$01
12240  F672 47              LDE  X
12241  F673 8B 06           BZS ARX_2_BCD_ABS_5 ; $F67B
12242  F675 4F 01           ADI  (X),$01
12243  F677 CD 74           VMJ  ($74) ; ($74)($3A)
12244  F679 9E 0B           BCH ARX_2_BCD_ABS_4 ; $F670
12245  F67B             
12246  F67B             ARX_2_BCD_ABS_5: ; $F67B
12247  F67B ED 7A 02 F0     BII  (ARX + $02),$F0
12248  F67F 89 07           BZR ARX_2_BCD_ABS_6 ; $F688
12249  F681 EF 7A 00 FF     ADI  (ARX),$FF
12250  F685 EA              VEJ  (EA)
12251  F686 9E 0D           BCH ARX_2_BCD_ABS_5 ; $F67B
12252  F688             
12253  F688             ARX_2_BCD_ABS_6: ; $F688
12254  F688 A5 7A 00        LDA  (ARX)
12255  F68B BF 80           BII  A,$80
12256  F68D 89 0D           BZR ARX_2_BCD_ABS_9 ; $F69C
12257  F68F B7 64           CPI  A,$64
12258  F691             
12259  F691             ARX_2_BCD_ABS_7: ; $F691
12260  F691 FD 8A           POP  A
12261  F693 AE 7A 01        STA  (ARX + $01)
12262  F696 81 0D           BCR ARX2BCD2_9 ; $F6A5
12263  F698             
12264  F698             ARX_2_BCD_ABS_8: ; $F698
12265  F698 68 25           LDI  UH,$25
12266  F69A FB              SEC
12267  F69B 9A              RTN
12268  F69C             
12269  F69C             ARX_2_BCD_ABS_9: ; $F69C
12270  F69C BD FF           EAI  $FF
12271  F69E B7 63           CPI  A,$63
12272  F6A0 91 11           BCR ARX_2_BCD_ABS_7 ; $F691
12273  F6A2             
12274  F6A2             ARX_2_BCD_ABS_10: ; $F698
12275  F6A2 EC              VEJ  (EC)
12276  F6A3 FD 8A           POP  A
12277  F6A5             
12278  F6A5             ARX2BCD2_9: ; $F6A5
12279  F6A5 68 00           LDI  UH,$00
12280  F6A7 F9              REC
12281  F6A8 9A              RTN
12282  F6A9             
12283  F6A9             
12284  F6A9             
12285  F6A9             ;------------------------------------------------------------------------------ 
12286  F6A9             ; $F6A9 - Limit result to 2 decimal places
12287  F6A9             ;------------------------------------------------------------------------------ 
12288  F6A9             RND_2DEC_PLACES: ; 
12289  F6A9 BE F7 53        SJP  (CLR_SM_ARX)
12290  F6AC 4A 00           LDI  XL,$00
12291  F6AE 05              LDA  (X)
12292  F6AF F9              REC
12293  F6B0 B3 02           ADI  A,$02
12294  F6B2 8E 06           BCH XXFER_DEC_ARX2ARY_1 ; $F6BA
12295  F6B4             
12296  F6B4             
12297  F6B4             
12298  F6B4             ;------------------------------------------------------------------------------ 
12299  F6B4             ; $F6B4 - Transfers decimal places from AR-X to AR-Y, whereby their position 
12300  F6B4             ;         from AR-X is retained.
12301  F6B4             ;------------------------------------------------------------------------------ 
12302  F6B4             XFER_DEC_ARX2ARY: ; 
12303  F6B4 BE F7 53        SJP  (CLR_SM_ARX)
12304  F6B7 4A 00           LDI  XL,$00
12305  F6B9 05              LDA  (X)
12306  F6BA             
12307  F6BA             XXFER_DEC_ARX2ARY_1: ; $F6BA
12308  F6BA BF 80           BII  A,$80
12309  F6BC 89 1D           BZR XXFER_DEC_ARX2ARY_6 ; $F6DB
12310  F6BE B7 0B           CPI  A,$0B
12311  F6C0 83 18           BCS XXFER_DEC_ARX2ARY_5 ; $F6DA
12312  F6C2 B3 05           ADI  A,$05
12313  F6C4             
12314  F6C4             XXFER_DEC_ARX2ARY_2: ; $F6C4
12315  F6C4 D5              SHR
12316  F6C5 0A              STA  XL
12317  F6C6 BB 10           ORI  A,$10
12318  F6C8 1A              STA  YL
12319  F6C9 83 14           BCS XXFER_DEC_ARX2ARY_7 ; $F6DF
12320  F6CB             
12321  F6CB             XXFER_DEC_ARX2ARY_3: ; $F6CB
12322  F6CB 05              LDA  (X)
12323  F6CC 49 00           ANI  (X),$00
12324  F6CE             
12325  F6CE             XXFER_DEC_ARX2ARY_4: ; $F6CE
12326  F6CE 51              SIN  Y
12327  F6CF 40              INC  XL
12328  F6D0 4E 08           CPI  XL,$08
12329  F6D2 91 09           BCR XXFER_DEC_ARX2ARY_3 ; $F6CB
12330  F6D4 A5 7A 00        LDA  (ARX)
12331  F6D7 AE 7A 10        STA  (ARY)
12332  F6DA             
12333  F6DA             XXFER_DEC_ARX2ARY_5: ; $F6DA
12334  F6DA 9A              RTN
12335  F6DB             
12336  F6DB             XXFER_DEC_ARX2ARY_6: ; $F6DB
12337  F6DB B5 04           LDI  A,$04
12338  F6DD 9E 1B           BCH XXFER_DEC_ARX2ARY_2 ; $F6C4
12339  F6DF             
12340  F6DF             XXFER_DEC_ARX2ARY_7: ; $F6DF
12341  F6DF 05              LDA  (X)
12342  F6E0 49 F0           ANI  (X),$F0
12343  F6E2 B9 0F           ANI  A,$0F
12344  F6E4 9E 18           BCH XXFER_DEC_ARX2ARY_4 ; $F6CE
12345  F6E6             
12346  F6E6             
12347  F6E6             
12348  F6E6             ;------------------------------------------------------------------------------
12349  F6E6             ; (7C) $F6E6 - Determines the sign of the result and puts it on the stack
12350  F6E6             ; Sign test. Put the result of a sign combination (AR-X and AR-Y) on the stack.
12351  F6E6             ; Ditto for sign of AR-Y. For further calculations set AR to 00.
12352  F6E6             ;------------------------------------------------------------------------------
12353  F6E6             SIGN_TEST: ; 
12354  F6E6 FD 2A           POP  U
12355  F6E8 4A 01           LDI  XL,$01
12356  F6EA 5A 11           LDI  YL,$11
12357  F6EC 15              LDA  (Y)
12358  F6ED 59 00           ANI  (Y),$00
12359  F6EF FD C8           PSH  A
12360  F6F1 0D              EOR  (X)
12361  F6F2 49 00           ANI  (X),$00
12362  F6F4 FD C8           PSH  A
12363  F6F6 46              DEC  X
12364  F6F7 56              DEC  Y
12365  F6F8 FD A8           PSH  U
12366  F6FA 9A              RTN
12367  F6FB             
12368  F6FB             
12369  F6FB             
12370  F6FB             ;------------------------------------------------------------------------------
12371  F6FB             ; (6C) $F6FB - Loads signs from AR-X into Accumulator, clears signs from AR-X.
12372  F6FB             ;------------------------------------------------------------------------------
12373  F6FB             LDA_SGN_ARX: ; 
12374  F6FB 4A 01           LDI  XL,$01
12375  F6FD 05              LDA  (X)
12376  F6FE 49 00           ANI  (X),$00
12377  F700 9A              RTN
12378  F701             
12379  F701             
12380  F701             
12381  F701             ;------------------------------------------------------------------------------
12382  F701             ; $F701 - Transfers AR-Y to AR-S
12383  F701             ;------------------------------------------------------------------------------
12384  F701             XFER_ARY_2_ARS:  ; 
12385  F701 4A 10           LDI  XL,$10
12386  F703 5A 30           LDI  YL,$30
12387  F705 8E 3A           BCH XFER_ARY_2_ARX_2 ; $F741
12388  F707             
12389  F707             
12390  F707             
12391  F707             ;------------------------------------------------------------------------------
12392  F707             ; $F707 (80) - Transfers AR-X to AR-S
12393  F707             ;------------------------------------------------------------------------------
12394  F707             XFER_ARX_2_ARS:  ; 
12395  F707 CD 54           VMJ  ($54) ; ($54)($2A)
12396  F709 5A 30           LDI  YL,$30
12397  F70B 8E 04           BCH XFER_ARX_2_ARY_1 ; $F711
12398  F70D             
12399  F70D             
12400  F70D             
12401  F70D             ;------------------------------------------------------------------------------
12402  F70D             ; (E6) $F70D - Transfers AR-X to AR-Y
12403  F70D             ;------------------------------------------------------------------------------
12404  F70D             XFER_ARX_2_ARY: ; 
12405  F70D CD 54           VMJ  ($54) ; ($54)($2A)
12406  F70F 5A 10           LDI  YL,$10
12407  F711             
12408  F711             XFER_ARX_2_ARY_1: ; $F711
12409  F711 4A 00           LDI  XL,$00
12410  F713 8E 2C           BCH XFER_ARY_2_ARX_2 ; $F741
12411  F715             
12412  F715             
12413  F715             
12414  F715             ;------------------------------------------------------------------------------
12415  F715             ; (68) $F715 - Transfers AR-S to AR-Y
12416  F715             ;------------------------------------------------------------------------------
12417  F715             XFER_ARS_2_ARY: ; 
12418  F715 4A 30           LDI  XL,$30
12419  F717 5A 10           LDI  YL,$10
12420  F719 8E 26           BCH XFER_ARY_2_ARX_2 ; $F741
12421  F71B             
12422  F71B             
12423  F71B             
12424  F71B             ;------------------------------------------------------------------------------
12425  F71B             ; $F71B - Transfers sign and mantissa from AR-Y to AR-X
12426  F71B             ;------------------------------------------------------------------------------
12427  F71B             XFER_SM_ARY2ARX: ;
12428  F71B 4A 11           LDI  XL,$11
12429  F71D 8E 02           BCH XFER_SM_ARZ2ARX_1 ; $F721
12430  F71F             
12431  F71F             
12432  F71F             
12433  F71F             ;------------------------------------------------------------------------------
12434  F71F             ; $F71F - Transfers sign and mantissa from AR-Z to AR-X
12435  F71F             ;------------------------------------------------------------------------------
12436  F71F             XFER_SM_ARZ2ARX: ; 
12437  F71F 4A 09           LDI  XL,$09
12438  F721             
12439  F721             XFER_SM_ARZ2ARX_1: ; $F721
12440  F721 5A 01           LDI  YL,$01
12441  F723 8E 0E           BCH XREG_2_YREG ; XFER_SM_ARX2ARZ 
12442  F725             
12443  F725             
12444  F725             
12445  F725             ;------------------------------------------------------------------------------
12446  F725             ; $F725 - Transfers sign and mantissa from AR-Z to AR-X
12447  F725             ;------------------------------------------------------------------------------
12448  F725             XFER_SM_ARY2ARZ: ; 
12449  F725 4A 11           LDI  XL,$11
12450  F727 8E 08           BCH XFER_SM_ARX2ARZ_1 ; $F731
12451  F729             
12452  F729             
12453  F729             
12454  F729             ;------------------------------------------------------------------------------
12455  F729             ; (82) $F729 - The sign and mantissa of BCD value in AR-X transferred to AR-Y.
12456  F729             ;------------------------------------------------------------------------------
12457  F729             XFER_SM_ARX2ARY: ; 
12458  F729 4A 01           LDI  XL,$01
12459  F72B 5A 11           LDI  YL,$11
12460  F72D 8E 04           BCH XREG_2_YREG
12461  F72F             
12462  F72F             
12463  F72F             
12464  F72F             ;------------------------------------------------------------------------------
12465  F72F             ; $F72F (78) - Transfers sign and mantissa from AR-X to AR-Z
12466  F72F             ;------------------------------------------------------------------------------
12467  F72F             XFER_SM_ARX2ARZ: ; 
12468  F72F 4A 01           LDI  XL,$01
12469  F731             
12470  F731             XFER_SM_ARX2ARZ_1: ; $F731
12471  F731 5A 09           LDI  YL,$09
12472  F733             
12473  F733             
12474  F733             
12475  F733             ;------------------------------------------------------------------------------
12476  F733             ; $F733 - Block shift: 7 bytes from (X-Reg) to (Y-Reg)
12477  F733             ;------------------------------------------------------------------------------
12478  F733             XREG_2_YREG:
12479  F733 6A 06           LDI  UL,$06
12480  F735 8E 0C           BCH XFER_ARY_2_ARX_3 ; $F743
12481  F737             
12482  F737             
12483  F737             
12484  F737             ;------------------------------------------------------------------------------
12485  F737             ; $F737 - Transfer AR-S to AR-X.
12486  F737             ;------------------------------------------------------------------------------
12487  F737             XFER_ARS_2_ARX:
12488  F737 CD 54           VMJ  ($54) ; ($54)($2A)
12489  F739 4A 30           LDI  XL,$30
12490  F73B 8E 02           BCH XFER_ARY_2_ARX_1 ; $F73F
12491  F73D             
12492  F73D             
12493  F73D             
12494  F73D             ;------------------------------------------------------------------------------
12495  F73D             ; $F73D - Transfers AR-Y to AR-X
12496  F73D             ;------------------------------------------------------------------------------
12497  F73D             XFER_ARY_2_ARX: ; 
12498  F73D 4A 10           LDI  XL,$10
12499  F73F             
12500  F73F             XFER_ARY_2_ARX_1: ; $F73F
12501  F73F 5A 00           LDI  YL,$00
12502  F741             
12503  F741             XFER_ARY_2_ARX_2: ; $F741
12504  F741 6A 07           LDI  UL,$07
12505  F743             
12506  F743             XFER_ARY_2_ARX_3: ; $F743
12507  F743 F5              TIN
12508  F744 88 03           LOP  UL,XFER_ARY_2_ARX_3 ; $F743
12509  F746 9A              RTN
12510  F747             
12511  F747             
12512  F747             
12513  F747             ;------------------------------------------------------------------------------
12514  F747             ; Clear sign and mantissa of arithmetic registers
12515  F747             ;             Address: AR-Y: F747 (70)
12516  F747             ;                      AR-Z: F74B
12517  F747             ;                      AR-W: F74F
12518  F747             ;                      AR-X: F753 (76)
12519  F747             ;          Parameter:	XH must contain 7A
12520  F747             ;
12521  F747             ; Modified Registers:	X-Reg, Accumulator
12522  F747             ;   Error conditions:	None
12523  F747             ;------------------------------------------------------------------------------
12524  F747             ; (70) Clears the sign and mantissa of AR-Y
12525  F747             CLR_SM_ARY: ; $F747
12526  F747 4A 11           LDI  XL,$11
12527  F749 8E 16           BCH CLR_ARITHMETIC_REGS_3
12528  F74B             
12529  F74B             ;  Clears the sign and mantissa of AR-Z
12530  F74B             CLR_SM_ARZ: ; $F74B
12531  F74B 4A 09           LDI  XL,$09
12532  F74D 8E 12           BCH CLR_ARITHMETIC_REGS_3
12533  F74F             
12534  F74F             ; Clears sign and mantissa of AR-W
12535  F74F             CLR_SM_ARW: ; $F74F
12536  F74F 4A 29           LDI  XL,$29
12537  F751 8E 0E           BCH CLR_ARITHMETIC_REGS_3
12538  F753             
12539  F753             ; (76) Clears arithmetic register AR-X
12540  F753             CLR_SM_ARX: ; $F753
12541  F753 4A 10           LDI  XL,$10
12542  F755 8E 04           BCH CLR_ARITHMETIC_REGS_1
12543  F757             
12544  F757             
12545  F757             
12546  F757             ;------------------------------------------------------------------------------
12547  F757             ; Clears arithmetic registers
12548  F757             ;            Address: AR-X: F757 (EC)
12549  F757             ;               AR-Y: F753
12550  F757             ;          Parameter: XH must contain 7A
12551  F757             ;
12552  F757             ; Modified Registers: X-Reg, U-Reg, Accumulator
12553  F757             ;   Error conditions: None
12554  F757             ;------------------------------------------------------------------------------
12555  F757             CLR_ARITHMETIC_REGS: ; $F757
12556  F757 48 7A           LDI  XH,$7A
12557  F759 4A 00           LDI  XL,$00
12558  F75B             
12559  F75B             ; Clears 8 bytes from (X-Reg).
12560  F75B             CLR_ARITHMETIC_REGS_1: ; $F75B
12561  F75B 6A 07           LDI  UL,$07
12562  F75D 8E 04           BCH CLR_N_XREG
12563  F75F             
12564  F75F             ; (76) Clears sign and mantissa in AR-X
12565  F75F             CLR_ARITHMETIC_REGS_2: ; $F75F
12566  F75F 4A 01           LDI  XL,$01
12567  F761             
12568  F761             ; Clear 7 bytes from (X-Reg).
12569  F761             CLR_ARITHMETIC_REGS_3: ; $F761
12570  F761 6A 06           LDI  UL,$06
12571  F763             
12572  F763             
12573  F763             
12574  F763             ;------------------------------------------------------------------------------
12575  F763             ; (BA) Delete UL+1 bytes from (X-Reg)
12576  F763             ;            Address: AR-X: F763 (BA)
12577  F763             ;          Parameter: None
12578  F763             ; 
12579  F763             ; Modified Registers: X-Reg, U-Reg, Accumulator
12580  F763             ;   Error conditions: None
12581  F763             ;------------------------------------------------------------------------------
12582  F763             CLR_N_XREG: ; $F763
12583  F763 B5 00           LDI  A,$00
12584  F765             
12585  F765             CLR_N_XREG_1: ; $F765
12586  F765 41              SIN  X
12587  F766 88 03           LOP  UL,$F765
12588  F768 9A              RTN
12589  F769             
12590  F769             
12591  F769             
12592  F769             ;------------------------------------------------------------------------------
12593  F769             ; $F769 - AR-W shift one nibble to the right (/10)
12594  F769             ;------------------------------------------------------------------------------
12595  F769             ARW_SHR_4BITS: ; 
12596  F769 4A 28           LDI  XL,$28
12597  F76B 8E 0A           BCH X_REG_SHR_4BITS
12598  F76D             
12599  F76D             
12600  F76D             
12601  F76D             ;------------------------------------------------------------------------------
12602  F76D             ; $F76D - Push AR-Z right one nibble (/10)
12603  F76D             ;------------------------------------------------------------------------------
12604  F76D             ARZ_SHR_4BITS: ; 
12605  F76D 4A 08           LDI  XL,$08
12606  F76F 8E 06           BCH X_REG_SHR_4BITS
12607  F771             
12608  F771             
12609  F771             
12610  F771             ;------------------------------------------------------------------------------
12611  F771             ; Shift $F771 - AR-Y one nibble to the right (/10)
12612  F771             ;------------------------------------------------------------------------------
12613  F771             ARY_SHR_4BITS: ; 
12614  F771 4A 10           LDI  XL,$10
12615  F773 8E 02           BCH X_REG_SHR_4BITS
12616  F775             
12617  F775             
12618  F775             
12619  F775             ;------------------------------------------------------------------------------
12620  F775             ; (74) $F775 - Push AR-X one nibble to the right (/10)
12621  F775             ;------------------------------------------------------------------------------
12622  F775             ARX_SHR_4BITS: ; 
12623  F775 4A 00           LDI  XL,$00
12624  F777             
12625  F777             
12626  F777             
12627  F777             ;------------------------------------------------------------------------------
12628  F777             ; $F777 - Shift 7 bytes from (X-Reg) one nibble to the right (/10)
12629  F777             ;------------------------------------------------------------------------------
12630  F777             X_REG_SHR_4BITS: ; 
12631  F777 6A 06           LDI  UL,$06
12632  F779 B5 00           LDI  A,$00
12633  F77B             
12634  F77B             X_REG_SHR_4BITS_1: ; $F77B
12635  F77B 44              INC  X
12636  F77C D3              DRR  (X)
12637  F77D 88 04           LOP  UL,X_REG_SHR_4BITS_1 ; $F77B
12638  F77F 9A              RTN
12639  F780 4A 0F           LDI  XL,$0F
12640  F782 6A 05           LDI  UL,$05
12641  F784             
12642  F784             X_REG_SHR_4BITS_2: ; $F784
12643  F784 46              DEC  X
12644  F785 45              LIN  X
12645  F786 43              SDE  X
12646  F787 88 05           LOP  UL,X_REG_SHR_4BITS_2 ; $F784
12647  F789 49 00           ANI  (X),$00
12648  F78B 9A              RTN
12649  F78C             
12650  F78C             
12651  F78C             
12652  F78C             ;------------------------------------------------------------------------------
12653  F78C             ; $F78C - Push AR-S left one nibble (*10)
12654  F78C             ;------------------------------------------------------------------------------
12655  F78C             ARS_SHL_4BITS: ; 
12656  F78C 48 7A           LDI  XH,$7A
12657  F78E 4A 37           LDI  XL,$37
12658  F790 6A 04           LDI  UL,$04
12659  F792 8E 0C           BCH ARX_SHL_4BITS_2 ; $F7A0
12660  F794             
12661  F794             
12662  F794             
12663  F794             ;------------------------------------------------------------------------------
12664  F794             ; $F794 - Push AR-W one nibble to the left (*10)
12665  F794             ;------------------------------------------------------------------------------
12666  F794             ARW_SHL_4BITS: ; 
12667  F794 4A 30           LDI  XL,$30
12668  F796 8E 06           BCH ARX_SHL_4BITS_1 ; $F79E
12669  F798             
12670  F798             
12671  F798             
12672  F798             ;------------------------------------------------------------------------------
12673  F798             ; $F798 - Push AR-Z left one nibble (*10)
12674  F798             ;------------------------------------------------------------------------------
12675  F798             ARZ_SHL_4BITS: ; 
12676  F798 4A 10           LDI  XL,$10
12677  F79A 8E 02           BCH ARX_SHL_4BITS_1 ; $F79E
12678  F79C             
12679  F79C             
12680  F79C             
12681  F79C             ;------------------------------------------------------------------------------
12682  F79C             ; (EA) $F79C - Push AR-X left one nibble (*10)
12683  F79C             ;------------------------------------------------------------------------------
12684  F79C             ARX_SHL_4BITS: ; 
12685  F79C 4A 08           LDI  XL,$08
12686  F79E             
12687  F79E             ARX_SHL_4BITS_1: ; $F79E
12688  F79E 6A 06           LDI  UL,$06
12689  F7A0             
12690  F7A0             ARX_SHL_4BITS_2: ; $F7A0
12691  F7A0 B5 00           LDI  A,$00
12692  F7A2             
12693  F7A2             ARX_SHL_4BITS_3: ; $F7A2
12694  F7A2 46              DEC  X
12695  F7A3 D7              DRL  (X)
12696  F7A4 88 04           LOP  UL,ARX_SHL_4BITS_3 ; $F7A2
12697  F7A6 9A              RTN
12698  F7A7             
12699  F7A7             
12700  F7A7             
12701  F7A7             ;------------------------------------------------------------------------------
12702  F7A7             ; $F7A7 (5E) - Transfer random number from RND pointer to AR-X
12703  F7A7             ;------------------------------------------------------------------------------
12704  F7A7             RND2ARX: ; 
12705  F7A7 5A 01           LDI  YL,$01
12706  F7A9 48 7B           LDI  XH,$7B
12707  F7AB 4A 01           LDI  XL,$01
12708  F7AD BE F7 33        SJP  (XREG_2_YREG) ; F8A5
12709  F7B0             
12710  F7B0             
12711  F7B0             
12712  F7B0             ;------------------------------------------------------------------------------
12713  F7B0             ; $F7B0 (5A) - Make pointer to arithmetic register
12714  F7B0             ; Position high bytes in X-Reg and Y-Reg on arithmetic registers
12715  F7B0             ;            Address: F7B0 (54)
12716  F7B0             ;   Entry parameters: None
12717  F7B0             ;
12718  F7B0             ; Modified registers: XH and YH are set to 7A
12719  F7B0             ;   Error conditions: None
12720  F7B0             ;------------------------------------------------------------------------------
12721  F7B0             SET_HB_XYREGS: ; $F7B0
12722  F7B0 48 7A           LDI  XH,$7A
12723  F7B2 58 7A           LDI  YH,$7A
12724  F7B4 9A              RTN
12725  F7B5             
12726  F7B5             
12727  F7B5             
12728  F7B5             ;------------------------------------------------------------------------------
12729  F7B5             ; (64) $F7B5 - Swaps AR-X with AR-S
12730  F7B5             ;------------------------------------------------------------------------------
12731  F7B5             SWAP_ARX_ARS: ; 
12732  F7B5 5A 30           LDI  YL,$30
12733  F7B7 8E 02           BCH SWAP_ARX_ARY_1 ; $F7BB
12734  F7B9             
12735  F7B9             
12736  F7B9             
12737  F7B9             ;------------------------------------------------------------------------------
12738  F7B9             ; (66) $F7B9 - Swaps AR-X with AR-Y
12739  F7B9             ;------------------------------------------------------------------------------
12740  F7B9             SWAP_ARX_ARY: ; 
12741  F7B9 5A 10           LDI  YL,$10
12742  F7BB             
12743  F7BB             SWAP_ARX_ARY_1: ; $F7BB
12744  F7BB 4A 00           LDI  XL,$00
12745  F7BD 6A 07           LDI  UL,$07
12746  F7BF             
12747  F7BF             ;------------------------------------------------------------------------------
12748  F7BF             ; (UL+1) $F7BF - Swap Bytes
12749  F7BF             ;------------------------------------------------------------------------------
12750  F7BF             SWAP_BYTES: ; 
12751  F7BF 05              LDA  (X)
12752  F7C0 28              STA  UH
12753  F7C1 15              LDA  (Y)
12754  F7C2 41              SIN  X
12755  F7C3 A4              LDA  UH
12756  F7C4 51              SIN  Y
12757  F7C5 88 08           LOP  UL,SWAP_BYTES
12758  F7C7 9A              RTN
12759  F7C8             
12760  F7C8             
12761  F7C8             
12762  F7C8             ;------------------------------------------------------------------------------
12763  F7C8             ; $F7C8 - Add AR-U to AR-X
12764  F7C8             ;------------------------------------------------------------------------------
12765  F7C8             ADD_ARU_ARX: ; 
12766  F7C8 5A 1F           LDI  YL,$1F
12767  F7CA 8E 02           BCH ADD_SM_ARY_ARX ; $F7CE
12768  F7CC             
12769  F7CC             ;------------------------------------------------------------------------------
12770  F7CC             ; $F7CC (EE) - Add the sign and mantissa of AR-X and AR-Y store them in AR-X.
12771  F7CC             ;------------------------------------------------------------------------------
12772  F7CC             ADD_SM_ARX_ARX:    
12773  F7CC 5A 17           LDI  YL,$17
12774  F7CE             
12775  F7CE             ;------------------------------------------------------------------------------
12776  F7CE             ; $F7CE (72) - Adds the mantissa of the AR-Y to the AR-X.
12777  F7CE             ;------------------------------------------------------------------------------
12778  F7CE             ADD_SM_ARY_ARX: ; 
12779  F7CE 4A 07           LDI  XL,$07
12780  F7D0             
12781  F7D0             ADD_SM_ARY_ARX_1: ; $F7D0
12782  F7D0 F9              REC
12783  F7D1 6A 06           LDI  UL,$06
12784  F7D3             
12785  F7D3             ADD_SM_ARY_ARX_2: ; $F7D3
12786  F7D3 57              LDE  Y
12787  F7D4 8C              DCA  (X)
12788  F7D5 43              SDE  X
12789  F7D6 88 05           LOP  UL,ADD_SM_ARY_ARX_2 ; $F7D3
12790  F7D8 9A              RTN
12791  F7D9             
12792  F7D9             
12793  F7D9             
12794  F7D9             ;------------------------------------------------------------------------------
12795  F7D9             ; $F7D9 - AR-X = AR-X-AR-V.
12796  F7D9             ;------------------------------------------------------------------------------
12797  F7D9             ARX_MINUS_ARV: ; 
12798  F7D9 5A 27           LDI  YL,$27
12799  F7DB 8E 02           BCH ARX_MINUS_ARV_2 ; $F7DF
12800  F7DD             
12801  F7DD             ;------------------------------------------------------------------------------
12802  F7DD             ; $F7DD (7A) - AR-X = AR-X-AR-V.
12803  F7DD             ;------------------------------------------------------------------------------
12804  F7DD             ARX_MINUS_ARV_1:   
12805  F7DD 5A 17           LDI  YL,$17
12806  F7DF             
12807  F7DF             ; $F7DF Subtract from AR-X the AR pointed to by Y-Reg on entry.
12808  F7DF             ARX_MINUS_ARV_2: ; $F7DF
12809  F7DF 4A 07           LDI  XL,$07
12810  F7E1             
12811  F7E1             ; $F7E1 From the arithmetic register pointed to by X-Reg, subtract AR pointed to by Y-Reg.
12812  F7E1             ARX_MINUS_ARV_3: ; 
12813  F7E1 FB              SEC
12814  F7E2 6A 06           LDI  UL,$06
12815  F7E4             
12816  F7E4             ARX_MINUS_ARV_4: ; $F7E4
12817  F7E4 05              LDA  (X)
12818  F7E5 1C              DCS  (Y)
12819  F7E6 43              SDE  X
12820  F7E7 56              DEC  Y
12821  F7E8 88 06           LOP  UL,ARX_MINUS_ARV_4 ; $F7E4
12822  F7EA 9A              RTN
12823  F7EB             
12824  F7EB             ; $F7EB Calculates the decimal to AR-X in AR-X.
12825  F7EB             ARX_MINUS_ARV_5: ; 
12826  F7EB 4A 07           LDI  XL,$07
12827  F7ED FB              SEC
12828  F7EE 6A 06           LDI  UL,$06
12829  F7F0             
12830  F7F0             ARX_MINUS_ARV_6: ; $F7F0
12831  F7F0 B5 00           LDI  A,$00
12832  F7F2 0C              DCS  (X)
12833  F7F3 43              SDE  X
12834  F7F4 88 06           LOP  UL,ARX_MINUS_ARV_6 ; $F7F0
12835  F7F6 9A              RTN
12836  F7F7             
12837  F7F7             ARX_MINUS_ARV_7: ; $F7F7
12838  F7F7 D5              SHR
12839  F7F8 81 0B           BCR ARX_MINUS_ARV_8 ; $F805
12840  F7FA FD C8           PSH  A
12841  F7FC 04              LDA  XL
12842  F7FD B9 F8           ANI  A,$F8
12843  F7FF 0A              STA  XL
12844  F800 BE F7 77        SJP  (X_REG_SHR_4BITS)
12845  F803 FD 8A           POP  A
12846  F805             
12847  F805             ;------------------------------------------------------------------------------
12848  F805             ; $F805 - Accumulator contains the number of places by which the AR pointed 
12849  F805             ;         to by the X-Reg is shifted to the right
12850  F805             ;------------------------------------------------------------------------------
12851  F805             ARX_MINUS_ARV_8: ; 
12852  F805 BF FF           BII  A,$FF
12853  F807 8B 32           BZS ARX_MINUS_ARV_16 ; $F83B
12854  F809 FD 5A           STX  Y
12855  F80B BD FF           EAI  $FF
12856  F80D FB              SEC
12857  F80E 12              ADC  YL
12858  F80F 1A              STA  YL
12859  F810 6A 06           LDI  UL,$06
12860  F812             
12861  F812             ARX_MINUS_ARV_9: ; $F812
12862  F812 14              LDA  YL
12863  F813 B9 07           ANI  A,$07
12864  F815 8B 01           BZS ARX_MINUS_ARV_10 ; $F818
12865  F817 57              LDE  Y
12866  F818             
12867  F818             ARX_MINUS_ARV_10: ; $F818
12868  F818 43              SDE  X
12869  F819 88 09           LOP  UL,ARX_MINUS_ARV_9 ; $F812
12870  F81B 9A              RTN
12871  F81C             
12872  F81C             ARX_MINUS_ARV_11: ; $F81C
12873  F81C 68 01           LDI  UH,$01
12874  F81E 8E 02           BCH ARX_MINUS_ARV_13 ; $F822
12875  F820             
12876  F820             ARX_MINUS_ARV_12: ; $F820
12877  F820 68 02           LDI  UH,$02
12878  F822             
12879  F822             ARX_MINUS_ARV_13: ; $F822
12880  F822 4A 17           LDI  XL,$17
12881  F824 5A 1F           LDI  YL,$1F
12882  F826             
12883  F826             ARX_MINUS_ARV_14: ; $F826
12884  F826 6A 06           LDI  UL,$06
12885  F828 F9              REC
12886  F829             
12887  F829             ARX_MINUS_ARV_15: ; $F829
12888  F829 05              LDA  (X)
12889  F82A 8C              DCA  (X)
12890  F82B 53              SDE  Y
12891  F82C 46              DEC  X
12892  F82D 88 06           LOP  UL,ARX_MINUS_ARV_15 ; $F829
12893  F82F FD 62           DEC  UH
12894  F831 81 08           BCR ARX_MINUS_ARV_16 ; $F83B
12895  F833 B5 0F           LDI  A,$0F
12896  F835 FD CA           ADR  X
12897  F837 FD DA           ADR  Y
12898  F839 9E 15           BCH ARX_MINUS_ARV_14 ; $F826
12899  F83B             
12900  F83B             ARX_MINUS_ARV_16: ; $F83B
12901  F83B 9A              RTN
12902  F83C             
12903  F83C             ARX_MINUS_ARV_17: ; $F83C
12904  F83C A5 7A 08        LDA  (ARZ)
12905  F83F 9B 06           BZS ARX_MINUS_ARV_16 ; $F83B
12906  F841 DF              DEC  A
12907  F842 4A 0F           LDI  XL,$0F
12908  F844 BE F7 F7        SJP  (ARX_MINUS_ARV_7) ; $F7F7
12909  F847             
12910  F847             ARX_MINUS_ARV_18: ; $F847
12911  F847 4A 17           LDI  XL,$17
12912  F849 5A 0F           LDI  YL,$0F
12913  F84B 9E 7D           BCH ADD_SM_ARY_ARX_1 ; $F7D0
12914  F84D             
12915  F84D             ARX_MINUS_ARV_19: ; $F84D
12916  F84D A5 7A 08        LDA  (ARZ)
12917  F850 9B 17           BZS ARX_MINUS_ARV_16 ; $F83B
12918  F852 DF              DEC  A
12919  F853 4A 0F           LDI  XL,$0F
12920  F855 BE F8 05        SJP  (ARX_MINUS_ARV_8) ; $F805
12921  F858 9E 13           BCH ARX_MINUS_ARV_18 ; $F847
12922  F85A             
12923  F85A             ;------------------------------------------------------------------------------
12924  F85A             ; $F85A - Loads auxiliary constants to AR-Y according to the evaluation of the
12925  F85A             ;         display according to 'RAD' or 'DEG'.
12926  F85A             ;------------------------------------------------------------------------------
12927  F85A             ARX_MINUS_ARV_20: ; 
12928  F85A A5 76 4F        LDA  (DISP_BUFF + $4F)
12929  F85D BF 04           BII  A,$04
12930  F85F F9              REC
12931  F860 9B 27           BZS ARX_MINUS_ARV_16 ; $F83B
12932  F862 BF 02           BII  A,$02
12933  F864 89 19           BZR ARX_MINUS_ARV_27 ; $F87F
12934  F866 4A 98           LDI  XL,$98
12935  F868             
12936  F868             ARX_MINUS_ARV_21: ; $F868
12937  F868 6A 07           LDI  UL,$07
12938  F86A 48 FC           LDI  XH,$FC
12939  F86C             
12940  F86C             ARX_MINUS_ARV_22: ; $F86C
12941  F86C 5A 10           LDI  YL,$10
12942  F86E             
12943  F86E             ARX_MINUS_ARV_23: ; $F86E
12944  F86E F5              TIN
12945  F86F 88 03           LOP  UL,ARX_MINUS_ARV_23 ; $F86E
12946  F871 48 7A           LDI  XH,$7A
12947  F873 FB              SEC
12948  F874             
12949  F874             ARX_MINUS_ARV_24: ; $F874
12950  F874 9A              RTN
12951  F875             
12952  F875             ARX_MINUS_ARV_25: ; $F875  Transfers PI to AR-Y.
12953  F875 4A F8           LDI  XL,$F8
12954  F877 6A 07           LDI  UL,$07
12955  F879 8E 1D           BCH XFER_1_2_ARY_2 ; $F898
12956  F87B             
12957  F87B             ;------------------------------------------------------------------------------
12958  F87B             ; $F87B - Transfers auxiliary constants to AR-Y.
12959  F87B             ;------------------------------------------------------------------------------
12960  F87B             ARX_MINUS_ARV_26: ; $F87B
12961  F87B 4A 60           LDI  XL,$60
12962  F87D 9E 17           BCH ARX_MINUS_ARV_21 ; $F868
12963  F87F             
12964  F87F             ARX_MINUS_ARV_27: ; $F87F
12965  F87F B5 E9           LDI  A,$E9
12966  F881 8E 0E           BCH XFER_1_2_ARY_1 ; $F891
12967  F883             
12968  F883             ;------------------------------------------------------------------------------
12969  F883             ; $F883 - Loads AR-Y with auxiliary constant.
12970  F883             ;------------------------------------------------------------------------------
12971  F883             ARX_MINUS_ARV_28: ; $F883
12972  F883 B5 EF           LDI  A,$EF
12973  F885 8E 0A           BCH XFER_1_2_ARY_1 ; $F891
12974  F887             
12975  F887             ;------------------------------------------------------------------------------
12976  F887             ; $F887 - Loads AR-Y with auxiliary constant.
12977  F887             ;------------------------------------------------------------------------------
12978  F887             ARX_MINUS_ARV_29: ; $F887
12979  F887 B5 F2           LDI  A,$F2
12980  F889 8E 06           BCH XFER_1_2_ARY_1 ; $F891
12981  F88B             
12982  F88B             
12983  F88B             
12984  F88B             ;------------------------------------------------------------------------------
12985  F88B             ; $F88B (62) - Transfers 0.6 to AR-Y (FF 00 60 ...).
12986  F88B             ;------------------------------------------------------------------------------
12987  F88B             XFER_06_2_ARY:   
12988  F88B B5 F5           LDI  A,$F5
12989  F88D 8E 02           BCH XFER_1_2_ARY_1 ; $F891
12990  F88F             
12991  F88F             
12992  F88F             
12993  F88F             ;------------------------------------------------------------------------------
12994  F88F             ; $F88F (6A) - Transfers numerical value 1 to AR-Y.
12995  F88F             ;------------------------------------------------------------------------------
12996  F88F             XFER_1_2_ARY: 
12997  F88F B5 EC           LDI  A,$EC
12998  F891             
12999  F891             XFER_1_2_ARY_1: ; $F891
13000  F891 1A              STA  YL
13001  F892 CD 70           VMJ  ($70) ; ($70)($38)
13002  F894 14              LDA  YL
13003  F895 0A              STA  XL
13004  F896 6A 02           LDI  UL,$02
13005  F898             
13006  F898             XFER_1_2_ARY_2: ; $F898
13007  F898 48 FB           LDI  XH,$FB
13008  F89A 9E 30           BCH ARX_MINUS_ARV_22 ; $F86C
13009  F89C             
13010  F89C             
13011  F89C             
13012  F89C             ;------------------------------------------------------------------------------
13013  F89C             ; $F89C AR-X=AR-X to the power of AR-Y.
13014  F89C             ;------------------------------------------------------------------------------
13015  F89C             ARX_POW_ARY:   
13016  F89C CD 54           VMJ  ($54) ; ($54)($2A)
13017  F89E 4A 02           LDI  XL,$02
13018  F8A0 47              LDE  X
13019  F8A1 8B 7D           BZS ARX_POW_ARY_9 ; $F920
13020  F8A3 4D 80           BII  (X),$80
13021  F8A5 89 39           BZR ARX_POW_ARY_6 ; $F8E0
13022  F8A7 ED 7A 12 FF     BII  (ARY + $02),$FF
13023  F8AB 8B 2D           BZS ARX_POW_ARY_5 ; $F8DA
13024  F8AD B5 00           LDI  A,$00
13025  F8AF FD C8           PSH  A
13026  F8B1             
13027  F8B1             ARX_POW_ARY_1: ; $F8B1
13028  F8B1 BE F7 01        SJP  (XFER_ARY_2_ARS)
13029  F8B4 BE F1 65        SJP  (BCMD_LOG)
13030  F8B7 83 09           BCS ARX_POW_ARY_2 ; $F8C2
13031  F8B9 CD 68           VMJ  ($68) ; ($68)($34)
13032  F8BB CD 7E           VMJ  ($7E) ; ($7E)($3F)
13033  F8BD 83 03           BCS ARX_POW_ARY_2 ; $F8C2
13034  F8BF BE F1 D4        SJP  (EXPONENT)
13035  F8C2             
13036  F8C2             ARX_POW_ARY_2: ; $F8C2
13037  F8C2 FD 8A           POP  A
13038  F8C4 83 0A           BCS ARX_POW_ARY_3 ; $F8D0
13039  F8C6 BF F0           BII  A,$F0
13040  F8C8 8B 0D           BZS ARX_POW_ARY_4 ; $F8D7
13041  F8CA D5              SHR
13042  F8CB 83 06           BCS $F8D3
13043  F8CD D9              SHL
13044  F8CE 81 07           BCR ARX_POW_ARY_4 ; $F8D7
13045  F8D0             
13046  F8D0             ARX_POW_ARY_3: ; $F8D0
13047  F8D0 BA F1 5D        JMP  SQR_ROOT_12 ; $F15D
13048  F8D3 EB 7A 01 80     ORI  (ARX + $01),$80
13049  F8D7             
13050  F8D7             ARX_POW_ARY_4: ; $F8D7
13051  F8D7 BA F0 63        JMP  MULTIPLY_6 ; $F063
13052  F8DA             
13053  F8DA             ARX_POW_ARY_5: ; $F8DA
13054  F8DA CD 6A           VMJ  ($6A) ; ($6A)($35)
13055  F8DC CD 56           VMJ  ($56) ; ($56)($2B)
13056  F8DE 9E 09           BCH ARX_POW_ARY_4 ; $F8D7
13057  F8E0             
13058  F8E0             ARX_POW_ARY_6: ; $F8E0
13059  F8E0 49 00           ANI  (X),$00
13060  F8E2 CD 80           VMJ  ($80) ; ($80)($40)
13061  F8E4 CD 56           VMJ  ($56) ; ($56)($2B)
13062  F8E6 A5 7A 00        LDA  (ARX)
13063  F8E9 BF 80           BII  A,$80
13064  F8EB 99 1D           BZR ARX_POW_ARY_3 ; $F8D0
13065  F8ED B7 0B           CPI  A,$0B
13066  F8EF B5 00           LDI  A,$00
13067  F8F1 83 20           BCS ARX_POW_ARY_7 ; $F913
13068  F8F3 CD 6C           VMJ  ($6C) ; ($6C)($36)
13069  F8F5 FD C8           PSH  A
13070  F8F7 CD 60           VMJ  ($60) ; ($60)($30)
13071  F8F9 FB              SEC
13072  F8FA 5A 11           LDI  YL,$11
13073  F8FC 6A 06           LDI  UL,$06
13074  F8FE 55              LIN  Y
13075  F8FF 99 3F           BZR ARX_POW_ARY_2 ; $F8C2
13076  F901 88 05           LOP  UL,$F8FE
13077  F903 FD 8A           POP  A
13078  F905 AE 7A 01        STA  (ARX + $01)
13079  F908 A5 7A 00        LDA  (ARX)
13080  F90B B3 04           ADI  A,$04
13081  F90D D5              SHR
13082  F90E 0A              STA  XL
13083  F90F 83 0B           BCS ARX_POW_ARY_8 ; $F91C
13084  F911 42              DEC  XL
13085  F912 05              LDA  (X)
13086  F913             
13087  F913             ARX_POW_ARY_7: ; $F913
13088  F913 BB F0           ORI  A,$F0
13089  F915 FD C8           PSH  A
13090  F917 E6              VEJ  (E6)
13091  F918 CD 64           VMJ  ($64) ; ($64)($32)
13092  F91A 9E 6B           BCH ARX_POW_ARY_1 ; $F8B1
13093  F91C             
13094  F91C             ARX_POW_ARY_8: ; $F91C
13095  F91C 05              LDA  (X)
13096  F91D F1              AEX
13097  F91E 9E 0D           BCH ARX_POW_ARY_7 ; $F913
13098  F920             
13099  F920             ARX_POW_ARY_9: ; $F920
13100  F920 4A 12           LDI  XL,$12
13101  F922 47              LDE  X
13102  F923 9B 55           BZS ARX_POW_ARY_3 ; $F8D0
13103  F925 4D 80           BII  (X),$80
13104  F927 9B 52           BZS ARX_POW_ARY_4 ; $F8D7
13105  F929 9E 5B           BCH ARX_POW_ARY_3 ; $F8D0
13106  F92B             
13107  F92B             
13108  F92B             
13109  F92B             ;------------------------------------------------------------------------------
13110  F92B             ; $F92B - Convert AR-X from integer to BCD format.
13111  F92B             ;------------------------------------------------------------------------------
13112  F92B             ARX_INT_2_BCD: ; $F92B
13113  F92B B5 A0           LDI  A,$A0
13114  F92D A7 7A 04        CPA  (ARX + $04)
13115  F930 91 BE           BCR ARX_MINUS_ARV_24 ; $F874
13116  F932 48 7A           LDI  XH,$7A
13117  F934 A5 7A 07        LDA  (ARX + $07)
13118  F937 F9              REC
13119  F938 B3 B0           ADI  A,$B0
13120  F93A 81 12           BCR ARX_INT_2_BCD_2 ; $F94E
13121  F93C CD 6C           VMJ  ($6C) ; ($6C)($36)
13122  F93E FD C8           PSH  A
13123  F940 4A 06           LDI  XL,$06
13124  F942 6A 05           LDI  UL,$05
13125  F944             
13126  F944             ARX_INT_2_BCD_1: ; $F944
13127  F944 B5 00           LDI  A,$00
13128  F946 8C              DCA  (X)
13129  F947 43              SDE  X
13130  F948 88 06           LOP  UL,ARX_INT_2_BCD_1 ; $F944
13131  F94A FD 8A           POP  A
13132  F94C CD 52           VMJ  ($52) ; ($52)($29
13133  F94E             
13134  F94E             ARX_INT_2_BCD_2: ; $F94E
13135  F94E BA F6 3C        JMP  RAND_GEN_7 ; $F63C
13136  F951 E4              VEJ  (E4)
13137  F952 E4              VEJ  (E4)
13138  F953 E4              VEJ  (E4)
13139  F954 E4              VEJ  (E4)
13140  F955 E4              VEJ  (E4)
13141  F956 E4              VEJ  (E4)
13142  F957             
13143  F957             
13144  F957             
13145  F957             ;------------------------------------------------------------------------------
13146  F957             ;  $F957 - Tokenizer program 
13147  F957             ;          Converts subsets of ASCII character strings into tokens, provided 
13148  F957             ;          these could be fount in the token tables. The input buffer is
13149  F957             ;          compressed in the process. All Basic commands tokenized to 2 bytes,
13150  F957             ;          insert codes are deleted and spaces outside of strings as well.
13151  F957             ;                     
13152  F957             ;            Address: F957
13153  F957             ; 
13154  F957             ;         Parameters: Y-Reg must point to the input buffer
13155  F957             ; Modified Registers: All
13156  F957             ;   Error conditions: Error 28 when strings contain tokens.
13157  F957             ;------------------------------------------------------------------------------
13158  F957             TOK_INBUF: ; $F957
13159  F957 68 00           LDI  UH,$00
13160  F959             
13161  F959             ; $F959 Tokenizer (string flag already in UH).
13162  F959             TOK_INBUF_1: ; $F959
13163  F959 A5 78 8B        LDA  (INBUFPTR_L)
13164  F95C 1A              STA  YL
13165  F95D 58 7B           LDI  YH,$7B
13166  F95F FD 18           LDX  Y
13167  F961             
13168  F961             TOK_INBUF_2: ; $F961
13169  F961 55              LIN  Y
13170  F962 B7 27           CPI  A,$27
13171  F964 9B 05           BZS TOK_INBUF_2 ; $F961
13172  F966 B7 0D           CPI  A,$0D
13173  F968 89 04           BZR TOK_INBUF_3 ; $F96E
13174  F96A 68 00           LDI  UH,$00
13175  F96C 8E AA           BCH TOK_INBUF_23 ; $FA18
13176  F96E             
13177  F96E             TOK_INBUF_3: ; $F96E
13178  F96E B7 22           CPI  A,$22
13179  F970 89 2F           BZR TOK_INBUF_12 ; $F9A1
13180  F972 FD 62           DEC  UH
13181  F974 8B 02           BZS TOK_INBUF_4 ; $F978
13182  F976 68 01           LDI  UH,$01
13183  F978             
13184  F978             TOK_INBUF_4: ; $F978
13185  F978 41              SIN  X
13186  F979 9E 1A           BCH TOK_INBUF_2 ; $F961
13187  F97B             
13188  F97B             
13189  F97B             
13190  F97B             ;------------------------------------------------------------------------------
13191  F97B             ; $F97B - Convert input line into tokens and use formula interpreter
13192  F97B             ;------------------------------------------------------------------------------
13193  F97B             TOK_INBUF_5: ; $F97B
13194  F97B 68 00           LDI  UH,$00
13195  F97D ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
13196  F981 89 02           BZR TOK_INBUF_6 ; $F985
13197  F983 68 01           LDI  UH,$01
13198  F985             
13199  F985             TOK_INBUF_6: ; $F985
13200  F985 BE F9 59        SJP  (TOK_INBUF_1) ; $F959
13201  F988 8B 15           BZS TOK_INBUF_11 ; $F99F
13202  F98A 06              CPA  XL
13203  F98B 83 0B           BCS TOK_INBUF_8 ; $F998
13204  F98D A5 78 85        LDA  (CURVARTYPE); $7885
13205  F990 DB              ROL
13206  F991 83 06           BCS TOK_INBUF_9 ; $F999
13207  F993 CD 0C           VMJ  ($0C)
13208  F995             
13209  F995             TOK_INBUF_7: ; $F995
13210  F995 C8              VEJ  (C8) \ ABRF(TOK_INBUF_10) ; $F99D
13210  F996 06          
13211  F997 62              DEC  UL
13212  F998             
13213  F998             TOK_INBUF_8: ; $F998
13214  F998 9A              RTN
13215  F999             
13216  F999             TOK_INBUF_9: ; $F999
13217  F999 DE              VEJ  (DE) \ ABRF(TOK_INBUF_11) ; $F99F
13217  F99A 04          
13218  F99B 9E 08           BCH TOK_INBUF_7 ; $F995
13219  F99D             
13220  F99D             TOK_INBUF_10: ; $F99D
13221  F99D 68 01           LDI  UH,$01
13222  F99F             
13223  F99F             TOK_INBUF_11: ; $F99F
13224  F99F F9              REC
13225  F9A0 9A              RTN
13226  F9A1             
13227  F9A1             TOK_INBUF_12: ; $F9A1
13228  F9A1 6C 00           CPI  UH,$00
13229  F9A3 8B 06           BZS TOK_INBUF_13 ; $F9AB
13230  F9A5 B7 E0           CPI  A,$E0
13231  F9A7 91 31           BCR TOK_INBUF_4 ; $F978
13232  F9A9 8E 6D           BCH TOK_INBUF_23 ; $FA18
13233  F9AB             
13234  F9AB             TOK_INBUF_13: ; $F9AB
13235  F9AB B7 20           CPI  A,$20
13236  F9AD 9B 4E           BZS TOK_INBUF_2 ; $F961
13237  F9AF B7 41           CPI  A,$41
13238  F9B1 91 3B           BCR TOK_INBUF_4 ; $F978
13239  F9B3 B7 5B           CPI  A,$5B
13240  F9B5 81 09           BCR $F9C0
13241  F9B7 B7 E0           CPI  A,$E0
13242  F9B9 91 43           BCR TOK_INBUF_4 ; $F978
13243  F9BB 28              STA  UH
13244  F9BC 55              LIN  Y
13245  F9BD 2A              STA  UL
13246  F9BE 8E 49           BCH TOK_INBUF_21 ; $FA09
13247  F9C0 FD 88           PSH  X
13248  F9C2 28              STA  UH
13249  F9C3 6A 60           LDI  UL,$60
13250  F9C5 48 C0           LDI  XH,$C0
13251  F9C7             
13252  F9C7             ;------------------------------------------------------------------------------
13253  F9C7             ; $F9C7 work off. Search Token Table
13254  F9C7             ;------------------------------------------------------------------------------
13255  F9C7             TOK_INBUF_14:   
13256  F9C7 A5 79 D0        LDA  (PU_PV)
13257  F9CA             
13258  F9CA             TOK_INBUF_15: ; $F9CA
13259  F9CA FD C8           PSH  A
13260  F9CC 4A 1E           LDI  XL,$1E
13261  F9CE A4              LDA  UH
13262  F9CF B9 1F           ANI  A,$1F
13263  F9D1 D9              SHL
13264  F9D2 FD CA           ADR  X
13265  F9D4 45              LIN  X
13266  F9D5 8B 69           BZS TOK_INBUF_27 ; $FA40
13267  F9D7 FD C8           PSH  A
13268  F9D9 05              LDA  (X)
13269  F9DA 0A              STA  XL
13270  F9DB FD 8A           POP  A
13271  F9DD 08              STA  XH
13272  F9DE             
13273  F9DE             TOK_INBUF_16: ; $F9DE
13274  F9DE FD 98           PSH  Y
13275  F9E0             
13276  F9E0             TOK_INBUF_17: ; $F9E0
13277  F9E0 55              LIN  Y
13278  F9E1 B7 20           CPI  A,$20
13279  F9E3 9B 05           BZS TOK_INBUF_17 ; $F9E0
13280  F9E5 B7 27           CPI  A,$27
13281  F9E7 9B 09           BZS TOK_INBUF_17 ; $F9E0
13282  F9E9 B7 2E           CPI  A,$2E
13283  F9EB 89 08           BZR TOK_INBUF_19 ; $F9F5
13284  F9ED             
13285  F9ED             TOK_INBUF_18: ; $F9ED
13286  F9ED B5 E0           LDI  A,$E0
13287  F9EF F7              CIN
13288  F9F0 93 05           BCS TOK_INBUF_18 ; $F9ED
13289  F9F2 46              DEC  X
13290  F9F3 8E 08           BCH TOK_INBUF_20 ; $F9FD
13291  F9F5             
13292  F9F5             TOK_INBUF_19: ; $F9F5
13293  F9F5 F7              CIN
13294  F9F6 89 38           BZR TOK_INBUF_25 ; $FA30
13295  F9F8 05              LDA  (X)
13296  F9F9 B7 E0           CPI  A,$E0
13297  F9FB 91 1D           BCR TOK_INBUF_17 ; $F9E0
13298  F9FD             
13299  F9FD             TOK_INBUF_20: ; $F9FD
13300  F9FD 45              LIN  X
13301  F9FE 28              STA  UH
13302  F9FF 05              LDA  (X)
13303  FA00 2A              STA  UL
13304  FA01 FD 0A           POP  X
13305  FA03 FD 8A           POP  A
13306  FA05 CD 1E           VMJ  ($1E)
13307  FA07 FD 0A           POP  X
13308  FA09             
13309  FA09             TOK_INBUF_21: ; $FA09
13310  FA09 A4              LDA  UH
13311  FA0A 41              SIN  X
13312  FA0B 24              LDA  UL
13313  FA0C 41              SIN  X
13314  FA0D 6C F1           CPI  UH,$F1
13315  FA0F 68 00           LDI  UH,$00
13316  FA11 99 B2           BZR TOK_INBUF_2 ; $F961
13317  FA13 6E AB           CPI  UL,$AB
13318  FA15 99 B6           BZR TOK_INBUF_2 ; $F961
13319  FA17             
13320  FA17             TOK_INBUF_22: ; $FA17
13321  FA17 55              LIN  Y
13322  FA18             
13323  FA18             TOK_INBUF_23: ; $FA18
13324  FA18 41              SIN  X
13325  FA19 B7 0D           CPI  A,$0D
13326  FA1B 99 06           BZR TOK_INBUF_22 ; $FA17
13327  FA1D 56              DEC  Y
13328  FA1E 46              DEC  X
13329  FA1F FD 88           PSH  X
13330  FA21             
13331  FA21             TOK_INBUF_24: ; $FA21
13332  FA21 0E              STA  (X)
13333  FA22 40              INC  XL
13334  FA23 91 04           BCR TOK_INBUF_24 ; $FA21
13335  FA25 FD 0A           POP  X
13336  FA27 A5 78 8B        LDA  (INBUFPTR_L)
13337  FA2A 1A              STA  YL
13338  FA2B FD 62           DEC  UH
13339  FA2D 68 1C           LDI  UH,$1C
13340  FA2F 9A              RTN
13341  FA30             
13342  FA30             TOK_INBUF_25: ; $FA30
13343  FA30 B5 E0           LDI  A,$E0
13344  FA32             
13345  FA32             TOK_INBUF_26: ; $FA32
13346  FA32 F7              CIN
13347  FA33 93 03           BCS TOK_INBUF_26 ; $FA32
13348  FA35 44              INC  X
13349  FA36 44              INC  X
13350  FA37 44              INC  X
13351  FA38 45              LIN  X
13352  FA39 44              INC  X
13353  FA3A B9 10           ANI  A,$10
13354  FA3C FD 1A           POP  Y
13355  FA3E 9B 62           BZS TOK_INBUF_16 ; $F9DE
13356  FA40             
13357  FA40             TOK_INBUF_27: ; $FA40
13358  FA40 FD 8A           POP  A
13359  FA42 CD 1E           VMJ  ($1E)
13360  FA44             
13361  FA44             TOK_INBUF_28: ; $FA44
13362  FA44 24              LDA  UL
13363  FA45 BE FA 58        SJP  (DEC_OPN)
13364  FA48 2A              STA  UL
13365  FA49 83 06           BCS TOK_INBUF_29 ; $FA51
13366  FA4B CD 3C           VMJ  ($3C)
13367  FA4D 9B 85           BZS TOK_INBUF_15 ; $F9CA
13368  FA4F 9E 0D           BCH TOK_INBUF_28 ; $FA44
13369  FA51             
13370  FA51             TOK_INBUF_29: ; $FA51
13371  FA51 FD 0A           POP  X
13372  FA53 A4              LDA  UH
13373  FA54 68 00           LDI  UH,$00
13374  FA56 9E E0           BCH TOK_INBUF_4 ; $F978
13375  FA58             
13376  FA58             
13377  FA58             
13378  FA58             ;------------------------------------------------------------------------------
13379  FA58             ; $FA58 - Decrements accumulator (OPN byte) in 2K steps
13380  FA58             ;------------------------------------------------------------------------------
13381  FA58             DEC_OPN: ; 
13382  FA58 BF 3C           BII  A,$3C
13383  FA5A 8B 05           BZS DEC_OPN_1 ; $FA61
13384  FA5C FB              SEC
13385  FA5D B1 04           SBI  A,$04
13386  FA5F F9              REC
13387  FA60 9A              RTN
13388  FA61             
13389  FA61             DEC_OPN_1: ; $FA61
13390  FA61 DB              ROL
13391  FA62 B5 DC           LDI  A,$DC
13392  FA64 9A              RTN
13393  FA65             
13394  FA65             
13395  FA65             
13396  FA65             ;------------------------------------------------------------------------------
13397  FA65             ; $FA65 - Sets PV bit and PV byte according to Carry bit 0 or 1.
13398  FA65             ;------------------------------------------------------------------------------
13399  FA65             SET_PV: ; 
13400  FA65 B9 FE           ANI  A,$FE
13401  FA67 FD BE           RIE
13402  FA69 B8              RPV
13403  FA6A 81 02           BCR SET_PV_1 ; $FA6E
13404  FA6C A8              SPV
13405  FA6D DD              INC  A
13406  FA6E             
13407  FA6E             SET_PV_1: ; $FA6E
13408  FA6E AE 79 D0        STA  (PU_PV)
13409  FA71 FD 81           SIE
13410  FA73 9A              RTN
13411  FA74             
13412  FA74             
13413  FA74             
13414  FA74             ;------------------------------------------------------------------------------
13415  FA74             ; (3C) $FA74 - Checks whether a certain token table (whose right-shifted 
13416  FA74             ; high-byte address is in the accumulator, exists. If not, C=0.
13417  FA74             ;------------------------------------------------------------------------------
13418  FA74             TOKEN_CHECK: ; $FA74
13419  FA74 D9              SHL
13420  FA75             
13421  FA75             ; $FA75 Checks whether there is a corresponding token table for a token.
13422  FA75             TOKEN_CHECK_1: ; $FA75
13423  FA75 08              STA  XH
13424  FA76 A5 79 D0        LDA  (PU_PV)
13425  FA79 FD C8           PSH  A
13426  FA7B BE FA 65        SJP  (SET_PV)
13427  FA7E 4A 00           LDI  XL,$00
13428  FA80 05              LDA  (X)
13429  FA81 0A              STA  XL
13430  FA82 FD 8A           POP  A
13431  FA84 4E 55           CPI  XL,$55
13432  FA86 89 A2           BZR PV_BANK
13433  FA88 9A              RTN
13434  FA89             
13435  FA89             
13436  FA89             
13437  FA89             ;------------------------------------------------------------------------------
13438  FA89             ; (1C) $FA89 - Processes tokens corresponding to data bytes
13439  FA89             ;------------------------------------------------------------------------------
13440  FA89             TOK_PROCESS: ; $FA89
13441  FA89 FD 0A           POP  X
13442  FA8B 45              LIN  X
13443  FA8C FD 88           PSH  X
13444  FA8E 6C F2           CPI  UH,$F2
13445  FA90 83 50           BCS TOK_PROCESS_10 ; $FAE2
13446  FA92 FD C8           PSH  A
13447  FA94 E9 79 D1 FC     ANI  (OPN),$FC
13448  FA98 A5 79 D1        LDA  (OPN)
13449  FA9B 6C F0           CPI  UH,$F0
13450  FA9D 89 05           BZR TOK_PROCESS_3 ; $FAA4
13451  FA9F             
13452  FA9F             TOK_PROCESS_1: ; $FA9F
13453  FA9F FD C8           PSH  A
13454  FAA1             
13455  FAA1             TOK_PROCESS_2: ; $FAA1
13456  FAA1 D9              SHL
13457  FAA2 8E 0C           BCH TOK_PROCESS_4 ; $FAB0
13458  FAA4             
13459  FAA4             TOK_PROCESS_3: ; $FAA4
13460  FAA4 B5 60           LDI  A,$60
13461  FAA6 93 07           BCS TOK_PROCESS_2 ; $FAA1
13462  FAA8 FB              SEC
13463  FAA9 A4              LDA  UH
13464  FAAA B9 07           ANI  A,$07
13465  FAAC F1              AEX
13466  FAAD D1              ROR
13467  FAAE 6C E8           CPI  UH,$E8
13468  FAB0             
13469  FAB0             TOK_PROCESS_4: ; $FAB0
13470  FAB0 BE FA 75        SJP  (TOKEN_CHECK_1) ; $FA75
13471  FAB3 81 10           BCR TOK_PROCESS_7 ; $FAC5
13472  FAB5 FD C8           PSH  A
13473  FAB7 4A 51           LDI  XL,$51
13474  FAB9             
13475  FAB9             TOK_PROCESS_5: ; $FAB9
13476  FAB9 44              INC  X
13477  FABA             
13478  FABA             TOK_PROCESS_6: ; $FABA
13479  FABA 44              INC  X
13480  FABB 44              INC  X
13481  FABC 45              LIN  X
13482  FABD B9 0F           ANI  A,$0F
13483  FABF 89 26           BZR TOK_PROCESS_11 ; $FAE7
13484  FAC1 FD 8A           POP  A
13485  FAC3 CD 1E           VMJ  ($1E)
13486  FAC5             
13487  FAC5             TOK_PROCESS_7: ; $FAC5
13488  FAC5 FD 8A           POP  A
13489  FAC7 6C F0           CPI  UH,$F0
13490  FAC9 89 17           BZR TOK_PROCESS_10 ; $FAE2
13491  FACB A7 79 D1        CPA  (OPN)
13492  FACE 89 04           BZR TOK_PROCESS_8 ; $FAD4
13493  FAD0 B5 60           LDI  A,$60
13494  FAD2 8E 05           BCH TOK_PROCESS_9 ; $FAD9
13495  FAD4             
13496  FAD4             TOK_PROCESS_8: ; $FAD4
13497  FAD4 BE FA 58        SJP  (DEC_OPN)
13498  FAD7 83 07           BCS $FAE0
13499  FAD9             
13500  FAD9             TOK_PROCESS_9: ; $FAD9
13501  FAD9 A7 79 D1        CPA  (OPN)
13502  FADC 9B 0A           BZS TOK_PROCESS_8 ; $FAD4
13503  FADE 9E 41           BCH TOK_PROCESS_1 ; $FA9F
13504  FAE0 FD 8A           POP  A
13505  FAE2             
13506  FAE2             TOK_PROCESS_10: ; $FAE2
13507  FAE2 B5 00           LDI  A,$00
13508  FAE4 68 1B           LDI  UH,$1B
13509  FAE6 9A              RTN
13510  FAE7             
13511  FAE7             TOK_PROCESS_11: ; $FAE7
13512  FAE7 FD CA           ADR  X
13513  FAE9 45              LIN  X
13514  FAEA A6              CPA  UH
13515  FAEB 99 34           BZR TOK_PROCESS_5 ; $FAB9
13516  FAED 45              LIN  X
13517  FAEE 26              CPA  UL
13518  FAEF 99 37           BZR TOK_PROCESS_6 ; $FABA
13519  FAF1 6C F0           CPI  UH,$F0
13520  FAF3 89 06           BZR TOK_PROCESS_12 ; $FAFB
13521  FAF5 FD 8A           POP  A
13522  FAF7 FD 2A           POP  U
13523  FAF9 8E 03           BCH TOK_PROCESS_13 ; $FAFE
13524  FAFB             
13525  FAFB             TOK_PROCESS_12: ; $FAFB
13526  FAFB FD 2A           POP  U
13527  FAFD A4              LDA  UH
13528  FAFE             
13529  FAFE             TOK_PROCESS_13: ; $FAFE
13530  FAFE FD C8           PSH  A
13531  FB00 24              LDA  UL
13532  FB01 8B 77           BZS PV_BANK_6 ; $FB7A
13533  FB03 D5              SHR
13534  FB04 83 34           BCS PV_BANK_3 ; $FB3A
13535  FB06 FD C8           PSH  A
13536  FB08 46              DEC  X
13537  FB09 47              LDE  X
13538  FB0A 2A              STA  UL
13539  FB0B 47              LDE  X
13540  FB0C 28              STA  UH
13541  FB0D             
13542  FB0D             TOK_PROCESS_14: ; $FB0D
13543  FB0D 46              DEC  X
13544  FB0E 05              LDA  (X)
13545  FB0F B7 80           CPI  A,$80
13546  FB11 91 06           BCR TOK_PROCESS_14 ; $FB0D
13547  FB13 FD 8A           POP  A
13548  FB15 D1              ROR
13549  FB16 83 08           BCS TOK_PROCESS_15 ; $FB20
13550  FB18 FD 8A           POP  A
13551  FB1A D5              SHR
13552  FB1B 05              LDA  (X)
13553  FB1C B9 0F           ANI  A,$0F
13554  FB1E 8E 0D           BCH PV_BANK_1 ; $FB2D
13555  FB20             
13556  FB20             TOK_PROCESS_15: ; $FB20
13557  FB20 45              LIN  X
13558  FB21 B9 0F           ANI  A,$0F
13559  FB23 DF              DEC  A
13560  FB24 2A              STA  UL
13561  FB25             
13562  FB25             TOK_PROCESS_16: ; $FB25
13563  FB25 F5              TIN
13564  FB26 88 03           LOP  UL,TOK_PROCESS_16 ; $FB25
13565  FB28 FD 8A           POP  A
13566  FB2A             
13567  FB2A             
13568  FB2A             
13569  FB2A             ;------------------------------------------------------------------------------
13570  FB2A             ; $FB2A (1E) - Performs PV banking according to PV byte $79D0.
13571  FB2A             ;------------------------------------------------------------------------------
13572  FB2A             PV_BANK: ; $FB2A
13573  FB2A D1              ROR
13574  FB2B B5 EF           LDI  A,$EF
13575  FB2D             
13576  FB2D             PV_BANK_1: ; $FB2D
13577  FB2D FD C8           PSH  A
13578  FB2F A5 79 D0        LDA  (PU_PV)
13579  FB32 BE FA 65        SJP  (SET_PV)
13580  FB35 FD 8A           POP  A
13581  FB37 9A              RTN
13582  FB38             
13583  FB38             ; $FB38 Execution of functions and trace.
13584  FB38             PV_BANK_2: ; $FB38
13585  FB38 FD C8           PSH  A
13586  FB3A             
13587  FB3A             PV_BANK_3: ; $FB3A
13588  FB3A 6A 28           LDI  UL,$28
13589  FB3C 68 FB           LDI  UH,$FB
13590  FB3E FD A8           PSH  U
13591  FB40 FD 6A           STX  U
13592  FB42 65              LIN  U
13593  FB43 08              STA  XH
13594  FB44 65              LIN  U
13595  FB45 0A              STA  XL
13596  FB46 65              LIN  U
13597  FB47 D9              SHL
13598  FB48 D9              SHL
13599  FB49 83 2A           BCS PV_BANK_4 ; $FB75
13600  FB4B 2A              STA  UL
13601  FB4C 68 12           LDI  UH,$12
13602  FB4E A5 78 8C        LDA  (NUMARGS)
13603  FB51 DF              DEC  A
13604  FB52 89 25           BZR PV_BANK_5 ; $FB79
13605  FB54 B5 B2           LDI  A,$B2
13606  FB56 A7 7A 04        CPA  (ARX + $04)
13607  FB59 B5 00           LDI  A,$00
13608  FB5B D1              ROR
13609  FB5C 68 11           LDI  UH,$11
13610  FB5E 22              ADC  UL
13611  FB5F D9              SHL
13612  FB60 83 17           BCS PV_BANK_5 ; $FB79
13613  FB62 6E 80           CPI  UL,$80
13614  FB64 81 0F           BCR PV_BANK_4 ; $FB75
13615  FB66 84              LDA  XH
13616  FB67 B7 80           CPI  A,$80
13617  FB69 BB 80           ORI  A,$80
13618  FB6B 08              STA  XH
13619  FB6C 81 07           BCR PV_BANK_4 ; $FB75
13620  FB6E FD 88           PSH  X
13621  FB70 D2              VEJ  (D2) \ ABRF($FB77) \ ABYT($80)
13621  FB71 05          
13621  FB72 80          
13622  FB73 FD 0A           POP  X
13623  FB75             
13624  FB75             PV_BANK_4: ; $FB75
13625  FB75 FD 5E           STX  P
13626  FB77 FD 0A           POP  X
13627  FB79             
13628  FB79             PV_BANK_5: ; $FB79
13629  FB79 9A              RTN
13630  FB7A             
13631  FB7A             PV_BANK_6: ; $FB7A
13632  FB7A FD 6A           STX  U
13633  FB7C 65              LIN  U
13634  FB7D 08              STA  XH
13635  FB7E 65              LIN  U
13636  FB7F 0A              STA  XL
13637  FB80 D8              VEJ  (D8)
13638  FB81 89 10           BZR PV_BANK_8 ; $FB93
13639  FB83 B5 20           LDI  A,$20
13640  FB85 6D 60           BII  (U),$60
13641  FB87 89 0C           BZR PV_BANK_9 ; $FB95
13642  FB89 68 1A           LDI  UH,$1A
13643  FB8B 45              LIN  X
13644  FB8C A9 76 4F        AND  (DISP_BUFF + $4F)
13645  FB8F 8B 0B           BZS PV_BANK_10 ; $FB9C
13646  FB91             
13647  FB91             PV_BANK_7: ; $FB91
13648  FB91 FD 5E           STX  P
13649  FB93             
13650  FB93             PV_BANK_8: ; $FB93
13651  FB93 B5 00           LDI  A,$00
13652  FB95             
13653  FB95             PV_BANK_9: ; $FB95
13654  FB95 2D              EOR  (U)
13655  FB96 B9 60           ANI  A,$60
13656  FB98 99 09           BZR PV_BANK_7 ; $FB91
13657  FB9A 68 01           LDI  UH,$01
13658  FB9C             
13659  FB9C             PV_BANK_10: ; $FB9C
13660  FB9C E0              VEJ  (E0)
13661  FB9D             
13662  FB9D             
13663  FB9D             
13664  FB9D             ;------------------------------------------------------------------------------
13665  FB9D             ; $FB9D (3E) - Determine and run through the trace routine.
13666  FB9D             ;------------------------------------------------------------------------------
13667  FB9D             TRACE: ; 
13668  FB9D AE 78 8E        STA  (TRACE_PARAM)
13669  FBA0 B7 02           CPI  A,$02
13670  FBA2 A5 78 8D        LDA  (TRACE_ON)
13671  FBA5 8B 21           BZS TRACE_5 ; $FBC8
13672  FBA7 81 12           BCR TRACE_2 ; $FBBB
13673  FBA9 B7 58           CPI  A,$58
13674  FBAB 8B 0E           BZS TRACE_2 ; $FBBB
13675  FBAD CD 3C           VMJ  ($3C)
13676  FBAF 89 08           BZR TRACE_1 ; $FBB9
13677  FBB1 4A 1D           LDI  XL,$1D
13678  FBB3 BE FB 38        SJP  (PV_BANK_2) ; $FB38
13679  FBB6 A4              LDA  UH
13680  FBB7 89 0E           BZR TRACE_4 ; $FBC7
13681  FBB9             
13682  FBB9             TRACE_1: ; $FBB9
13683  FBB9 B5 58           LDI  A,$58
13684  FBBB             
13685  FBBB             TRACE_2: ; $FBBB
13686  FBBB 68 00           LDI  UH,$00
13687  FBBD CD 3C           VMJ  ($3C)
13688  FBBF 4A 1D           LDI  XL,$1D
13689  FBC1 89 03           BZR TRACE_3 ; $FBC6
13690  FBC3 BE FB 38        SJP  (PV_BANK_2) ; $FB38
13691  FBC6             
13692  FBC6             TRACE_3: ; $FBC6
13693  FBC6 A4              LDA  UH
13694  FBC7             
13695  FBC7             TRACE_4: ; $FBC7
13696  FBC7 9A              RTN
13697  FBC8             
13698  FBC8             TRACE_5: ; $FBC8
13699  FBC8 93 11           BCS TRACE_1 ; $FBB9
13700  FBCA 9A              RTN
13701  FBCB             
13702  FBCB             
13703  FBCB             
13704  FBCB             ;------------------------------------------------------------------------------
13705  FBCB             ; $FBCB - Transfer string to output buffer or output to string buffer
13706  FBCB             ;------------------------------------------------------------------------------
13707  FBCB             STRXFR: ; $FBCB
13708  FBCB FD 98           PSH  Y
13709  FBCD 48 7B           LDI  XH,$7B
13710  FBCF 58 7B           LDI  YH,$7B
13711  FBD1 4A 10           LDI  XL,$10
13712  FBD3 5A 60           LDI  YL,$60
13713  FBD5 81 04           BCR STRXFR_1 ;$FBDB
13714  FBD7 4A 60           LDI  XL,$60
13715  FBD9 5A 10           LDI  YL,$10
13716  FBDB             
13717  FBDB             STRXFR_1: ; $FBDB
13718  FBDB 6A 4F           LDI  UL,$4F
13719  FBDD BA DC 28        JMP  ARX_FRM_BSTK_3 ; $DC28
13720  FBE0 E4              VEJ  (E4)
13721  FBE1 E4              VEJ  (E4)
13722  FBE2 E4              VEJ  (E4)
13723  FBE3 E4              VEJ  (E4)
13724  FBE4 E4              VEJ  (E4)
13725  FBE5 E4              VEJ  (E4)
13726  FBE6 E4              VEJ  (E4)
13727  FBE7 E4              VEJ  (E4)
13728  FBE8 E4              VEJ  (E4)
13729  FBE9             
13730  FBE9             
13731  FBE9             
13732  FBE9             ;------------------------------------------------------------------------------
13733  FBE9             ; $FBE9 - Auxiliary constants for arithmetic routines
13734  FBE9             ;------------------------------------------------------------------------------
13735  FBE9             AUX_CONST: ; 
13736  FBE9 FF 00 90        .BYTE  $FF,$00,$90                      ; 0.9
13737  FBEC 00 00 10        .BYTE  $00,$00,$10                      ; 1
13738  FBEF 01 00 90        .BYTE  $01,$00,$90                      ; 90
13739  FBF2 02 00 18        .BYTE  $02,$00,$18                      ; 180
13740  FBF5 FF 00 60        .BYTE  $FF,$00,$60                      ; 0.6
13741  FBF8 00 00 31 41     .BYTE  $00,$00,$31,$41,$59,$26,$53,$59  ; PI= 3.14159265359
13741  FBFC 59 26 53 59 
13742  FC00 00 00 30 10     .BYTE  $00,$00,$30,$10,$29,$99,$56,$64  ; 3.01029995664
13742  FC04 29 99 56 64 
13743  FC08 00 00 41 39     .BYTE  $00,$00,$41,$39,$26,$85,$15,$82  ; 4.13926851582
13743  FC0C 26 85 15 82 
13744  FC10 00 00 43 21     .BYTE  $00,$00,$43,$21,$37,$37,$82,$64  ; 4.32137378264
13744  FC14 37 37 82 64 
13745  FC18 00 00 43 40     .BYTE  $00,$00,$43,$40,$77,$47,$93,$19  ; 4.34077479319
13745  FC1C 77 47 93 19 
13746  FC20 00 00 43 42     .BYTE  $00,$00,$43,$42,$72,$76,$86,$27  ; 4.34272768627
13746  FC24 72 76 86 27 
13747  FC28 00 00 43 42     .BYTE  $00,$00,$43,$42,$92,$31,$04,$45  ; 4.34292310445
13747  FC2C 92 31 04 45 
13748  FC30 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$26,$47,$56  ; 4.34294264756
13748  FC34 94 26 47 56 
13749  FC38 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$46,$01,$89  ; 4.34294460189
13749  FC3C 94 46 01 89 
13750  FC40 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$47,$97,$32  ; 4.34294479732
13750  FC44 94 47 97 32 
13751  FC48 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$16,$86  ; 4.34294481686
13751  FC4C 94 48 16 86 
13752  FC50 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$18,$82  ; 4.34294481882
13752  FC54 94 48 18 82 
13753  FC58 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$19,$01  ; 4.34294481901
13753  FC5C 94 48 19 01 
13754  FC60 FF 00 43 42     .BYTE  $FF,$00,$43,$42,$94,$48,$19,$03  ; 0.434294481903
13754  FC64 94 48 19 03 
13755  FC68 00 00 45 00     .BYTE  $00,$00,$45,$00,$00,$00,$00,$00  ; 4.5
13755  FC6C 00 00 00 00 
13756  FC70 00 00 57 10     .BYTE  $00,$00,$57,$10,$59,$31,$37,$50  ; 5.7105931375
13756  FC74 59 31 37 50 
13757  FC78 00 00 57 29     .BYTE  $00,$00,$57,$29,$38,$69,$76,$83  ; 5.72938697683
13757  FC7C 38 69 76 83 
13758  FC80 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$60,$41,$45  ; 5.72957604145
13758  FC84 57 60 41 45 
13759  FC88 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$79,$32,$21  ; 5.72957793221
13759  FC8C 57 79 32 21 
13760  FC90 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$79,$51,$11  ; 5.72957795111
13760  FC94 57 79 51 11 
13761  FC98 01 00 57 29     .BYTE  $01,$00,$57,$29,$57,$79,$51,$31  ; 57.2957595131
13761  FC9C 57 79 51 31 
13762  FCA0             
13763  FCA0             
13764  FCA0             
13765  FCA0             ;------------------------------------------------------------------------------
13766  FCA0             ; $FCA0 - Character set table
13767  FCA0             ;------------------------------------------------------------------------------
13768  FCA0             CHARSET: ; $FCA0
13769  FCA0 00 00 00 00     .BYTE  $00,$00,$00,$00,$00  ; Space
13769  FCA4 00 
13770  FCA5 00 00 5F 00     .BYTE  $00,$00,$5F,$00,$00  ; !
13770  FCA9 00 
13771  FCAA 00 03 04 03     .BYTE  $00,$03,$04,$03,$00  ; "
13771  FCAE 00 
13772  FCAF 22 7F 22 7F     .BYTE  $22,$7F,$22,$7F,$22  ; #
13772  FCB3 22 
13773  FCB4 24 2A 7F 2A     .BYTE  $24,$2A,$7F,$2A,$12  ; $
13773  FCB8 12 
13774  FCB9 23 13 08 64     .BYTE  $23,$13,$08,$64,$62  ; %
13774  FCBD 62 
13775  FCBE 36 49 55 22     .BYTE  $36,$49,$55,$22,$50  ; &
13775  FCC2 50 
13776  FCC3 63 41 41 41     .BYTE  $63,$41,$41,$41,$63  ; Insert
13776  FCC7 63 
13777  FCC8 00 1C 22 41     .BYTE  $00,$1C,$22,$41,$00  ; (
13777  FCCC 00 
13778  FCCD 00 41 22 1C     .BYTE  $00,$41,$22,$1C,$00  ; )
13778  FCD1 00 
13779  FCD2 14 08 3E 08     .BYTE  $14,$08,$3E,$08,$14  ; *
13779  FCD6 14 
13780  FCD7 08 08 3E 08     .BYTE  $08,$08,$3E,$08,$08  ; +
13780  FCDB 08 
13781  FCDC 00 58 38 00     .BYTE  $00,$58,$38,$00,$00  ; '
13781  FCE0 00 
13782  FCE1 08 08 08 08     .BYTE  $08,$08,$08,$08,$08  ; -
13782  FCE5 08 
13783  FCE6 00 60 60 00     .BYTE  $00,$60,$60,$00,$00  ; .
13783  FCEA 00 
13784  FCEB 20 10 08 04     .BYTE  $20,$10,$08,$04,$02  ; /
13784  FCEF 02 
13785  FCF0 3E 51 49 45     .BYTE  $3E,$51,$49,$45,$3E  ; 0
13785  FCF4 3E 
13786  FCF5 00 42 7F 40     .BYTE  $00,$42,$7F,$40,$00  ; 1
13786  FCF9 00 
13787  FCFA 42 61 51 49     .BYTE  $42,$61,$51,$49,$46  ; 2
13787  FCFE 46 
13788  FCFF 41 49 4D 4B     .BYTE  $41,$49,$4D,$4B,$31  ; 3
13788  FD03 31 
13789  FD04 18 14 12 7F     .BYTE  $18,$14,$12,$7F,$10  ; 4
13789  FD08 10 
13790  FD09 27 45 45 45     .BYTE  $27,$45,$45,$45,$39  ; 5
13790  FD0D 39 
13791  FD0E 3C 4A 49 49     .BYTE  $3C,$4A,$49,$49,$30  ; 6
13791  FD12 30 
13792  FD13 01 01 79 05     .BYTE  $01,$01,$79,$05,$03  ; 7
13792  FD17 03 
13793  FD18 36 49 49 49     .BYTE  $36,$49,$49,$49,$36  ; 8
13793  FD1C 36 
13794  FD1D 06 49 49 29     .BYTE  $06,$49,$49,$29,$1E  ; 9
13794  FD21 1E 
13795  FD22 00 36 36 00     .BYTE  $00,$36,$36,$00,$00  ; :
13795  FD26 00 
13796  FD27 00 5B 3B 00     .BYTE  $00,$5B,$3B,$00,$00  ; 
13796  FD2B 00 
13797  FD2C 08 14 22 41     .BYTE  $08,$14,$22,$41,$00  ; 
13797  FD30 00 
13798  FD31 14 14 14 14     .BYTE  $14,$14,$14,$14,$14  ; =
13798  FD35 14 
13799  FD36 00 41 22 14     .BYTE  $00,$41,$22,$14,$08  ; 
13799  FD3A 08 
13800  FD3B 02 01 51 09     .BYTE  $02,$01,$51,$09,$06  ; ?
13800  FD3F 06 
13801  FD40 32 49 79 41     .BYTE  $32,$49,$79,$41,$3E  ; 
13801  FD44 3E 
13802  FD45 7C 12 11 12     .BYTE  $7C,$12,$11,$12,$7C  ; A
13802  FD49 7C 
13803  FD4A 41 7F 49 49     .BYTE  $41,$7F,$49,$49,$36  ; B
13803  FD4E 36 
13804  FD4F 3E 41 41 41     .BYTE  $3E,$41,$41,$41,$22  ; C
13804  FD53 22 
13805  FD54 41 7F 41 41     .BYTE  $41,$7F,$41,$41,$3E  ; D
13805  FD58 3E 
13806  FD59 7F 49 49 49     .BYTE  $7F,$49,$49,$49,$41  ; E
13806  FD5D 41 
13807  FD5E 7F 09 09 09     .BYTE  $7F,$09,$09,$09,$01  ; F
13807  FD62 01 
13808  FD63 3E 41 41 49     .BYTE  $3E,$41,$41,$49,$39  ; G
13808  FD67 39 
13809  FD68 7F 08 08 08     .BYTE  $7F,$08,$08,$08,$7F  ; H
13809  FD6C 7F 
13810  FD6D 00 41 7F 41     .BYTE  $00,$41,$7F,$41,$00  ; I
13810  FD71 00 
13811  FD72 20 40 41 3F     .BYTE  $20,$40,$41,$3F,$01  ; J
13811  FD76 01 
13812  FD77 7F 08 14 22     .BYTE  $7F,$08,$14,$22,$41  ; K
13812  FD7B 41 
13813  FD7C 7F 40 40 40     .BYTE  $7F,$40,$40,$40,$40  ; L
13813  FD80 40 
13814  FD81 7F 02 0C 02     .BYTE  $7F,$02,$0C,$02,$7F  ; M
13814  FD85 7F 
13815  FD86 7F 04 08 10     .BYTE  $7F,$04,$08,$10,$7F  ; N
13815  FD8A 7F 
13816  FD8B 3E 41 41 41     .BYTE  $3E,$41,$41,$41,$3E  ; O
13816  FD8F 3E 
13817  FD90 7F 09 09 09     .BYTE  $7F,$09,$09,$09,$06  ; P
13817  FD94 06 
13818  FD95 3E 41 51 21     .BYTE  $3E,$41,$51,$21,$5E  ; Q
13818  FD99 5E 
13819  FD9A 7F 09 19 29     .BYTE  $7F,$09,$19,$29,$46  ; R
13819  FD9E 46 
13820  FD9F 26 49 49 49     .BYTE  $26,$49,$49,$49,$32  ; S
13820  FDA3 32 
13821  FDA4 01 01 7F 01     .BYTE  $01,$01,$7F,$01,$01  ; T
13821  FDA8 01 
13822  FDA9 3F 40 40 40     .BYTE  $3F,$40,$40,$40,$3F  ; U
13822  FDAD 3F 
13823  FDAE 07 18 60 18     .BYTE  $07,$18,$60,$18,$07  ; V
13823  FDB2 07 
13824  FDB3 7F 20 18 20     .BYTE  $7F,$20,$18,$20,$7F  ; W
13824  FDB7 7F 
13825  FDB8 63 14 08 14     .BYTE  $63,$14,$08,$14,$63  ; X
13825  FDBC 63 
13826  FDBD 03 04 78 04     .BYTE  $03,$04,$78,$04,$03  ; Y
13826  FDC1 03 
13827  FDC2 61 51 49 45     .BYTE  $61,$51,$49,$45,$43  ; Z
13827  FDC6 43 
13828  FDC7 10 20 7F 01     .BYTE  $10,$20,$7F,$01,$01  ; 
13828  FDCB 01 
13829  FDCC 15 16 7C 16     .BYTE  $15,$16,$7C,$16,$15  ; 
13829  FDD0 15 
13830  FDD1 41 3F 01 3F     .BYTE  $41,$3F,$01,$3F,$41  ; 
13830  FDD5 41 
13831  FDD6 18 04 02 04     .BYTE  $18,$04,$02,$04,$18  ;
13831  FDDA 18 
13832  FDDB 40 40 40 40     .BYTE  $40,$40,$40,$40,$40  ; 
13832  FDDF 40 
13833  FDE0 00 00 00 00     .BYTE  $00,$00,$00,$00,$00  ; 
13833  FDE4 00 
13834  FDE5 38 44 44 3C     .BYTE  $38,$44,$44,$3C,$40  ; a
13834  FDE9 40 
13835  FDEA 7F 48 44 44     .BYTE  $7F,$48,$44,$44,$38  ; b
13835  FDEE 38 
13836  FDEF 38 44 44 44     .BYTE  $38,$44,$44,$44,$20  ; c
13836  FDF3 20 
13837  FDF4 38 44 44 48     .BYTE  $38,$44,$44,$48,$7F  ; d
13837  FDF8 7F 
13838  FDF9 38 54 54 54     .BYTE  $38,$54,$54,$54,$18  ; e
13838  FDFD 18 
13839  FDFE 00 08 7E 09     .BYTE  $00,$08,$7E,$09,$02  ; f
13839  FE02 02 
13840  FE03 08 54 54 3C     .BYTE  $08,$54,$54,$3C,$00  ; g
13840  FE07 00 
13841  FE08 7F 04 04 78     .BYTE  $7F,$04,$04,$78,$00  ; h
13841  FE0C 00 
13842  FE0D 00 00 7D 00     .BYTE  $00,$00,$7D,$00,$00  ; i
13842  FE11 00 
13843  FE12 20 40 44 3D     .BYTE  $20,$40,$44,$3D,$00  ; j
13843  FE16 00 
13844  FE17 7F 10 28 44     .BYTE  $7F,$10,$28,$44,$00  ; k
13844  FE1B 00 
13845  FE1C 00 00 7F 00     .BYTE  $00,$00,$7F,$00,$00  ; l
13845  FE20 00 
13846  FE21 78 04 78 04     .BYTE  $78,$04,$78,$04,$78  ; m
13846  FE25 78 
13847  FE26 7C 08 04 04     .BYTE  $7C,$08,$04,$04,$78  ; n
13847  FE2A 78 
13848  FE2B 38 44 44 44     .BYTE  $38,$44,$44,$44,$38  ; o
13848  FE2F 38 
13849  FE30 7C 14 14 14     .BYTE  $7C,$14,$14,$14,$08  ; p
13849  FE34 08 
13850  FE35 18 24 14 7C     .BYTE  $18,$24,$14,$7C,$40  ; q
13850  FE39 40 
13851  FE3A 7C 08 04 04     .BYTE  $7C,$08,$04,$04,$00  ; r
13851  FE3E 00 
13852  FE3F 48 54 54 54     .BYTE  $48,$54,$54,$54,$20  ; s
13852  FE43 20 
13853  FE44 04 3E 44 20     .BYTE  $04,$3E,$44,$20,$00  ; t
13853  FE48 00 
13854  FE49 3C 40 40 20     .BYTE  $3C,$40,$40,$20,$7C  ; u
13854  FE4D 7C 
13855  FE4E 1C 20 40 20     .BYTE  $1C,$20,$40,$20,$1C  ; v
13855  FE52 1C 
13856  FE53 3C 40 30 40     .BYTE  $3C,$40,$30,$40,$3C  ; w
13856  FE57 3C 
13857  FE58 44 24 7C 48     .BYTE  $44,$24,$7C,$48,$44  ; x
13857  FE5C 44 
13858  FE5D 0C 50 50 3C     .BYTE  $0C,$50,$50,$3C,$00  ; y
13858  FE61 00 
13859  FE62 44 64 54 4C     .BYTE  $44,$64,$54,$4C,$44  ; z
13859  FE66 44 
13860  FE67 00 08 77 41     .BYTE  $00,$08,$77,$41,$00  ; 
13860  FE6B 00 
13861  FE6C 00 00 77 00     .BYTE  $00,$00,$77,$00,$00  ; 
13861  FE70 00 
13862  FE71 00 41 77 08     .BYTE  $00,$41,$77,$08,$00  ; 
13862  FE75 00 
13863  FE76 08 04 08 10     .BYTE  $08,$04,$08,$10,$08  ; 
13863  FE7A 08 
13864  FE7B FF FF FF FF     .BYTE  $FF,$FF,$FF,$FF,$FF  ; Cursor block
13864  FE7F FF 
13865  FE80             
13866  FE80             
13867  FE80             
13868  FE80             ;------------------------------------------------------------------------------
13869  FE80             ; $FE80 - Keyboard layout (basic function)
13870  FE80             ;------------------------------------------------------------------------------
13871  FE80             KB_LAYOUT_NORM: ; 
13872  FE80 0B 4E 59 01     .BYTE  $0B,$4E,$59,$01,$48,$38,$35,$32
13872  FE84 48 38 35 32 
13873  FE88 09 58 57 11     .BYTE  $09,$58,$57,$11,$53,$0F,$2D,$2E
13873  FE8C 53 0F 2D 2E 
13874  FE90 30 4D 55 15     .BYTE  $30,$4D,$55,$15,$4A,$37,$34,$31
13874  FE94 4A 37 34 31 
13875  FE98 0D 28 49 16     .BYTE  $0D,$28,$49,$16,$4B,$4F,$4C,$29
13875  FE9C 4B 4F 4C 29 
13876  FEA0 19 43 45 12     .BYTE  $19,$43,$45,$12,$44,$2F,$2A,$2B
13876  FEA4 44 2F 2A 2B 
13877  FEA8 20 56 52 13     .BYTE  $20,$56,$52,$13,$46,$50,$08,$3D
13877  FEAC 46 50 08 3D 
13878  FEB0 02 5A 51 1B     .BYTE  $02,$5A,$51,$1B,$41,$18,$1F,$0C
13878  FEB4 41 18 1F 0C 
13879  FEB8 0A 42 54 14     .BYTE  $0A,$42,$54,$14,$47,$39,$36,$33
13879  FEBC 47 39 36 33 
13880  FEC0             
13881  FEC0             
13882  FEC0             
13883  FEC0             ;------------------------------------------------------------------------------
13884  FEC0             ; $FEC0 - Keyboard layout (shift function)
13885  FEC0             ;------------------------------------------------------------------------------
13886  FEC0             KB_LAYOUT_SH: ; 
13887  FEC0 5B 6E 79 01     .BYTE  $5B,$6E,$79,$01,$68,$38,$35,$32
13887  FEC4 68 38 35 32 
13888  FEC8 09 78 77 21     .BYTE  $09,$78,$77,$21,$73,$0F,$2C,$2E
13888  FECC 73 0F 2C 2E 
13889  FED0 30 6D 75 25     .BYTE  $30,$6D,$75,$25,$6A,$37,$34,$31
13889  FED4 6A 37 34 31 
13890  FED8 0D 3C 69 26     .BYTE  $0D,$3C,$69,$26,$6B,$6F,$6C,$3E
13890  FEDC 6B 6F 6C 3E 
13891  FEE0 19 63 65 22     .BYTE  $19,$63,$65,$22,$64,$3F,$3A,$3B
13891  FEE4 64 3F 3A 3B 
13892  FEE8 5E 76 72 23     .BYTE  $5E,$76,$72,$23,$66,$70,$1D,$40
13892  FEEC 66 70 1D 40 
13893  FEF0 02 7A 71 1B     .BYTE  $02,$7A,$71,$1B,$61,$1A,$1E,$1C
13893  FEF4 61 1A 1E 1C 
13894  FEF8 5D 62 74 24     .BYTE  $5D,$62,$74,$24,$67,$39,$36,$33
13894  FEFC 67 39 36 33 
13895  FF00             
13896  FF00             
13897  FF00             
13898  FF00             ;------------------------------------------------------------------------------
13899  FF00             ; $FF00 - Table for CALL vectors
13900  FF00             ;------------------------------------------------------------------------------
13901  FF00             CALL_VECTORS: ; $FF00                        Vector>Target, Vector>Target, Vector>Target, Vector>Target
13902  FF00 DC B7 DC B6     .BYTE  $DC,$B7,$DC,$B6,$DC,$C6,$D0,$65 ; $FF(00)>$DCB7, $FF(02)>$DCB6, $FF(04)>$DCC6, $FF(06)>$D065
13902  FF04 DC C6 D0 65 
13903  FF08 DD D9 DE 5E     .BYTE  $DD,$D9,$DE,$5E,$DE,$97,$D4,$61 ; $FF(08)>$DDD9, $FF(0A)>$DE5E, $FF(0C)>$DE97, $FF(0E)>$D461
13903  FF0C DE 97 D4 61 
13904  FF10 DD 2D DF 93     .BYTE  $DD,$2D,$DF,$93,$DF,$FA,$DF,$F5 ; $FF(10)>$DD2D, $FF(12)>$DF93, $FF(14)>$DFFA, $FF(16)>$DFF5
13904  FF14 DF FA DF F5 
13905  FF18 DF 80 D2 E6     .BYTE  $DF,$80,$D2,$E6,$FA,$89,$FB,$2A ; $FF(18)>$DF80, $FF(1A)>$D2E6, $FF(1C)>$FA89, $FF(1E)>$FB2A
13905  FF1C FA 89 FB 2A 
13906  FF20 DF 72 DF 63     .BYTE  $DF,$72,$DF,$63,$DE,$AF,$DB,$87 ; $FF(20)>$DF72, $FF(22)>$DF63, $FF(24)>$DEAF, $FF(26)>$DB87
13906  FF24 DE AF DB 87 
13907  FF28 DB B1 D0 3E     .BYTE  $DB,$B1,$D0,$3E,$DC,$A6,$D6,$C0 ; $FF(28)>$DBB1, $FF(2A)>$D03E, $FF(2C)>$DCA6, $FF(2E)>$D6C0
13907  FF2C DC A6 D6 C0 
13908  FF30 DC 16 D0 71     .BYTE  $DC,$16,$D0,$71,$DF,$23,$DF,$0F ; $FF(30)>$DC16, $FF(32)>$D071, $FF(34)>$DF23, $FF(36)>$DF0F
13908  FF34 DF 23 DF 0F 
13909  FF38 CE 9F CF FB     .BYTE  $CE,$9F,$CF,$FB,$FA,$74,$FB,$9D ; $FF(38)>$CE9F, $FF(3A)>$CFFB, $FF(3C)>$FA74, $FF(3E)>$FB9D
13909  FF3C FA 74 FB 9D 
13910  FF40 C4 01 CA 58     .BYTE  $C4,$01,$CA,$58,$CA,$7A,$CA,$80 ; $FF(40)>$C401, $FF(42)>$CA58, $FF(44)>$CA7A, $FF(46)>$CA80
13910  FF44 CA 7A CA 80 
13911  FF48 DC F9 DC FD     .BYTE  $DC,$F9,$DC,$FD,$DC,$E9,$DC,$ED ; $FF(48)>$DCF9, $FF(4A)>$DCFD, $FF(4C)>$DCE9, $FF(4E)>$DCED
13911  FF4C DC E9 DC ED 
13912  FF50 DA 71 F6 63     .BYTE  $DA,$71,$F6,$63,$F7,$B0,$F7,$3D ; $FF(50)>$DA71, $FF(52)>$F663, $FF(54)>$F7B0, $FF(56)>$F73D
13912  FF54 F7 B0 F7 3D 
13913  FF58 F0 84 E5 73     .BYTE  $F0,$84,$E5,$73,$F6,$1B,$F7,$A7 ; $FF(58)>$F084, $FF(5A)>$E573, $FF(5C)>$F61B, $FF(5E)>$F7A7
13913  FF5C F6 1B F7 A7 
13914  FF60 F6 B4 F8 8B     .BYTE  $F6,$B4,$F8,$8B,$F7,$B5,$F7,$B9 ; $FF(60)>$F6B4, $FF(62)>$F88B, $FF(64)>$F7B5, $FF(66)>$F7B9
13914  FF64 F7 B5 F7 B9 
13915  FF68 F7 15 F8 8F     .BYTE  $F7,$15,$F8,$8F,$F6,$FB,$F0,$80 ; $FF(68)>$F715, $FF(6A)>$F88F, $FF(6C)>$F6FB, $FF(6E)>$F080
13915  FF6C F6 FB F0 80 
13916  FF70 F7 47 F7 CE     .BYTE  $F7,$47,$F7,$CE,$F7,$75,$F7,$5F ; $FF(70)>$F747, $FF(72)>$F7CE, $FF(74)>$F775, $FF(76)>$F75F
13916  FF74 F7 75 F7 5F 
13917  FF78 F7 2F F7 DD     .BYTE  $F7,$2F,$F7,$DD,$F6,$E6,$F0,$1A ; $FF(78)>$F72F, $FF(7A)>$F7DD, $FF(7C)>$F6E6, $FF(7E)>$F01A
13917  FF7C F6 E6 F0 1A 
13918  FF80 F7 07 F7 29     .BYTE  $F7,$07,$F7,$29,$EF,$00,$EB,$40 ; $FF(80)>$F707, $FF(82)>$F729, $FF(84)>$EF00, $FF(86)>$EB40
13918  FF84 EF 00 EB 40 
13919  FF88 ED F6 ED 5B     .BYTE  $ED,$F6,$ED,$5B,$EE,$1F,$ED,$B1 ; $FF(88)>$EDF6, $FF(8A)>$ED5B, $FF(8C)>$EE1F, $FF(8E)>$EDB1
13919  FF8C EE 1F ED B1 
13920  FF90 ED AB ED 00     .BYTE  $ED,$AB,$ED,$00,$EC,$5C,$EA,$78 ; $FF(90)>$EDAB, $FF(92)>$ED00, $FF(94)>$EC5C, $FF(96)>$EA78
13920  FF94 EC 5C EA 78 
13921  FF98 EC 74 EC EB     .BYTE  $EC,$74,$EC,$EB,$EC,$B7,$E4,$A0 ; $FF(98)>$EC74, $FF(9A)>$ECEB, $FF(9C)>$ECB7, $FF(9E)>$E4A0
13921  FF9C EC B7 E4 A0 
13922  FFA0 E2 34 E6 55     .BYTE  $E2,$34,$E6,$55,$B8,$88,$E4,$51 ; $FF(A0)>$E234, $FF(A2)>$E655, $FF(A4)>$B888, $FF(A6)>$E451
13922  FFA4 B8 88 E4 51 
13923  FFA8 B8 8B B8 8E     .BYTE  $B8,$8B,$B8,$8E,$E8,$8C,$B8,$91 ; $FF(A8)>$B88B, $FF(AA)>$B88E, $FF(AC)>$E88C, $FF(AE)>$B891
13923  FFAC E8 8C B8 91 
13924  FFB0 B8 94 B8 97     .BYTE  $B8,$94,$B8,$97,$B8,$9A,$B8,$9D ; $FF(B0)>$B894, $FF(B2)>$B897, $FF(B4)>$B89A, $FF(B6)>$B89D
13924  FFB4 B8 9A B8 9D 
13925  FFB8 B8 A0 F7 63     .BYTE  $B8,$A0,$F7,$63,$E4,$B7,$E4,$A8 ; $FF(B8)>$B8A0, $FF(BA)>$F763, $FF(BC)>$E4B7, $FF(BE)>$E4A8
13925  FFBC E4 B7 E4 A8 
13926  FFC0 DD 08 DC D4     .BYTE  $DD,$08,$DC,$D4,$DC,$D5,$DD,$13 ; $FF(C0)>$DD08, $FF(C2)>$DCD4, $FF(C4)>$DCD5, $FF(C6)>$DD13
13926  FFC4 DC D5 DD 13 
13927  FFC8 DC C5 C0 01     .BYTE  $DC,$C5,$C0,$01,$DD,$C8,$D4,$5D ; $FF(C8)>$DCC5, $FF(CA)>$C001, $FF(CC)>$DDC8, $FF(CE)>$D45D
13927  FFCC DD C8 D4 5D 
13928  FFD0 D5 F9 DD 1A     .BYTE  $D5,$F9,$DD,$1A,$DE,$E3,$DE,$D1 ; $FF(D0)>$D5F9, $FF(D2)>$DD1A, $FF(D4)>$DEE3, $FF(D6)>$DED1
13928  FFD4 DE E3 DE D1 
13929  FFD8 DF 3B C0 0E     .BYTE  $DF,$3B,$C0,$0E,$DE,$BC,$D6,$DF ; $FF(D8)>$DF3B, $FF(DA)>$C00E, $FF(DC)>$DEBC, $FF(DE)>$D6DF
13929  FFDC DE BC D6 DF 
13930  FFE0 CD 8B C4 00     .BYTE  $CD,$8B,$C4,$00,$CD,$89,$F7,$0D ; $FF(E0)>$CD8B, $FF(E2)>$C400, $FF(E4)>$DEBC, $FF(E6)>$F70D
13930  FFE4 CD 89 F7 0D 
13931  FFE8 F6 61 F7 9C     .BYTE  $F6,$61,$F7,$9C,$F7,$57,$F7,$CC ; $FF(E8)>$F661, $FF(EA)>$F79C, $FF(EC)>$F757, $FF(EE)>$F7CC
13931  FFEC F7 57 F7 CC 
13932  FFF0 EF BA EE 71     .BYTE  $EF,$BA,$EE,$71,$DB,$BC,$DD,$B5 ; $FF(F0)>$EFBA, $FF(F2)>$EE71, $FF(F4)>$D8BC, $FF(F6)>$DDB5
13932  FFF4 DB BC DD B5 
13933  FFF8 E1 71 E2 2C     .BYTE  $E1,$71,$E2,$2C,$E2,$2B,$E0,$00 ; $FF(F8)>$E171, $FF(FA)>$E22C, $FF(FC)>$E22B, $FF(FE)>$E000
13933  FFFC E2 2B E0 00 
13934  10000             
13935  10000             .END
tasm: Number of errors = 0
