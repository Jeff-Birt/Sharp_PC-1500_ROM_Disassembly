0001   0000             ; PC-1500_ROM-A03.lh5801.asm
0002   0000             ; PEEK &C443=59 (&3B). PEEK &C5BD=129 (&81). 
0003   0000             ; Disassembly of ROM version 
0004   0000             ; To fold: Hightlight Ctrl+K Ctrl+,
0005   0000             ;
0006   0000             
0007   0000             ; PC-1500 versions via CGH
0008   0000             ; Checksum  Peeks     : Version    - Notes
0009   0000             ; &B1D9     {56, 129} : A01 = ROM0 - PC1500 (early-mid 1982) -> PEEK &E2B9 <> 56, 
0010   0000             ; which makes the keyboard driver unusable.
0011   0000             ; &NNNN     {xx, yy}  : A02 = ROM? - No information or to be specified.
0012   0000             ; &AE48     {59, 129} : A03 = ROM1 - PC1500 (12/1982) = PC2
0013   0000             ; &AA1E     {59, 74}  : A04 = ROM2 - PC1500 = PC1500A = PC2
0014   0000             ; &7CCD     {xx, yy}  : A0x = ROM(3) ? PC1600 (A priori the ROM1500 in the PC1600 is different)
0015   0000             ; (NB: the values in curly brackets are the results of PEEK &C443 and PEEK &C5BD respectively).
0016   0000             
0017   0000             ; The code to calculate the ROM checksum:
0018   0000             ; POKE &78C0,&34,&08,&0A,&2A,&68,&C0,&65,&FD,&CA,&6C,&00,&99,&07,&FB,&9A
0019   0000             ; Then do CALL &78C0,X as an output, the checksum is in X. If X is negative, press 65536-X
0020   0000             
0021   0000             #INCLUDE    "lib/PC-1500.lib"
0001+  0000              ; PC-1500 library file
0002+  0000             RAM_ST            = $4000 ; Start of RAM w/o RAM expansion
0003+  0000             RESMEM_ST         = $4008 ; Reserve memroy area area w/o RAM expansion (4008-40C4)
0004+  0000             PRGMEM_ST         = $40C5 ; Start of program memory w/o RAM expansion
0005+  0000             RAM_END           = $47FF ; End of RAM for stock, CE-151, CE-159
0006+  0000             SHADOW_RAM        = $7000 ; Shadow RAM. 7600-77FF mirrored at 7000-71FF, 7200-73FF, 7400-75FF
0007+  0000             SHADOW_RAM_SIZE   = $0600 ; 
0008+  0000             DISP_BUFF         = $7600 ; Display Buffer (7600-774F)
0009+  0000             DISP_BUFF_SIZE    = $0150 ; 
0010+  0000             STRING_VARS       = $7650 ; Fixed String variables (7650-77AF)
0011+  0000             STRING_VARS_SIZE  = $01AF ; 
0012+  0000             CPU_STACK         = $7800 ; CPU stack (7800-784F)
0013+  0000             CPU_STACK_SIZE    = $50   ; 
0014+  0000             KATAFLAGS         = $785D ; Katakana displayed flags
0015+  0000             KATACHAR          = $785E ; Address of Katakana character codes (H)
0016+  0000             ST_ROM_MOD        = $7860 ; 
0017+  0000             ROM_ST_H          = $7861 ; Start of Basic program in ROM module (H)
0018+  0000             ROM_ST_L          = $7862 ; Start of Basic program in ROM module (L)
0019+  0000             RAM_ST_H          = $7863 ; Start of RAM pointer (H)
0020+  0000             RAM_END_H         = $7864 ; End of RAM pointer (H)
0021+  0000             BASPRG_ST_H       = $7865 ; Start of Basic program in RAM (H)
0022+  0000             BASPRG_ST_L       = $7866 ; Start of Basic program in RAM (L)
0023+  0000             BASPRG_END_H      = $7867 ; End of Basic program in RAM (H)
0024+  0000             BASPRG_END_L      = $7868 ; End of Basic program in RAM (L)
0025+  0000             BASPRG_EDT_H      = $7869 ; Start of Basic program edit (H)
0026+  0000             BASPRG_EDT_L      = $786A ; Start of Basic program edit (L)
0027+  0000             BEEP_PTR          = $786B ; BEEP and RMT flags
0028+  0000             RCLTEMPBUFF       = $786C ; RCL Temp buffer (786C-7870)
0029+  0000             RCLTEMPBUFF_SIZE  = $05   ; 
0030+  0000             WAIT_CFG          = $7871 ; WAIT setting
0031+  0000             WAIT_CTR_H        = $7872 ; WAIT time counter (H)
0032+  0000             WAIT_CTR_L        = $7873 ; WAIT time counter (L)
0033+  0000             CURSOR_ENA        = $7874 ; Flags: 01=Cursor enabled, 80=display currently saved 7B10-7BAB
0034+  0000             CURSOR_PTR        = $7875 ; CURSOR POINTER (current display column number)
0035+  0000             CHARPOS_LCD       = $7876 ; Character position number in display, with INPUT statement
0036+  0000             BEEP_FREQ         = $7878 ; BEEP frequency
0037+  0000             CASS_FLAG         = $7879 ; Cassette Operation Parameter (tape interface flag)
0038+  0000             CURSOR_BLNK       = $787C ; Flags: 01=blink cursor enabled, 80=a character is now blinked
0039+  0000             BLNKD_CHAR_CODE   = $787D ; Code of character blinked
0040+  0000             CURS_POS_NBUF_H   = $787E ; Position of blink cursor in buffer (H)
0041+  0000             CURS_POS_NBUF_L   = $787F ; Position of blink cursor in buffer (L)
0042+  0000             DISPARAM          = $7880 ; Display Parameter: determines display at READY
0043+  0000             STK_PTR_GSB_FOR   = $7882 ; Stack pointer for GOSUB and FOR
0044+  0000             CURVARADD_H       = $7883 ; Current variable address (H)
0045+  0000             CURVARADD_L       = $7884 ; Current variable address (L)
0046+  0000             CURVARTYPE        = $7885 ; Current variable type
0047+  0000             LASTVARADD_H      = $7886 ; Last variable address (H)
0048+  0000             LASTVARADD_L      = $7887 ; Last variable address (L)
0049+  0000             LASTVARTYPE       = $7888 ; Last variable type
0050+  0000             BREAKPARAM        = $788A ; BREAK flag parameter
0051+  0000             INBUFPTR_L        = $788B ; Input Buffer pointer (L)
0052+  0000             NUMARGS           = $788C ; Number of function input arguments, array dim 1/2
0053+  0000             TRACE_ON          = $788D ; TRACE ON/OFF pointer: 00=OFF, >0=ON 
0054+  0000             TRACE             = $788E ; TRACE Parameter
0055+  0000             FORNXT_STK_PTR    = $7890 ; FOR/NEXT stack pointer (L)
0056+  0000             GOSB_STK_PTR_L    = $7891 ; GOSUB stack pointer (L)
0057+  0000             BAS_DATA_STK_L    = $7892 ; BASIC DATA STACK pointer (L)
0058+  0000             BAS_PENOP_STK_L   = $7893 ; BASIC PENDING OP STACK pointer (L)
0059+  0000             STR_BUF_PTR_L     = $7894 ; String Buffer Pointer (L)
0060+  0000             USINGF            = $7895 ; USING F/F (format, decimal, comma, etc.)
0061+  0000             USINGM            = $7896 ; USING M integer part
0062+  0000             USING_CHR         = $7897 ; USING & character string
0063+  0000             USINGMD           = $7898 ; USING m decimal part
0064+  0000             VAR_START_H       = $7899 ; START OF VARIABLES in main memory (H)
0065+  0000             VAR_START_L       = $789A ; START OF VARIABLES in main memory (L)
0066+  0000             ERL               = $789B ; ERL, Error code
0067+  0000             CURR_LINE_H       = $789C ; Current line number (H)
0068+  0000             CURR_LINE_L       = $789D ; Current line number (L)
0069+  0000             CURR_TOP_H        = $789E ; Beginning address of current program (H)
0070+  0000             CURR_TOP_L        = $789F ; Beginning address of current program (L)
0071+  0000             PREV_ADD_H        = $78A0 ; Previous address (of preceeding line) (H)
0072+  0000             PREV_ADD_L        = $78A1 ; Previous address (of preceeding line) (L)
0073+  0000             PREV_LINE_H       = $78A2 ; Previous line number (H)
0074+  0000             PREV_LINE_L       = $78A3 ; Previous line number (L)
0075+  0000             PREV_TOP_H        = $78A4 ; Begginning of program containing previous line (H)
0076+  0000             PREV_TOP_L        = $78A5 ; Begginning of program containing previous line (L)
0077+  0000             SRCH_ADD_H        = $78A6 ; Address of linefound during search (H)
0078+  0000             SRCH_ADD_L        = $78A7 ; Address of linefound during search (L)
0079+  0000             SRCH_LINE_H       = $78A8 ; Line number found after search (H)
0080+  0000             SRCH_LINE_L       = $78A9 ; Line number found after search (L)
0081+  0000             SRCH_TOP_H        = $78AA ; Beginning of program containing SEARCH line (H)
0082+  0000             SRCH_TOP_L        = $78AB ; Beginning of program containing SEARCH line (L)
0083+  0000             BRK_ADD_H         = $78AC ; Break address (H)
0084+  0000             BRK_ADD_L         = $78AD ; Break address (L)
0085+  0000             BRK_LINE_H        = $78AE ; Break line number (H)
0086+  0000             BRK_LINE_L        = $78AF ; Break line number (L)
0087+  0000             BRK_TOP_H         = $78B0 ; Beginning of program containing BREAK line
0088+  0000             BRK_TOP_L         = $78B1 ; Beginning of program containing BREAK line
0089+  0000             ERR_ADD_H         = $78B2 ; Error address (H)
0090+  0000             ERR_ADD_L         = $78B3 ; Error address (L)
0091+  0000             ERR_LINE_H        = $78B4 ; Error line number (H)
0092+  0000             ERR_LINE_L        = $78B5 ; Error line number (L)
0093+  0000             ERR_TOP_H         = $78B6 ; Beginning address of program containing ERROR line (H)
0094+  0000             ERR_TOP_L         = $78B7 ; Beginning address of program containing ERROR line (L)
0095+  0000             ON_ERR_ADD_H      = $78B8 ; Address jumped to when error occures (H)
0096+  0000             ON_ERR_ADD_L      = $78B9 ; Address jumped to when error occures (L)
0097+  0000             ON_ERR_LINE_H     = $78BA ; Line number jumped to when error occures (H)
0098+  0000             ON_ERR_LINE_L     = $78BB ; Line number jumped to when error occures (L)
0099+  0000             ON_ERR_TOP_H      = $78BC ; Beginning of program containing ON ERROR line (H)
0100+  0000             ON_ERR_TOP_L      = $78BD ; Beginning of program containing ON ERROR line (L)
0101+  0000             DATA_PTR_H        = $78BE ; Pointer for data statement (H)
0102+  0000             DATA_PTR_L        = $78BF ; Pointer for data statement (H)
0103+  0000             FIXED_VARS        = $78C0 ; Fixed Variables (78C0-79CF)
0104+  0000             FIXED_VARS_SIZE   = $0110 ; 
0105+  0000             PU_PV             = $79D0 ; PU/PV flag, ROM Bank: 00=ROM 1, 01=ROM 2
0106+  0000             OPN               = $79D1 ; OPN device code: 60=LCD, 5C=CMT, 58=MGP. C4=LPRT, C0=COM
0107+  0000             UNDEF_REG_79FF    = $79FF ; LOCK mode: 00=LOCK, FF=UNLOCK
0108+  0000             ARX               = $7A00 ; Floating-Point accumulator
0109+  0000             ARX_SIZE          = $08   ; 
0110+  0000             ARZ               = $7A08 ; Scratch register (7A00-7A07)
0111+  0000             ARZ_SIZE          = $08   ; 
0112+  0000             ARY               = $7A10 ; Second operand (7A10-7A17)
0113+  0000             ARY_SIZE          = $08   ; 
0114+  0000             ARU               = $7A18 ; Scratch register (7A18-7A1F)
0115+  0000             ARU_SIZE          = $08   ; 
0116+  0000             ARV               = $7A20 ; Scratch register (7A2-7A27)
0117+  0000             ARV_SIZE          = $08   ; 
0118+  0000             ARW               = $7A28 ; Scratch register (7A28-7A2F)
0119+  0000             ARW_SIZE          = $08   ; 
0120+  0000             ARS               = $7A30 ; Temporary storage register (7A30-7A37)
0121+  0000             ARS_SIZE          = $08   ; 
0122+  0000             B_STACK           = $7A38 ; Basic Stack (7838-7AFF)
0123+  0000             B_STACK_SIZE      = $C8   ; 
0124+  0000             RND_VAL           = $7B00 ; Contain Random number value (7B00-7B07)
0125+  0000             RND_VAL_SIZE      =       ; S
0126+  0000             KEY_REPEAT        = $7B09 ; Key repeat speed
0127+  0000             APOW_CTR_H        = $7B0A ; Auto power down counter (H)
0128+  0000             APOW_CTR_M        = $7B0B ; Auto power down counter (M)
0129+  0000             APOW_CTR_L        = $7B0C ; Auto power down counter (L)
0130+  0000             CURS_BLNK_CTR     = $7B0D ; Cursor blink counter
0131+  0000             CURS_CTRL         = $7B0E ; Cursor Control Parameter
0132+  0000             KEY_LAST          = $7B0F ; Last pressed key code
0133+  0000             STR_BUF           = $7B10 ; String Buffer (7B10-7B5F)
0134+  0000             STR_BUF_SIZE      = $50   ; 
0135+  0000             OUT_BUF           = $7B60 ; Output Buffer (7B60-7BAF)
0136+  0000             OUT_BUF_SIZE      = $50   ; 
0137+  0000             IN_BUF            = $7BB0 ; Input Buffer (7BB0-7BFF)
0138+  0000             IN_BUF_SIZE       = $80   ; 
0139+  0000             
0140+  0000             PC1500_DIV_RESET  = $F004 ; PC1500_DIVIDER_RESET (CE1)
0141+  0000             PC1500_UREG_OUTP  = $F005 ; PC1500_U_REG_OUTPUT (CE1)
0142+  0000             PC1500_SER_XFR    = $F006 ; PC1500_SERIAL_XFR (CE1)
0143+  0000             PC1500_F_REG      = $F007 ; PC1500_F_REG_LD/DIV (CE1)
0144+  0000             PC1500_PRT_C      = $F008 ; PC1500_PRT_C (CE1)
0145+  0000             PC1500_G_REG      = $F009 ; PC1500_G_REG (CE1)
0146+  0000             PC1500_MSK_REG    = $F00A ; PC1500_MSK_REG (CE1)
0147+  0000             PC1500_IF_REG     = $F00B ; PC1500_IF_REG (CE1)
0148+  0000             PC1500_PRT_A_DIR  = $F00C ; PC1500_PRT_A_DIR (CE1)
0149+  0000             PC1500_PRT_B_DIR  = $F00D ; PC1500_PRT_B_DIR (CE1)
0150+  0000             PC1500_PRT_A      = $F00E ; PC1500_PRT_A (CE1)
0151+  0000             PC1500_PRT_B      = $F00F ; PC1500_PRT_B (CE1)0022   0000             #INCLUDE    "lib/CE-150.lib"
0001+  0000              ; CE-150 library file
0002+  0000             USER_CTRX_H       = $79E0 ; CE-150, USER COUNTER X (Counter for X coord. of pen) (H)
0003+  0000             USER_CTRX_L       = $79E1 ; CE-150, USER COUNTER X (Counter for X coord. of pen) (L)
0004+  0000             USER_CTRY_H       = $79E2 ; CE-150, USER COUNTER Y (Counter for Y coord. of pen) (H)
0005+  0000             USER_CTRY_L       = $79E3 ; CE-150, USER COUNTER Y (Counter for Y coord. of pen) (L)
0006+  0000             SCIS_CTRY_H       = $79E4 ; CE-150, SCISSORING COUNTER Y (Y dir scissoring counter) (H)
0007+  0000             SCIS_CTRY_L       = $79E5 ; CE-150, SCISSORING COUNTER Y (Y dir scissoring counter) (L)
0008+  0000             ABS_POSX          = $79E6 ; CE-150, ABSOLUTE POSITION X (X dir absolute point counter)
0009+  0000             SCIS_EXTY_H       = $79E7 ; CE-150, SCISSORING COUNTER X (X dir scissoring counter) (H)
0010+  0000             SCIS_EXTY_L       = $79E8 ; CE-150, SCISSORING COUNTER X (X dir scissoring counter) (L)
0011+  0000             PEN_UPDOWN        = $79E9 ; CE-150, Pen UP/DOWN
0012+  0000             LINE_TYPE         = $79EA ; CE-150, LINE TYPE (0 to 9), GRAPH mode
0013+  0000             DOT_LINE_CTR      = $79EB ; CE-150, Dotted line counter
0014+  0000             CURR_PEN          = $79EC ; CE-150, Current Pen position: 00=up, 01=down
0015+  0000             XMTR_HLD_CTR      = $79ED ; CE-150, X-motor hold counter
0016+  0000             MTR_PHASE         = $79EE ; CE-150, Motor Phase: stored in Port C
0017+  0000             YMTR_HLD_CTR      = $79EF ; CE-150, Y-Motor hold counter
0018+  0000             PRNT_MODE         = $79F0 ; CE-150, Print Mode: 00=TEXT, FF=GRAPH
0019+  0000             PRNT_DISABLE      = $79F1 ; CE-150, Printer disable
0020+  0000             PRNT_ROTATE       = $79F2 ; CE-150, ROTATE setting (0 to 3)
0021+  0000             PRNT_COLOR        = $79F3 ; CE-150, COLOR setting (0 to 3)
0022+  0000             PRNT_CSIZE        = $79F4 ; CE-150, CSIZE setting (0 to 3)
0023+  0000             PRNT_LLPARAM      = $79F5 ; CE-150, LPRINT/LLIST Parameter
0024+  0000             PRNT_TEMPM        = $79F6 ; CE-150, LINE=dir. param. LLIST=determine LF. COLOR=Pen location.
0025+  0000             PRNT_DTYPE        = $79F7 ; CE-150, Type of data LRPINTed: 00=numeric, FF=character string
0026+  0000             PRNT_TEMPP        = $79F8 ; CE-150, Temp storage of Pen location during paper feed
0027+  0000             PRNT_PWRINT       = $79F9 ; CE-150, Flag indicating power up/interrupt in progress
0028+  0000             PRNT_VEC          = $A000 ; CE-150 Character vectors (A000-A28A)
0029+  0000             PRNT_VEC_SIZE     = $028B ; 
0030+  0000             MGP1_150          = $A28B ; Start of MGP 1 program block
0031+  0000             COLDES            = $A519 ; CE-150 Color Designation
0032+  0000             MOTOFF            = $A769 ; CE-150 Printer motor OFF
0033+  0000             PRINT_150         = $A781 ; CE-150 Print ASCII character (no LF)
0034+  0000             MOTDRV            = $A8DD ; CE-150 Motor Drive, move pen
0035+  0000             LFEED             = $A951 ; CE-150 Line Feed
0036+  0000             NLFEED            = $AA04 ; CE-150 send #n line feeds to printer
0037+  0000             PENUPDOWN         = $AAE3 ; CE-150 Pen Up/Down
0038+  0000             GRPHPREP          = $ABEF ; CE-150 Switch from tect to graphics mode
0039+  0000             TEXT              = $ACA6 ; CE-150 TEXT
0040+  0000             TEXTPREP          = $ACD3 ; CE-150 Text mode preperation
0041+  0000             GRAPH             = $ACD3 ; CE-150 GRAPH
0042+  0000             CE150_MSK_REG     = $B00A ; (ME1)
0043+  0000             CE150_IF_REG      = $B00B ; (ME1)
0044+  0000             CE150_PRT_A_DIR   = $B00C ; (ME1)
0045+  0000             CE150_PRT_B_DIR   = $B00D ; (ME1)
0046+  0000             CE150_PRT_A       = $B00E ; (ME1)
0047+  0000             CE150_PRT_B       = $B00F ; (ME1)
0048+  0000             SORGN             = $B153 ; CE-150 SORGN
0049+  0000             ROTATE            = $B15A ; CE-150 ROTATE
0050+  0000             COLOR             = $B16A ; CE-150 COLOR
0051+  0000             CSIZE             = $B180 ; CE-150 CSIZE
0052+  0000             GLCURSOR          = $B191 ; CE-150 GLCURSOR
0053+  0000             LF                = $B1B4 ; CE-150 LF
0054+  0000             LINE              = $B222 ; CE-150 LINE
0055+  0000             RLINE             = $B224 ; CE-150 RLINE
0056+  0000             LPRINT_150        = $B2EC ; CE-150 LPRINT
0057+  0000             LLIST_150         = $B754 ; CE-150 LLIST
0058+  0000             SBRA4             = $B888 ; SBR A4 Start of program block CMT 2
0059+  0000             SBRA8             = $B88B ; SBR A8
0060+  0000             SBRAA             = $B88E ; SBR AA
0061+  0000             SBRAE             = $B891 ; SBR AE
0062+  0000             SBRB0             = $B894 ; SBR B0
0063+  0000             SBRB2             = $B897 ; SBR B2
0064+  0000             SBRB4             = $B89A ; SBR B4
0065+  0000             SBRB6             = $B89D ; SBR B6
0066+  0000             SBRB8             = $B8A0 ; SBR B8
0067+  0000             PCJUMP01          = $B8A3 ; Direct PC load from &E524
0068+  0000             CSAVE_150         = $B8A6 ; CE-150 CSAVE
0069+  0000             CLOAD_150         = $B8F9 ; CE-150 CLOAD
0070+  0000             MERGE_150         = $B994 ; CE-150 MERGE
0071+  0000             CHAIN_150         = $BB6A ; CE-150 CHAIN
0072+  0000             HEADERCREATE      = $BBD6 ; CE-150 Write tape synchronisation header
0073+  0000             TERMCMTIO         = $BBF5 ; CE-150 Finalisation of tape I/O control
0074+  0000             HEADERIO          = $BCE8 ; CE-150 Read tape synchronisation feader / Searh for filename
0075+  0000             FILETRSF          = $BD3C ; CE-150 Read / Write file to tape
0076+  0000             SAVEONECHR        = $BDCC ; CE-150 Send a character to tape
0077+  0000             LOADONECHR        = $BDF0 ; CE-150 Read a character from tape
0078+  0000             RMT               = $BEF9 ; CE-150 RMT
0079+  0000             REMOTEON          = $BF11 ; CE-150 Remote ON
0080+  0000             REMOTEOFF         = $BF43 ; CE-150 Remote OFF
0023   0000             ; #INCLUDE    "lib/CE-158.lib"
0024   0000             ; #INCLUDE    "lib/CE-158N.lib"
0025   0000             #INCLUDE    "lib/PC-1500_Macros.lib"
0001+  0000             ; PC-1500 Macros
0002+  0000             ;------------------------------------------------------------------------------------------------------------
0003+  0000             ; Assembly macros used to encode arguments for lh5801 'macros' that take arguments inline after CALL
0004+  0000             
0005+  0000             #define EQU .EQU
0006+  0000             .MSFIRST
0007+  0000             
0008+  0000             COMMA:      EQU $2C                         ; ',' used for macros
0009+  0000             CR:         EQU $0D                         ; '/CR' used for macros
0010+  0000             DASH:       EQU $2D                         ; '-' used for macros
0011+  0000             EQUALS:     EQU $3D                         ; '-' used for macros
0012+  0000             HASH:       EQU $23                         ; '#' used for macros
0013+  0000             SEMI:       EQU $3B                         ; ';' used for macros
0014+  0000             QUOTE:      EQU $22                         ; '-' used for macros
0015+  0000             DOLLAR:     EQU $24                         ; '#' used for macros
0016+  0000             PERCENT:    EQU $25                         ; ';' used for macros
0017+  0000             
0018+  0000             
0019+  0000             TOK_OFF:    EQU $F19E                       ; OFF   command token
0020+  0000             TOK_ON:     EQU $F19C                       ; ON    command token
0021+  0000             TOK_TAB:    EQU $F0BB                       ; TAB   command token
0022+  0000             TOK_USING:  EQU $F085                       ; USING command token
0023+  0000             
0024+  0000             
0025+  0000             #define ABRF(n8)        .BYTE n8 - $ - 1    ; calculate forward branch
0026+  0000             #define ABYT(n8)        .BYTE n8            ; use byte verbatium
0027+  0000             #define ABYTL(n16)      .BYTE n16 & $FF     ; use byte verbatium
0028+  0000             #define ACHR(ch)        .BYTE ch            ; character
0029+  0000             #define AWRD(n16)       .WORD n16           ; use word value verbatum
0030+  0000             #define CNIB(n81,n82)   .BYTE ((n81 & $F0) | (n82 & $0F))   ; calculates control nibble
0031+  0000             #define HB(n16)         (n16 >> 8)          ; Return HB of 16bit value
0032+  0000             #define LB(n16)         (n16 & $FF)         ; Return HB of 16bit value
0033+  0000             #define HBO(n16,n8)     ((n16 + n8) >> 8)   ; Return HB of 16bit value
0034+  0000             #define LBO(n16,n8)     ((n16 + n8) & $FF)  ; Return HB of 16bit value
0035+  0000             
0036+  0000             ; CE-158 related
0037+  0000             #define HIGH_BANK       SPU \ SPV           ; Switch to High Bank
0038+  0000             #define LOW_BANK        RPU \ SPV           ; Switch to High Bank
0039+  0000             #define SETCOM_M        LDI A,$F9 \ STA (SETCOM_REG)    ; SETDEV to 2400,8,N,1
0040+  0000             #define SETDEV_M(n8)    LDI A,n8 \ STA (SETDEV_REG)     ; SETCOM to device passed
0041+  0000             #define SETOPN_M(n8)    LDI A,n8 \ STA (OPN)            ; Set OPN to n8 table
0042+  0000             
0043+  0000             KI:                 EQU $01                     ;
0044+  0000             DO:                 EQU $02                     ;
0045+  0000             PO:                 EQU $04                     ;
0046+  0000             CI:                 EQU $08                     ;
0047+  0000             CO:                 EQU $10                     ;
0048+  0000             U1:                 EQU $20                     ; U1, use UART 1 (Bit5=0=UART0, Bit5=1=UART1)
0049+  0000             PN:                 EQU $40                     ; PN, LPT port to input
0050+  0000             BP:                 EQU $80                     ; BP, enable BDP mode with U0
0051+  0000             
0052+  0000             #define ADDRCHK(add,location)        #if ($ > add)    ; check address
0053+  0000             #DEFCONT                     \!over_run
0054+  0000             #DEFCONT                     \.ECHO location
0055+  0000             #DEFCONT                     \.ECHO " address over run by "
0056+  0000             #DEFCONT                     \.ECHO ($ - add)
0057+  0000             #DEFCONT                     \.ECHO " bytes\r\n"
0058+  0000             #DEFCONT                     \#endif
0026   0000             
0027   0000             ; Modifications enabled by uncommenting #DEFINEs.
0028   0000             ; DEFINE  - Description
0029   0000             ; DEFINE  - Description
0030   0000             
0031   C000             .org $C000
0032   C000             
0033   C000             ;------------------------------------------------------------------------------
0034   C000             ; $C000 - BASIC Command Table $C000. This is not a normal token table though.
0035   C000             ; From $C001~$C01C are two small OS functions
0036   C000             ; $C01D~$C01F is the normal TRACE vector 
0037   C000             ; $C020~$C053 Token table pointers for for built in commands
0038   C000             ; $C054~$C34E Token table for built in commands
0039   C000             ;------------------------------------------------------------------------------
0040   C000             ST_MAIN_ROM: ; $C000
0041   C000 55              .BYTE  $55
0042   C001             
0043   C001             
0044   C001             
0045   C001             ;------------------------------------------------------------------------------
0046   C001             ; $C001 - (CA) Transfer 16-bit value from X-Reg to memory page 7BXX
0047   C001             ;            Address: $C001 (CA)
0048   C001             ;                     D1: sets low byte in memory page 78XX
0049   C001             ;   Entry parameters: None
0050   C001             ;
0051   C001             ; Modified registers: X-Reg was saved after (7801 f.). U-Reg points to the 
0052   C001             ;                     next address of 7801. Accumulator = XL
0053   C001             ;   Error conditions: None
0054   C001             ;------------------------------------------------------------------------------
0055   C001             SA_XREG_2RAM: 
0056   C001 FD 2A           POP  U
0057   C003 65              LIN  U
0058   C004 FD A8           PSH  U
0059   C006 2A              STA  UL
0060   C007 68 78           LDI  UH,$78
0061   C009 84              LDA  XH
0062   C00A 61              SIN  U
0063   C00B 04              LDA  XL
0064   C00C 2E              STA  (U)
0065   C00D 9A              RTN
0066   C00E             
0067   C00E             
0068   C00E             
0069   C00E             ;------------------------------------------------------------------------------
0070   C00E             ;$C00E - (DA) Variable address from U-Reg, length from AR-X to variable pointer
0071   C00E             ;------------------------------------------------------------------------------
0072   C00E             SAVEVARPTR:
0073   C00E A5 7A 07        LDA  (ARX + $07)
0074   C011             
0075   C011             ; Store address from U-Reg and Accumulator.
0076   C011             SAVEVARPTR_1: ; $C011
0077   C011 AE 78 85        STA  (CURVARTYPE)   ; CURVARTYPE = $7885
0078   C014 24              LDA  UL
0079   C015 AE 78 84        STA  (CURVARADD_L)
0080   C018 A4              LDA  UH
0081   C019 AE 78 83        STA  (CURVARADD_H)
0082   C01C 9A              RTN
0083   C01D             
0084   C01D             
0085   C01D             
0086   C01D             ;------------------------------------------------------------------------------
0087   C01D             ; $C01D - Trace vector of this token table
0088   C01D             ;------------------------------------------------------------------------------
0089   C01D             TRACE_VEC: 
0090   C01D C4 AF           .BYTE  $C4,$AF
0091   C01F FF              .BYTE  $FF
0092   C020             
0093   C020             
0094   C020             
0095   C020             ;------------------------------------------------------------------------------
0096   C020             ; $C020 - Token Tabale pointers. The following addresses point to the 2nd 
0097   C020             ;         letter of the Basic command, where the 1st letter of the commands in
0098   C020             ;         the token table has changed.
0099   C020             ;------------------------------------------------------------------------------
0100   C020             ;% B_TBL_C000 START
0101   C020             
0102   C020             B_TBL_C000_A_KW: ; $C02
0103   C020 C0 56           .WORD  LET_A                                       ; 
0104   C022             
0105   C022             B_TBL_C000_B_KW: ; C022
0106   C022 C0 99           .WORD  LET_B                                       ; 
0107   C024             
0108   C024             B_TBL_C000_C_KW: ; $C024
0109   C024 C0 A2           .WORD  LET_C                                       ; 
0110   C026             
0111   C026             B_TBL_C000_D_KW: ; $C026
0112   C026 C0 E2           .WORD  LET_D                                       ; 
0113   C028             
0114   C028             B_TBL_C000_E_KW: ; $C028
0115   C028 C1 0E           .WORD  LET_E                                       ; 
0116   C02A             
0117   C02A             B_TBL_C000_F_KW: ; $C02A
0118   C02A C1 28           .WORD  LET_F                                       ; 
0119   C02C             
0120   C02C             B_TBL_C000_G_KW: ; $C02C
0121   C02C C1 30           .WORD  LET_G                                       ; 
0122   C02E             
0123   C02E             B_TBL_C000_H_KW: ; $C02E
0124   C02E 00 00           .WORD  $0000                                       ; 
0125   C030             
0126   C030             B_TBL_C000_I_KW: ; $C030
0127   C030 C1 63           .WORD  LET_I                                       ; 
0128   C032             
0129   C032             B_TBL_C000_J_KW: ; $C032
0130   C032 00 00           .WORD  $0000                                       ; 
0131   C034             
0132   C034             B_TBL_C000_K_KW: ; $C034
0133   C034 00 00           .WORD  $0000                                       ; 
0134   C036             
0135   C036             B_TBL_C000_L_KW: ; $C036
0136   C036 C1 87           .WORD  LET_L                                       ; 
0137   C038             
0138   C038             B_TBL_C000_M_KW: ; $C038
0139   C038 C1 C2           .WORD  LET_M                                       ; 
0140   C03A             
0141   C03A             B_TBL_C000_N_KW: ; $C03A
0142   C03A C1 D3           .WORD  LET_N                                       ; 
0143   C03C             
0144   C03C             B_TBL_C000_O_KW: ; $C03C
0145   C03C C1 EC           .WORD  LET_O                                       ; 
0146   C03E             
0147   C03E             B_TBL_C000_P_KW: ; $C03E
0148   C03E C2 0A           .WORD  LET_P                                       ; 
0149   C040             
0150   C040             B_TBL_C000_Q_KW: ; $C040
0151   C040 00 00           .WORD  $0000                                       ; 
0152   C042             
0153   C042             B_TBL_C000_R_KW: ; $C042
0154   C042 C2 5F           .WORD  LET_R                                       ;
0155   C044             
0156   C044             B_TBL_C000_S_KW: ; $C044
0157   C044 C2 B8           .WORD  LET_S                                       ;
0158   C046             
0159   C046             B_TBL_C000_T_KW: ; $C046
0160   C046 C2 F6           .WORD  LET_T                                       ;
0161   C048             
0162   C048             B_TBL_C000_U_KW: ; $C048
0163   C048 C3 2A           .WORD  LET_U                                       ;
0164   C04A             
0165   C04A             B_TBL_C000_V_KW: ; $C04A
0166   C04A C3 3F           .WORD  LET_V                                       ;
0167   C04C             
0168   C04C             B_TBL_C000_W_KW: ; $C04C
0169   C04C C3 47           .WORD  LET_W                                       ;
0170   C04E             
0171   C04E             B_TBL_C000_X_KW: ; $C04E
0172   C04E 00 00           .WORD  $0000                                       ;
0173   C050             
0174   C050             B_TBL_C000_Y_KW: ; $C050
0175   C050 00 00           .WORD  $0000                                       ;
0176   C052             
0177   C052             B_TBL_C000_Z_KW: ; $C052
0178   C052 00 00           .WORD  $0000                                       ;
0179   C054             
0180   C054             
0181   C054             
0182   C054             ;------------------------------------------------------------------------------
0183   C054             ; $C054 - TOKEN TABLE
0184   C054             ;------------------------------------------------------------------------------
0185   C054             B_TBL_C000_CMD_LST:     ;Token LB < 80 command is function, else is proceedure
0186   C054             
0187   C054             ;Addr  Ctrl  Name              Token  Vector
0188   C054             ;Ctrl nibble    Ctrl nib calc            Name                  Token  Vector
0189   C054             LET_A:  EQU ($ + 2) ; First keyword starting with 'A'. LET_A = Address of 'R' in AREAD
0190   C054             CN1:    EQU $A5 \ CNIB($B5,CN1)     \ .TEXT "AREAD"    \ .WORD $F180, $C684          ; $C684 - Basic command 
0190   C054 B5          
0190   C055 41 52 45 41 
0190   C059 44 
0190   C05A F1 80 C6 84 
0191   C05E             CN2:    EQU $A3 \ CNIB(CN1,CN2)     \ .TEXT "AND"      \ .WORD $F150, $CD89          ; $CD89 - Basic command
0191   C05E A3          
0191   C05F 41 4E 44    
0191   C062 F1 50 CD 89 
0192   C066             CN3:    EQU $A3 \ CNIB(CN2,CN3)     \ .TEXT "ABS"      \ .WORD $F170, $F597          ; $F597 - Basic command
0192   C066 A3          
0192   C067 41 42 53    
0192   C06A F1 70 F5 97 
0193   C06E             CN4:    EQU $A3 \ CNIB(CN3,CN4)     \ .TEXT "ATN"      \ .WORD $F175, $F496          ; $F496 - Basic command
0193   C06E A3          
0193   C06F 41 54 4E    
0193   C072 F1 75 F4 96 
0194   C076             CN5:    EQU $A3 \ CNIB(CN4,CN5)     \ .TEXT "ASN"      \ .WORD $F173, $F49A          ; $F49A - Basic command
0194   C076 A3          
0194   C077 41 53 4E    
0194   C07A F1 73 F4 9A 
0195   C07E             CN6:    EQU $A3 \ CNIB(CN5,CN6)     \ .TEXT "ACS"      \ .WORD $F174, $F492          ; $F492 - Basic command
0195   C07E A3          
0195   C07F 41 43 53    
0195   C082 F1 74 F4 92 
0196   C086             CN7:    EQU $83 \ CNIB(CN6,CN7)     \ .TEXT "ASC"      \ .WORD $F160, $D9DD          ; $D9DD - Basic command
0196   C086 A3          
0196   C087 41 53 43    
0196   C08A F1 60 D9 DD 
0197   C08E             CN8:    EQU $B4 \ CNIB(CN7,CN8)     \ .TEXT "ARUN"     \ .WORD $F181, $C684          ; $C684 - Basic command
0197   C08E 84          
0197   C08F 41 52 55 4E 
0197   C093 F1 81 C6 84 
0198   C097             
0199   C097             LET_B:  EQU ($ + 2) ; First keyword starting with 'B'. LET_B = Address of 'E' in BEEP
0200   C097             CN9:    EQU $D4 \ CNIB(CN8,CN9)     \ .TEXT "BEEP"     \ .WORD $F182, $E5C1          ; $E5C1 - Basic command
0200   C097 B4          
0200   C098 42 45 45 50 
0200   C09C F1 82 E5 C1 
0201   C0A0             
0202   C0A0             LET_C:  EQU ($ + 2) ; First keyword starting with 'C'. LET_C = Address of 'O' in CONT
0203   C0A0             CN10:   EQU $84 \ CNIB(CN9,CN10)    \ .TEXT "CONT"     \ .WORD $F183, $C8C7          ; $C8C7 - Basic command
0203   C0A0 D4          
0203   C0A1 43 4F 4E 54 
0203   C0A5 F1 83 C8 C7 
0204   C0A9             CN11:   EQU $C6 \ CNIB(CN10,CN11)   \ .TEXT "CURSOR"   \ .WORD $F084, $E846          ; $E846 - Basic command
0204   C0A9 86          
0204   C0AA 43 55 52 53 
0204   C0AE 4F 52 
0204   C0B0 F0 84 E8 46 
0205   C0B4             CN12:   EQU $C5 \ CNIB(CN11,CN12)   \ .TEXT "CLEAR"    \ .WORD $F187, $C85F          ; $C85F - Basic command
0205   C0B4 C5          
0205   C0B5 43 4C 45 41 
0205   C0B9 52 
0205   C0BA F1 87 C8 5F 
0206   C0BE             CN13:   EQU $C3 \ CNIB(CN12,CN13)   \ .TEXT "CLS"      \ .WORD $F088, $E865          ; $E865 - Basic command
0206   C0BE C3          
0206   C0BF 43 4C 53    
0206   C0C2 F0 88 E8 65 
0207   C0C6             CN14:   EQU $A3 \ CNIB(CN13,CN14)   \ .TEXT "COS"      \ .WORD $F17E, $F391          ; $F391 - Basic command
0207   C0C6 C3          
0207   C0C7 43 4F 53    
0207   C0CA F1 7E F3 91 
0208   C0CE             CN15:   EQU $A4 \ CNIB(CN14,CN15)   \ .TEXT "CHR$"     \ .WORD $F163, $D9B1          ; $D9B1 - Basic command
0208   C0CE A4          
0208   C0CF 43 48 52 24 
0208   C0D3 F1 63 D9 B1 
0209   C0D7             CN16:   EQU $D4 \ CNIB(CN15,CN16)   \ .TEXT "CALL"     \ .WORD $F18A, $C863          ; $C863 - Basic command
0209   C0D7 A4          
0209   C0D8 43 41 4C 4C 
0209   C0DC F1 8A C8 63 
0210   C0E0             
0211   C0E0             LET_D:  EQU ($ + 2) ; First keyword starting with 'D'. LET_D= Address of 'I' in DIM
0212   C0E0             CN17:   EQU $C3 \ CNIB(CN16,CN17)   \ .TEXT "DIM"      \ .WORD $F18B, $C988          ; $C988 - Basic command
0212   C0E0 D3          
0212   C0E1 44 49 4D    
0212   C0E4 F1 8B C9 88 
0213   C0E8             CN18:   EQU $C6 \ CNIB(CN17,CN18)   \ .TEXT "DEGREE"   \ .WORD $F18C, $C697          ; $C697 - Basic command
0213   C0E8 C6          
0213   C0E9 44 45 47 52 
0213   C0ED 45 45 
0213   C0EF F1 8C C6 97 
0214   C0F3             CN19:   EQU $A3 \ CNIB(CN18,CN19)   \ .TEXT "DEG"      \ .WORD $F165, $F531          ; $F531 - Basic command
0214   C0F3 C3          
0214   C0F4 44 45 47    
0214   C0F7 F1 65 F5 31 
0215   C0FB             CN20:   EQU $A3 \ CNIB(CN19,CN20)   \ .TEXT "DMS"      \ .WORD $F166, $F564          ; $F654 - Basic command
0215   C0FB A3          
0215   C0FC 44 4D 53    
0215   C0FF F1 66 F5 64 
0216   C103             CN21:   EQU $B4 \ CNIB(CN20,CN21)   \ .TEXT "DATA"     \ .WORD $F18D, $C684          ; $C684 - Basic command
0216   C103 A4          
0216   C104 44 41 54 41 
0216   C108 F1 8D C6 84 
0217   C10C             
0218   C10C             LET_E:  EQU ($ + 2) ; First keyword starting with 'E'. LET_E = Address of 'N' in END
0219   C10C             CN22:   EQU $A3 \ CNIB(CN21,CN22)   \ .TEXT "END"      \ .WORD $F18E, $C50D          ; $C50D - Basic command
0219   C10C B3          
0219   C10D 45 4E 44    
0219   C110 F1 8E C5 0D 
0220   C114             CN23:   EQU $A3 \ CNIB(CN22,CN23)   \ .TEXT "EXP"      \ .WORD $F178, $F1CB          ; $F1CB - Basic command
0220   C114 A3          
0220   C115 45 58 50    
0220   C118 F1 78 F1 CB 
0221   C11C             CN24:   EQU $B5 \ CNIB(CN23,CN24)   \ .TEXT "ERROR"    \ .WORD $F1B4, $CD89          ; $CD89 - Basic command
0221   C11C A5          
0221   C11D 45 52 52 4F 
0221   C121 52 
0221   C122 F1 B4 CD 89 
0222   C126             
0223   C126             LET_F:  EQU ($ + 2) ; First keyword starting with 'F'. LET_F = Address of 'O' in FOR
0224   C126             CN25:   EQU $B3 \ CNIB(CN24,CN25)   \ .TEXT "FOR"      \ .WORD $F1A5, $C711          ; $C711 - Basic command
0224   C126 B3          
0224   C127 46 4F 52    
0224   C12A F1 A5 C7 11 
0225   C12E             
0226   C12E             LET_G:  EQU ($ + 2) ; First keyword starting with 'G'. LET_G = Address of 'O' in GOTO
0227   C12E             CN26:   EQU $C4 \ CNIB(CN25,CN26)   \ .TEXT "GOTO"     \ .WORD $F192, $C515          ; $C515 - Basic command
0227   C12E B4          
0227   C12F 47 4F 54 4F 
0227   C133 F1 92 C5 15 
0228   C137             CN27:   EQU $A5 \ CNIB(CN26,CN27)   \ .TEXT "GOSUB"    \ .WORD $F194, $C64E          ; $C64E - Basic command
0228   C137 C5          
0228   C138 47 4F 53 55 
0228   C13C 42 
0228   C13D F1 94 C6 4E 
0229   C141             CN28:   EQU $C6 \ CNIB(CN27,CN28)   \ .TEXT "GPRINT"   \ .WORD $F09F, $E7AC          ; $E7AC - Basic command
0229   C141 A6          
0229   C142 47 50 52 49 
0229   C146 4E 54 
0229   C148 F0 9F E7 AC 
0230   C14C             CN29:   EQU $C7 \ CNIB(CN28,CN29)   \ .TEXT "GCURSOR"  \ .WORD $F093, $E83E          ; $E83E - Basic command
0230   C14C C7          
0230   C14D 47 43 55 52 
0230   C151 53 4F 52 
0230   C154 F0 93 E8 3E 
0231   C158             CN30:   EQU $D4 \ CNIB(CN29,CN30)   \ .TEXT "GRAD"     \ .WORD $F186, $C6A8          ; $C6A8 - Basic command
0231   C158 C4          
0231   C159 47 52 41 44 
0231   C15D F1 86 C6 A8 
0232   C161             
0233   C161             LET_I:  EQU ($ + 2) ; First keyword starting with 'I'. LET_I = Address of 'N' in INPUT
0234   C161             CN31:   EQU $C5 \ CNIB(CN30,CN31)   \ .TEXT "INPUT"    \ .WORD $F091, $C8FA          ; $C8FA - Basic command
0234   C161 D5          
0234   C162 49 4E 50 55 
0234   C166 54 
0234   C167 F0 91 C8 FA 
0235   C16B             CN32:   EQU $A2 \ CNIB(CN31,CN32)   \ .TEXT "IF"       \ .WORD $F196, $C5B4          ; $C5B4 - Basic command
0235   C16B C2          
0235   C16C 49 46       
0235   C16E F1 96 C5 B4 
0236   C172             CN33:   EQU $A3 \ CNIB(CN32,CN33)   \ .TEXT "INT"      \ .WORD $F171, $F5BE          ; $F5BE - Basic command
0236   C172 A3          
0236   C173 49 4E 54    
0236   C176 F1 71 F5 BE 
0237   C17A             CN34:   EQU $D6 \ CNIB(CN33,CN34)   \ .TEXT "INKEY$"   \ .WORD $F15C, $D9AA          ; $D9AA - Basic command
0237   C17A A6          
0237   C17B 49 4E 4B 45 
0237   C17F 59 24 
0237   C181 F1 5C D9 AA 
0238   C185             
0239   C185             LET_L:  EQU ($ + 2) ; First keyword starting with 'L'. LET_L = Address of 'I' in LIST
0240   C185             CN35:   EQU $84 \ CNIB(CN34,CN35)   \ .TEXT "LIST"     \ .WORD $F090, $C96E          ; $C96E - Basic command
0240   C185 D4          
0240   C186 4C 49 53 54 
0240   C18A F0 90 C9 6E 
0241   C18E             CN36:   EQU $A3 \ CNIB(CN35,CN36)   \ .TEXT "LOG"      \ .WORD $F177, $F165          ; $F165 - Basic command
0241   C18E 83          
0241   C18F 4C 4F 47    
0241   C192 F1 77 F1 65 
0242   C196             CN37:   EQU $A2 \ CNIB(CN36,CN37)   \ .TEXT "LN"       \ .WORD $F176, $F161          ; $F161 - Basic command
0242   C196 A2          
0242   C197 4C 4E       
0242   C199 F1 76 F1 61 
0243   C19D             CN38:   EQU $A3 \ CNIB(CN37,CN38)   \ .TEXT "LET"      \ .WORD $F198, $C458          ; $C458 - Basic command
0243   C19D A3          
0243   C19E 4C 45 54    
0243   C1A1 F1 98 C4 58 
0244   C1A5             CN39:   EQU $83 \ CNIB(CN38,CN39)   \ .TEXT "LEN"      \ .WORD $F164, $D9DD          ; $D9DD - Basic command
0244   C1A5 A3          
0244   C1A6 4C 45 4E    
0244   C1A9 F1 64 D9 DD 
0245   C1AD             CN40:   EQU $C5 \ CNIB(CN39,CN40)   \ .TEXT "LEFT$"    \ .WORD $F17A, $D9F3          ; $D9F3 - Basic command
0245   C1AD 85          
0245   C1AE 4C 45 46 54 
0245   C1B2 24 
0245   C1B3 F1 7A D9 F3 
0246   C1B7             CN41:   EQU $D4 \ CNIB(CN40,CN41)   \ .TEXT "LOCK"     \ .WORD $F1B5, $C968          ; $C968 - Basic command
0246   C1B7 C4          
0246   C1B8 4C 4F 43 4B 
0246   C1BC F1 B5 C9 68 
0247   C1C0             
0248   C1C0             LET_M:  EQU ($ + 2) ; First keyword starting with 'M'. LET_M = Address of 'E' in MEM
0249   C1C0             CN42:   EQU $C3 \ CNIB(CN41,CN42)   \ .TEXT "MEM"      \ .WORD $F158, $DA5D          ; $DA5D - Basic command
0249   C1C0 D3          
0249   C1C1 4D 45 4D    
0249   C1C4 F1 58 DA 5D 
0250   C1C8             CN43:   EQU $D4 \ CNIB(CN42,CN43)   \ .TEXT "MID$"     \ .WORD $F17B, $D9F3          ; $D9F3 - Basic command
0250   C1C8 C4          
0250   C1C9 4D 49 44 24 
0250   C1CD F1 7B D9 F3 
0251   C1D1             
0252   C1D1             LET_N:  EQU ($ + 2) ; First keyword starting with 'N'. LET_N = Address of 'E' in NEXT
0253   C1D1             CN44:   EQU $A4 \ CNIB(CN43,CN44)   \ .TEXT "NEXT"     \ .WORD $F19A, $C705          ; $C705 - Basic command
0253   C1D1 D4          
0253   C1D2 4E 45 58 54 
0253   C1D6 F1 9A C7 05 
0254   C1DA             CN45:   EQU $A3 \ CNIB(CN44,CN45)   \ .TEXT "NOT"      \ .WORD $F16D, $599E          ; $599E - Basic command
0254   C1DA A3          
0254   C1DB 4E 4F 54    
0254   C1DE F1 6D 59 9E 
0255   C1E2             CN46:   EQU $93 \ CNIB(CN45,CN46)   \ .TEXT "NEW"      \ .WORD $F19B, $C80A          ; $C80A - Basic command
0255   C1E2 A3          
0255   C1E3 4E 45 57    
0255   C1E6 F1 9B C8 0A 
0256   C1EA             
0257   C1EA             LET_O:  EQU ($ + 2) ; First keyword starting with 'O'. LET_O = Address of 'N' in ON
0258   C1EA             CN47:   EQU $A2 \ CNIB(CN46,CN47)   \ .TEXT "ON"       \ .WORD $F19C, $C5E0          ; $C5E0 - Basic command
0258   C1EA 92          
0258   C1EB 4F 4E       
0258   C1ED F1 9C C5 E0 
0259   C1F1             CN48:   EQU $A2 \ CNIB(CN47,CN48)   \ .TEXT "OR"       \ .WORD $F151, $CD89          ; $CD89 - Basic command
0259   C1F1 A2          
0259   C1F2 4F 52       
0259   C1F4 F1 51 CD 89 
0260   C1F8             CN49:   EQU $C3 \ CNIB(CN48,CN49)   \ .TEXT "OPN"      \ .WORD $F19D, $E457          ; $E457 - Basic command
0260   C1F8 A3          
0260   C1F9 4F 50 4E    
0260   C1FC F1 9D E4 57 
0261   C200             CN50:   EQU $B3 \ CNIB(CN49,CN50)   \ .TEXT "OFF"      \ .WORD $F19E, $CD89          ; $CD89 - Basic command
0261   C200 C3          
0261   C201 4F 46 46    
0261   C204 F1 9E CD 89 
0262   C208             
0263   C208             LET_P:  EQU ($ + 2) ; First keyword starting with 'P'. LET_P = Address of 'R' in PRINT
0264   C208             CN51:   EQU $c5 \ CNIB(CN50,CN51)   \ .TEXT "PRINT"    \ .WORD $F097, $E4EB          ; $E4EB - Basic command
0264   C208 B5          
0264   C209 50 52 49 4E 
0264   C20D 54 
0264   C20E F0 97 E4 EB 
0265   C212             CN52:   EQU $C2 \ CNIB(CN51,CN52)   \ .TEXT "PI"       \ .WORD $F15D, $F5B5          ; $F5B5 - Basic command
0265   C212 C2          
0265   C213 50 49       
0265   C215 F1 5D F5 B5 
0266   C219             CN53:   EQU $A5 \ CNIB(CN52,CN53)   \ .TEXT "PEEK#"    \ .WORD $F16E, $D993          ; $D993 - Basic command
0266   C219 C5          
0266   C21A 50 45 45 4B 
0266   C21E 23 
0266   C21F F1 6E D9 93 
0267   C223             CN54:   EQU $A4 \ CNIB(CN53,CN54)   \ .TEXT "PEEK"     \ .WORD $F16F, $D993          ; $D993 - Basic command
0267   C223 A4          
0267   C224 50 45 45 4B 
0267   C228 F1 6F D9 93 
0268   C22C             CN55:   EQU $C5 \ CNIB(CN54,CN55)   \ .TEXT "POKE#"    \ .WORD $F1A0, $C778          ; $C778 - Basic command
0268   C22C A5          
0268   C22D 50 4F 4B 45 
0268   C231 23 
0268   C232 F1 A0 C7 78 
0269   C236             CN56:   EQU $C4 \ CNIB(CN55,CN56)   \ .TEXT "POKE"     \ .WORD $F1A1, $C777          ; $C777 - Basic command
0269   C236 C4          
0269   C237 50 4F 4B 45 
0269   C23B F1 A1 C7 77 
0270   C23F             CN57:   EQU $A5 \ CNIB(CN56,CN57)   \ .TEXT "POINT"    \ .WORD $F168, $EECB          ; $EECB - Basic command
0270   C23F C5          
0270   C240 50 4F 49 4E 
0270   C244 54 
0270   C245 F1 68 EE CB 
0271   C249             CN58:   EQU $A5 \ CNIB(CN57,CN58)   \ .TEXT "PAUSE"    \ .WORD $F1A2, $E6A5          ; $E6A5 - Basic command
0271   C249 A5          
0271   C24A 50 41 55 53 
0271   C24E 45 
0271   C24F F1 A2 E6 A5 
0272   C253             CN59:   EQU $B5 \ CNIB(CN58,CN59)   \ .TEXT "P    "    \ .WORD $F1A3, $CD89          ; $CD89 - Basic command
0272   C253 A5          
0272   C254 50 20 20 20 
0272   C258 20 
0272   C259 F1 A3 CD 89 
0273   C25D             
0274   C25D             LET_R:  EQU ($ + 2) ; First keyword starting with 'R'. LET_R = Address of 'U' in RUN
0275   C25D             CN60:   EQU $83 \ CNIB(CN59,CN60)   \ .TEXT "RUN"      \ .WORD $F1A4, $C8B4          ; $C8B4 - Basic command
0275   C25D B3          
0275   C25E 52 55 4E    
0275   C261 F1 A4 C8 B4 
0276   C265             CN61:   EQU $A6 \ CNIB(CN60,CN61)   \ .TEXT "RETURN"   \ .WORD $F199, $C6AC          ; $C6AC - Basic command
0276   C265 86          
0276   C266 52 45 54 55 
0276   C26A 52 4E 
0276   C26C F1 99 C6 AC 
0277   C270             CN62:   EQU $A4 \ CNIB(CN61,CN62)   \ .TEXT "READ"     \ .WORD $F1A6, $C7B8          ; $C7B8 - Basic command
0277   C270 A4          
0277   C271 52 45 41 44 
0277   C275 F1 A6 C7 B8 
0278   C279             CN63:   EQU $A7 \ CNIB(CN62,CN63)   \ .TEXT "RESTORE"  \ .WORD $F1A7, $C7A2          ; $C7A2 - Basic command
0278   C279 A7          
0278   C27A 52 45 53 54 
0278   C27E 4F 52 45 
0278   C281 F1 A7 C7 A2 
0279   C285             CN64:   EQU $A3 \ CNIB(CN63,CN64)   \ .TEXT "RND"      \ .WORD $F17C, $F5DD          ; $F5DD - Basic command
0279   C285 A3          
0279   C286 52 4E 44    
0279   C289 F1 7C F5 DD 
0280   C28D             CN65:   EQU $C6 \ CNIB(CN64,CN65)   \ .TEXT "RANDOM"   \ .WORD $F1A8, $F641          ; $F641 - Basic command
0280   C28D A6          
0280   C28E 52 41 4E 44 
0280   C292 4F 4D 
0280   C294 F1 A8 F6 41 
0281   C298             CN66:   EQU $C6 \ CNIB(CN65,CN66)   \ .TEXT "RIGHT$"   \ .WORD $F172, $D9F3          ; $D9F3 - Basic command
0281   C298 C6          
0281   C299 52 49 47 48 
0281   C29D 54 24 
0281   C29F F1 72 D9 F3 
0282   C2A3             CN67:   EQU $C6 \ CNIB(CN66,CN67)   \ .TEXT "RADIAN"   \ .WORD $F1AA, $C6A4          ; $C6A4 - Basic command
0282   C2A3 C6          
0282   C2A4 52 41 44 49 
0282   C2A8 41 4E 
0282   C2AA F1 AA C6 A4 
0283   C2AE             CN68:   EQU $B3 \ CNIB(CN67,CN68)   \ .TEXT "REM"      \ .WORD $F1AB, $C676          ; $C676 - Basic command
0283   C2AE C3          
0283   C2AF 52 45 4D    
0283   C2B2 F1 AB C6 76 
0284   C2B6             
0285   C2B6             LET_S:  EQU ($ + 2) ; First keyword starting with 'S'. LET_S = Address of 'T' in STOP
0286   C2B6             CN69:   EQU $A4 \ CNIB(CN68,CN69)   \ .TEXT "STOP"     \ .WORD $F1AC, $C4B6          ; $C4B6 - Basic command
0286   C2B6 B4          
0286   C2B7 53 54 4F 50 
0286   C2BB F1 AC C4 B6 
0287   C2BF             CN70:   EQU $A3 \ CNIB(CN69,CN70)   \ .TEXT "SQR"      \ .WORD $F16B, $F0E9          ; $F0E9 - Basic command
0287   C2BF A3          
0287   C2C0 53 51 52    
0287   C2C3 F1 6B F0 E9 
0288   C2C7             CN71:   EQU $A3 \ CNIB(CN70,CN71)   \ .TEXT "SIN"      \ .WORD $F17D, $F3A2          ; $F3A2 - Basic command
0288   C2C7 A3          
0288   C2C8 53 49 4E    
0288   C2CB F1 7D F3 A2 
0289   C2CF             CN72:   EQU $A3 \ CNIB(CN71,CN72)   \ .TEXT "SGN"      \ .WORD $F179, $F59D          ; $F59D - Basic command
0289   C2CF A3          
0289   C2D0 53 47 4E    
0289   C2D3 F1 79 F5 9D 
0290   C2D7             CN73:   EQU $A4 \ CNIB(CN72,CN73)   \ .TEXT "STR$"     \ .WORD $F161, $D9CE          ; $D9CE - Basic command
0290   C2D7 A4          
0290   C2D8 53 54 52 24 
0290   C2DC F1 61 D9 CE 
0291   C2E0             CN74:   EQU $A6 \ CNIB(CN73,CN74)   \ .TEXT "STATUS"   \ .WORD $F167, $5A44          ; $5A44 - Basic command
0291   C2E0 A6          
0291   C2E1 53 54 41 54 
0291   C2E5 55 53 
0291   C2E7 F1 67 5A 44 
0292   C2EB             CN75:   EQU $B4 \ CNIB(CN74,CN75)   \ .TEXT "STEP"     \ .WORD $F1AD, $CD89          ; $CD89 - Basic command
0292   C2EB A4          
0292   C2EC 53 54 45 50 
0292   C2F0 F1 AD CD 89 
0293   C2F4             
0294   C2F4             LET_T:  EQU ($ + 2) ; First keyword starting with 'T'. LET_T = Address of 'H' in THEN
0295   C2F4             CN76:   EQU $A4 \ CNIB(CN75,CN76)   \ .TEXT "THEN"     \ .WORD $F1AE, $CD89          ; $CD89 - Basic command
0295   C2F4 B4          
0295   C2F5 54 48 45 4E 
0295   C2F9 F1 AE CD 89 
0296   C2FD             CN77:   EQU $A3 \ CNIB(CN76,CN77)   \ .TEXT "TAN"      \ .WORD $F17F, $F39E          ; $F39E - Basic command
0296   C2FD A3          
0296   C2FE 54 41 4E    
0296   C301 F1 7F F3 9E 
0297   C305             CN78:   EQU $C4 \ CNIB(CN77,CN78)   \ .TEXT "TIME"     \ .WORD $F15B, $DE82          ; $DE82 - Basic command
0297   C305 A4          
0297   C306 54 49 4D 45 
0297   C30A F1 5B DE 82 
0298   C30E             CN79:   EQU $C4 \ CNIB(CN78,CN79)   \ .TEXT "TRON"     \ .WORD $F1AF, $C68C          ; $C68C - Basic command
0298   C30E C4          
0298   C30F 54 52 4F 4E 
0298   C313 F1 AF C6 8C 
0299   C317             CN80:   EQU $C5 \ CNIB(CN79,CN80)   \ .TEXT "TROFF"    \ .WORD $F1B0, $C693          ; $C693 - Basic command
0299   C317 C5          
0299   C318 54 52 4F 46 
0299   C31C 46 
0299   C31D F1 B0 C6 93 
0300   C321             CN81:   EQU $B2 \ CNIB(CN80,CN81)   \ .TEXT "TO"       \ .WORD $F1B1, $CD89          ; $CD89 - Basic command
0300   C321 C2          
0300   C322 54 4F       
0300   C324 F1 B1 CD 89 
0301   C328             
0302   C328             LET_U:  EQU ($ + 2) ; First keyword starting with 'U'. LET_U = Address of 'S' in USING
0303   C328             CN82:   EQU $C5 \ CNIB(CN81,CN82)   \ .TEXT "USING"    \ .WORD $F085, $C67C          ; $C67C - Basic command
0303   C328 B5          
0303   C329 55 53 49 4E 
0303   C32D 47 
0303   C32E F0 85 C6 7C 
0304   C332             CN83:   EQU $D6 \ CNIB(CN82,CN83)   \ .TEXT "UNLOCK"   \ .WORD $F1B6, $C96A          ; $C96A - Basic command
0304   C332 C6          
0304   C333 55 4E 4C 4F 
0304   C337 43 4B 
0304   C339 F1 B6 C9 6A 
0305   C33D             
0306   C33D             LET_V:  EQU ($ + 2) ; First keyword starting with 'V'. LET_V = Address of 'A' in VAL
0307   C33D             CN84:   EQU $93 \ CNIB(CN83,CN84)   \ .TEXT "VAL"      \ .WORD $F162, $D9D7          ; $D9D7 - Basic command
0307   C33D D3          
0307   C33E 56 41 4C    
0307   C341 F1 62 D9 D7 
0308   C345             
0309   C345             LET_W:  EQU ($ + 2) ; First keyword starting with 'W'. LET_W = Address of 'A' in WAIT
0310   C345             CN85:   EQU $94 \ CNIB(CN84,CN85)   \ .TEXT "WAIT"     \ .WORD $F1B3, $E86A          ; $E86A - Basic command
0310   C345 94          
0310   C346 57 41 49 54 
0310   C34A F1 B3 E8 6A 
0311   C34E             
0312   C34E             CN86:  EQU $D0 \ .BYTE CN86
0312   C34E D0          
0313   C34F             
0314   C34F             B_TBL_8000_END:
0315   C34F             ;% B_TBL_8000 END
0316   C34F             
0317   C34F             
0318   C34F             
0319   C34F             ;------------------------------------------------------------------------------
0320   C34F             ; $C34F - System Messages
0321   C34F             ;------------------------------------------------------------------------------
0322   C34F             SM_NEW0: ; $C34F 
0323   C34F 4E 45 57 30     .BYTE  $4E,$45,$57,$30,$3F,$20,$3A,$43
0323   C353 3F 20 3A 43 
0324   C357 48 45 43 4B     .BYTE  $48,$45,$43,$4B,$20              ; NEW0? :CHECK
0324   C35B 20 
0325   C35C             
0326   C35C             SM_BREAK: ; $C35C
0327   C35C 42 52 45 41     .BYTE  $42,$52,$45,$41,$4B,$20          ; BREAK
0327   C360 4B 20 
0328   C362             
0329   C362             SM_IN: ; $C362
0330   C362 49 4E 20        .BYTE  $49,$4E,$20                      ; IN
0331   C365             
0332   C365             SM_ERROR: ; $C36B
0333   C365 45 52 52 4F     .BYTE  $45,$52,$52,$4F,$52,$20          ; ERROR
0333   C369 52 20 
0334   C36B             
0335   C36B             
0336   C36B             
0337   C36B             ;------------------------------------------------------------------------------
0338   C36B             ; Table for occupied DEF keys
0339   C36B             ;------------------------------------------------------------------------------
0340   C36B             DEFKEY_TBL: ; $C36B
0341   C36B                 ;      Value    DEF   Normal  Use
0342   C36B 20              .BYTE  $20 ;    DEF-  SPACE   : -
0343   C36C 41              .BYTE  $41 ;    DEF-  A       : -   
0344   C36D 42              .BYTE  $42 ;    DEF-  B       : -
0345   C36E 43              .BYTE  $43 ;    DEF-  C       : -
0346   C36F 44              .BYTE  $44 ;    DEF-  D       : -
0347   C370 F0              .BYTE  $F0 ;    DEF-  E       USING
0348   C371 46              .BYTE  $46 ;    DEF-  F       : -
0349   C372 47              .BYTE  $47 ;    DEF-  G       : -
0350   C373 48              .BYTE  $48 ;    DEF-  H       : -
0351   C374 F0              .BYTE  $F0 ;    DEF-  I       CLOAD
0352   C375 4A              .BYTE  $4A ;    DEF-  J       : -
0353   C376 4B              .BYTE  $4B ;    DEF-  K       : -
0354   C377 4C              .BYTE  $4C ;    DEF-  L       : -
0355   C378 4D              .BYTE  $4D ;    DEF-  M       : -
0356   C379 4E              .BYTE  $4E ;    DEF-  N       : -
0357   C37A F0              .BYTE  $F0 ;    DEF-  O       MERGE
0358   C37B F0              .BYTE  $F0 ;    DEF-  P       LIST
0359   C37C F0              .BYTE  $F0 ;    DEF-  Q       INPUT        
0360   C37D F1              .BYTE  $F1 ;    DEF-  R       GOTO
0361   C37E 53              .BYTE  $53 ;    DEF-  S       :-
0362   C37F F1              .BYTE  $F1 ;    DEF-  T       GOSUB
0363   C380 F0              .BYTE  $F0 ;    DEF-  U       CSAVE
0364   C381 56              .BYTE  $56 ;    DEF-  V       :-
0365   C382 F0              .BYTE  $F0 ;    DEF-  W       PRINT
0366   C383 58              .BYTE  $58 ;    DEF-  X       :-
0367   C384 F1              .BYTE  $F1 ;    DEF-  Y       RETURN
0368   C385 5A              .BYTE  $5A ;    DEF-  Z       :-
0369   C386 20              .BYTE  $20 ;        
0370   C387 20              .BYTE  $20 ;        
0371   C388 3D              .BYTE  $3D ;    DEF-  =       :-
0372   C389 20              .BYTE  $20 ;        
0373   C38A 20              .BYTE  $20 ;        
0374   C38B             
0375   C38B             
0376   C38B             
0377   C38B             ;------------------------------------------------------------------------------
0378   C38B             ; Address table for editor control characters
0379   C38B             ;------------------------------------------------------------------------------
0380   C38B             EDCTRL_TBL: ; $C38B
0381   C38B CA 64           .BYTE  $CA,$64 ; CL
0382   C38D CB 61           .BYTE  $CB,$61 ; RCL
0383   C38F CA 55           .BYTE  $CA,$55 ; CA
0384   C391 CA 80           .BYTE  $CA,$80 ; DEF
0385   C393 CB C7           .BYTE  $CB,$C7 ; INS
0386   C395 CB CF           .BYTE  $CB,$CF ; DEL
0387   C397 CB 9C           .BYTE  $CB,$9C ; SHIFT-MODE
0388   C399 CB A0           .BYTE  $CB,$A0 ; MODE
0389   C39B CC 22           .BYTE  $CC,$22 ; CURSOR-LEFT
0390   C39D CB 69           .BYTE  $CB,$69 ; (up/down arrow)
0391   C39F CC 48           .BYTE  $CC,$48 ; CURSOR-DOWN
0392   C3A1 CC 38           .BYTE  $CC,$38 ; CURSOR-UP
0393   C3A3 CB E4           .BYTE  $CB,$E4 ; CURSOR-RIGHT
0394   C3A5 CC C1           .BYTE  $CC,$C1 ; ENTER
0395   C3A7 C4 C6           .BYTE  $C4,$C6 ; BREAK
0396   C3A9 CD 71           .BYTE  $CD,$71 ; OFF
0397   C3AB             
0398   C3AB             
0399   C3AB             
0400   C3AB             ; Operator table for formula evaluation of the subroutines (DE), (D6DF)
0401   C3AB             FVAL_TBLE: ; $C3A8
0402   C3AB 2B 81 3F 08     .BYTE  $2B,$81,$3F,$08,$00 ; + branched to (D755)
0402   C3AF 00 
0403   C3B0 2D 81 3F 08     .BYTE  $2D,$81,$3F,$08,$00 ; -     (D755)
0403   C3B4 00 
0404   C3B5 2A 82 22 04     .BYTE  $2A,$82,$22,$04,$E2 ; *     (D837)
0404   C3B9 E2 
0405   C3BA 2F 82 22 04     .BYTE  $2F,$82,$22,$04,$E2 ; /     (D837)
0405   C3BE E2 
0406   C3BF 5E 84 22 04     .BYTE  $5E,$84,$22,$04,$E2 ; ^     (D837)
0406   C3C3 E2 
0407   C3C4 3D 80 22 04     .BYTE  $3D,$80,$22,$04,$32 ; =     (D787)
0407   C3C8 32 
0408   C3C9 3C 80 22 3D     .BYTE  $3C,$80,$22,$3D,$15 ; <     (D76A)
0408   C3CD 15 
0409   C3CE 3E 80 22 3D     .BYTE  $3E,$80,$22,$3D,$29 ; >     (D77E)
0409   C3D2 29 
0410   C3D3 0D 00 22 01     .BYTE  $0D,$00,$22,$01,$E1 ; ENTER (D836)
0410   C3D7 E1 
0411   C3D8 2C 60 22 01     .BYTE  $2C,$60,$22,$01,$E2 ; ,     (D837)
0411   C3DC E2 
0412   C3DD 28 20 1D 01     .BYTE  $28,$20,$1D,$01,$0A ; (     (D75F)
0412   C3E1 0A 
0413   C3E2 29 10 22 20     .BYTE  $29,$10,$22,$20,$E2 ; )     (D837)
0413   C3E6 E2 
0414   C3E7 2E 00 1D 00     .BYTE  $2E,$00,$1D,$00,$58 ; .     (D7AD)
0414   C3EB 58 
0415   C3EC 22 00 1D 00     .BYTE  $22,$00,$1D,$00,$35 ; "     (D78A)
0415   C3F0 35 
0416   C3F1 5D F1 1D 00     .BYTE  $5D,$F1,$1D,$00,$5A ; π     (D7AF)
0416   C3F5 5A 
0417   C3F6 5B F1 1D 10     .BYTE  $5B,$F1,$1D,$10,$64 ; √     (D7B9)
0417   C3FA 64 
0418   C3FB 26 00 1D 00     .BYTE  $26,$00,$1D,$00,$39 ; &     (D78E)
0418   C3FF 39 
0419   C400             
0420   C400             
0421   C400             
0422   C400             ;------------------------------------------------------------------------------
0423   C400             ; (E2) $C400 - BASIC interpreter: Y-Reg points to command or line end
0424   C400             ;------------------------------------------------------------------------------
0425   C400             BASIC_INT: ; $C400
0426   C400 C0              VEJ  (C0)
0427   C401             
0428   C401             ;------------------------------------------------------------------------------
0429   C401             ; (40) $C401 - Process command in U-Reg
0430   C401             ;------------------------------------------------------------------------------
0431   C401 D8              VEJ  (D8)
0432   C402 89 05           BZR  BASIC_INT_1 ; $C409
0433   C404 6E 0D           CPI  UL,$0D
0434   C406 CB 42           VZS  ($42) ; *** orig VZS  ($42)($21) second argument wrong?
0435   C408 E4              VEJ  (E4)
0436   C409             
0437   C409             BASIC_INT_1: ; $C409
0438   C409 CD 04           VMJ  ($04) \ ABRF(BCMD_STOP_1) ; $C4C5
0438   C40B B9          
0439   C40C             
0440   C40C             BASIC_INT_7: ; $C40C
0441   C40C CD 18           VMJ  ($18)
0442   C40E             
0443   C40E             BASIC_INT_9: ; $C40E
0444   C40E AA 78 4F        LDI  S,(CPU_STACK + $4F)
0445   C411 83 17           BCS  BASIC_INT_2 ; $C42A
0446   C413             
0447   C413             BASIC_INT_8: ; $C413
0448   C413 B5 00           LDI  A,$00
0449   C415 CD 3E           VMJ  ($3E)
0450   C417 89 AC           BZR  BCMD_STOP_1 ; $C4C5
0451   C419 A5 7B 0E        LDA  (CURS_CTRL)
0452   C41C D9              SHL
0453   C41D 81 0B           BCR  BASIC_INT_2 ; $C42A
0454   C41F B7 C0           CPI  A,$C0       ; B7 C0
0455   C421 81 82           BCR  BCMD_LET_4  ; 81 82 $C4A5
0456   C423 BE E4 2C        SJP  (KEY2ASCII)
0457   C426 B7 0A           CPI  A,$0A
0458   C428 89 7B           BZR BCMD_LET_4  ; $C4A5
0459   C42A             
0460   C42A             BASIC_INT_2: ; $C42A
0461   C42A CD A6           VMJ  ($A6) ; *** orig VMJ  ($A6) ; ($A6)($53) second argument is bogus
0462   C42C 89 8C           BZR  BCMD_STOP_2 ; $C4BA
0463   C42E             
0464   C42E             BASIC_INT_11: ; $C42E
0465   C42E A5 78 9C        LDA  (CURR_LINE_H)
0466   C431 DD              INC  A
0467   C432 8B DC           BZS  BCMD_END_1  ; $C510
0468   C434 94              LDA  YH
0469   C435 D9              SHL
0470   C436 83 0C           BCS  BASIC_INT_3 ; $C444 $83 0A $C442
0471   C438             
0472   C438             BASIC_INT_10: ; $C438
0473   C438 B5 01           LDI  A,$01
0474   C43A CD 3E           VMJ  ($3E)
0475   C43C C9 00           VZR  ($00) \ ABYT($CD) \ ABYT($22) \ ABRF(BCMD_STOP_3) ; $C4C2
0475   C43E CD          
0475   C43F 22          
0475   C440 81          
0476   C441 05              LDA  (X)
0477   C442 9E 3B           BCH  BASIC_INT_1; $C409 
0478   C444             
0479   C444             BASIC_INT_3: ; $C442
0480   C444 D5              SHR
0481   C445 18              STA  YH
0482   C446             
0483   C446             BASIC_INT_12: ; $C446
0484   C446 C0              VEJ  (C0)
0485   C447             
0486   C447             BASIC_INT_6: ; $C447
0487   C447 AA 78 4F        LDI  S,(CPU_STACK + $4F)
0488   C44A 6C E0           CPI  UH,$E0
0489   C44C 81 09           BCR  BASIC_INT_4 ; $C457
0490   C44E 6E 80           CPI  UL,$80
0491   C450 81 04           BCR  BASIC_INT_5 ; $C456
0492   C452 CD 1C           VMJ  ($1C) \ ABYT($00)
0492   C454 00          
0493   C455 E0              VEJ  (E0)
0494   C456             
0495   C456             BASIC_INT_5: ; $C456
0496   C456 56              DEC  Y
0497   C457             
0498   C457             BASIC_INT_4: ; $C457
0499   C457 56              DEC  Y 
0500   C458             
0501   C458             
0502   C458             ;------------------------------------------------------------------------------
0503   C458             ; $C458 - BASIC command LET
0504   C458             ;------------------------------------------------------------------------------
0505   C458             BCMD_LET:
0506   C458 D8              VEJ  (D8)
0507   C459 89 06           BZR  BCMD_LET_1 ; $C461
0508   C45B B5 02           LDI  A,$02
0509   C45D CD 3E           VMJ  ($3E)
0510   C45F 89 63           BZR  BCMD_STOP_4 ; $C4C4
0511   C461             
0512   C461             BCMD_LET_1: ; $C461
0513   C461 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_LET_2); $C489
0513   C462 58          
0513   C463 25          
0514   C464 DA              VEJ  (DA)
0515   C465 C2              VEJ  (C2) \ ACHR($3D) \ ABRF(BCMD_LET_3); $C499
0515   C466 3D          
0515   C467 31          
0516   C468 DE              VEJ  (DE) \ ABRF(BCMD_STOP_4) ; $C4C4
0516   C469 5A          
0517   C46A CD 08           VMJ  ($08) \ ABRF(BCMD_STOP_4) ; $C4C4
0517   C46C 57          
0518   C46D D8              VEJ  (D8)
0519   C46E 89 06           BZR  BCMD_LET_5 ; $C476
0520   C470                 
0521   C470             BCMD_LET_8: ; $C470  
0522   C470 B5 04           LDI  A,$04
0523   C472 CD 3E           VMJ  ($3E)
0524   C474 89 4E           BZR  BCMD_STOP_4 ; $C4C4
0525   C476             
0526   C476             BCMD_LET_5: ; $C476
0527   C476 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_LET_6) ; $C47B
0527   C477 2C          
0527   C478 02          
0528   C479 9E 1A           BCH BCMD_LET_1 ; $C461
0529   C47B             
0530   C47B             BCMD_LET_6: ; $C47B
0531   C47B B5 20           LDI  A,$20
0532   C47D AE 78 80        STA  (DISPARAM)
0533   C480 CD 04           VMJ  ($04) \ ABRF(BCMD_STOP_1) ; $C4C5
0533   C482 42          
0534   C483 D8              VEJ  (D8)
0535   C484 C9 40           VZR  ($40) ; orig ($40)($20) $20 is bogus
0536   C486 BA CA 7D        JMP  BUTTON_CL_4 ; $CA7D
0537   C489             
0538   C489             BCMD_LET_2: ; $C489
0539   C489 6C 15           CPI  UH,$15
0540   C48B 89 37           BZR BCMD_STOP_4 ; $C4C4
0541   C48D D8              VEJ  (D8)
0542   C48E 89 34           BZR BCMD_STOP_4 ; $C4C4
0543   C490 56              DEC  Y
0544   C491 24              LDA  UL
0545   C492 8B 01           BZS BCMD_LET_7 ; $C495
0546   C494 56              DEC  Y
0547   C495             
0548   C495             BCMD_LET_7: ; $C495
0549   C495 DE              VEJ  (DE) \ ABRF(BCMD_STOP_4); $C4C4
0549   C496 2D          
0550   C497 9E 29           BCH BCMD_LET_8 ; $C470
0551   C499             
0552   C499             BCMD_LET_3: ; $C499
0553   C499 D8              VEJ  (D8)
0554   C49A 89 29           BZR BCMD_STOP_1 ; $C4C5
0555   C49C C6              VEJ  (C6)
0556   C49D CD 0A           VMJ  ($0A)
0557   C49F BE D6 D9        SJP  (DEC2HEX_1) ; $D6D9
0558   C4A2 21              SBC  (U)
0559   C4A3 9E 35           BCH BCMD_LET_8 ; $C470
0560   C4A5             
0561   C4A5             BCMD_LET_4: ; $C4A5
0562   C4A5 6A 01           LDI  UL,$01 
0563   C4A7 CC              VEJ  (CC) \ ABYTL(TRACE_ON); $788D
0563   C4A8 8D          
0564   C4A9 8B 02           BZS BCMD_LET_9 ; BCMD_STOP_6 ; $C4AD
0565   C4AB 6A 00           LDI  UL,$00
0566   C4AD             
0567   C4AD             BCMD_LET_9: ; $C4AD
0568   C4AD 8E 0D           BCH BCMD_STOP_5 ; $C4BC
0569   C4AF             
0570   C4AF             
0571   C4AF             
0572   C4AF             ;------------------------------------------------------------------------------
0573   C4AF             ; $C4AF - Trace routine
0574   C4AF             ;------------------------------------------------------------------------------
0575   C4AF             TRCROUTINE:
0576   C4AF CC              VEJ  (CC) \ ABYTL($788E)
0576   C4B0 8E          
0577   C4B1 9B 08           BZS $C4AB
0578   C4B3 68 00           LDI  UH,$00
0579   C4B5 9A              RTN
0580   C4B6             
0581   C4B6             
0582   C4B6             
0583   C4B6             ;------------------------------------------------------------------------------
0584   C4B6             ; $C4B6 - BASIC command STOP
0585   C4B6             ;------------------------------------------------------------------------------
0586   C4B6             BCMD_STOP:
0587   C4B6 C8              VEJ  (C8) \ ABRF(BCMD_STOP_1) ; $C4C5
0587   C4B7 0D          
0588   C4B8 CD 18           VMJ  ($18)
0589   C4BA             
0590   C4BA             BCMD_STOP_2: ; $C4BA
0591   C4BA 6A 02           LDI  UL,$02 
0592   C4BC             
0593   C4BC             BCMD_STOP_5: ; $C4BC
0594   C4BC FD A8           PSH  U
0595   C4BE D4              VEJ  (D4) \ ABYT($AC)
0595   C4BF AC          
0596   C4C0 FD 2A           POP  U
0597   C4C2             
0598   C4C2             BCMD_STOP_3: ; $C4C2
0599   C4C2 8E 15           BCH BCMD_STOP_7 ; $C4D9 
0600   C4C4             
0601   C4C4             BCMD_STOP_4: ; $C4C4
0602   C4C4 E0              VEJ  (E0) 
0603   C4C5             
0604   C4C5             BCMD_STOP_1: ; $C4C5
0605   C4C5 E4              VEJ  (E4)  
0606   C4C6             
0607   C4C6             BCMD_STOP_9: ; $C4C6   
0608   C4C6 FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FD
0608   C4CA FD 
0609   C4CB ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
0610   C4CF CB 42           VZS  ($42) ; orig ($42)($21) ; 21 is bogus
0611   C4D1 ED 78 8A 60     BII  (BREAKPARAM),$60
0612   C4D5 CB 42           VZS  ($42) ; orig ($42)($21) ; 21 is bogus
0613   C4D7 6A 02           LDI  UL,$02
0614   C4D9             
0615   C4D9             BCMD_STOP_7: ; $C4D9
0616   C4D9 EB 78 8A 80     ORI  (BREAKPARAM),$80
0617   C4DD E9 78 8A EF     ANI  (BREAKPARAM),$EF
0618   C4E1 FD A8           PSH  U
0619   C4E3 BE EE 80        SJP  (SAVELCD2BUF)
0620   C4E6 FD 2A           POP  U
0621   C4E8 B5 01           LDI  A,$01
0622   C4EA AE 78 80        STA  (DISPARAM)
0623   C4ED FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FD
0623   C4F1 FD 
0624   C4F2 62              DEC  UL
0625   C4F3 CB 46           VZS  ($46) ; orig ($46)($23) 23 is bogus
0626   C4F5 5A 10           LDI  YL,$10 
0627   C4F7 58 7A           LDI  YH,$7A
0628   C4F9 FD 98           PSH  Y
0629   C4FB B5 3A           LDI  A,$3A
0630   C4FD 81 06           BCR BCMD_STOP_8 ; $C505
0631   C4FF CD 2A           VMJ  ($2A) \ ABYT($5B) \ ABYT($09) ; C504
0631   C501 5B          
0631   C502 09          
0632   C503 B5 20           LDI  A,$20
0633   C505             
0634   C505             BCMD_STOP_8: ; $C505
0635   C505 FD C8           PSH  A
0636   C507 CC              VEJ  (CC) \ ABYTL(PREV_LINE_H) ; $78A2
0636   C508 A2          
0637   C509 BA CD D4        JMP  ERRN_5 ; $CDD4
0638   C50C             
0639   C50C             BCMD_STOP_6: ; $C4AD
0640   C50C 38              NOP
0641   C50D             
0642   C50D             
0643   C50D             
0644   C50D             ;------------------------------------------------------------------------------
0645   C50D             ; $C50D - Basic Command END
0646   C50D             ;------------------------------------------------------------------------------
0647   C50D             BCMD_END:
0648   C50D C2              VEJ  (C2) \ ACHR($0D) \ ABRF(BCMD_ON_1) ; $C5F9
0648   C50E 0D          
0648   C50F E9          
0649   C510             
0650   C510             BCMD_END_1:; $C510
0651   C510 BE CF F7        SJP  (PRGLINE_TDI_1) ; $CFF7
0652   C513 CD 42           VMJ  ($42) ; orig ($42)($21) 21 is bogus
0653   C515             
0654   C515             
0655   C515             
0656   C515             ;------------------------------------------------------------------------------
0657   C515             ; $C515 - Basic Command GOTO
0658   C515             ;------------------------------------------------------------------------------
0659   C515             BCMD_GOTO:
0660   C515 D8              VEJ  (D8)
0661   C516 89 8A           BZR DEFKEY_EVAL_1 ; $C5A2
0662   C518 68 1A           LDI  UH,$1A
0663   C51A ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
0664   C51E CB E0           VZS  ($E0)
0665   C520 BE CC 86        SJP  (BTN_DOWN_1) ; $CC86
0666   C523 7D C1           BII  (V),$C1
0667   C525 42              DEC  XL
0668   C526 F2              VEJ  (F2)
0669   C527 8E 4F           BCH DEFKEY_EVAL_2 ; $C578
0670   C529             
0671   C529             
0672   C529             
0673   C529             ;------------------------------------------------------------------------------
0674   C529             ; $C529 -  Evaluation of DEF keys (label addressing)
0675   C529             ;------------------------------------------------------------------------------
0676   C529             DEFKEY_EVAL:
0677   C529 0A              STA  XL
0678   C52A AE 78 92        STA  (BAS_DATA_STK_L)
0679   C52D BE DB F5        SJP  (ISARXBCD_1) ; $DBF5
0680   C530 EF 78 90 04     ADI  (FORNXT_STK_PTR),$04
0681   C534 F9              REC
0682   C535 BE FB CB        SJP  (STRXFR)
0683   C538 BE CC DE        SJP  (BTN_ENTER_1) ; $CCDE
0684   C53B A4              LDA  UH
0685   C53C 4A 82           LDI  XL,$82
0686   C53E 48 78           LDI  XH,$78
0687   C540 0E              STA  (X)
0688   C541 B5 01           LDI  A,$01
0689   C543 CD 24           VMJ  ($24)
0690   C545 68 FF           LDI  UH,$FF
0691   C547 BE D2 EA        SJP  (LINESEARCH) \ ABRF(DEFKEY_EVAL_3); $C589
0691   C54A 3E          
0692   C54B D6              VEJ  (D6) \ ABYT($A6)
0692   C54C A6          
0693   C54D CD 22           VMJ  ($22)
0694   C54F 83 27           BCS DEFKEY_EVAL_2 ; $C578
0695   C551 C4              VEJ  (C4) \ AWRD($F180) \ ABRF(DEFKEY_EVAL_2) ; $C578
0695   C552 F1 80       
0695   C554 23          
0696   C555 CE              VEJ  (CE) \ ABYT($58) \ ABRF(DEFKEY_EVAL_4) ; $C59F
0696   C556 58          
0696   C557 47          
0697   C558 DA              VEJ  (DA)
0698   C559 CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880
0698   C55A 80          
0699   C55B BF 40           BII  A,$40
0700   C55D 8B 1E           BZS DEFKEY_EVAL_5 ; $C57D
0701   C55F FD 98           PSH  Y
0702   C561 BE F9 7B        SJP  (VAR_TYPE)
0703   C564 81 31           BCR DEFKEY_EVAL_6 ; $C597
0704   C566 FD 1A           POP  Y
0705   C568 89 0B           BZR DEFKEY_EVAL_7 ; $C575
0706   C56A             
0707   C56A             DEFKEY_EVAL_8: ; $C56A
0708   C56A EC              VEJ  (EC)
0709   C56B CC              VEJ  (CC) \ ABYTL(CURVARTYPE) ; $7885
0709   C56C 85          
0710   C56D D9              SHL
0711   C56E B5 D0           LDI  A,$D0
0712   C570 83 03           BCS DEFKEY_EVAL_7 ;  $C575
0713   C572 AE 7A 04        STA  (ARX + $04)
0714   C575             
0715   C575             DEFKEY_EVAL_7: ; $C575
0716   C575 CD 08           VMJ  ($08) \ ABRF(DEFKEY_EVAL_4) ; $C59F
0716   C577 27          
0717   C578             
0718   C578             DEFKEY_EVAL_2: ; $C578
0719   C578 CD 3A           VMJ  ($3A)
0720   C57A BA C8 C2        JMP  BCMD_READ_1 ; $C8C2
0721   C57D             
0722   C57D             DEFKEY_EVAL_5: ; $C57D
0723   C57D BF 22           BII  A,$22
0724   C57F 9B 17           BZS DEFKEY_EVAL_8 ; $C56A
0725   C581 FB              SEC
0726   C582 BE FB CB        SJP  (STRXFR)
0727   C585 CD 30           VMJ  ($30)
0728   C587 9E 14           BCH DEFKEY_EVAL_7 ; $C575
0729   C589             
0730   C589             DEFKEY_EVAL_3: ; $C589
0731   C589 ED 78 80 40     BII  (DISPARAM),$40
0732   C58D 89 03           BZR DEFKEY_EVAL_9 ; $C592
0733   C58F BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
0734   C592             
0735   C592             DEFKEY_EVAL_9: ; $C592
0736   C592 38              NOP
0737   C593 38              NOP
0738   C594 C0              VEJ  (C0)
0739   C595 68 0B           LDI  UH,$0B
0740   C597             
0741   C597             DEFKEY_EVAL_6: ; $C597
0742   C597 E9 78 9D 00     ANI  (CURR_LINE_L),$00
0743   C59B E9 78 9C 00     ANI  (CURR_LINE_H),$00
0744   C59F             
0745   C59F             DEFKEY_EVAL_4: ; $C59F
0746   C59F CD 3A           VMJ  ($3A)
0747   C5A1 E0              VEJ  (E0)
0748   C5A2             
0749   C5A2             DEFKEY_EVAL_1: ; $C5A2
0750   C5A2 CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0750   C5A4 D0          
0751   C5A5 D0              VEJ  (D0) \ ABYT($83) \ ABRF(BCMD_GOSUB_1) ; $C675
0751   C5A6 83          
0751   C5A7 CD          
0752   C5A8 CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0752   C5AA CA          
0753   C5AB             
0754   C5AB             DEFKEY_EVAL_10: ; $C5AB
0755   C5AB C2              VEJ  (C2) \ ACHR($0D) \ ABRF(BCMD_ON_1) ; $C5F9
0755   C5AC 0D          
0755   C5AD 4B          
0756   C5AE D4              VEJ  (D4) \ ABYT($A0)
0756   C5AF A0          
0757   C5B0 D6              VEJ  (D6) \ ABYT($A6)
0757   C5B1 A6          
0758   C5B2 8E BD           BCH $C671
0759   C5B4             
0760   C5B4             
0761   C5B4             
0762   C5B4             ;------------------------------------------------------------------------------
0763   C5B4             ; $C5B4 - Basic Command IF
0764   C5B4             ;------------------------------------------------------------------------------
0765   C5B4             BCMD_IF:
0766   C5B4 DE              VEJ  (DE) \ ABRF(BCMD_GOSUB_1) ; $C675
0766   C5B5 BF          
0767   C5B6 4A 04           LDI  XL,$04
0768   C5B8 48 7A           LDI  XH,$7A
0769   C5BA 45              LIN  X
0770   C5BB B7 B2           CPI  A,$B2
0771   C5BD 81 06           BCR BCMD_IF_1 ; $C5C5
0772   C5BF 8B 06           BZS BCMD_IF_2 ; $C5C7
0773   C5C1 4A 07           LDI  XL,$07
0774   C5C3 8E 06           BCH BCMD_IF_3 ; $C5CB
0775   C5C5             
0776   C5C5             BCMD_IF_1: ; $C5C5
0777   C5C5 4A 01           LDI  XL,$01
0778   C5C7             
0779   C5C7             BCMD_IF_2: ; $C5C7
0780   C5C7 45              LIN  X
0781   C5C8 D9              SHL
0782   C5C9 83 AB           BCS BCMD_REM
0783   C5CB             
0784   C5CB             BCMD_IF_3: ; $C5CB
0785   C5CB 05              LDA  (X)
0786   C5CC 8B A8           BZS BCMD_REM
0787   C5CE C2              VEJ  (C2) \ AWRD($F1AE) \ ABRF(BCMD_IF_4) ; $C5D9 , $F1AE = THEN token
0787   C5CF F1 AE       
0787   C5D1 07          
0788   C5D2 C0              VEJ  (C0)
0789   C5D3 81 08           BCR BCMD_IF_5 ; $C5DD
0790   C5D5 6E 80           CPI  UL,$80
0791   C5D7 81 03           BCR BCMD_IF_6 ; $C5DC
0792   C5D9             
0793   C5D9             BCMD_IF_4: ; $C5D9
0794   C5D9 BA C4 47        JMP  BASIC_INT_6 ; $C447
0795   C5DC                 
0796   C5DC             BCMD_IF_6: ; $C5DC    
0797   C5DC 56              DEC  Y
0798   C5DD             
0799   C5DD             BCMD_IF_5: ; $C5DD
0800   C5DD 56              DEC  Y
0801   C5DE 9E 3E           BCH DEFKEY_EVAL_1 ; $C5A2
0802   C5E0             
0803   C5E0             
0804   C5E0             
0805   C5E0             ;------------------------------------------------------------------------------
0806   C5E0             ; $C5E0 - Basic-Command ON
0807   C5E0             ;------------------------------------------------------------------------------
0808   C5E0             BCMD_ON:
0809   C5E0 C2              VEJ  (C2) \ AWRD($F1B4) \ ABRF(BCMD_ON_2) ; $C605
0809   C5E1 F1 B4       
0809   C5E3 21          
0810   C5E4 C2              VEJ  (C2) \ AWRD($F192) \ ABRF(BCMD_ON_1) ; $C5F9
0810   C5E5 F1 92       
0810   C5E7 11          
0811   C5E8 CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0811   C5EA 8A          
0812   C5EB D0              VEJ  (D0) \ ABYT($82) \ ABRF(BCMD_GOSUB_1) ; $C675
0812   C5EC 82          
0812   C5ED 87          
0813   C5EE 24              LDA  UL
0814   C5EF 89 09           BZR BCMD_ON_3 ; $C5FA
0815   C5F1 A4              LDA  UH
0816   C5F2 89 06           BZR BCMD_ON_3 ; $C5FA
0817   C5F4 EB 78 B8 80     ORI  (ON_ERR_ADD_H),$80
0818   C5F8 E2              VEJ  (E2)
0819   C5F9             
0820   C5F9             BCMD_ON_1: ; $C5F9
0821   C5F9 E4              VEJ  (E4)
0822   C5FA             
0823   C5FA             BCMD_ON_3: ; $C5FA
0824   C5FA CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0824   C5FC 78          
0825   C5FD 6A A6           LDI  UL,$A6
0826   C5FF 4A B8           LDI  XL,$B8
0827   C601 BE DF 06        SJP  (BCMD_TIME_1) ; $DF06
0828   C604 E2              VEJ  (E2)
0829   C605             
0830   C605             BCMD_ON_2: ; $C605
0831   C605 C6              VEJ  (C6)
0832   C606 DE              VEJ  (DE) \ ABRF(BCMD_GOSUB_1) ; $C675
0832   C607 6D          
0833   C608 CD 26           VMJ  ($26)
0834   C60A 6A D0           LDI  UL,$D0
0835   C60C 0D              EOR  (X)
0836   C60D 02              ADC  XL
0837   C60E 8E 02           BCH BCMD_ON_4 ; $C612
0838   C610 B5 50           LDI  A,$50
0839   C612             
0840   C612             BCMD_ON_4: ; $C612
0841   C612 FD C8           PSH  A
0842   C614 C2              VEJ  (C2) \ AWRD($F192) \ ABRF(BCMD_ON_5) ; $C61A
0842   C615 F1 92       
0842   C617 02          
0843   C618 8E 04           BCH BCMD_ON_9 ; $C61E
0844   C61A             
0845   C61A             BCMD_ON_5: ; $C61A
0846   C61A C4              VEJ  (C4) \ AWRD($F194) \ ABRF(BCMD_ON_6) ; $C64D
0846   C61B F1 94       
0846   C61D 2F          
0847   C61E             
0848   C61E             BCMD_ON_9: ; $C61E
0849   C61E FD C8           PSH  A
0850   C620 FD 2A           POP  U
0851   C622 FD A8           PSH  U
0852   C624 62              DEC  UL
0853   C625 8B 06           BZS BCMD_ON_7 ; $C62D
0854   C627 BE DF 44        SJP  (BCMD_TIME_2) ; $DF44
0855   C62A 60              INC  UL
0856   C62B 89 15           BZR BCMD_ON_8 ; $C642
0857   C62D             
0858   C62D             BCMD_ON_7: ; $C62D
0859   C62D CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0859   C62F 45          
0860   C630 D0              VEJ  (D0) \ ABYT($83) \ ABRF(BCMD_GOSUB_1) ; $C675
0860   C631 83          
0860   C632 42          
0861   C633 CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0861   C635 3F          
0862   C636 BE DF 42        SJP  (BCMD_TIME_3) ; $DF42
0863   C639 FD 2A           POP  U
0864   C63B A4              LDA  UH
0865   C63C D5              SHR
0866   C63D D5              SHR
0867   C63E 81 1A           BCR BCMD_GOSUB_2 ; $C65A
0868   C640 9E 97           BCH DEFKEY_EVAL_10 ; $C5AB
0869   C642             
0870   C642             BCMD_ON_8: ; $C642
0871   C642 B5 0D           LDI  A,$0D
0872   C644 17              CPA  (Y)
0873   C645 FD 2A           POP  U
0874   C647 C3 E2           VCS  ($E2)
0875   C649 FD 62           DEC  UH
0876   C64B C7 E2           VHS  ($E2)
0877   C64D             
0878   C64D             BCMD_ON_6: ; $C64D
0879   C64D E4              VEJ  (E4)
0880   C64E             
0881   C64E             
0882   C64E             
0883   C64E             ;------------------------------------------------------------------------------
0884   C64E             ; $C64E - Basic Command GOSUB
0885   C64E             ;------------------------------------------------------------------------------
0886   C64E             BCMD_GOSUB: 
0887   C64E CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0887   C650 24          
0888   C651 D0              VEJ  (D0) \ ABYT($83) \ ABRF(BCMD_GOSUB_1) ; $C675
0888   C652 83          
0888   C653 21          
0889   C654 CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0889   C656 1E          
0890   C657 C8              VEJ  (C8) \ ABRF(BCMD_NEXT_3) ; $C710
0890   C658 B7          
0891   C659 56              DEC  Y
0892   C65A             
0893   C65A             BCMD_GOSUB_2: ; $C65A
0894   C65A A5 78 91        LDA  (GOSB_STK_PTR_L)
0895   C65D FB              SEC
0896   C65E B1 05           SBI  A,$05
0897   C660 A7 78 90        CPA  (FORNXT_STK_PTR)
0898   C663 81 0E           BCR BCMD_GOSUB_3 ; $C673
0899   C665 AE 78 82        STA  (STK_PTR_GSB_FOR)
0900   C668 DF              DEC  A
0901   C669 AE 78 91        STA  (GOSB_STK_PTR_L)
0902   C66C BE DE FC        SJP  (BCMD_TIME_5) ; $DEFC
0903   C66F D6              VEJ  (D6) \ ABYT($A6)
0903   C670 A6          
0904   C671 8E 4C           BCH BCMD_RETURN_1 ; $C6BF
0905   C673             
0906   C673             BCMD_GOSUB_3: ; $C673
0907   C673 68 0F           LDI  UH,$0F
0908   C675             
0909   C675             BCMD_GOSUB_1: ; $C675
0910   C675 E0              VEJ  (E0)
0911   C676             
0912   C676             
0913   C676             
0914   C676             ;------------------------------------------------------------------------------
0915   C676             ; $C676 - Basic Command REM
0916   C676             ;------------------------------------------------------------------------------
0917   C676             BCMD_REM:
0918   C676 CD 20           VMJ  ($20)
0919   C678 F9              REC
0920   C679 BA C4 0C        JMP  BASIC_INT_7 ; $C40C
0921   C67C             
0922   C67C             
0923   C67C             
0924   C67C             ;------------------------------------------------------------------------------
0925   C67C             ; $C67C - Basic Command USING
0926   C67C             ;------------------------------------------------------------------------------
0927   C67C             BCMD_USING: 
0928   C67C B5 01           LDI  A,$01
0929   C67E BE DA B4        SJP  (EVAL_USING_1) ; $DAB4
0930   C681 DE              VEJ  (DE) \ ABYT($56) ; $C760 ***wrong original calc c6da
0930   C682 56          
0931   C683 E2              VEJ  (E2)
0932   C684             
0933   C684             
0934   C684             
0935   C684             ;------------------------------------------------------------------------------
0936   C684             ; $C684 - Basic Command DATA / ARUN / AREAD
0937   C684             ;------------------------------------------------------------------------------
0938   C684             BCMD_DATA:
0939   C684 56              DEC  Y
0940   C685 AA 78 4F        LDI  S,(CPU_STACK + $4F)
0941   C688 BE DF 42        SJP  (BCMD_TIME_3) ; $DF42
0942   C68B E2              VEJ  (E2)
0943   C68C             
0944   C68C             
0945   C68C             
0946   C68C             ;------------------------------------------------------------------------------
0947   C68C             ; $C68C - Basic Command TRON
0948   C68C             ;------------------------------------------------------------------------------
0949   C68C             BCMD_TRON:
0950   C68C A5 79 D1        LDA  (OPN)
0951   C68F             
0952   C68F             BCMD_TRON_1: ; $C68F
0953   C68F AE 78 8D        STA  (TRACE_ON)
0954   C692 E2              VEJ  (E2)
0955   C693             
0956   C693             
0957   C693             
0958   C693             ;------------------------------------------------------------------------------
0959   C693             ; $C693 - Basic Command TROFF
0960   C693             ;------------------------------------------------------------------------------
0961   C693             BCMD_TROFF:
0962   C693 B5 00           LDI  A,$00
0963   C695 9E 08           BCH BCMD_TRON_1 ; $C68F
0964   C697             
0965   C697             
0966   C697             
0967   C697             ;------------------------------------------------------------------------------
0968   C697             ; $C697 - Basic Command DEGREE
0969   C697             ;------------------------------------------------------------------------------
0970   C697             BCMD_DEGREE:
0971   C697 6A 03           LDI  UL,$03
0972   C699             
0973   C699             BCMD_DEGREE_1: ; $C699
0974   C699 A5 76 4F        LDA  (DISP_BUFF + $4F)
0975   C69C B9 F8           ANI  A,$F8
0976   C69E F9              REC
0977   C69F 22              ADC  UL
0978   C6A0 AE 76 4F        STA  (DISP_BUFF + $4F)
0979   C6A3 E2              VEJ  (E2)
0980   C6A4             
0981   C6A4             
0982   C6A4             
0983   C6A4             ;------------------------------------------------------------------------------
0984   C6A4             ; $C6A4 - Basic Command RADIAN
0985   C6A4             ;------------------------------------------------------------------------------
0986   C6A4             BCMD_RADIAN:
0987   C6A4 6A 04           LDI  UL,$04
0988   C6A6 9E 0F           BCH BCMD_DEGREE_1 ; $C699
0989   C6A8             
0990   C6A8             
0991   C6A8             
0992   C6A8             ;------------------------------------------------------------------------------
0993   C6A8             ; $C6A8 - Basic Command GRAD
0994   C6A8             ;------------------------------------------------------------------------------
0995   C6A8             BCMD_GRAD:
0996   C6A8 6A 06           LDI  UL,$06
0997   C6AA 9E 13           BCH BCMD_DEGREE_1 ; $C699
0998   C6AC             
0999   C6AC             
1000   C6AC             
1001   C6AC             ;------------------------------------------------------------------------------
1002   C6AC             ; $C6AC - Basic Command RETURN
1003   C6AC             ;------------------------------------------------------------------------------
1004   C6AC             BCMD_RETURN:
1005   C6AC C2              VEJ  (C2) \ ACHR($0D) \ ABRF($10) ; $C710
1005   C6AD 0D          
1005   C6AE 61          
1006   C6AF A5 78 91        LDA  (GOSB_STK_PTR_L)
1007   C6B2 DD              INC  A
1008   C6B3 83 58           BCS BCMD_NEXT_2 ; $C70D
1009   C6B5 AE 78 82        STA  (STK_PTR_GSB_FOR)
1010   C6B8 EF 78 91 06     ADI  (GOSB_STK_PTR_L),$06
1011   C6BC             
1012   C6BC             BCMD_RETURN_5: ; $C6BC
1013   C6BC BE DE C7        SJP  (BCMD_TIME_4) ; $DEC7
1014   C6BF             
1015   C6BF             BCMD_RETURN_1: ; $C6BF
1016   C6BF BA C4 13        JMP  BASIC_INT_8 ; $C413
1017   C6C2             
1018   C6C2             BCMD_RETURN_6: ; $C6C2
1019   C6C2 FD 98           PSH  Y
1020   C6C4 B3 09           ADI  A,$09
1021   C6C6 AE 78 90        STA  (FORNXT_STK_PTR)
1022   C6C9 DA              VEJ  (DA)
1023   C6CA FD 28           LDX  U
1024   C6CC BE DC 20        SJP  (ISARXBCD_2) ; $DC20
1025   C6CF D2              VEJ  (D2) \ ABRF(BCMD_NEXT_1) \ ABYT($80) ; $C710
1025   C6D0 3E          
1025   C6D1 80          
1026   C6D2 CD 08           VMJ  ($08) \ ABRF(BCMD_RETURN_2) ; $C6D5
1026   C6D4 00          
1027   C6D5                 
1028   C6D5             BCMD_RETURN_2: ; $C6D5  
1029   C6D5 E6              VEJ  (E6)
1030   C6D6 CD 06           VMJ  ($06)
1031   C6D8 CD 10           VMJ  ($10) \ ABYT($80)
1031   C6DA 80          
1032   C6DB BE EF B6        SJP  (SUBTR)
1033   C6DE CD 06           VMJ  ($06)
1034   C6E0 5A 02           LDI  YL,$02
1035   C6E2 57              LDE  Y
1036   C6E3 8B 18           BZS BCMD_RETURN_3 ; $C6FD
1037   C6E5 A4              LDA  UH
1038   C6E6 1D              EOR  (Y)
1039   C6E7 DB              ROL
1040   C6E8 83 13           BCS BCMD_RETURN_3 ; $C6FD
1041   C6EA CD 10           VMJ  ($10) \ ABYT($80)
1041   C6EC 80          
1042   C6ED E6              VEJ  (E6)
1043   C6EE CC              VEJ  (CC) \ ABYTL(CURVARADD_H) ; $7883
1043   C6EF 83          
1044   C6F0 BE DC 20        SJP  (ISARXBCD_2) ; $DC20
1045   C6F3 F0              VEJ  (F0)
1046   C6F4 CD 08           VMJ  ($08) \ ABRF(BCMD_RETURN_4) ; $C6F7
1046   C6F6 00          
1047   C6F7                 
1048   C6F7             BCMD_RETURN_4: ; $C6F7
1049   C6F7 FD 1A           POP  Y
1050   C6F9 C8              VEJ  (C8) \ ABRF(BCMD_NEXT_3) ; $C710
1050   C6FA 15          
1051   C6FB 9E 41           BCH BCMD_RETURN_5 ; $C6BC
1052   C6FD             
1053   C6FD             BCMD_RETURN_3: ; $C6FD
1054   C6FD FD 1A           POP  Y
1055   C6FF EF 78 90 F4     ADI  (FORNXT_STK_PTR),$F4
1056   C703 E2              VEJ  (E2)
1057   C704             
1058   C704             
1059   C704             
1060   C704             ;------------------------------------------------------------------------------
1061   C704             ; $C704 - Basic Command NEXT
1062   C704             ;------------------------------------------------------------------------------
1063   C704             BCMD_NEXT:
1064   C704 C6              VEJ  (C6)
1065   C705 CE              VEJ  (CE) \ ABYT($68) \ ABRF($C70F)
1065   C706 68          
1065   C707 07          
1066   C708 BE D0 4C        SJP  (VARONBSTK)
1067   C70B 93 4B           BCS BCMD_RETURN_6 ; $C6C2
1068   C70D             
1069   C70D             BCMD_NEXT_2: ; $C70D
1070   C70D 68 02           LDI  UH,$02
1071   C70F             
1072   C70F             BCMD_NEXT_1: ; $C710
1073   C70F E0              VEJ  (E0)
1074   C710             
1075   C710             BCMD_NEXT_3: ; $C710
1076   C710 E4              VEJ  (E4)
1077   C711             
1078   C711             
1079   C711             
1080   C711             ;------------------------------------------------------------------------------
1081   C711             ; $C711Basic Command FOR
1082   C711             ;------------------------------------------------------------------------------
1083   C711             BCMD_FOR:
1084   C711 CE              VEJ  (CE) \ ABYT($68) \ ABRF(BCMD_FOR_2) ; $C776
1084   C712 68          
1084   C713 62          
1085   C714 DA              VEJ  (DA)
1086   C715 BE D0 4C        SJP  (VARONBSTK)
1087   C718 83 23           BCS BCMD_FOR_3 ; $C73D
1088   C71A A5 78 90        LDA  (FORNXT_STK_PTR)
1089   C71D AE 78 82        STA  (STK_PTR_GSB_FOR)
1090   C720 DF              DEC  A
1091   C721 B3 0A           ADI  A,$0A
1092   C723 83 4F           BCS BCMD_FOR_4 ; $C774
1093   C725 A7 78 91        CPA  (GOSB_STK_PTR_L)
1094   C728 83 4A           BCS BCMD_FOR_4 ; $C774
1095   C72A 6C 80           CPI  UH,$80
1096   C72C 81 0D           BCR BCMD_FOR_5 ; $C73B
1097   C72E 6C DB           CPI  UH,$DB
1098   C730 8B 09           BZS BCMD_FOR_5 ; $C73B
1099   C732 F4              VEJ  (F4) \ AWRD(VAR_START_H)
1099   C733 78 99       
1100   C735 B5 F8           LDI  A,$F8
1101   C737 FD EA           ADR  U
1102   C739 FD 62           DEC  UH
1103   C73B             
1104   C73B             BCMD_FOR_5: ; $C73B
1105   C73B CD 32           VMJ  ($32)
1106   C73D             
1107   C73D             BCMD_FOR_3: ; $C73D
1108   C73D C2              VEJ  (C2) \ ACHR($3D) \ ABRF(BCMD_POKE_1) ; $C7A1
1108   C73E 3D          
1108   C73F 61          
1109   C740 DE              VEJ  (DE) \ ABRF(BCMD_FOR_2) ; $C776
1109   C741 34          
1110   C742 CD 08           VMJ  ($08) \ ABRF(BCMD_FOR_2) ; $C776
1110   C744 31          
1111   C745 C2              VEJ  (C2) \ AWRD($F1B1) \ ABRF(BCMD_POKE_1) ; $C7A1
1111   C746 F1 B1       
1111   C748 58          
1112   C749 DE              VEJ  (DE) \ ABRF(BCMD_FOR_2) ; $C776
1112   C74A 2B          
1113   C74B D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_FOR_2) ; $C776
1113   C74C 04          
1113   C74D 28          
1114   C74E CD 32           VMJ  ($32)
1115   C750 C2              VEJ  (C2) \ AWRD($F1AD) \ ABRF(BCMD_FOR_6) ; $C761
1115   C751 F1 AD       
1115   C753 0D          
1116   C754 DE              VEJ  (DE) \ ABRF(BCMD_FOR_2) ; $C776
1116   C755 20          
1117   C756 D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_FOR_2) ; $C776
1117   C757 04          
1117   C758 1D          
1118   C759 AB 7A 05        ORA  (ARX + $05) 
1119   C75C 89 08           BZR BCMD_FOR_7 ; $C766
1120   C75E 68 13           LDI  UH,$13
1121   C760             
1122   C760             BCMD_FOR_1: ; $C760
1123   C760 E0              VEJ  (E0)
1124   C761             
1125   C761             BCMD_FOR_6: ; $C761
1126   C761 C6              VEJ  (C6)
1127   C762 6A 01           LDI  UL,$01
1128   C764 68 00           LDI  UH,$00
1129   C766             
1130   C766             BCMD_FOR_7: ; $C766
1131   C766 CD 32           VMJ  ($32)
1132   C768 C8              VEJ  (C8) \ ABRF(BCMD_POKE_1) ; $C7A1)
1132   C769 37          
1133   C76A BE DE FE        SJP  (BCMD_TIME_6) ; $DEFE
1134   C76D 04              LDA  XL
1135   C76E AE 78 90        STA  (FORNXT_STK_PTR)
1136   C771 BA C4 0E        JMP  BASIC_INT_9 ; $C40E
1137   C774             
1138   C774             BCMD_FOR_4: ; $C774
1139   C774 68 0E           LDI  UH,$0E
1140   C776             
1141   C776             BCMD_FOR_2: ; $C776
1142   C776 E0              VEJ  (E0)   
1143   C777             
1144   C777             
1145   C777             
1146   C777             ;------------------------------------------------------------------------------
1147   C777             ; $C777 - Basic Command POKE
1148   C777             ;------------------------------------------------------------------------------
1149   C777             BCMD_POKE:
1150   C777 F9              REC
1151   C778             
1152   C778             ;------------------------------------------------------------------------------
1153   C778             ; $C778 - Basic Command POKE#
1154   C778             ;------------------------------------------------------------------------------
1155   C778 04              LDA  XL
1156   C779 FD C8           PSH  A
1157   C77B DE              VEJ  (DE) \ ABRF(BCMD_READ_2) ; $C7F1
1157   C77C 74          
1158   C77D D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_READ_2) ; $C7F1
1158   C77E 00          
1158   C77F 71          
1159   C780 FD A8           PSH  U
1160   C782 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_POKE_1) ; $C7A1
1160   C783 2C          
1160   C784 1C          
1161   C785             
1162   C785             BCMD_POKE_3: ; $C785
1163   C785 DE              VEJ  (DE) \ ABRF(BCMD_READ_2) ; $C7F1
1163   C786 6A          
1164   C787 D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_READ_2) ; $C7F1
1164   C788 08          
1164   C789 67          
1165   C78A FD 0A           POP  X
1166   C78C FD 8A           POP  A
1167   C78E FD C8           PSH  A
1168   C790 D1              ROR
1169   C791 24              LDA  UL
1170   C792 81 03           BCR BCMD_POKE_2 ; $C797
1171   C794 41              SIN  X
1172   C795 8E 03           BCH BCMD_POKE_4 ; $C79A
1173   C797             
1174   C797             BCMD_POKE_2: ; $C797
1175   C797 FD 0E           STA  #(X)
1176   C799 44              INC  X
1177   C79A             
1178   C79A             BCMD_POKE_4: ; $C79A
1179   C79A FD 88           PSH  X
1180   C79C C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_READ_7) ; $C7E4
1180   C79D 2C          
1180   C79E 45          
1181   C79F 9E 1C           BCH BCMD_POKE_3 ; $C785
1182   C7A1             
1183   C7A1             BCMD_POKE_1: ; $C7A1
1184   C7A1 E4              VEJ  (E4)
1185   C7A2             
1186   C7A2             
1187   C7A2             
1188   C7A2             ;------------------------------------------------------------------------------
1189   C7A2             ; $C7A2 - Basic Command RESTORE
1190   C7A2             ;------------------------------------------------------------------------------
1191   C7A2             BCMD_RESTORE:
1192   C7A2 BE CC 8B        SJP  (BTN_DOWN_2) ; $CC8B
1193   C7A5 4B 62           ORI  (X),$62
1194   C7A7 CC              VEJ  (CC) \ ABYTL(CURR_TOP_H) ; $789E
1194   C7A8 9E          
1195   C7A9 44              INC  X
1196   C7AA 44              INC  X
1197   C7AB 44              INC  X
1198   C7AC 84              LDA  XH
1199   C7AD 81 02           BCR $C7B1
1200   C7AF CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
1200   C7B0 A6          
1201   C7B1 BB 80           ORI  A,$80
1202   C7B3 08              STA  XH
1203   C7B4 CA              VEJ  (CA) \ ABYTL(DATA_PTR_H) ; $78BE
1203   C7B5 BE          
1204   C7B6 56              DEC  Y
1205   C7B7 E2              VEJ  (E2)
1206   C7B8             
1207   C7B8             
1208   C7B8             
1209   C7B8             ;------------------------------------------------------------------------------
1210   C7B8             ; $C7B8 - Basic Command READ
1211   C7B8             ;------------------------------------------------------------------------------
1212   C7B8             BCMD_READ:
1213   C7B8 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_READ_2) ; $C7F1
1213   C7B9 58          
1213   C7BA 36          
1214   C7BB DA              VEJ  (DA)
1215   C7BC FD 98           PSH  Y
1216   C7BE CC              VEJ  (CC) \ ABYTL(DATA_PTR_H) ; $78BE
1216   C7BF BE          
1217   C7C0 FD 5A           STX  Y
1218   C7C2 DB              ROL
1219   C7C3 81 04           BCR BCMD_READ_3 ; $C7C9
1220   C7C5 D5              SHR
1221   C7C6 18              STA  YH
1222   C7C7 8E 2B           BCH BCMD_READ_4 ; $C7F4
1223   C7C9             
1224   C7C9             BCMD_READ_3: ; $C7C9
1225   C7C9 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_READ_5) ; $C7E6
1225   C7CA 2C          
1225   C7CB 1A          
1226   C7CC             
1227   C7CC             BCMD_READ_10: ; $C7CC
1228   C7CC DE              VEJ  (DE) \ ABRF(BCMD_READ_6) ; $C7EF
1228   C7CD 21          
1229   C7CE C8              VEJ  (C8) \ ABRF($C7D2)
1229   C7CF 02          
1230   C7D0 8E 03           BCH $C7D5
1231   C7D2 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_READ_6) ; $C7EF
1231   C7D3 2C          
1231   C7D4 1A          
1232   C7D5 56              DEC  Y
1233   C7D6 FD 18           LDX  Y
1234   C7D8 CA              VEJ  (CA) \ ABYTL(DATA_PTR_H) ; $78BE
1234   C7D9 BE          
1235   C7DA FD 1A           POP  Y
1236   C7DC CD 08           VMJ  ($08) \ ABRF(BCMD_READ_2) ; $C7F1
1236   C7DE 12          
1237   C7DF C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_READ_7) ; $C7E4
1237   C7E0 2C          
1237   C7E1 02          
1238   C7E2 9E 2C           BCH BCMD_READ ; $C7B8
1239   C7E4             
1240   C7E4             BCMD_READ_7: ; $C7E4
1241   C7E4 CD 40           VMJ  ($40) ; orig ($40)($20) 20 bogus
1242   C7E6             
1243   C7E6             BCMD_READ_5: ; $C7E6
1244   C7E6 56              DEC  Y
1245   C7E7 CD 20           VMJ  ($20)
1246   C7E9             
1247   C7E9             BCMD_READ_11: ; $C7E9
1248   C7E9 55              LIN  Y
1249   C7EA DD              INC  A
1250   C7EB 89 05           BZR BCMD_READ_8 ; $C7F2
1251   C7ED 68 04           LDI  UH,$04
1252   C7EF             
1253   C7EF             BCMD_READ_6: ; $C7EF
1254   C7EF FD 1A           POP  Y
1255   C7F1             
1256   C7F1             BCMD_READ_2: ; $C7F1 
1257   C7F1 E0              VEJ  (E0)
1258   C7F2             
1259   C7F2             BCMD_READ_8: ; $C7F2
1260   C7F2 54              INC  Y
1261   C7F3 54              INC  Y
1262   C7F4             
1263   C7F4             BCMD_READ_4: ; $C7F4
1264   C7F4 FD 98           PSH  Y
1265   C7F6 CD 22           VMJ  ($22)
1266   C7F8 83 08           BCS BCMD_READ_9 ; $C802
1267   C7FA C4              VEJ  (C4) \ AWRD($F18D) \ ABRF(BCMD_READ_9) ; $C802
1267   C7FB F1 8D       
1267   C7FD 04          
1268   C7FE FD 0A           POP  X
1269   C800 9E 36           BCH BCMD_READ_10 ; $C7CC
1270   C802             
1271   C802             BCMD_READ_9: ; $C802
1272   C802 FD 1A           POP  Y
1273   C804 56              DEC  Y
1274   C805 55              LIN  Y
1275   C806 FD DA           ADR  Y
1276   C808 9E 21           BCH BCMD_READ_11 ; $C7E9
1277   C80A             
1278   C80A             
1279   C80A             
1280   C80A             ;------------------------------------------------------------------------------
1281   C80A             ; $C80A - Basic Command NEW
1282   C80A             ;------------------------------------------------------------------------------
1283   C80A 30              SBC  VL ; .BYTE 30?
1284   C80B D5              SHR
1285   C80C 85 0D           BHR BCMD_READ_12 ; $C81B
1286   C80E C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1286   C80F E0          
1287   C810 CD 38           VMJ  ($38)
1288   C812 C1 E0           VCR  ($E0)
1289   C814 6A BC           LDI  UL,$BC
1290   C816 BE D0 AE        SJP  (DEL_DIM_VARS_18) ; $D0AE
1291   C819 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
1292   C81B             
1293   C81B             BCMD_READ_12: ; $C81B
1294   C81B C8              VEJ  (C8) \ ABRF(BCMD_READ_13) ; $C821
1294   C81C 04          
1295   C81D CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
1295   C81E 65          
1296   C81F 8E 34           BCH BCMD_READ_14 ; $C855
1297   C821             
1298   C821             BCMD_READ_13: ; $C821
1299   C821 C6              VEJ  (C6)
1300   C822 DE              VEJ  (DE) \ ABRF(BCMD_CONT_2) ; $C8F1
1300   C823 CD          
1301   C824 D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_CONT_2) ; $C8F1
1301   C825 00          
1301   C826 CA          
1302   C827 C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1302   C828 C7          
1303   C829 DC              VEJ  (DC)
1304   C82A A5 78 60        LDA  (ST_ROM_MOD) ; $7860
1305   C82D D9              SHL
1306   C82E 04              LDA  XL
1307   C82F 89 0F           BZR BCMD_READ_15 ; $C840
1308   C831 84              LDA  XH
1309   C832 89 0C           BZR BCMD_READ_15 ; $C840
1310   C834 81 02           BCR BCMD_READ_16 ; $C838
1311   C836 4A C5           LDI  XL,$C5
1312   C838             
1313   C838             BCMD_READ_16: ; $C838
1314   C838 A5 78 63        LDA  (RAM_ST_H)
1315   C83B BE CD 6A        SJP  (UNLOCK)
1316   C83E 8E 13           BCH BCMD_READ_17 ; $C853
1317   C840             
1318   C840             BCMD_READ_15: ; $C840
1319   C840 68 19           LDI  UH,$19
1320   C842 C1 E0           VCR  ($E0)
1321   C844 04              LDA  XL
1322   C845 B1 C5           SBI  A,$C5
1323   C847 84              LDA  XH
1324   C848 A1 78 63        SBC  (RAM_ST_H)
1325   C84B C1 E0           VCR  ($E0)
1326   C84D 84              LDA  XH
1327   C84E A7 78 64        CPA  (RAM_END_H)
1328   C851 C3 E0           VCS  ($E0)
1329   C853             
1330   C853             BCMD_READ_17: ; $C853
1331   C853 CA              VEJ  (CA) \ ABYTL(BASPRG_ST_H) ; $7865
1331   C854 65          
1332   C855             
1333   C855             BCMD_READ_14: ; $C855
1334   C855 CA              VEJ  (CA) \ ABYTL(BASPRG_EDT_H) ; $7869
1334   C856 69          
1335   C857             
1336   C857             BCMD_READ_20: ; $C857
1337   C857 4B FF           ORI  (X),$FF
1338   C859 CA              VEJ  (CA) \ ABYTL(BASPRG_END_H) ; $7867
1338   C85A 67          
1339   C85B 56              DEC  Y
1340   C85C BE D0 0D        SJP  (PRGLINE_TDI_2) ; $D00D
1341   C85F             
1342   C85F             
1343   C85F             
1344   C85F             ;------------------------------------------------------------------------------
1345   C85F             ; $C85F - Basic Command CLEAR 
1346   C85F             ;------------------------------------------------------------------------------ 
1347   C85F BE D0 80        SJP  (DELSVARS)
1348   C862 E2              VEJ (E2)
1349   C863             
1350   C863             ;------------------------------------------------------------------------------
1351   C863             ; $C863 - Basic Command CALL
1352   C863             ;------------------------------------------------------------------------------
1353   C863 DE              VEJ  (DE) \ ABRF(BCMD_CONT_2) ; $C8F1
1353   C864 8C          
1354   C865 D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_CONT_2) ; $C8F1
1354   C866 00          
1354   C867 89          
1355   C868 FD A8           PSH  U
1356   C86A C8              VEJ  (C8) \ ABRF(BCMD_READ_18) ; $C871
1356   C86B 05          
1357   C86C 68 80           LDI  UH,$80
1358   C86E DA              VEJ  (DA)
1359   C86F 8E 18           BCH BCMD_READ_19 ; $C889
1360   C871             
1361   C871             BCMD_READ_18: ; $C871
1362   C871 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_CONT_1) ; $C8F0
1362   C872 2C          
1362   C873 7C          
1363   C874 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_CONT_2) ; $C8F1
1363   C875 58          
1363   C876 7A          
1364   C877 6C 80           CPI  UH,$80
1365   C879 83 EA           BCS BCMD_INPUT_1 ; $C965
1366   C87B DA              VEJ  (DA)
1367   C87C C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1367   C87D 72          
1368   C87E DC              VEJ  (DC)
1369   C87F B7 80           CPI  A,$80
1370   C881 81 06           BCR BCMD_READ_19 ; $C889
1371   C883 CD 0A           VMJ  ($0A)
1372   C885 D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_CONT_2) ; $C8F1
1372   C886 04          
1372   C887 69          
1373   C888 DC              VEJ  (DC)
1374   C889             
1375   C889             BCMD_READ_19: ; $C889    
1376   C889 56              DEC  Y
1377   C88A FD 2A           POP  U
1378   C88C FD 98           PSH  Y
1379   C88E 5A 97           LDI  YL,$97
1380   C890 58 C8           LDI  YH,$C8
1381   C892 FD 98           PSH  Y
1382   C894 FD A8           PSH  U
1383   C896 9A              RTN
1384   C897 FD 1A           POP  Y
1385   C899 C1 E2           VCR  ($E2)
1386   C89B ED 78 83 80     BII  (CURVARADD_H),$80
1387   C89F C9 E2           VZR  ($E2)
1388   C8A1 ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
1389   C8A5 8B 09           BZS BCMD_READ_22 ; $C8B0
1390   C8A7 FD 6A           STX  U
1391   C8A9 BE D9 E7        SJP  (ARUINT2ARX)
1392   C8AC             
1393   C8AC             BCMD_READ_21: ; $C8AC
1394   C8AC CD 08           VMJ  ($08) \ ABRF(BCMD_CONT_2) ; $C8F1
1394   C8AE 42          
1395   C8AF E2              VEJ  (E2)
1396   C8B0             
1397   C8B0             BCMD_READ_22: ; $C8B0
1398   C8B0 CD 24           VMJ  ($24)
1399   C8B2 9E 08           BCH BCMD_READ_21 ; $C8AC
1400   C8B4             
1401   C8B4             
1402   C8B4             
1403   C8B4             ;------------------------------------------------------------------------------
1404   C8B4             ; $C8B4 - Basic Command RUN
1405   C8B4             ;------------------------------------------------------------------------------
1406   C8B4 40              INC  XL
1407   C8B5 BE CC 86        SJP  (BTN_DOWN_1) ; $CC86
1408   C8B8 38              NOP
1409   C8B9 C1 42           VCR  ($42) ; orig ($42)($21) 21 bogus
1410   C8BB BE D0 91        SJP  (DELDVARS)
1411   C8BE BE D0 0D        SJP  (PRGLINE_TDI_2) ; $D00D
1412   C8C1             
1413   C8C1             BCMD_READ_23: ; $C8C1
1414   C8C1 F2              VEJ  (F2)
1415   C8C2             
1416   C8C2             BCMD_READ_1: ; $C8C2
1417   C8C2 D6              VEJ  (D6) \ ABYT($A6)
1417   C8C3 A6          
1418   C8C4 BA C4 38        JMP  BASIC_INT_10 ; $C438
1419   C8C7             
1420   C8C7             
1421   C8C7             
1422   C8C7             ;------------------------------------------------------------------------------
1423   C8C7             ; $C8C7 - Basic Command CONT
1424   C8C7             ;------------------------------------------------------------------------------
1425   C8C7             BCMD_CONT:
1426   C8C7 40              INC  XL
1427   C8C8 C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1427   C8C9 26          
1428   C8CA ED 78 8A E0     BII  (BREAKPARAM),$E0
1429   C8CE CB E4           VZS  ($E4)
1430   C8D0 E9 7B 0E 7F     ANI  (CURS_CTRL),$7F
1431   C8D4 F2              VEJ  (F2)
1432   C8D5             
1433   C8D5             BCMD_CONT_3: ; $C8D5
1434   C8D5 EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1435   C8D9 D6              VEJ  (D6) \ ABYT($AC)
1435   C8DA AC          
1436   C8DB A5 78 8A        LDA  (BREAKPARAM)
1437   C8DE E9 78 8A 0F     ANI  (BREAKPARAM),$0F
1438   C8E2 DB              ROL
1439   C8E3 DB              ROL
1440   C8E4 81 0C           BCR $C8F2
1441   C8E6 BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
1442   C8E9 EB 78 8A 50     ORI  (BREAKPARAM),$50
1443   C8ED BA CA 75        JMP  BUTTON_CL_2 ; $CA75
1444   C8F0             
1445   C8F0             BCMD_CONT_1: ; $C8F0
1446   C8F0 E4              VEJ  (E4)
1447   C8F1             
1448   C8F1             BCMD_CONT_2: ; $C8F1
1449   C8F1 E0              VEJ  (E0)
1450   C8F2 DB              ROL
1451   C8F3 81 02           BCR BCMD_CONT_4 ; BCMD_CLEAR_1 ; BCMD_READ_20 ; $C8F7
1452   C8F5 56              DEC  Y
1453   C8F6 E2              VEJ  (E2)
1454   C8F7             
1455   C8F7             BCMD_CONT_4: ; $C42E
1456   C8F7 BA C4 2E        JMP  BASIC_INT_11 ; 
1457   C8FA             
1458   C8FA             
1459   C8FA             
1460   C8FA             ;------------------------------------------------------------------------------
1461   C8FA             ; $C8FA - Basic Command INPUT
1462   C8FA             ;------------------------------------------------------------------------------
1463   C8FA             BCMD_INPUT:
1464   C8FA C2              VEJ  (C2) \ ACHR($23) \ ABRF(BCMD_INPUT_2) ; $C900
1464   C8FB 23          
1464   C8FC 03          
1465   C8FD BA E4 E7        JMP  $E4E7
1466   C900             
1467   C900             BCMD_INPUT_2: ; $C900
1468   C900 D8              VEJ  (D8)
1469   C901 89 03           BZR BCMD_INPUT_3 ; $C906
1470   C903 68 1A           LDI  UH,$1A
1471   C905 E0              VEJ  (E0)
1472   C906             
1473   C906             BCMD_INPUT_3: ; $C906
1474   C906 C6              VEJ  (C6)
1475   C907             
1476   C907             BCMD_INPUT_9: ; $C907
1477   C907 BE D0 34        SJP  (INBUF_CLR)
1478   C90A C2              VEJ  (C2) \ ACHR($22) \ ABRF(BCMD_INPUT_4) ; $C95D
1478   C90B 22          
1478   C90C 50          
1479   C90D CD 0C           VMJ  ($0C)
1480   C90F FD 98           PSH  Y
1481   C911 5A B0           LDI  YL,$B0
1482   C913 58 7B           LDI  YH,$7B
1483   C915 A5 7A 07        LDA  (ARX + $07)
1484   C918 2A              STA  UL
1485   C919 BE D0 49        SJP  (SYSMSG_3)
1486   C91C 14              LDA  YL
1487   C91D AE 78 8B        STA  (INBUFPTR_L)
1488   C920 FD 1A           POP  Y
1489   C922 C2              VEJ  (C2) \ ACHR($3B) \ ABRF(BCMD_INPUT_5) ; $C929
1489   C923 3B          
1489   C924 04          
1490   C925 B5 40           LDI  A,$40
1491   C927 8E 0A           BCH BCMD_INPUT_6 ; $C933
1492   C929             
1493   C929             BCMD_INPUT_5: ; $C929
1494   C929 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_DIM_6) ; $C9E3
1494   C92A 2C          
1494   C92B B7          
1495   C92C                
1496   C92C             BCMD_INPUT_8: ; $C92C  
1497   C92C B5 B0           LDI  A,$B0
1498   C92E AE 78 8B        STA  (INBUFPTR_L)
1499   C931 B5 00           LDI  A,$00
1500   C933             
1501   C933             BCMD_INPUT_6: ; $C933
1502   C933 AE 78 80        STA  (DISPARAM)
1503   C936 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_INPUT_7) ; $C967
1503   C937 58          
1503   C938 2E          
1504   C939 F6              VEJ  (F6) \ AWRD(LASTVARADD_H)
1504   C93A 78 86       
1505   C93C 44              INC  X
1506   C93D A5 7A 07        LDA  (ARX + $07)
1507   C940 0E              STA  (X)
1508   C941 EB 78 8A 50     ORI  (BREAKPARAM),$50
1509   C945 D4              VEJ  (D4) \ ABYT($A0)
1509   C946 A0          
1510   C947 D4              VEJ  (D4) \ ABYT($AC)
1510   C948 AC          
1511   C949 A5 78 8B        LDA  (INBUFPTR_L)
1512   C94C 1A              STA  YL
1513   C94D 58 7B           LDI  YH,$7B
1514   C94F E9 7B 0E 9F     ANI  (CURS_CTRL),$9F
1515   C953 BE EF 67        SJP  (PREPLCDOUT)
1516   C956 68 20           LDI  UH,$20
1517   C958 C3 E0           VCS  ($E0)
1518   C95A BA CA 7D        JMP  BUTTON_CL_4 ; $CA7D
1519   C95D             
1520   C95D             BCMD_INPUT_4: ; $C95D
1521   C95D C6              VEJ  (C6)
1522   C95E B5 3F           LDI  A,$3F
1523   C960 AE 7B B0        STA  (IN_BUF)
1524   C963 9E 39           BCH BCMD_INPUT_8 ; $C92C
1525   C965             
1526   C965             BCMD_INPUT_1: ; $C965
1527   C965 68 07           LDI  UH,$07
1528   C967             
1529   C967             BCMD_INPUT_7: ; $C967
1530   C967 E0              VEJ  (E0)
1531   C968             
1532   C968             
1533   C968             
1534   C968             ;------------------------------------------------------------------------------
1535   C968             ; $C968 - Basic Command LOCK
1536   C968             ;------------------------------------------------------------------------------
1537   C968             BCMD_LOCK:
1538   C968 B5 00           LDI  A,$00
1539   C96A             
1540   C96A             ;------------------------------------------------------------------------------
1541   C96A             ; $C96A - Basic Command UNLOCK
1542   C96A             ;------------------------------------------------------------------------------
1543   C96A             BCMD_UNLOCK:
1544   C96A AE 79 FF        STA  (UNDEF_REG_79FF)
1545   C96D E2              VEJ  (E2)
1546   C96E             
1547   C96E             
1548   C96E             
1549   C96E             ;------------------------------------------------------------------------------
1550   C96E             ; $C96E - Basic Command LIST
1551   C96E             ;------------------------------------------------------------------------------
1552   C96E             BCMD_LIST:
1553   C96E 20              SBC  UL ; .BYTE $20
1554   C96F BE CC 86        SJP  (BTN_DOWN_1); $CC86
1555   C972 04              LDA  XL
1556   C973 83 08           BCS BCMD_LIST_1 ; $C97D
1557   C975 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
1558   C977 C1 E0           VCR  ($E0)
1559   C979 6C 0B           CPI  UH,$0B
1560   C97B C9 E0           VZR  ($E0)
1561   C97D             
1562   C97D             BCMD_LIST_1: ; $C97D
1563   C97D CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
1563   C97E A6          
1564   C97F 46              DEC  X
1565   C980 46              DEC  X
1566   C981 BE D2 D0        SJP  (BCD_Y2ARX_1) ; $D2D0
1567   C984 B5 14           LDI  A,$14
1568   C986 CD 44           VMJ  ($44) ;orig ($44)($22) 22 bogus
1569   C988             
1570   C988             
1571   C988             
1572   C988             ;------------------------------------------------------------------------------
1573   C988             ; $C988 - Basic Command DIM
1574   C988             ;------------------------------------------------------------------------------
1575   C988             BCMD_DIM:
1576   C988 CE              VEJ  (CE) \ ABYT($14) \ ABRF(BCMD_DIM_1) ; $C9D4
1576   C989 14          
1576   C98A 49          
1577   C98B DA              VEJ  (DA)
1578   C98C CD 2C           VMJ  ($2C) \ ABRF(BCMD_DIM_1) ; $C9D4
1578   C98E 45          
1579   C98F FD A8           PSH  U
1580   C991 B5 88           LDI  A,$88
1581   C993 ED 78 84 20     BII  (CURVARADD_L),$20
1582   C997 8B 08           BZS BCMD_DIM_2 ; $C9A1
1583   C999 C2              VEJ  (C2) \ ACHR($2A) \ ABRF(BCMD_DIM_9) ; $C9D5
1583   C99A 2A          
1583   C99B 39          
1584   C99C DE              VEJ  (DE) \ ABRF(BCMD_DIM_1) ; $C9D4
1584   C99D 36          
1585   C99E D0              VEJ  (D0) \ ABYT($0D) \ ABRF(BCMD_DIM_1) ; $C9D4
1585   C99F 0D          
1585   C9A0 33          
1586   C9A1                 
1587   C9A1             BCMD_DIM_2: ; $C9A1    
1588   C9A1 AE 78 85        STA  (CURVARTYPE) ; $7885
1589   C9A4 FD 2A           POP  U
1590   C9A6 FD 98           PSH  Y
1591   C9A8 FD A8           PSH  U
1592   C9AA A4              LDA  UH
1593   C9AB 1A              STA  YL
1594   C9AC 68 00           LDI  UH,$00
1595   C9AE 58 00           LDI  YH,$00
1596   C9B0 64              INC  U
1597   C9B1 54              INC  Y
1598   C9B2 CD 50           VMJ  ($50) ; orig ($50)($28) 28 us bogus
1599   C9B4 83 18           BCS BCMD_DIM_8 ; $C9CE
1600   C9B6 A5 78 85        LDA  (CURVARTYPE) ; $7885
1601   C9B9 B9 7F           ANI  A,$7F
1602   C9BB 2A              STA  UL
1603   C9BC CD 50           VMJ  ($50) ; orig ($50)($28) 28 us bogus
1604   C9BE 83 0E           BCS BCMD_DIM_8 ; $C9CE
1605   C9C0 FD 2A           POP  U
1606   C9C2 BE D3 86        SJP  (SRCHPRGLINE_1) ; $D386
1607   C9C5 83 0B           BCS BCMD_DIM_3 ; $C9D2
1608   C9C7 FD 1A           POP  Y
1609   C9C9 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_DIM_4) ; $C9DC
1609   C9CA 2C          
1609   C9CB 10          
1610   C9CC 9E 46           BCH BCMD_DIM
1611   C9CE             
1612   C9CE             BCMD_DIM_8: ; $C9CE
1613   C9CE 68 0A           LDI  UH,$0A
1614   C9D0 FD 0A           POP  X
1615   C9D2             
1616   C9D2             BCMD_DIM_3: ; $C9D2
1617   C9D2 FD 1A           POP  Y
1618   C9D4             
1619   C9D4             BCMD_DIM_1: ; $C9D4
1620   C9D4 E0              VEJ  (E0)
1621   C9D5             
1622   C9D5             BCMD_DIM_9: ; $C9D5  
1623   C9D5 C6              VEJ  (C6)
1624   C9D6 B5 10           LDI  A,$10
1625   C9D8 9E 39           BCH BCMD_DIM_2 ; $C9A1
1626   C9DA             
1627   C9DA             BCMD_DIM_7: ; $C9DA
1628   C9DA C8              VEJ  (C8) \ ABRF(BCMD_DIM_5) ; $C9DE
1628   C9DB 02          
1629   C9DC                 
1630   C9DC             BCMD_DIM_4: ; $C9DC   
1631   C9DC CD 40           VMJ  ($40) ; orig ($40)($20) 20 bogus
1632   C9DE             
1633   C9DE             BCMD_DIM_5: ; $C9DE
1634   C9DE C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_DIM_6) ; $C9E3
1634   C9DF 2C          
1634   C9E0 02          
1635   C9E1 9E DC           BCH BCMD_INPUT_9 ; $C907
1636   C9E3             
1637   C9E3             BCMD_DIM_6: ; $C9E3
1638   C9E3 E4              VEJ  (E4)
1639   C9E4             
1640   C9E4             
1641   C9E4             
1642   C9E4             ;------------------------------------------------------------------------------
1643   C9E4             ; $C9E4 - Editor Cold Start
1644   C9E4             ;------------------------------------------------------------------------------
1645   C9E4             COLD_START:
1646   C9E4 BE CF CC        SJP  (PRGLINE_TDI_3) ; $CFCC
1647   C9E7 BE D0 30        SJP  (INBUF_INIT)
1648   C9EA 6A 0C           LDI  UL,$0C
1649   C9EC A5 7A 21        LDA  (ARV + $01)
1650   C9EF 28              STA  UH
1651   C9F0 4A 4F           LDI  XL,$4F
1652   C9F2 A5 7A 20        LDA  (ARV)
1653   C9F5 89 2D           BZR COLD_START_1 ; $CA24
1654   C9F7 4A 55           LDI  XL,$55
1655   C9F9 6A 06           LDI  UL,$06
1656   C9FB A4              LDA  UH
1657   C9FC AB 7A 22        ORA  (ARV + $02)
1658   C9FF 89 28           BZR COLD_START_2 ; $CA29
1659   CA01 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
1660   CA05 8B 4E           BZS BTN_SHCL
1661   CA07 BE DF F3        SJP  (PRGST2XREG)
1662   CA0A B5 00           LDI  A,$00
1663   CA0C             
1664   CA0C             COLD_START_7: ; $CA0C
1665   CA0C 81 47           BCR BTN_SHCL
1666   CA0E FD C8           PSH  A
1667   CA10 BE D0 B4        SJP  (DEL_DIM_VARS_2) ; $D0B4
1668   CA13 FD 5A           STX  Y
1669   CA15 CD 22           VMJ  ($22)
1670   CA17 83 31           BCS COLD_START_3 ; $CA4A
1671   CA19 C4              VEJ  (C4) \ AWRD($F181) \ ABRF(COLD_START_3); $CA4A
1671   CA1A F1 81       
1671   CA1C 2D          
1672   CA1D EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1673   CA21 BA C8 C1        JMP  BCMD_READ_23 ; $C8C1
1674   CA24             
1675   CA24             COLD_START_1: ; $CA24
1676   CA24 B5 23           LDI  A,$23
1677   CA26 AE 76 4F        STA  (DISP_BUFF + $4F)
1678   CA29             
1679   CA29             COLD_START_2: ; $CA29
1680   CA29 BE D0 46        SJP  (SYSMSG_2)
1681   CA2C 4A 30           LDI  XL,$30
1682   CA2E A5 7A 22        LDA  (ARV + $02)
1683   CA31             
1684   CA31             COLD_START_6: ; $CA32
1685   CA31 08              STA  XH
1686   CA32             
1687   CA32             COLD_START_8: ; $    
1688   CA32 84              LDA  XH
1689   CA33 D5              SHR
1690   CA34 08              STA  XH
1691   CA35 A4              LDA  UH
1692   CA36 D1              ROR
1693   CA37 28              STA  UH
1694   CA38 81 02           BCR COLD_START_4 ; $CA3C
1695   CA3A 04              LDA  XL
1696   CA3B 51              SIN  Y
1697   CA3C             
1698   CA3C             COLD_START_4: ; $CA3C
1699   CA3C 40              INC  XL
1700   CA3D 4E 3A           CPI  XL,$3A
1701   CA3F 89 02           BZR COLD_START_5 ; $CA43
1702   CA41 4A 41           LDI  XL,$41
1703   CA43             
1704   CA43             COLD_START_5: ; $CA43
1705   CA43 62              DEC  UL
1706   CA44 97 14           BHS COLD_START_8 ; $CA32
1707   CA46 B5 80           LDI  A,$80
1708   CA48 CD 44           VMJ  ($44) ; orig ($44)($22) 22 bogus
1709   CA4A             
1710   CA4A             COLD_START_3: ; $CA4A
1711   CA4A FD 8A           POP  A
1712   CA4C DF              DEC  A
1713   CA4D 83 06           BCS BTN_SHCL
1714   CA4F CD 14           VMJ  ($14)
1715   CA51 B5 FF           LDI  A,$FF
1716   CA53 9E 49           BCH COLD_START_7 ; $CA0C
1717   CA55             
1718   CA55             
1719   CA55             
1720   CA55             ;------------------------------------------------------------------------------
1721   CA55             ; $CA55 - SHIFT CL button (Clear All)
1722   CA55             ;------------------------------------------------------------------------------
1723   CA55             BTN_SHCL:
1724   CA55 BE CF CC        SJP  (PRGLINE_TDI_3) ; $CFCC
1725   CA58             
1726   CA58             
1727   CA58             
1728   CA58             ;------------------------------------------------------------------------------
1729   CA58             ; $CA58 - (42) Editor Warm 
1730   CA58             ;------------------------------------------------------------------------------
1731   CA58             WARM_START:
1732   CA58 BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
1733   CA5B B5 3E           LDI  A,$3E
1734   CA5D 1E              STA  (Y)
1735   CA5E E9 78 8A EF     ANI  (BREAKPARAM),$EF
1736   CA62 8E 14           BCH BUTTON_CL_3 ; $CA78
1737   CA64             
1738   CA64             
1739   CA64             
1740   CA64             ;------------------------------------------------------------------------------
1741   CA64             ; $CA64 - CL Button
1742   CA64             ;------------------------------------------------------------------------------
1743   CA64             BUTTON_CL:
1744   CA64 81 01           BCR BUTTON_CL_1 ; $CA67
1745   CA66 F2              VEJ  (F2)
1746   CA67             
1747   CA67             BUTTON_CL_1: ; $CA67
1748   CA67 BE D0 11        SJP  (PRGLINE_TDI_4) ; $D011
1749   CA6A 91 14           BCR WARM_START
1750   CA6C BE D0 21        SJP  (INBUF_CLRRST)
1751   CA6F B5 40           LDI  A,$40
1752   CA71 5E B0           CPI  YL,$B0
1753   CA73 89 05           BZR BUTTON_CL_5 ; $CA7A
1754   CA75             
1755   CA75             BUTTON_CL_2: ; $CA75
1756   CA75 B5 3F           LDI  A,$3F
1757   CA77 1E              STA  (Y)
1758   CA78             
1759   CA78             BUTTON_CL_3: ; $CA78
1760   CA78 B5 00           LDI  A,$00
1761   CA7A             
1762   CA7A             
1763   CA7A             
1764   CA7A             ;------------------------------------------------------------------------------
1765   CA7A             ; (44) $CA7A - Editor (display is retained)
1766   CA7A             ;------------------------------------------------------------------------------
1767   CA7A             BUTTON_CL_5:
1768   CA7A AE 78 80        STA  (DISPARAM)
1769   CA7D             
1770   CA7D             ;------------------------------------------------------------------------------
1771   CA7D             ; (46) $CA7D - Editor Jump
1772   CA7D             ;------------------------------------------------------------------------------
1773   CA7D             BUTTON_CL_4:
1774   CA7D BE E8 CA        SJP  (PRGMDISP)
1775   CA80 E9 78 9D 00     ANI  (CURR_LINE_L),$00
1776   CA84 E9 78 9C 00     ANI  (CURR_LINE_H),$00
1777   CA88 E9 76 4E FE     ANI  (DISP_BUFF + $4E),$FE
1778   CA8C AA 78 4F        LDI  S,(CPU_STACK + $4F)
1779   CA8F BE E2 43        SJP  (WAIT4KB)
1780   CA92 2A              STA  UL
1781   CA93 CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880
1781   CA94 80          
1782   CA95 6E 19           CPI  UL,$19
1783   CA97 8B C8           BZS BTN_RCL
1784   CA99 6E 09           CPI  UL,$09
1785   CA9B 8B CC           BZS RSV_CHNG
1786   CA9D 28              STA  UH
1787   CA9E D1              ROR
1788   CA9F 81 0D           BCR BUTTON_CL_7 ; $CAAE
1789   CAA1 FD 62           DEC  UH
1790   CAA3 FD A8           PSH  U
1791   CAA5 BE EE 99        SJP  (BUF2LCD)
1792   CAA8 FD 2A           POP  U
1793   CAAA E9 78 80 FE     ANI  (DISPARAM),$FE
1794   CAAE             
1795   CAAE             BUTTON_CL_7: ; $CAAE
1796   CAAE 24              LDA  UL
1797   CAAF B7 20           CPI  A,$20
1798   CAB1 81 2C           BCR BUTTON_CL_6 ; $CADF
1799   CAB3 6C 80           CPI  UH,$80
1800   CAB5 C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
1801   CAB7 BF 60           BII  A,$60
1802   CAB9 68 00           LDI  UH,$00
1803   CABB 89 1D           BZR BUTTON_CL_16 ; $CADA
1804   CABD 4A EB           LDI  XL,$EB
1805   CABF 48 C2           LDI  XH,$C2
1806   CAC1 FD CA           ADR  X
1807   CAC3 05              LDA  (X)
1808   CAC4 B7 E0           CPI  A,$E0
1809   CAC6 83 11           BCS $CAD9
1810   CAC8 2A              STA  UL
1811   CAC9 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
1812   CACD 8B 0B           BZS BUTTON_CL_16 ; $CADA
1813   CACF EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1814   CAD3 28              STA  UH
1815   CAD4 CD 3A           VMJ  ($3A)
1816   CAD6 BA C5 29        JMP  DEFKEY_EVAL ; $C529
1817   CAD9 28              STA  UH
1818   CADA             
1819   CADA             BUTTON_CL_16: ; $CADA
1820   CADA BE CE 4A        SJP  (DEFEVAL)
1821   CADD 9E 62           BCH BUTTON_CL_4 ; $CA7D
1822   CADF             
1823   CADF             BUTTON_CL_6: ; $CADF
1824   CADF D9              SHL
1825   CAE0 85 16           BHR BUTTON_CL_8 ; $CAF8
1826   CAE2 BF 20           BII  A,$20
1827   CAE4 8B 02           BZS BUTTON_CL_9 ; $CAE8
1828   CAE6 B9 0E           ANI  A,$0E
1829   CAE8             
1830   CAE8             BUTTON_CL_9: ; $CAE8
1831   CAE8 6A 8B           LDI  UL,$8B
1832   CAEA 68 C3           LDI  UH,$C3
1833   CAEC FD EA           ADR  U
1834   CAEE 65              LIN  U
1835   CAEF 08              STA  XH
1836   CAF0 25              LDA  (U)
1837   CAF1 0A              STA  XL
1838   CAF2 A5 78 80        LDA  (DISPARAM)
1839   CAF5 D9              SHL
1840   CAF6 FD 5E           STX  P
1841   CAF8             
1842   CAF8             BUTTON_CL_8: ; $CAF8
1843   CAF8 6C 80           CPI  UH,$80
1844   CAFA C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
1845   CAFC             
1846   CAFC             BUTTON_CL_15: ; $CAFC
1847   CAFC BE CE 87        SJP  (DEFEVAL_1) ; $CE87
1848   CAFF ED 76 4F 10     BII  (DISP_BUFF + $4F),$10
1849   CB03 8B 28           BZS BUTTON_CL_10 ; $CB2D
1850   CB05 BE D0 30        SJP  (INBUF_INIT)
1851   CB08 B5 46           LDI  A,$46
1852   CB0A 51              SIN  Y
1853   CB0B A4              LDA  UH
1854   CB0C BB 30           ORI  A,$30
1855   CB0E 51              SIN  Y
1856   CB0F B5 3A           LDI  A,$3A
1857   CB11 51              SIN  Y
1858   CB12 14              LDA  YL
1859   CB13 AE 78 8B        STA  (INBUFPTR_L)
1860   CB16 CD 38           VMJ  ($38)
1861   CB18 BE CE C4        SJP  (RESKEY_SRCH)
1862   CB1B B5 48           LDI  A,$48
1863   CB1D 81 0C           BCR BUTTON_CL_11 ; $CB2B
1864   CB1F 45              LIN  X
1865   CB20 BF E0           BII  A,$E0
1866   CB22 8B 03           BZS BUTTON_CL_12 ; $CB27
1867   CB24 51              SIN  Y
1868   CB25 9E 08           BCH $CB1F
1869   CB27             
1870   CB27             BUTTON_CL_12: ; $CB27
1871   CB27 5A B3           LDI  YL,$B3
1872   CB29 B5 08           LDI  A,$08
1873   CB2B             
1874   CB2B             BUTTON_CL_11: ; $CB2B
1875   CB2B CD 44           VMJ  ($44) ; orig ($44)($22) 22 bogus
1876   CB2D             
1877   CB2D             BUTTON_CL_10: ; $CB2D
1878   CB2D CD 38           VMJ  ($38)
1879   CB2F 68 00           LDI  UH,$00
1880   CB31 BE CE C4        SJP  (RESKEY_SRCH)
1881   CB34 91 5C           BCR BUTTON_CL_16 ; $CADA
1882   CB36 45              LIN  X
1883   CB37 B7 40           CPI  A,$40
1884   CB39 8B E2           BZS PRG_ENTER
1885   CB3B 2A              STA  UL
1886   CB3C             
1887   CB3C             BUTTON_CL_14: ; $CB3C
1888   CB3C 24              LDA  UL
1889   CB3D 68 00           LDI  UH,$00
1890   CB3F B7 E0           CPI  A,$E0
1891   CB41 81 03           BCR BUTTON_CL_13 ; $CB46
1892   CB43 28              STA  UH
1893   CB44 45              LIN  X
1894   CB45 2A              STA  UL
1895   CB46             
1896   CB46             BUTTON_CL_13: ; $CB46
1897   CB46 BE CE 4A        SJP  (DEFEVAL)
1898   CB49 45              LIN  X
1899   CB4A 2A              STA  UL
1900   CB4B B7 20           CPI  A,$20
1901   CB4D 91 D2           BCR BUTTON_CL_4 ; $CA7D
1902   CB4F B7 40           CPI  A,$40
1903   CB51 8B CA           BZS PRG_ENTER
1904   CB53 15              LDA  (Y)
1905   CB54 B7 0D           CPI  A,$0D
1906   CB56 9B 1C           BZS BUTTON_CL_14 ; $CB3C
1907   CB58 B7 27           CPI  A,$27
1908   CB5A 9B 20           BZS BUTTON_CL_14 ; $CB3C
1909   CB5C BE CD E6        SJP  (INS2INBUF)
1910   CB5F 9E 25           BCH BUTTON_CL_14 ; $CB3C
1911   CB61             
1912   CB61             
1913   CB61             
1914   CB61             ;------------------------------------------------------------------------------
1915   CB61             ; $CB61 - RCL button
1916   CB61             ;------------------------------------------------------------------------------
1917   CB61             BTN_RCL:
1918   CB61 D1              ROR
1919   CB62 83 2F           BCS RSV_CHNG_1 ; $CB93
1920   CB64             
1921   CB64             BTN_RCL_1: ; $CB64
1922   CB64 BE EE 80        SJP  (SAVELCD2BUF)
1923   CB67 8E 1E           BCH RSV_CHNG_2 ; $CB87
1924   CB69             
1925   CB69             
1926   CB69             
1927   CB69             ;------------------------------------------------------------------------------
1928   CB69             ;  $CB69 - Switching the RESERVE layers
1929   CB69             ;------------------------------------------------------------------------------
1930   CB69             RSV_CHNG:
1931   CB69 4A 4E           LDI  XL,$4E
1932   CB6B 48 76           LDI  XH,$76
1933   CB6D 05              LDA  (X)
1934   CB6E 49 8F           ANI  (X),$8F
1935   CB70 B9 70           ANI  A,$70
1936   CB72 D5              SHR
1937   CB73 85 02           BHR RSV_CHNG_3 ; $CB77
1938   CB75 B5 40           LDI  A,$40
1939   CB77             
1940   CB77             RSV_CHNG_3: ; $CB77
1941   CB77 0B              ORA  (X)
1942   CB78 0E              STA  (X)
1943   CB79 A5 78 80        LDA  (DISPARAM)
1944   CB7C BF 09           BII  A,$09
1945   CB7E 9B 1C           BZS BTN_RCL_1 ; $CB64
1946   CB80 D1              ROR
1947   CB81 A5 78 84        LDA  (CURVARADD_L)
1948   CB84 91 8A           BCR BUTTON_CL_15 ; $CAFC
1949   CB86 38              NOP
1950   CB87             
1951   CB87             RSV_CHNG_2: ; $CB87
1952   CB87 EB 78 80 01     ORI  (DISPARAM),$01
1953   CB8B BE CE AF        SJP  (DEFEVAL_2) ; $CEAF
1954   CB8E BE EF 44        SJP  (TXT2LCD)
1955   CB91 CD 46           VMJ  ($46) ; orig ($46)($23) 23 bogus
1956   CB93             
1957   CB93             RSV_CHNG_1: ; $CB93
1958   CB93 E9 78 80 FE     ANI  (DISPARAM),$FE
1959   CB97 BE EE 99        SJP  (BUF2LCD)
1960   CB9A CD 46           VMJ  ($46) ; orig ($46)($23) 23 bogus
1961   CB9C             
1962   CB9C             
1963   CB9C             
1964   CB9C             ;------------------------------------------------------------------------------
1965   CB9C             ; $CB9C - SHIFT MODE button
1966   CB9C             ;------------------------------------------------------------------------------
1967   CB9C             BTN_SHMODE:
1968   CB9C 6A 10           LDI  UL,$10
1969   CB9E 8E 02           BCH $CBA2
1970   CBA0             
1971   CBA0             ;------------------------------------------------------------------------------
1972   CBA0             ; $CBA0 - MODE button
1973   CBA0             ;------------------------------------------------------------------------------
1974   CBA0             BTN_MODE:
1975   CBA0 6A 40           LDI  UL,$40
1976   CBA2 C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
1977   CBA4 4A 4F           LDI  XL,$4F
1978   CBA6 48 76           LDI  XH,$76
1979   CBA8 A5 79 FF        LDA  (UNDEF_REG_79FF)
1980   CBAB CB 46           VZS  ($46) ; orig ($46)($23) 23 bogus
1981   CBAD 24              LDA  UL
1982   CBAE 09              AND  (X)
1983   CBAF 8B 06           BZS BTN_MODE_1 ; $CBB7
1984   CBB1 D5              SHR
1985   CBB2 85 02           BHR BTN_MODE_2 ; $CBB6
1986   CBB4 B5 40           LDI  A,$40
1987   CBB6             
1988   CBB6             BTN_MODE_2: ; $CBB6
1989   CBB6 2A              STA  UL
1990   CBB7             
1991   CBB7             BTN_MODE_1: ; CBB7
1992   CBB7 49 0F           ANI  (X),$0F
1993   CBB9 24              LDA  UL
1994   CBBA 0B              ORA  (X)
1995   CBBB 0E              STA  (X)
1996   CBBC BE D0 17        SJP  ($D017)
1997   CBBF 81 04           BCR BTN_MODE_3 ; $CBC5
1998   CBC1 EB 78 8A 80     ORI  (BREAKPARAM),$80
1999   CBC5             
2000   CBC5             BTN_MODE_3: ; $CBC5
2001   CBC5 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
2002   CBC7             
2003   CBC7             
2004   CBC7             
2005   CBC7             ;------------------------------------------------------------------------------
2006   CBC7             ; $CBC7 - INS Button
2007   CBC7             ;------------------------------------------------------------------------------
2008   CBC7             BTN_INS:
2009   CBC7 D9              SHL
2010   CBC8 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
2011   CBCA BE CD E6        SJP  (INS2INBUF)
2012   CBCD 8E 12           BCH BTN_DEL_2 ; $CBE1
2013   CBCF             
2014   CBCF             ;------------------------------------------------------------------------------
2015   CBCF             ; $CBCF - DEL Button
2016   CBCF             ;------------------------------------------------------------------------------
2017   CBCF             BTN_DEL:
2018   CBCF D9              SHL
2019   CBD0 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
2020   CBD2 15              LDA  (Y)
2021   CBD3 B7 0D           CPI  A,$0D
2022   CBD5 CB 46           VZS  ($46) ; orig ($46)($23) 23 bogus
2023   CBD7 B7 E0           CPI  A,$E0
2024   CBD9 81 03           BCR BTN_DEL_1 ; $CBDE
2025   CBDB BE CE 38        SJP  (DELFRMINBUF)
2026   CBDE             
2027   CBDE             BTN_DEL_1: ; $CBDE
2028   CBDE BE CE 38        SJP  (DELFRMINBUF)
2029   CBE1             
2030   CBE1             BTN_DEL_2: ; $CBE1
2031   CBE1 BA CA 7D        JMP  BUTTON_CL_4 ; $CA7D
2032   CBE4             
2033   CBE4             
2034   CBE4             
2035   CBE4             ;------------------------------------------------------------------------------
2036   CBE4             ; $CBE4 - Cursor Right Button
2037   CBE4             ;------------------------------------------------------------------------------
2038   CBE4             BTN_RIGHT:
2039   CBE4 DB              ROL
2040   CBE5 83 18           BCS BTN_RIGHT_1 ; $CBFF
2041   CBE7 DB              ROL
2042   CBE8 81 2B           BCR BTN_RIGHT_2 ; $CC15
2043   CBEA D1              ROR
2044   CBEB D1              ROR
2045   CBEC 83 3A           BCS BTN_LEFT_1 ; $CC28
2046   CBEE 56              DEC  Y
2047   CBEF 5A B0           LDI  YL,$B0
2048   CBF1             
2049   CBF1             BTN_RIGHT_3: ; $CBF1
2050   CBF1 E9 78 80 5B     ANI  (DISPARAM),$5B
2051   CBF5 EB 78 80 40     ORI  (DISPARAM),$40
2052   CBF9 EB 7B 0E 40     ORI  (CURS_CTRL),$40
2053   CBFD 9E 1E           BCH BTN_DEL_2 ; $CBE1
2054   CBFF             
2055   CBFF             BTN_RIGHT_1: ; $CBFF
2056   CBFF 15              LDA  (Y)
2057   CC00 B7 0D           CPI  A,$0D
2058   CC02 9B 13           BZS BTN_RIGHT_3 ; $CBF1
2059   CC04 B7 E0           CPI  A,$E0
2060   CC06 81 08           BCR  BTN_RIGHT_4 ; $CC10
2061   CC08 50              INC  YL
2062   CC09 50              INC  YL
2063   CC0A 91 1B           BCR BTN_RIGHT_3 ; $CBF1
2064   CC0C 52              DEC  YL
2065   CC0D             
2066   CC0D             BTN_RIGHT_5: ; $CC0D
2067   CC0D 52              DEC  YL
2068   CC0E 9E 1F           BCH BTN_RIGHT_3 ; $CBF1
2069   CC10             
2070   CC10             BTN_RIGHT_4: ; $CC10
2071   CC10 50              INC  YL
2072   CC11             
2073   CC11             BTN_RIGHT_6: ; $CC11
2074   CC11 91 22           BCR BTN_RIGHT_3 ; $CBF1
2075   CC13 9E 08           BCH BTN_RIGHT_5 ; $CC0D
2076   CC15             
2077   CC15             BTN_RIGHT_2: ; $CC15
2078   CC15 DB              ROL
2079   CC16 93 27           BCS BTN_RIGHT_3 ; $CBF1
2080   CC18 DB              ROL
2081   CC19 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
2082   CC1B 9E 2C           BCH BTN_RIGHT_3 ; $CBF1
2083   CC1D             
2084   CC1D             
2085   CC1D             
2086   CC1D             ;------------------------------------------------------------------------------
2087   CC1D             ; $CC1D - Programmatic "ENTER" by "@"
2088   CC1D             ;------------------------------------------------------------------------------
2089   CC1D             PRG_ENTER:
2090   CC1D CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880
2090   CC1E 80          
2091   CC1F DB              ROL
2092   CC20 8E A1           BCH BTN_ENTER_2 ; $CCC3
2093   CC22             
2094   CC22             
2095   CC22             
2096   CC22             ;------------------------------------------------------------------------------
2097   CC22             ; $CC22 - Cursor Left Button
2098   CC22             ;------------------------------------------------------------------------------
2099   CC22             BTN_LEFT:
2100   CC22 DB              ROL
2101   CC23 83 04           BCS BTN_LEFT_2 ; $CC29
2102   CC25 DB              ROL
2103   CC26 91 13           BCR BTN_RIGHT_2 ; $CC15
2104   CC28             
2105   CC28             BTN_LEFT_1: ; $CC28
2106   CC28 F2              VEJ  (F2)
2107   CC29             
2108   CC29             BTN_LEFT_2: ; $CC29
2109   CC29 14              LDA  YL
2110   CC2A BE DC AE        SJP  (ISARXBCD_3) ; $DCAE
2111   CC2D 91 3E           BCR BTN_RIGHT_3 ; $CBF1
2112   CC2F 56              DEC  Y
2113   CC30 9B 41           BZS BTN_RIGHT_3 ; $CBF1
2114   CC32 56              DEC  Y
2115   CC33 55              LIN  Y
2116   CC34 B7 E0           CPI  A,$E0
2117   CC36 9E 27           BCH BTN_RIGHT_6 ; $CC11
2118   CC38             
2119   CC38             
2120   CC38             
2121   CC38             ;------------------------------------------------------------------------------
2122   CC38             ; $CC38 - Cursor Up Button
2123   CC38             ;------------------------------------------------------------------------------
2124   CC38             BTN_UP:
2125   CC38 EB 7B 0E 40     ORI  (CURS_CTRL),$40
2126   CC3C A5 76 4F        LDA  (DISP_BUFF + $4F)
2127   CC3F DB              ROL
2128   CC40 B9 C0           ANI  A,$C0
2129   CC42 CB 46           VZS  ($46) ; ($46)($23)
2130   CC44 D9              SHL
2131   CC45 2A              STA  UL
2132   CC46 8E 34           BCH BTN_DOWN_3 ; $CC7C
2133   CC48             
2134   CC48             
2135   CC48             
2136   CC48             ;------------------------------------------------------------------------------
2137   CC48             ; $CC48 - Cursor Down Button
2138   CC48             ;------------------------------------------------------------------------------
2139   CC48             BTN_DOWN:
2140   CC48 C3 46           VCS  ($46) ; ($46)($23)
2141   CC4A A5 76 4F        LDA  (DISP_BUFF + $4F)
2142   CC4D DB              ROL
2143   CC4E DB              ROL
2144   CC4F 81 22           BCR BTN_DOWN_4 ; $CC73
2145   CC51 ED 78 8A E0     BII  (BREAKPARAM),$E0
2146   CC55 CB 46           VZS  ($46) ; ($46)($23)
2147   CC57 BE D0 11        SJP  (PRGLINE_TDI_4) ; $D011
2148   CC5A 81 06           BCR BTN_DOWN_5 ; $CC62
2149   CC5C EB 7B 0E C0     ORI  (CURS_CTRL),$C0
2150   CC60 9E 45           BCH PRG_ENTER
2151   CC62             
2152   CC62             BTN_DOWN_5: ; $CC62
2153   CC62 A5 7B 0E        LDA  (CURS_CTRL)
2154   CC65 BF 40           BII  A,$40
2155   CC67 8B 02           BZS BTN_DOWN_6 ; $CC6B
2156   CC69 BB 20           ORI  A,$20
2157   CC6B             
2158   CC6B             BTN_DOWN_6: ; $CC6B
2159   CC6B BB C0           ORI  A,$C0
2160   CC6D AE 7B 0E        STA  (CURS_CTRL)
2161   CC70 BA C8 D5        JMP  BCMD_CONT_3 ; $C8D5
2162   CC73             
2163   CC73             BTN_DOWN_4: ; $CC73
2164   CC73 EB 7B 0E 40     ORI  (CURS_CTRL),$40
2165   CC77 DB              ROL
2166   CC78 C1 46           VCR  ($46) ; ($46)($23)
2167   CC7A 6A 01           LDI  UL,$01
2168   CC7C             
2169   CC7C             BTN_DOWN_3: ; $CC7C
2170   CC7C FD A8           PSH  U
2171   CC7E BE DF F3        SJP  (PRGST2XREG)
2172   CC81 C1 46           VCR  ($46) ; ($46)($23)
2173   CC83 BA DC 32        JMP  ISARXBCD_4 ; $DC32
2174   CC86             
2175   CC86             
2176   CC86             
2177   CC86             ;------------------------------------------------------------------------------
2178   CC86             ; Finds address of the 1st program byte of a line number
2179   CC86             ;            Address: CC86
2180   CC86             ;                     D1
2181   CC86             ;         Parameters: Y-Reg points to parameters in input buffer or main memory
2182   CC86             ;                     from which the searched line number or a label is located.
2183   CC86             ; Modified Registers: It is continued after D1 (Carry=1) if the line is found. 
2184   CC86             ;                     If no program in memory: carry flag=0. A branch is made to
2185   CC86             ;                     offset address D1 if the line was not found (Carry=0)
2186   CC86             ;   Error conditions: None
2187   CC86             ;------------------------------------------------------------------------------
2188   CC86             BTN_DOWN_1: ; $CC86
2189   CC86 BE DF F3        SJP  (PRGST2XREG)
2190   CC89 C1 4C           VCR  ($4C) ; ($4C)($26)
2191   CC8B             
2192   CC8B             ; Searches for line number.
2193   CC8B             BTN_DOWN_2: ; $CC8B
2194   CC8B C8              VEJ  (C8) \ ABRF(BTN_DOWN_7) ; $CC96
2194   CC8C 09          
2195   CC8D             
2196   CC8D             BTN_DOWN_12: ; $CC8D
2197   CC8D CD 12           VMJ  ($12)
2198   CC8F BE D0 B4        SJP  (DEL_DIM_VARS_2) ; $D0B4
2199   CC92 6A 00           LDI  UL,$00
2200   CC94 8E 24           BCH BTN_DOWN_8 ; $CCBA
2201   CC96             
2202   CC96             BTN_DOWN_7: ; $CC96
2203   CC96 C6              VEJ  (C6)
2204   CC97 CD 2E           VMJ  ($2E) \ ABRF(BTN_DOWN_9) ; $CCBF
2204   CC99 25          
2205   CC9A C8              VEJ  (C8) \ ABRF(BTN_DOWN_10) ; $CCBD
2205   CC9B 21          
2206   CC9C D0              VEJ  (D0) \ ABYT($82) \ ABRF(BTN_DOWN_9) ; $CCBF
2206   CC9D 82          
2206   CC9E 20          
2207   CC9F 24              LDA  UL
2208   CCA0 89 03           BZR BTN_DOWN_11 ; $CCA5
2209   CCA2 A4              LDA  UH
2210   CCA3 9B 18           BZS BTN_DOWN_12 ; $CC8D
2211   CCA5             
2212   CCA5             BTN_DOWN_11: ; $CCA5
2213   CCA5 D8              VEJ  (D8)
2214   CCA6 89 0D           BZR BTN_DOWN_13 ; $CCB5
2215   CCA8 CD 12           VMJ  ($12)
2216   CCAA 94              LDA  YH
2217   CCAB 89 02           BZR BTN_DOWN_14 ; $CCAF
2218   CCAD CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
2218   CCAE 65          
2219   CCAF             
2220   CCAF             BTN_DOWN_14: ; $CCAF
2221   CCAF BE D2 EC        SJP  (SRCHPRGLINE) \ ABRF(BTN_DOWN_9) ; $CCBF
2221   CCB2 0C          
2222   CCB3 8E 03           BCH BTN_DOWN_15 ; $CCB8
2223   CCB5             
2224   CCB5             BTN_DOWN_13: ; $CCB5
2225   CCB5 CD 1A           VMJ  ($1A) \ ABRF(BTN_DOWN_9) ; $CCBF
2225   CCB7 07          
2226   CCB8             
2227   CCB8             BTN_DOWN_15: ; $CCB8
2228   CCB8 6A 01           LDI  UL,$01
2229   CCBA             
2230   CCBA             BTN_DOWN_8: ; $CCBA
2231   CCBA FB              SEC
2232   CCBB CD 4C           VMJ  ($4C) ; ($4C)($26)
2233   CCBD             
2234   CCBD             BTN_DOWN_10: ; $CCBD
2235   CCBD 68 01           LDI  UH,$01
2236   CCBF             
2237   CCBF             BTN_DOWN_9: ; $CCBF
2238   CCBF CD 48           VMJ  ($48) ; ($48)($24)
2239   CCC1             
2240   CCC1             
2241   CCC1             
2242   CCC1             ;------------------------------------------------------------------------------
2243   CCC1             ; $CCC1 - Enter Button
2244   CCC1             ;------------------------------------------------------------------------------
2245   CCC1             BTN_ENTER:
2246   CCC1 C3 46           VCS  ($46) ; ($46)($23)
2247   CCC3             
2248   CCC3             BTN_ENTER_2: ; $CCC3
2249   CCC3 EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
2250   CCC7 DB              ROL
2251   CCC8 83 22           BCS BTN_ENTER_3 ; $CCEC
2252   CCCA ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
2253   CCCE CB 42           VZS  ($42) ; ($42)($21)
2254   CCD0 CC              VEJ  (CC) \ ABYTL(BREAKPARAM) ; $788A
2254   CCD1 8A          
2255   CCD2 D9              SHL
2256   CCD3 C3 42           VCS  ($42) ; ($42)($21)
2257   CCD5 D9              SHL
2258   CCD6 83 38           BCS BTN_ENTER_4 ; $CD10
2259   CCD8 D9              SHL
2260   CCD9 C1 42           VCR  ($42) ; ($42)($21) 
2261   CCDB BA C8 D5        JMP  BCMD_CONT_3 ; $C8D5
2262   CCDE             
2263   CCDE             
2264   CCDE             
2265   CCDE             ;------------------------------------------------------------------------------
2266   CCDE             ; Initializes "right boundary" of the input buffer with CR (0D) 
2267   CCDE             ;            Address: CCDE
2268   CCDE             ;         Parameters: None
2269   CCDE             ; 
2270   CCDE             ; Modified Registers: X-Reg points to 7BFF. Accumulator contains 00. If last 
2271   CCDE             ;                     entry in input buffer was a token, (7BFE and 7BFF) are 
2272   CCDE             ;                     deleted, with a character only (7BFF).
2273   CCDE             ;   Error conditions: None
2274   CCDE             ;------------------------------------------------------------------------------
2275   CCDE             BTN_ENTER_1: ; $CCDE
2276   CCDE 4A FE           LDI  XL,$FE
2277   CCE0 48 7B           LDI  XH,$7B
2278   CCE2 05              LDA  (X)
2279   CCE3 B7 E0           CPI  A,$E0
2280   CCE5 B5 0D           LDI  A,$0D
2281   CCE7 83 01           BCS BTN_ENTER_5 ; $CCEA
2282   CCE9 44              INC  X
2283   CCEA             
2284   CCEA             BTN_ENTER_5: ; $CCEA
2285   CCEA 0E              STA  (X)
2286   CCEB 9A              RTN
2287   CCEC             
2288   CCEC             BTN_ENTER_3: ; $CCEC
2289   CCEC BE CC DE        SJP  (BTN_ENTER_1) ; $CCDE
2290   CCEF BE D0 11        SJP  (PRGLINE_TDI_4) ; $D011
2291   CCF2 81 25           BCR BTN_ENTER_6 ; $CD19
2292   CCF4 F4              VEJ  (F4) \ AWRD(LASTVARADD_H)
2292   CCF5 78 86       
2293   CCF7 CC              VEJ  (CC) \ ABYTL($7888)
2293   CCF8 88          
2294   CCF9 BE C0 11        SJP  (SAVEVARPTR_1)
2295   CCFC BE F9 7B        SJP  (VAR_TYPE)
2296   CCFF 81 8A           BCR ERRN
2297   CD01 06              CPA  XL
2298   CD02 8B 0C           BZS BTN_ENTER_4 ; $CD10
2299   CD04 CD 08           VMJ  ($08) \ ABRF(ERRN)
2299   CD06 84          
2300   CD07 E9 78 8A 0F     ANI  (BREAKPARAM),$0F
2301   CD0B D6              VEJ  (D6) \ ABYT($AC)
2301   CD0C AC          
2302   CD0D BA C9 DA        JMP  BCMD_DIM_7 ; $C9DA
2303   CD10             
2304   CD10             BTN_ENTER_4: ; $CD10
2305   CD10 E9 78 8A 0F     ANI  (BREAKPARAM),$0F
2306   CD14 D6              VEJ  (D6) \ ABYT($AC)
2306   CD15 AC          
2307   CD16 BA C6 76        JMP  BCMD_REM ; $C676
2308   CD19             
2309   CD19             BTN_ENTER_6: ; $CD19
2310   CD19 BE F9 57        SJP  (TOKENIZE_INBUF)
2311   CD1C 8B 6D           BZS ERRN
2312   CD1E 4E B0           CPI  XL,$B0
2313   CD20 CB 42           VZS  ($42) ; ($42)($21)
2314   CD22 A5 76 4F        LDA  (DISP_BUFF + $4F)
2315   CD25 D9              SHL
2316   CD26 DB              ROL
2317   CD27 83 3C           BCS BTN_ENTER_7 ; $CD65
2318   CD29 8D 13           BVR BTN_ENTER_8 ; $CD3E
2319   CD2B BE CF 27        SJP  (PRGLINE_TDI)
2320   CD2E 0D              EOR  (X)
2321   CD2F 5B 34           ORI  (Y),$34
2322   CD31 00              SBC  XL
2323   CD32 A4              LDA  UH
2324   CD33 1A              STA  YL
2325   CD34 B5 14           LDI  A,$14
2326   CD36             
2327   CD36             BTN_ENTER_10: ; $CD36
2328   CD36 58 7B           LDI  YH,$7B
2329   CD38 C3 E0           VCS  ($E0)
2330   CD3A CD 44           VMJ  ($44) ; ($44)($22)
2331   CD3C CD 42           VMJ  ($42) ; ($42)($21)
2332   CD3E             
2333   CD3E             BTN_ENTER_8: ; $CD3E
2334   CD3E ED 78 80 08     BII  (DISPARAM),$08
2335   CD42 8B 11           BZS BTN_ENTER_9 ; $CD55
2336   CD44 14              LDA  YL
2337   CD45 00              SBC  XL
2338   CD46 BD FF           EAI  $FF
2339   CD48 FD 18           LDX  Y
2340   CD4A CD 24           VMJ  ($24)
2341   CD4C BE CE D0        SJP  (TXFR_RSV_KEY)
2342   CD4F 5A B3           LDI  YL,$B3
2343   CD51 B5 08           LDI  A,$08
2344   CD53 9E 1F           BCH BTN_ENTER_10 ; $CD36
2345   CD55             
2346   CD55             BTN_ENTER_9: ; $CD55
2347   CD55 C2              VEJ  (C2) \ ACHR($22) \ ABRF(BTN_ENTER_7) ; $CD65
2347   CD56 22          
2347   CD57 0D          
2348   CD58 CD 0C           VMJ  ($0C)
2349   CD5A C8              VEJ  (C8) \ ABRF(ERR1)
2349   CD5B 2D          
2350   CD5C BE CF 0B        SJP  (TXFR_RSV_KEY_1) ; $CF0B
2351   CD5F 5A B0           LDI  YL,$B0
2352   CD61 B5 20           LDI  A,$20
2353   CD63 9E 2F           BCH BTN_ENTER_10 ; $CD36
2354   CD65             
2355   CD65             BTN_ENTER_7: ; $CD65
2356   CD65 5A B0           LDI  YL,$B0
2357   CD67 BA C4 46        JMP  BASIC_INT_12 ; $C446
2358   CD6A             
2359   CD6A             
2360   CD6A             
2361   CD6A             ;------------------------------------------------------------------------------
2362   CD6A             ; Unlock, cancles LOCK
2363   CD6A             ;            Address: CD6A
2364   CD6A             ;         Parameters: None
2365   CD6A             ; 
2366   CD6A             ; Modified Registers: (79FF) is overwritten with FF.
2367   CD6A             ;                     Accumulator, XH
2368   CD6A             ;   Error conditions: None
2369   CD6A             ;------------------------------------------------------------------------------
2370   CD6A             UNLOCK: ; $CD6A
2371   CD6A 08              STA  XH
2372   CD6B B5 FF           LDI  A,$FF
2373   CD6D AE 79 FF        STA  (UNDEF_REG_79FF)
2374   CD70 9A              RTN
2375   CD71             
2376   CD71             
2377   CD71             
2378   CD71             ;------------------------------------------------------------------------------
2379   CD71             ; Switch off the computer with the OFF button
2380   CD71             ;            Address: CD71
2381   CD71             ;         Parameters: None
2382   CD71             ;
2383   CD71             ; Modified Registers: For the RESET routine recognizes switching off by OFF, 
2384   CD71             ;                     the bytes: 50, 51, 52,...,5F are stored at 7A10 ff. 
2385   CD71             ;                     When switched on again, the computer performs an editor 
2386   CD71             ;                     cold start after running through the RESET routine.
2387   CD71             ;   Error conditions: None
2388   CD71             ;------------------------------------------------------------------------------
2389   CD71             BTN_OFF: ; $CD71
2390   CD71 4A 10           LDI  XL,$10
2391   CD73 48 7A           LDI  XH,$7A
2392   CD75 B5 50           LDI  A,$50
2393   CD77 6A 0F           LDI  UL,$0F
2394   CD79             
2395   CD79             BTN_OFF_1: ; $CD79
2396   CD79 41              SIN  X
2397   CD7A DD              INC  A
2398   CD7B 88 04           LOP  UL,BTN_OFF_1 ; $CD79
2399   CD7D CD A6           VMJ  ($A6) ; ($A6)($53)
2400   CD7F 89 02           BZR BTN_OFF_2 ; $CD83
2401   CD81 FD 4C           .BYTE $FD, $4C ;    OFF ; *** add OFF opcode to syntax highlighting
2402   CD83             
2403   CD83             BTN_OFF_2: ; $CD83
2404   CD83 D8              VEJ  (D8)
2405   CD84 CB 46           VZS  ($46) ; ($46)($23)
2406   CD86 BA C4 C6        JMP  BCMD_STOP_9 ; $C4C6
2407   CD89             
2408   CD89             
2409   CD89             
2410   CD89             ;------------------------------------------------------------------------------
2411   CD89             ; (E4)  $CD89 - Output Error 1 and return to the editor
2412   CD89             ;------------------------------------------------------------------------------
2413   CD89             ERR1:
2414   CD89 68 01           LDI  UH,$01
2415   CD8B             
2416   CD8B             ;------------------------------------------------------------------------------
2417   CD8B             ; (E0) $CD8B - Output error from UH
2418   CD8B             ;------------------------------------------------------------------------------
2419   CD8B             ERRN:
2420   CD8B A4              LDA  UH
2421   CD8C AE 78 9B        STA  (ERL)
2422   CD8F AA 78 4F        LDI  S,(CPU_STACK + $4F)
2423   CD92 D8              VEJ  (D8)
2424   CD93 8B 14           BZS ERRN_1 ; $CDA9
2425   CD95 D4              VEJ  (D4) \ ABYT($B2)
2425   CD96 B2          
2426   CD97 CC              VEJ  (CC) \ ABYTL(ERL) ; $789B
2426   CD98 9B          
2427   CD99 DF              DEC  A
2428   CD9A 8B 13           BZS ERRN_2 ; $CDAF
2429   CD9C ED 78 B8 80     BII  (ON_ERR_ADD_H),$80
2430   CDA0 89 0D           BZR ERRN_2 ; $CDAF
2431   CDA2 D4              VEJ  (D4) \ ABYT($A0)
2431   CDA3 A0          
2432   CDA4 D6              VEJ  (D6) \ ABYT($B8)
2432   CDA5 B8          
2433   CDA6 BA C4 13        JMP  BASIC_INT_8 ; $C413
2434   CDA9             
2435   CDA9             ERRN_1: ; $CD8B
2436   CDA9 B5 A0           LDI  A,$A0
2437   CDAB 5C 00           CPI  YH,$00
2438   CDAD 89 02           BZR ERRN_3 ; $CDB1
2439   CDAF             
2440   CDAF             ERRN_2: ; $CDAF
2441   CDAF B5 80           LDI  A,$80
2442   CDB1             
2443   CDB1             ERRN_3: ; $CDB1
2444   CDB1 AE 78 80        STA  (DISPARAM)
2445   CDB4 FD 98           PSH  Y
2446   CDB6 5A 10           LDI  YL,$10
2447   CDB8 58 7A           LDI  YH,$7A
2448   CDBA CD 2A           VMJ  ($2A) \ ABYT($64) \ ABYT($06)
2448   CDBC 64          
2448   CDBD 06          
2449   CDBE A5 78 9B        LDA  (ERL)
2450   CDC1 2A              STA  UL
2451   CDC2 68 00           LDI  UH,$00
2452   CDC4 CD 10           VMJ  ($10) \ ABYT($40)
2452   CDC6 40          
2453   CDC7 D8              VEJ  (D8)
2454   CDC8 8B 11           BZS ERRN_4 ; $CDDB
2455   CDCA CD 2A           VMJ  ($2A) \ ABYT($61) \ ABYT($03)
2455   CDCC 61          
2455   CDCD 03          
2456   CDCE B5 20           LDI  A,$20
2457   CDD0 FD C8           PSH  A
2458   CDD2 CC              VEJ  (CC) \ ABYTL(ERR_LINE_H) ; $78B4
2458   CDD3 B4          
2459   CDD4             
2460   CDD4             ERRN_5: ; $CDD4
2461   CDD4 BE DD 2F        SJP  (LOAD_NEXT_1) ; $DD2F
2462   CDD7 40              INC  XL
2463   CDD8 FD 8A           POP  A
2464   CDDA 51              SIN  Y
2465   CDDB             
2466   CDDB             ERRN_4: ; $CDDB
2467   CDDB 59 00           ANI  (Y),$00
2468   CDDD FD 18           LDX  Y
2469   CDDF FD 1A           POP  Y
2470   CDE1 BE EF 5B        SJP  (TXT2LCD_ARY)
2471   CDE4 CD 46           VMJ  ($46) ; ($46)($23)
2472   CDE6             
2473   CDE6             
2474   CDE6             
2475   CDE6             ;------------------------------------------------------------------------------
2476   CDE6             ; INSERT - Pass characters/tokens from U-Reg to input buffer
2477   CDE6             ;            Address: CDE6
2478   CDE6             ;         Parameters: U-Reg contains tokens or characters (UH must contain 00). 
2479   CDE6             ;                     Y-Reg must contain address being edited.
2480   CDE6             ;
2481   CDE6             ; Modified Registers: Y-Reg points to next cursor position.
2482   CDE6             ;   Error conditions: None
2483   CDE6             ;------------------------------------------------------------------------------
2484   CDE6             INS2INBUF: ; $CDE6
2485   CDE6 15              LDA  (Y)
2486   CDE7 B7 0D           CPI  A,$0D
2487   CDE9 8B 24           BZS INS2INBUF_1 ; $CE0F
2488   CDEB F9              REC
2489   CDEC B5 FF           LDI  A,$FF
2490   CDEE 10              SBC  YL
2491   CDEF 81 1B           BCR INS2INBUF_2 ; $CE0C
2492   CDF1 FD A8           PSH  U
2493   CDF3 FD 88           PSH  X
2494   CDF5 2A              STA  UL
2495   CDF6 5A FF           LDI  YL,$FF
2496   CDF8 FD 18           LDX  Y
2497   CDFA 46              DEC  X
2498   CDFB 05              LDA  (X)
2499   CDFC B7 E0           CPI  A,$E0
2500   CDFE 81 02           BCR INS2INBUF_3 ; $CE02
2501   CE00 B5 0D           LDI  A,$0D
2502   CE02             
2503   CE02             INS2INBUF_3: ; $CE02
2504   CE02 0E              STA  (X)
2505   CE03             
2506   CE03             INS2INBUF_4: ; $CE03
2507   CE03 47              LDE  X
2508   CE04 53              SDE  Y
2509   CE05 88 04           LOP  UL,INS2INBUF_4 ; $CE03
2510   CE07 FB              SEC
2511   CE08 FD 0A           POP  X
2512   CE0A FD 2A           POP  U
2513   CE0C             
2514   CE0C             INS2INBUF_2: ; $CE0C
2515   CE0C B5 27           LDI  A,$27
2516   CE0E 1E              STA  (Y)
2517   CE0F             
2518   CE0F             INS2INBUF_1: ; $CE0F
2519   CE0F 9A              RTN
2520   CE10             
2521   CE10             
2522   CE10             ;------------------------------------------------------------------------------
2523   CE10             ; $CE10 - Character input in Input Buffer
2524   CE10             ;------------------------------------------------------------------------------
2525   CE10             CHAR2INBUF:
2526   CE10 A4              LDA  UH
2527   CE11 8B 1A           BZS CHAR2INBUF_1 ; $CE2D
2528   CE13 5E FF           CPI  YL,$FF
2529   CE15 83 15           BCS CHAR2INBUF_2 ; $CE2C
2530   CE17 15              LDA  (Y)
2531   CE18 B7 0D           CPI  A,$0D
2532   CE1A 8B 07           BZS CHAR2INBUF_3 ; $CE23
2533   CE1C B7 E0           CPI  A,$E0
2534   CE1E 83 03           BCS CHAR2INBUF_3 ; $CE23
2535   CE20 BE CD E6        SJP  (INS2INBUF)
2536   CE23             
2537   CE23             CHAR2INBUF_3: ; $CE23
2538   CE23 A4              LDA  UH
2539   CE24 51              SIN  Y
2540   CE25 24              LDA  UL
2541   CE26 51              SIN  Y
2542   CE27 14              LDA  YL
2543   CE28 89 02           BZR CHAR2INBUF_2 ; $CE2C
2544   CE2A 56              DEC  Y
2545   CE2B             
2546   CE2B             CHAR2INBUF_4: ; $CE2B
2547   CE2B 56              DEC  Y
2548   CE2C             
2549   CE2C             CHAR2INBUF_2: ; $CE2C
2550   CE2C 9A              RTN
2551   CE2D             
2552   CE2D             CHAR2INBUF_1: ; $CE2D
2553   CE2D 15              LDA  (Y)
2554   CE2E B7 E0           CPI  A,$E0
2555   CE30 24              LDA  UL
2556   CE31 51              SIN  Y
2557   CE32 83 04           BCS DELFRMINBUF
2558   CE34 14              LDA  YL
2559   CE35 9B 0C           BZS CHAR2INBUF_4 ; $CE2B
2560   CE37 9A              RTN
2561   CE38             
2562   CE38             
2563   CE38             
2564   CE38             ;------------------------------------------------------------------------------
2565   CE38             ; DELETE (a character in the input buffer)
2566   CE38             ;            Address: CE38
2567   CE38             ;         Parameters: Y-Reg must point to memory cell to be erased
2568   CE38             ; 
2569   CE38             ; Modified Registers: Contents from next address pointed to by Y-Reg
2570   CE38             ;                     shifted one byte to left to end of the memory page. 
2571   CE38             ;                     (Y-Reg) will be deleted. The last address in memory page 
2572   CE38             ;                     is written with 0D.
2573   CE38             ;                     X Reg, U Reg, Accumulator=0D
2574   CE38             ;   Error conditions:	None
2575   CE38             ;------------------------------------------------------------------------------
2576   CE38             DELFRMINBUF: ; $CE38
2577   CE38 FD 98           PSH  Y
2578   CE3A FD 18           LDX  Y
2579   CE3C 14              LDA  YL
2580   CE3D BD FF           EAI  $FF
2581   CE3F 2A              STA  UL
2582   CE40 44              INC  X
2583   CE41 BE D0 49        SJP  (SYSMSG_3)
2584   CE44 B5 0D           LDI  A,$0D
2585   CE46 1E              STA  (Y)
2586   CE47 FD 1A           POP  Y
2587   CE49 9A              RTN
2588   CE4A             
2589   CE4A             
2590   CE4A             
2591   CE4A             ;------------------------------------------------------------------------------
2592   CE4A             ; $CE4A - Evaluate programmed button; Clears input buffer.
2593   CE4A             ;------------------------------------------------------------------------------
2594   CE4A             DEFEVAL:
2595   CE4A FD 88           PSH  X
2596   CE4C ED 78 80 40     BII  (DISPARAM),$40
2597   CE50 89 2F           BZR DEFEVAL_3 ; $CE81
2598   CE52 FD A8           PSH  U
2599   CE54 BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
2600   CE57 ED 78 80 20     BII  (DISPARAM),$20
2601   CE5B 8B 1D           BZS DEFEVAL_4 ; $CE7A
2602   CE5D FD 2A           POP  U
2603   CE5F FD A8           PSH  U
2604   CE61 A4              LDA  UH
2605   CE62 89 16           BZR DEFEVAL_4 ; $CE7A
2606   CE64 24              LDA  UL
2607   CE65 6A 07           LDI  UL,$07
2608   CE67 BE DA 98        SJP  (MULT16B_1) ; $DA98
2609   CE6A 89 0E           BZR DEFEVAL_4 ; $CE7A
2610   CE6C D2              VEJ  (D2) \ ABRF($CE7A) \ ABYT($80)
2610   CE6D 0C          
2610   CE6E 80          
2611   CE6F BE EF 1B        SJP  (ARX2STRNG)
2612   CE72 DC              VEJ  (DC)
2613   CE73 5A B0           LDI  YL,$B0
2614   CE75 58 7B           LDI  YH,$7B
2615   CE77 BE D0 49        SJP  (SYSMSG_3)
2616   CE7A             
2617   CE7A             DEFEVAL_4: ; $CE7A
2618   CE7A FD 2A           POP  U
2619   CE7C B5 40           LDI  A,$40
2620   CE7E AE 78 80        STA  (DISPARAM)
2621   CE81             
2622   CE81             DEFEVAL_3: ; $CE81
2623   CE81 BE CE 10        SJP  (CHAR2INBUF)
2624   CE84 FD 0A           POP  X
2625   CE86 9A              RTN
2626   CE87             
2627   CE87             
2628   CE87             
2629   CE87             ;------------------------------------------------------------------------------
2630   CE87             ; Determines the associated reserve key code for the function key
2631   CE87             ;            Address: CE87
2632   CE87             ;   Entry parameters: UL must contain the ASCII code of the spare key sought. 
2633   CE87             ;                     The symbol for the corresponding reserve level must be 
2634   CE87             ;                     visible in the display, otherwise level I is preset.
2635   CE87             ;
2636   CE87             ; Modified registers: (7884) & accumulator contain reserve key code. 
2637   CE87             ;                     U reg changed.
2638   CE87             ;   Error conditions: none
2639   CE87             ;--------------------------------------------------------------------------------------------------
2640   CE87             DEFEVAL_1: ; $CE87
2641   CE87 B5 10           LDI  A,$10
2642   CE89 22              ADC  UL
2643   CE8A 2A              STA  UL
2644   CE8B B9 07           ANI  A,$07
2645   CE8D 28              STA  UH
2646   CE8E A5 76 4E        LDA  (DISP_BUFF + $4E)
2647   CE91 B9 30           ANI  A,$30
2648   CE93 B7 30           CPI  A,$30
2649   CE95 81 02           BCR DEFEVAL_5 ; $CE99
2650   CE97 B5 20           LDI  A,$20
2651   CE99             
2652   CE99             DEFEVAL_5: ; $CE99
2653   CE99 D5              SHR
2654   CE9A A2              ADC  UH
2655   CE9B AE 78 84        STA  (CURVARADD_L)
2656   CE9E 9A              RTN
2657   CE9F             
2658   CE9F             
2659   CE9F             
2660   CE9F             ;------------------------------------------------------------------------------
2661   CE9F             ; (38) Determines reserve memory start address +8
2662   CE9F             ; If there is a module in the memory, the reserve memory start for module is 
2663   CE9F             ; entered in (7860). This value is then recognized as high byte of the address.
2664   CE9F             ;            Address: CE9F (38) 
2665   CE9F             ;   Entry parameters: none
2666   CE9F             ;
2667   CE9F             ; Modified registers: X-Reg shows reserve level I (e.g. 3808) at the beginning 
2668   CE9F             ;                     of the text. Accumulator contains the value from (7860) 
2669   CE9F             ;                     or (7863). UH contains error code 24 if module was 
2670   CE9F             ;                     recognized. Carry flag=0 if in (7860) the default value 
2671   CE9F             ;                     FF is not found, i.e., no module was found in the memory.
2672   CE9F             ;   Error conditions: none
2673   CE9F             ;------------------------------------------------------------------------------
2674   CE9F             RSRV_MEM_START: ; $CE9F
2675   CE9F A5 78 60        LDA  (ST_ROM_MOD) ; $7860
2676   CEA2 08              STA  XH
2677   CEA3 DB              ROL
2678   CEA4 68 18           LDI  UH,$18
2679   CEA6 81 04           BCR DEFEVAL_6 ; $CEAC
2680   CEA8 A5 78 63        LDA  (RAM_ST_H)
2681   CEAB 08              STA  XH
2682   CEAC             
2683   CEAC             DEFEVAL_6: ; $CEAC
2684   CEAC 4A 08           LDI  XL,$08
2685   CEAE 9A              RTN
2686   CEAF             
2687   CEAF             
2688   CEAF             
2689   CEAF             ;------------------------------------------------------------------------------
2690   CEAF             ; Determines the start address of the text that explains the reserve assignment 
2691   CEAF             ; for the set reserve key level I, II, or III.
2692   CEAF             ;            Address: CEAF
2693   CEAF             ;   Entry parameters: none
2694   CEAF             ; 
2695   CEAF             ; Modified registers: X-Reg contains the address of the beginning of the text of the visible (activated) reserve level in the display. U-Reg, accumulator, Carry=0 if ROM module is used.
2696   CEAF             ;   Error conditions: none
2697   CEAF             ;------------------------------------------------------------------------------
2698   CEAF             DEFEVAL_2: ; $CEAF
2699   CEAF A5 76 4E        LDA  (DISP_BUFF + $4E)
2700   CEB2 6A 08           LDI  UL,$08
2701   CEB4 DB              ROL
2702   CEB5 DB              ROL
2703   CEB6 83 07           BCS DEFEVAL_7 ; $CEBF
2704   CEB8 6A 22           LDI  UL,$22
2705   CEBA DB              ROL
2706   CEBB 83 02           BCS DEFEVAL_7 ; $CEBF
2707   CEBD 6A 3C           LDI  UL,$3C
2708   CEBF             
2709   CEBF             DEFEVAL_7: ; $CEBF
2710   CEBF CD 38           VMJ  ($38)
2711   CEC1 24              LDA  UL
2712   CEC2 0A              STA  XL
2713   CEC3 9A              RTN
2714   CEC4             
2715   CEC4             
2716   CEC4             
2717   CEC4             ;------------------------------------------------------------------------------
2718   CEC4             ; Searches reserve key code in reserve memory (from XH56)
2719   CEC4             ;           Address: CEC4
2720   CEC4             ;  Entry parameters: XH must point to reserve memory start. (7884) must contain 
2721   CEC4             ;                    the required reserve key code (01H-16H). If this code was 
2722   CEC4             ;                    not found from (XH56), carry and zero flag are 0, else 1.
2723   CEC4             ; 
2724   CEC4             ; Reserve-Key-Codes:
2725   CEC4             ;                        I II III
2726   CEC4             ;                    F1 01 11 09
2727   CEC4             ;                    F2 02 12 0A
2728   CEC4             ;                    F3 03 13 0B
2729   CEC4             ;                    F4 04 14 0C
2730   CEC4             ;                    F5 05 15 0D
2731   CEC4             ;                    F6 06 16 0E
2732   CEC4             ;
2733   CEC4             ; Modified registers: X-Reg points to the address of the instruction assigned to the key. Accumulator contains found key or 00.
2734   CEC4             ;   Error conditions: none
2735   CEC4             ;------------------------------------------------------------------------------
2736   CEC4             RESKEY_SRCH: ; $CEC4
2737   CEC4 4A 56           LDI  XL,$56
2738   CEC6             
2739   CEC6             RESKEY_SRCH_2: ; $CEC6
2740   CEC6 F9              REC
2741   CEC7 45              LIN  X
2742   CEC8 8B 05           BZS RESKEY_SRCH_1 ; $CECF
2743   CECA A7 78 84        CPA  (CURVARADD_L)
2744   CECD 99 09           BZR RESKEY_SRCH_2 $CEC6
2745   CECF             
2746   CECF             RESKEY_SRCH_1: ; $CECF
2747   CECF 9A              RTN
2748   CED0             
2749   CED0             
2750   CED0             
2751   CED0             ;------------------------------------------------------------------------------
2752   CED0             ; Change reserve key assignment
2753   CED0             ; Address:	CED0
2754   CED0             ;   Entry parameters: (7884) must contain key code of the key to be redefined. 
2755   CED0             ;                     AR-X must contain CSI of the new text.
2756   CED0             ; 
2757   CED0             ; Modified registers: The original key assignment is deleted, and the assignment 
2758   CED0             ;                     of the remaining keys is moved to bottom. New allocation
2759   CED0             ;                     is appended to first free address of reserve memory.
2760   CED0             ;                     X-Reg points to address behind transferred text.
2761   CED0             ;                     Y-Reg points to the next free address of reserve memory. 
2762   CED0             ;                     Accumulator contains reserve key code. U reg.
2763   CED0             ;   Error conditions: If there is not enough free space in the reserve memory, 
2764   CED0             ;                     Carry=1 and UH contains error code 13. The original 
2765   CED0             ;                     assignment is deleted. If (7860) is not assigned FF, 
2766   CED0             ;                     carry is also set, and error code 24 is placed after UH.
2767   CED0             ;------------------------------------------------------------------------------
2768   CED0             TXFR_RSV_KEY: ; $CED0
2769   CED0 CD 38           VMJ  ($38)
2770   CED2 81 51           BCR TXFR_RSV_KEY_2 ; $CF25
2771   CED4 BE CE C4        SJP  (RESKEY_SRCH)
2772   CED7 FD 5A           STX  Y
2773   CED9 81 17           BCR TXFR_RSV_KEY_3 ; $CEF2
2774   CEDB B5 1F           LDI  A,$1F
2775   CEDD             
2776   CEDD             TXFR_RSV_KEY_4: ; $CEDD
2777   CEDD F7              CIN
2778   CEDE 91 03           BCR TXFR_RSV_KEY_4 ; $CEDD
2779   CEE0 46              DEC  X
2780   CEE1 56              DEC  Y
2781   CEE2 B5 C5           LDI  A,$C5
2782   CEE4 00              SBC  XL
2783   CEE5 2A              STA  UL
2784   CEE6             
2785   CEE6             TXFR_RSV_KEY_5: ; $CEE6
2786   CEE6 F5              TIN
2787   CEE7 88 03           LOP  UL,TXFR_RSV_KEY_5 ; $CEE6
2788   CEE9 6A 6F           LDI  UL,$6F
2789   CEEB 5A 56           LDI  YL,$56
2790   CEED             
2791   CEED             TXFR_RSV_KEY_6: ; $CEED
2792   CEED 55              LIN  Y
2793   CEEE 8B 02           BZS TXFR_RSV_KEY_3 ; $CEF2
2794   CEF0 88 05           LOP  UL,TXFR_RSV_KEY_6 ; $CEED
2795   CEF2             
2796   CEF2             TXFR_RSV_KEY_3: ; $CEF2
2797   CEF2 52              DEC  YL
2798   CEF3 DC              VEJ  (DC)
2799   CEF4 68 0D           LDI  UH,$0D
2800   CEF6 62              DEC  UL
2801   CEF7 81 11           BCR TXFR_RSV_KEY_7 ; $CF0A
2802   CEF9 14              LDA  YL
2803   CEFA 22              ADC  UL
2804   CEFB 83 0D           BCS TXFR_RSV_KEY_7 ; $CF0A
2805   CEFD B7 C4           CPI  A,$C4
2806   CEFF 83 09           BCS TXFR_RSV_KEY_7 ; $CF0A
2807   CF01 A5 78 84        LDA  (CURVARADD_L)
2808   CF04 51              SIN  Y
2809   CF05             
2810   CF05             TXFR_RSV_KEY_8: ; $CF05
2811   CF05 F5              TIN
2812   CF06 88 03           LOP  UL,TXFR_RSV_KEY_8 ; $CF05
2813   CF08 59 00           ANI  (Y),$00
2814   CF0A             
2815   CF0A             TXFR_RSV_KEY_7: ; $CF0A
2816   CF0A 9A              RTN
2817   CF0B             
2818   CF0B             
2819   CF0B             
2820   CF0B             ;------------------------------------------------------------------------------
2821   CF0B             ; Transfers text declaring reserve button level to reserve memory area
2822   CF0B             ;            Address: CF0B
2823   CF0B             ;   Entry parameters: AR-X must contain CSI for text to be transmitted. The 
2824   CF0B             ;                     symbol of the level to be changed must be visible in the 
2825   CF0B             ;                     display. If (7860) does not contain FF, the assignment is 
2826   CF0B             ;                     protected from being overwritten.
2827   CF0B             ; 
2828   CF0B             ; Modified registers: All registers changed.
2829   CF0B             ;   Error conditions: If text was transferred, Carry=0. If the value in (7860) was not FF, Carry=1
2830   CF0B             ;------------------------------------------------------------------------------
2831   CF0B             TXFR_RSV_KEY_1: ; $CF0B
2832   CF0B BE CE AF        SJP  (DEFEVAL_2) ; $CEAF
2833   CF0E 81 15           BCR $TXFR_RSV_KEY_2 ; CF25
2834   CF10 FD 5A           STX  Y
2835   CF12 DC              VEJ  (DC)
2836   CF13 68 00           LDI  UH,$00
2837   CF15 B7 1A           CPI  A,$1A
2838   CF17 81 03           BCR TXFR_RSV_KEY_9 ; $CF1C
2839   CF19 6A 1A           LDI  UL,$1A
2840   CF1B 28              STA  UH
2841   CF1C             
2842   CF1C             TXFR_RSV_KEY_9: ; $CF1C
2843   CF1C BE D0 49        SJP  (SYSMSG_3)
2844   CF1F A4              LDA  UH
2845   CF20 89 01           BZR TXFR_RSV_KEY_10 ; $CF23
2846   CF22 1E              STA  (Y)
2847   CF23             
2848   CF23             TXFR_RSV_KEY_10: ; $CF23
2849   CF23 F9               REC
2850   CF24 9A               RTN
2851   CF25             
2852   CF25             TXFR_RSV_KEY_2: ; $CF25
2853   CF25 FB              SEC
2854   CF26 9A              RTN
2855   CF27             
2856   CF27             
2857   CF27             
2858   CF27             ;------------------------------------------------------------------------------
2859   CF27             ; Transfer, delete, insert line from Input buffer
2860   CF27             ;            Address: CF27
2861   CF27             ;                     4 data bytes
2862   CF27             ;                     D1= if line number not found
2863   CF27             ;                     D2= if line number not allowed
2864   CF27             ;                     D3= if n beginning of buffer does not contain line number
2865   CF27             ;                     D4=if line was transferred correctly
2866   CF27             ;         Parameters: Y-Reg must point to arbitrary buffer ranges (XXBO-XXFF). 
2867   CF27             ;                     The character that X-Reg then points to must be a "0D". 
2868   CF27             ;                     YH must also point to this memory page.
2869   CF27             ; 
2870   CF27             ; Modified Registers: All CPU registers. The program pointers in the memory map 
2871   CF27             ;                     are also changed and adapted to new scope of the program.
2872   CF27             ;   Error conditions: UH may contain Error message. Error 13, if program line 
2873   CF27             ;                     no longer fits in memory; Error 1 if line number not 
2874   CF27             ;                     allowed. If variables and program memory overlap, an 
2875   CF27             ;                     error code is also stored in UH.
2876   CF27             ;------------------------------------------------------------------------------
2877   CF27             PRGLINE_TDI: ; $CF27
2878   CF27 FD 88           PSH  X
2879   CF29 5A B0           LDI  YL,$B0
2880   CF2B BE D3 D5        SJP  (DEC2HEX)
2881   CF2E 89 04           BZR PRGLINE_TDI_5 ; $CF34
2882   CF30 B5 02           LDI  A,$02
2883   CF32 8E 94           BCH PRGLINE_TDI_6 ; $CFC8
2884   CF34             
2885   CF34             PRGLINE_TDI_5: ; $CF34
2886   CF34 B5 01           LDI  A,$01
2887   CF36 83 90           BCS PRGLINE_TDI_6 ; $CFC8
2888   CF38 FD 0A           POP  X
2889   CF3A 04              LDA  XL
2890   CF3B 10              SBC  YL
2891   CF3C FD 98           PSH  Y
2892   CF3E FD C8           PSH  A
2893   CF40 FD A8           PSH  U
2894   CF42 BE CF D0        SJP  (PRGLINE_TDI_7) ; $CFD0
2895   CF45 FD 2A           POP  U
2896   CF47 FD A8           PSH  U
2897   CF49 BE D2 E0        SJP  (BCD_Y2ARX_2) ; $D2E0
2898   CF4C 1E              STA  (Y)
2899   CF4D FD 0A           POP  X
2900   CF4F CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
2900   CF50 A6          
2901   CF51 46              DEC  X
2902   CF52 FD 5A           STX  Y
2903   CF54 45              LIN  X
2904   CF55 FD CA           ADR  X
2905   CF57 56              DEC  Y
2906   CF58 56              DEC  Y
2907   CF59 46              DEC  X
2908   CF5A CD 16           VMJ  ($16)
2909   CF5C 44              INC  X
2910   CF5D             
2911   CF5D             PRGLINE_TDI_8: ; $CF5D
2912   CF5D F5              TIN
2913   CF5E 88 03           LOP  UL,PRGLINE_TDI_8 ; $CF5D
2914   CF60 FD 62           DEC  UH
2915   CF62 93 07           BCS PRGLINE_TDI_8 ; $CF5D
2916   CF64 FD 18           LDX  Y
2917   CF66 46              DEC  X
2918   CF67 CA              VEJ  (CA) \ ABYTL(BASPRG_END_H) ; $7867
2918   CF68 67          
2919   CF69 8E 06           BCH $CF71
2920   CF6B FD 0A           POP  X
2921   CF6D CA              VEJ  (CA) \ ABYTL(SRCH_LINE_H) ; $78A8
2921   CF6E A8          
2922   CF6F CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
2922   CF70 67          
2923   CF71 FD 8A           POP  A
2924   CF73 DD              INC  A
2925   CF74 8B 52           BZS PRGLINE_TDI_6 ; $CFC8
2926   CF76 FD C8           PSH  A
2927   CF78 B3 04           ADI  A,$04
2928   CF7A FD 5A           STX  Y
2929   CF7C FD DA           ADR  Y
2930   CF7E 94              LDA  YH
2931   CF7F A7 78 64        CPA  (RAM_END_H)
2932   CF82 83 3E           BCS PRGLINE_TDI_9 ; $CFC2
2933   CF84 FD 98           PSH  Y
2934   CF86 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
2934   CF87 A6          
2935   CF88 46              DEC  X
2936   CF89 46              DEC  X
2937   CF8A 46              DEC  X
2938   CF8B CA              VEJ  (CA) \ ABYTL(SRCH_ADD_H) ; $78A6
2938   CF8C A6          
2939   CF8D 46              DEC  X
2940   CF8E CD 16           VMJ  ($16)
2941   CF90 44              INC  X
2942   CF91 CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
2942   CF92 67          
2943   CF93             
2944   CF93             PRGLINE_TDI_10: ; $CF93
2945   CF93 47              LDE  X
2946   CF94 53              SDE  Y
2947   CF95 88 04           LOP  UL,PRGLINE_TDI_10 ; $CF93
2948   CF97 FD 62           DEC  UH
2949   CF99 93 08           BCS PRGLINE_TDI_10 ; $CF93
2950   CF9B FD 0A           POP  X
2951   CF9D CA              VEJ  (CA) \ ABYTL(BASPRG_END_H) ; $7867
2951   CF9E 67          
2952   CF9F CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
2952   CFA0 A6          
2953   CFA1 FD 5A           STX  Y
2954   CFA3 CC              VEJ  (CC) \ ABYTL(SRCH_LINE_H) ; $78A8
2954   CFA4 A8          
2955   CFA5 51              SIN  Y
2956   CFA6 04              LDA  XL
2957   CFA7 51              SIN  Y
2958   CFA8 FD 8A           POP  A
2959   CFAA 2A              STA  UL
2960   CFAB DD              INC  A
2961   CFAC 51              SIN  Y
2962   CFAD FD 0A           POP  X
2963   CFAF 04              LDA  XL
2964   CFB0 28              STA  UH
2965   CFB1             
2966   CFB1             PRGLINE_TDI_11: ; $CFB1
2967   CFB1 F5              TIN
2968   CFB2 88 03           LOP  UL,PRGLINE_TDI_11 ; $CFB1
2969   CFB4 BE D0 9C        SJP  (DEL_DIM_VARS)
2970   CFB7 B5 03           LDI  A,$03
2971   CFB9             
2972   CFB9             PRGLINE_TDI_12: ; $CFB9
2973   CFB9 FD 0A           POP  X
2974   CFBB FD CA           ADR  X
2975   CFBD 45              LIN  X
2976   CFBE FD CA           ADR  X
2977   CFC0 FD 5E           STX  P
2978   CFC2             
2979   CFC2             PRGLINE_TDI_9: ; $CFC2
2980   CFC2 FD 8A           POP  A
2981   CFC4 68 0D           LDI  UH,$0D
2982   CFC6 B5 01           LDI  A,$01
2983   CFC8             
2984   CFC8             PRGLINE_TDI_6: ; $CFC8
2985   CFC8 FD 1A           POP  Y
2986   CFCA 9E 13           BCH PRGLINE_TDI_12 ; $CFB9
2987   CFCC             
2988   CFCC             
2989   CFCC             ;------------------------------------------------------------------------------
2990   CFCC             ; $CFCC - Initializes system addresses and turn off TRACE
2991   CFCC             ;------------------------------------------------------------------------------
2992   CFCC             PRGLINE_TDI_3:
2993   CFCC E9 78 8D 00     ANI  (TRACE_ON),$00
2994   CFD0             
2995   CFD0             ;------------------------------------------------------------------------------
2996   CFD0             ; $CFD0 - Initialization of system addresses.
2997   CFD0             ;------------------------------------------------------------------------------
2998   CFD0             PRGLINE_TDI_7:
2999   CFD0 CD 12           VMJ  ($12)
3000   CFD2             
3001   CFD2             PRGLINE_TDI_14: ; $CFD2
3002   CFD2 44              INC  X
3003   CFD3 44              INC  X
3004   CFD4 44              INC  X
3005   CFD5 84              LDA  XH
3006   CFD6 BB 80           ORI  A,$80
3007   CFD8 08              STA  XH
3008   CFD9 CA              VEJ  (CA) \ ABYTL(DATA_PTR_H) ; $78BE
3008   CFDA BE          
3009   CFDB B5 00           LDI  A,$00
3010   CFDD 6A A2           LDI  UL,$A2
3011   CFDF 61              SIN  U
3012   CFE0 61              SIN  U
3013   CFE1 6A B4           LDI  UL,$B4
3014   CFE3 61              SIN  U
3015   CFE4 61              SIN  U
3016   CFE5 AE 78 9B        STA  (ERL)
3017   CFE8 48 78           LDI  XH,$78
3018   CFEA 4A 71           LDI  XL,$71
3019   CFEC 6A 0D           LDI  UL,$0D
3020   CFEE             
3021   CFEE             PRGLINE_TDI_13: ; $CFEE
3022   CFEE 41              SIN  X
3023   CFEF 88 03           LOP  UL,PRGLINE_TDI_13 ; $CFEE
3024   CFF1 4A 95           LDI  XL,$95
3025   CFF3 41              SIN  X
3026   CFF4 41              SIN  X
3027   CFF5 41              SIN  X
3028   CFF6 41              SIN  X
3029   CFF7             
3030   CFF7             ;------------------------------------------------------------------------------
3031   CFF7             ; $CFF7 - Initializes FOR / GOSUB pointers. Sets the error flag.
3032   CFF7             ;------------------------------------------------------------------------------
3033   CFF7             PRGLINE_TDI_1: ; 
3034   CFF7 EB 78 B8 80     ORI  (ON_ERR_ADD_H),$80
3035   CFFB             
3036   CFFB             ;------------------------------------------------------------------------------
3037   CFFB             ; (3A) $CFFB - basic-stack keyboard and input status 
3038   CFFB             ;------------------------------------------------------------------------------   
3039   CFFB E9 7B 0E 1F     ANI  (CURS_CTRL),$1F
3040   CFFF E9 78 8A 00     ANI  (BREAKPARAM),$00
3041   D003 EB 78 91 FF     ORI  (GOSB_STK_PTR_L),$FF
3042   D007 B5 38           LDI  A,$38
3043   D009 AE 78 90        STA  (FORNXT_STK_PTR)
3044   D00C 9A              RTN
3045   D00D             
3046   D00D             ;------------------------------------------------------------------------------
3047   D00D             ; $D00D - Initialization of the program pointers.
3048   D00D             ;------------------------------------------------------------------------------
3049   D00D             PRGLINE_TDI_2:
3050   D00D CC              VEJ  (CC) \ ABYTL(SRCH_TOP_H) ; $78AA
3050   D00E AA          
3051   D00F 9E 3F           BCH PRGLINE_TDI_14 ; $CFD2
3052   D011             
3053   D011             
3054   D011             
3055   D011             ;------------------------------------------------------------------------------
3056   D011             ; Checks whether the inputs for an INPUT command are edited
3057   D011             ;            Address: D011
3058   D011             ;         Parameters: None
3059   D011             ;
3060   D011             ; Modified Registers: Accumulator, carry flag=1 when editing with INPUT command
3061   D011             ;   Error conditions: None
3062   D011             ;------------------------------------------------------------------------------
3063   D011             PRGLINE_TDI_4: ; $D011
3064   D011 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
3065   D015 8B 08           BZS PRGLINE_TDI_15 ; $D01F
3066   D017                 
3067   D017             ; Tests input status. If input is required C=1. $D017   
3068   D017 A5 78 8A        LDA  (BREAKPARAM)
3069   D01A D9              SHL
3070   D01B 83 02           BCS PRGLINE_TDI_15 ; $D01F
3071   D01D DB              ROL
3072   D01E 9A              RTN
3073   D01F             
3074   D01F             PRGLINE_TDI_15: ; $D01F
3075   D01F F9              REC
3076   D020 9A              RTN
3077   D021             
3078   D021             
3079   D021             
3080   D021             ;------------------------------------------------------------------------------
3081   D021             ; $D021 - Clears the rest of the input buffer with "0D"
3082   D021             ;------------------------------------------------------------------------------
3083   D021             INBUF_CLRRST:
3084   D021 A5 78 8B        LDA  (INBUFPTR_L)
3085   D024 0A              STA  XL
3086   D025 1A              STA  YL
3087   D026 BD FF           EAI  $FF
3088   D028 2A              STA  UL
3089   D029 8E 0D           BCH INBUF_CLR_1 ; $D038
3090   D02B             
3091   D02B             
3092   D02B             
3093   D02B             ;------------------------------------------------------------------------------
3094   D02B             ; Clear input buffers with "0D" and initializes Input buffer pointers
3095   D02B             ;            Address:	D02B
3096   D02B             ;          Parameter:	None
3097   D02B             ;
3098   D02B             ; Modified Registers:	Input buffer is filled with "0D"
3099   D02B             ;   Error conditions:	None
3100   D02B             ;------------------------------------------------------------------------------
3101   D02B             INBUF_CLRRST_1: ; $D02B
3102   D02B B5 B0           LDI  A,$B0
3103   D02D AE 78 8B        STA  (INBUFPTR_L)
3104   D030             
3105   D030             
3106   D030             ; Clears the input buffer and sets V-Reg to the beginning of the input buffer.
3107   D030             INBUF_INIT: ; $D030
3108   D030 5A B0           LDI  YL,$B0
3109   D032 58 7B           LDI  YH,$7B
3110   D034             
3111   D034             
3112   D034             ; Clears input buffer.
3113   D034             INBUF_CLR: ; $D034
3114   D034 4A B0           LDI  XL,$B0
3115   D036 6A 50           LDI  UL,$50
3116   D038             
3117   D038             INBUF_CLR_1: ; $D038
3118   D038 48 7B           LDI  XH,$7B
3119   D03A B5 0D           LDI  A,$0D
3120   D03C 8E 72           BCH DEL_DIM_VARS_3 ; $D0B0
3121   D03E             
3122   D03E             
3123   D03E             
3124   D03E             ;------------------------------------------------------------------------------
3125   D03E             ; (2A) Transfer system messages from memory page C3xx
3126   D03E             ;            Address: D03E (2A)
3127   D03E             ;          Parameter: D1 defines low byte of memory page C3xx from which 
3128   D03E             ;                     message transfer begins. D2 = length of system message.
3129   D03E             ;                     (5B 09) BREAK IN
3130   D03E             ;                     (64 06) ERROR
3131   D03E             ;                     (61 03) IN
3132   D03E             ;                     Y-Reg points to target address of system message
3133   D03E             ;
3134   D03E             ; Modified Registers: X-Reg, Y-Reg, U-Reg, Accumulator
3135   D03E             ;   Error conditions: None
3136   D03E             ;------------------------------------------------------------------------------ 
3137   D03E             SYSMSG:    
3138   D03E FD 2A           POP  U
3139   D040 65              LIN  U
3140   D041 0A              STA  XL
3141   D042 65              LIN  U
3142   D043 FD A8           PSH  U
3143   D045 2A              STA  UL
3144   D046             
3145   D046             ; Transfers system messages.
3146   D046             SYSMSG_2: ; $D046
3147   D046 48 C3           LDI  XH,$C3
3148   D048             
3149   D048             SYSMSG_1: ; $D048
3150   D048 F5              TIN
3151   D049             
3152   D049             ; Transfers UL bytes from X-Reg to Y-Reg
3153   D049             SYSMSG_3: ; $D049
3154   D049 88 03           LOP  UL,SYSMSG_1 ; $D048
3155   D04B 9A              RTN
3156   D04C             
3157   D04C             
3158   D04C             
3159   D04C             ;------------------------------------------------------------------------------ 
3160   D04C             ; $D04C - Searches for variable on Basic stack, if not found C=0.
3161   D04C             ;------------------------------------------------------------------------------ 
3162   D04C             VARONBSTK:
3163   D04C A5 78 90        LDA  (FORNXT_STK_PTR)
3164   D04F 48 7A           LDI  XH,$7A
3165   D051 B7 39           CPI  A,$39
3166   D053 81 27           BCR PSHBSTK_3 ; $D07C
3167   D055 B1 0C           SBI  A,$0C
3168   D057 0A              STA  XL
3169   D058 45              LIN  X
3170   D059 A6              CPA  UH
3171   D05A 89 05           BZR VARONBSTK_1 ; $D061
3172   D05C 45              LIN  X
3173   D05D 26              CPA  UL
3174   D05E 8B 1B           BZS PSHBSTK_2 ; $D07B
3175   D060 46              DEC  X
3176   D061             
3177   D061             VARONBSTK_1: ; $D061
3178   D061 46              DEC  X
3179   D062 04              LDA  XL
3180   D063 9E 14           BCH $D051
3181   D065             
3182   D065             
3183   D065             
3184   D065             ;------------------------------------------------------------------------------
3185   D065             ; (06) Gets address from Basic-Stack to U-Reg
3186   D065             ;            Address: D065 (06)
3187   D065             ;          Parameter: None
3188   D065             ; 
3189   D065             ; Modified Registers: X-Reg points to the next free address on the stack
3190   D065             ;                     Accumulator holds new basic stack pointer. 
3191   D065             ;                     ($7882) is updated
3192   D065             ;   Error conditions: None
3193   D065             ;------------------------------------------------------------------------------
3194   D065             POPBSTK: ; $D065
3195   D065 A5 78 82        LDA  (STK_PTR_GSB_FOR)
3196   D068 0A              STA  XL
3197   D069 48 7A           LDI  XH,$7A
3198   D06B 45              LIN  X
3199   D06C 28              STA  UH
3200   D06D 45              LIN  X
3201   D06E 2A              STA  UL
3202   D06F 8E 0A           BCH PSHBSTK_2 ; $D07B
3203   D071             
3204   D071             ;------------------------------------------------------------------------------
3205   D071             ; (32) $D071 - Save U-Reg on Basic Stack
3206   D071             ;------------------------------------------------------------------------------
3207   D071             PSHBSTK:
3208   D071 A5 78 82        LDA  (STK_PTR_GSB_FOR)
3209   D074 0A              STA  XL
3210   D075 48 7A           LDI  XH,$7A
3211   D077 A4              LDA  UH
3212   D078 41              SIN  X
3213   D079 24              LDA  UL
3214   D07A 41              SIN  X
3215   D07B             
3216   D07B             PSHBSTK_2: ; $D07B
3217   D07B 04              LDA  XL
3218   D07C             
3219   D07C             PSHBSTK_3: ; $D07C
3220   D07C AE 78 82        STA  (STK_PTR_GSB_FOR)
3221   D07F 9A              RTN
3222   D080             
3223   D080             
3224   D080             
3225   D080             ;------------------------------------------------------------------------------
3226   D080             ; $D080 - Delete variable (standard and dimensioned variable)
3227   D080             ;            Address: D080
3228   D080             ;          Parameter: None
3229   D080             ; 
3230   D080             ; Modified Registers: X-Reg, U-Reg, Accumulator
3231   D080             ;   Error conditions: None
3232   D080             ;------------------------------------------------------------------------------
3233   D080             DELSVARS: 
3234   D080 48 76           LDI  XH,$76
3235   D082 BE D0 AA        SJP  (DEL_DIM_VARS_1) ; $D0AA
3236   D085 BE D0 AA        SJP  (DEL_DIM_VARS_1) ; $D0AA
3237   D088 4A C0           LDI  XL,$C0
3238   D08A 6A 0F           LDI  UL,$0F
3239   D08C 68 01           LDI  UH,$01
3240   D08E BE D3 C7        SJP  (DELU_FROMX_1) ; $D3C7
3241   D091             
3242   D091             
3243   D091             
3244   D091             ;------------------------------------------------------------------------------
3245   D091             ; $D091 - Delete dimensioned variables
3246   D091             ;            Address: D091
3247   D091             ;          Parameter: None
3248   D091             ; 
3249   D091             ; Modified Registers: Variable pointer
3250   D091             ;   Error conditions: None
3251   D091             ;------------------------------------------------------------------------------
3252   D091             DELDVARS:
3253   D091 A5 78 64        LDA  (RAM_END_H)
3254   D094 AE 78 99        STA  (VAR_START_H)
3255   D097 E9 78 9A 00     ANI  (VAR_START_L),$00
3256   D09B 9A              RTN
3257   D09C             
3258   D09C             
3259   D09C             ;------------------------------------------------------------------------------
3260   D09C             ; $D09C - Delete dimensioned variable if program and variable memory overlap
3261   D09C             ;            Address: D09C
3262   D09C             ;          Parameter: None
3263   D09C             ;
3264   D09C             ; Modified Registers: X-Reg, Accumulator
3265   D09C             ;   Error conditions: None
3266   D09C             ;------------------------------------------------------------------------------
3267   D09C             DEL_DIM_VARS:
3268   D09C CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
3268   D09D 67          
3269   D09E FB              SEC
3270   D09F 04              LDA  XL
3271   D0A0 A1 78 9A        SBC  (VAR_START_L)
3272   D0A3 84              LDA  XH
3273   D0A4 A1 78 99        SBC  (VAR_START_H)
3274   D0A7 93 18           BCS DELDVARS
3275   D0A9 9A              RTN
3276   D0AA             
3277   D0AA             ;------------------------------------------------------------------------------
3278   D0AA             ; $D0AA - Delete standard variables (176 bytes) from XH 50.
3279   D0AA             ;------------------------------------------------------------------------------
3280   D0AA             DEL_DIM_VARS_1: 
3281   D0AA 4A 50           LDI  XL,$50
3282   D0AC 6A AF           LDI  UL,$AF
3283   D0AE             
3284   D0AE             
3285   D0AE             ;------------------------------------------------------------------------------
3286   D0AE             ; Delete UL+1 bytes from X-Reg
3287   D0AE             ;            Address: D0AE
3288   D0AE             ;          Parameter: X-Reg points to the start address of the area to be deleted. 
3289   D0AE             ;                     UL contains the number of bytes to be deleted +1
3290   D0AE             ;
3291   D0AE             ; Modified Registers: X-Reg, Y-Reg
3292   D0AE             ;   Error conditions: None
3293   D0AE             ;------------------------------------------------------------------------------
3294   D0AE             DEL_DIM_VARS_18: ; $D0AE
3295   D0AE B5 00           LDI  A,$00
3296   D0B0             
3297   D0B0             DEL_DIM_VARS_3: ; $D0B0
3298   D0B0 41              SIN  X
3299   D0B1 88 03           LOP  UL,DEL_DIM_VARS_3 ; $D0B0
3300   D0B3 9A              RTN
3301   D0B4             
3302   D0B4             
3303   D0B4             
3304   D0B4             ;------------------------------------------------------------------------------
3305   D0B4             ; $D0B4 - Initializes pointer for search program
3306   D0B4             ;------------------------------------------------------------------------------
3307   D0B4             DEL_DIM_VARS_2: 
3308   D0B4 84              LDA  XH
3309   D0B5 AE 78 AA        STA  (SRCH_TOP_H)
3310   D0B8 04              LDA  XL
3311   D0B9 AE 78 AB        STA  (SRCH_TOP_L)
3312   D0BC             
3313   D0BC             ; Loads address pointed to by X-Reg 2-bytes (line number) after search pointer 
3314   D0BC             ; & start address from 78A6 f ..
3315   D0BC             DEL_DIM_VARS_14: ; $D0BC
3316   D0BC 45              LIN  X
3317   D0BD AE 78 A8        STA  (SRCH_LINE_H)
3318   D0C0 45              LIN  X
3319   D0C1 AE 78 A9        STA  (SRCH_LINE_L)
3320   D0C4 44              INC  X
3321   D0C5 84              LDA  XH
3322   D0C6 AE 78 A6        STA  (SRCH_ADD_H)
3323   D0C9 04              LDA  XL
3324   D0CA AE 78 A7        STA  (SRCH_ADD_L)
3325   D0CD 9A              RTN
3326   D0CE 08              STA  XH
3327   D0CF BA C8 53        JMP  BCMD_READ_17 ; $C853
3328   D0D2             
3329   D0D2             
3330   D0D2             ;------------------------------------------------------------------------------
3331   D0D2             ; $D0D2 - Compare BCD numbers in AR-X & AR-Y according to operand in Accumulator Set 
3332   D0D2             ; AR-X according to result 0 or 1.
3333   D0D2             ;------------------------------------------------------------------------------
3334   D0D2             DEL_DIM_VARS_16:
3335   D0D2 FD C8           PSH  A
3336   D0D4 A5 7A 01        LDA  (ARX + $01)
3337   D0D7 AD 7A 11        EOR  (ARY + $01)
3338   D0DA 89 08           BZR DEL_DIM_VARS_4 ; $D0E4
3339   D0DC BE EF B6        SJP  (SUBTR)
3340   D0DF A5 7A 02        LDA  (ARX + $02)
3341   D0E2 8B 5E           BZS $D142
3342   D0E4             
3343   D0E4             DEL_DIM_VARS_4: ; $D0E4
3344   D0E4 A5 7A 01        LDA  (ARX + $01)
3345   D0E7 D9              SHL
3346   D0E8             
3347   D0E8             DEL_DIM_VARS_13: ; $D0E8
3348   D0E8 FD 8A           POP  A
3349   D0EA 8B 4C           BZS DEL_DIM_VARS_5 ; $D138
3350   D0EC BD 04           EAI  $04
3351   D0EE 8B 07           BZS DEL_DIM_VARS_6 ; $D0F7
3352   D0F0 83 02           BCS DEL_DIM_VARS_7 ; $D0F4
3353   D0F2 BD 03           EAI  $03
3354   D0F4             
3355   D0F4             DEL_DIM_VARS_7: ; $D0F4
3356   D0F4 D5              SHR
3357   D0F5 83 41           BCS DEL_DIM_VARS_5 ; $D138
3358   D0F7             
3359   D0F7             DEL_DIM_VARS_6: ; $D0F7
3360   D0F7 EC              VEJ  (EC)
3361   D0F8 9A              RTN
3362   D0F9             
3363   D0F9             
3364   D0F9             
3365   D0F9             ;------------------------------------------------------------------------------
3366   D0F9             ; $D0F9 - Comparison of two strings according to operator in the accumulator
3367   D0F9             ; Comparison of two strings according to the operand in the accumulator whose 
3368   D0F9             ; CSI is in AR-X and AR-Y. AR-X is set to 1=true or 0=false, depending on the result.
3369   D0F9             ;------------------------------------------------------------------------------
3370   D0F9             DEL_DIM_VARS_15:
3371   D0F9 FD C8           PSH  A
3372   D0FB 6A 15           LDI  UL,$15
3373   D0FD BE DE BE        SJP  (BCMD_TIME_7) ; $DEBE
3374   D100 FD 5A           STX  Y
3375   D102 FD C8           PSH  A
3376   D104 DC              VEJ  (DC)
3377   D105 FD 8A           POP  A
3378   D107 68 01           LDI  UH,$01
3379   D109 26              CPA  UL
3380   D10A 8B 0F           BZS DEL_DIM_VARS_8 ; $D11B
3381   D10C 68 02           LDI  UH,$02
3382   D10E 83 03           BCS DEL_DIM_VARS_9 ; $D113
3383   D110 68 00           LDI  UH,$00
3384   D112 2A              STA  UL
3385   D113             
3386   D113             DEL_DIM_VARS_9: ; $D113
3387   D113 FD 8A           POP  A
3388   D115 B7 04           CPI  A,$04
3389   D117 9B 22           BZS DEL_DIM_VARS_6 ; $D0F7
3390   D119 FD C8           PSH  A
3391   D11B             
3392   D11B             DEL_DIM_VARS_8: ; $D11B
3393   D11B 62              DEC  UL
3394   D11C 81 20           BCR DEL_DIM_VARS_10 ; $D13E
3395   D11E 55              LIN  Y
3396   D11F F7              CIN
3397   D120 9B 07           BZS DEL_DIM_VARS_8 ; $D11B
3398   D122 FD 8A           POP  A
3399   D124 8B 12           BZS DEL_DIM_VARS_5 ; $D138
3400   D126 FD C8           PSH  A
3401   D128 BF 03           BII  A,$03
3402   D12A 8B 1C           BZS DEL_DIM_VARS_11 ; $D148
3403   D12C 81 02           BCR DEL_DIM_VARS_12 ; $D130
3404   D12E BD 03           EAI  $03
3405   D130             
3406   D130             DEL_DIM_VARS_12: ; $D130
3407   D130 D5              SHR
3408   D131 83 15           BCS DEL_DIM_VARS_11 ; $D148
3409   D133 38              NOP
3410   D134 38              NOP
3411   D135 38              NOP
3412   D136 FD 8A           POP  A
3413   D138             
3414   D138             DEL_DIM_VARS_5: ; $D138
3415   D138 EC              VEJ  (EC)
3416   D139 EB 7A 02 10     ORI  (ARX + $02),$10
3417   D13D 9A              RTN
3418   D13E             
3419   D13E             DEL_DIM_VARS_10: ; $D13E
3420   D13E 6C 01           CPI  UH,$01
3421   D140 99 5A           BZR DEL_DIM_VARS_13 ; $D0E8
3422   D142 FD 8A           POP  A
3423   D144 D5              SHR
3424   D145 D5              SHR
3425   D146 9E 54           BCH DEL_DIM_VARS_7 ; $D0F4
3426   D148             
3427   D148             DEL_DIM_VARS_11: ; $D148
3428   D148 FD 8A           POP  A
3429   D14A 9E 55           BCH DEL_DIM_VARS_6 ; $D0F7
3430   D14C             
3431   D14C             ; Passes number pointed to by Y-Reg to AR-X.
3432   D14C             DEL_DIM_VARS_17: ; $D14C
3433   D14C DC              VEJ  (DC)
3434   D14D FD 5A           STX  Y
3435   D14F             
3436   D14F             
3437   D14F             
3438   D14F             ;------------------------------------------------------------------------------
3439   D14F             ; $D14F - BCD value pointed to by Y-Reg points passed to AR-X
3440   D14F             ; Decimal number pointed to by Y-Reg, passed to AR-X. Jump if there is an error.
3441   D14F             ;------------------------------------------------------------------------------
3442   D14F             BCD_Y2ARX:
3443   D14F FD A8           PSH  U
3444   D151 EC              VEJ  (EC)
3445   D152 46              DEC  X
3446   D153 24              LDA  UL
3447   D154 0E              STA  (X)
3448   D155 FD 2A           POP  U
3449   D157 68 00           LDI  UH,$00
3450   D159 4A 02           LDI  XL,$02
3451   D15B             
3452   D15B             BCD_Y2ARX_13: ; $D15B
3453   D15B 62              DEC  UL
3454   D15C 81 5E           BCR BCD_Y2ARX_3 ; $D1BC
3455   D15E 15              LDA  (Y)
3456   D15F B7 30           CPI  A,$30
3457   D161 89 10           BZR BCD_Y2ARX_4 ; $D173
3458   D163 A4              LDA  UH
3459   D164 D5              SHR
3460   D165 83 37           BCS BCD_Y2ARX_5 ; $D19E
3461   D167 D5              SHR
3462   D168 83 14           BCS BCD_Y2ARX_6 ; $D17E
3463   D16A D5              SHR
3464   D16B 81 37           BCR BCD_Y2ARX_7 ; $D1A4
3465   D16D EF 7A 07 FF     ADI  (ARX + $07),$FF
3466   D171 8E 31           BCH BCD_Y2ARX_7 ; $D1A4
3467   D173             
3468   D173             BCD_Y2ARX_4: ; $D173
3469   D173 81 36           BCR BCD_Y2ARX_8 ; $D1AB
3470   D175 B7 3A           CPI  A,$3A
3471   D177 83 32           BCS BCD_Y2ARX_8 ; $D1AB
3472   D179 A4              LDA  UH
3473   D17A D5              SHR
3474   D17B 83 21           BCS BCD_Y2ARX_5 ; $D19E
3475   D17D D5              SHR
3476   D17E             
3477   D17E             BCD_Y2ARX_6: ; $D17E
3478   D17E D5              SHR
3479   D17F 83 04           BCS BCD_Y2ARX_9 ; $D185
3480   D181 EF 7A 07 01     ADI  (ARX + $07),$01
3481   D185             
3482   D185             BCD_Y2ARX_9: ; $D185
3483   D185 4E 07           CPI  XL,$07
3484   D187 83 10           BCS BCD_Y2ARX_10 ; $D199
3485   D189 4C 7A           CPI  XH,$7A
3486   D18B 48 7A           LDI  XH,$7A
3487   D18D 15              LDA  (Y)
3488   D18E B9 0F           ANI  A,$0F
3489   D190 81 05           BCR BCD_Y2ARX_11 ; $D197
3490   D192 D3              DRR  (X) 
3491   D193 48 00           LDI  XH,$00
3492   D195 8E 02           BCH BCD_Y2ARX_10 ; $D199
3493   D197             
3494   D197             BCD_Y2ARX_11: ; $D197
3495   D197 03              ADC  (X)
3496   D198 41              SIN  X
3497   D199             
3498   D199             BCD_Y2ARX_10: ; $D199
3499   D199 A4              LDA  UH
3500   D19A BB 02           ORI  A,$02
3501   D19C 8E 07           BCH BCD_Y2ARX_12 ; $D1A5
3502   D19E             
3503   D19E             BCD_Y2ARX_5: ; $D19E
3504   D19E 4A 00           LDI  XL,$00
3505   D1A0 48 7A           LDI  XH,$7A
3506   D1A2 15              LDA  (Y)
3507   D1A3 D3              DRR  (X)
3508   D1A4             
3509   D1A4             BCD_Y2ARX_7: ; $D1A4
3510   D1A4 A4              LDA  UH
3511   D1A5             
3512   D1A5             BCD_Y2ARX_12: ; $D1A5
3513   D1A5 BB 80           ORI  A,$80
3514   D1A7 28              STA  UH
3515   D1A8             
3516   D1A8             BCD_Y2ARX_27: ; $D1A8
3517   D1A8 54              INC  Y
3518   D1A9 9E 50           BCH BCD_Y2ARX_13 ; $D15B
3519   D1AB             
3520   D1AB             BCD_Y2ARX_8: ; $D1AB
3521   D1AB FD 88           PSH  X
3522   D1AD CD 34           VMJ  ($34) \ ABYT($04) \ ABYT($20) \ 
3522   D1AF 04          
3522   D1B0 20          
3522   D1B1             
3523   D1B1 63                   ABRF(BCD_Y2ARX_14) \ ABYT($2E) \ ABRF(BCD_Y2ARX_15) \ 
3523   D1B2 2E          
3523   D1B3 47          
3523   D1B4             
3524   D1B4 2D                   ABYT($2D) \ ABRF(BCD_Y2ARX_16) \ ABYT($2B) \ 
3524   D1B5 4F          
3524   D1B6 2B          
3524   D1B7             
3525   D1B7 61                   ABRF(BCD_Y2ARX_17) \ ABYT($45) \ ABRF(BCD_Y2ARX_18)
3525   D1B8 45          
3525   D1B9 64          
3526   D1BA             
3527   D1BA             BCD_Y2ARX_25: ; $D1BA
3528   D1BA FD 0A           POP  X
3529   D1BC             
3530   D1BC             BCD_Y2ARX_3: ; $D1BC
3531   D1BC 4A 02           LDI  XL,$02
3532   D1BE 48 7A           LDI  XH,$7A
3533   D1C0 47              LDE  X
3534   D1C1 8B 25           BZS BCD_Y2ARX_19 ; $D1E8
3535   D1C3 46              DEC  X
3536   D1C4 B5 00           LDI  A,$00
3537   D1C6 D3              DRR  (X)
3538   D1C7 B9 0F           ANI  A,$0F
3539   D1C9 2A              STA  UL
3540   D1CA 05              LDA  (X)
3541   D1CB             
3542   D1CB             BCD_Y2ARX_21: ; $D1CB
3543   D1CB 62              DEC  UL
3544   D1CC 81 04           BCR BCD_Y2ARX_20
3545   D1CE B3 09           ADI  A,$09
3546   D1D0 9E 07           BCH BCD_Y2ARX_21 ; $D1CB
3547   D1D2             
3548   D1D2             BCD_Y2ARX_20: ; $D1D2
3549   D1D2 41              SIN  X
3550   D1D3 05              LDA  (X)
3551   D1D4 D9              SHL
3552   D1D5 43              SDE  X
3553   D1D6 A5 7A 07        LDA  (ARX + $07)
3554   D1D9 E9 7A 07 00     ANI  (ARX + $07),$00
3555   D1DD 81 0C           BCR BCD_Y2ARX_22 ; $D1EB
3556   D1DF 01              SBC  (X)
3557   D1E0 B7 64           CPI  A,$64
3558   D1E2 81 14           BCR BCD_Y2ARX_23 ; $D1F8
3559   D1E4 B7 9D           CPI  A,$9D
3560   D1E6 83 10           BCS BCD_Y2ARX_23 ; $D1F8
3561   D1E8             
3562   D1E8             BCD_Y2ARX_19: ; $D1E8
3563   D1E8 EC              VEJ  (EC)
3564   D1E9 CD 4C           VMJ  ($4C) ; ($4C)($26)
3565   D1EB             
3566   D1EB             BCD_Y2ARX_22: ; $D1EB
3567   D1EB 03              ADC  (X)
3568   D1EC B7 9D           CPI  A,$9D
3569   D1EE 83 08           BCS BCD_Y2ARX_23 ; $D1F8
3570   D1F0 B7 64           CPI  A,$64
3571   D1F2 81 04           BCR BCD_Y2ARX_23 ; $D1F8
3572   D1F4 68 10           LDI  UH,$10
3573   D1F6 CD 48           VMJ  ($48) ; ($48)($24)
3574   D1F8             
3575   D1F8             BCD_Y2ARX_23: ; $D1F8
3576   D1F8 0E              STA  (X)
3577   D1F9 CD 4C           VMJ  ($4C) ; ($4C)($26)
3578   D1FB             
3579   D1FB             BCD_Y2ARX_15: ; $D1FB
3580   D1FB D5              SHR
3581   D1FC 83 02           BCS BCD_Y2ARX_24 ; $D200
3582   D1FE BB 02           ORI  A,$02
3583   D200             
3584   D200             BCD_Y2ARX_24: ; $D200
3585   D200 DB              ROL
3586   D201 FD 0A           POP  X
3587   D203 9E 60           BCH BCD_Y2ARX_12 ; $D1A5
3588   D205             
3589   D205             BCD_Y2ARX_16: ; $D205
3590   D205 D9              SHL
3591   D206 93 4E           BCS BCD_Y2ARX_25 ; $D1BA
3592   D208 D1              ROR
3593   D209 D1              ROR
3594   D20A B5 40           LDI  A,$40
3595   D20C 81 01           BCR BCD_Y2ARX_26 ; $D20F
3596   D20E D9              SHL
3597   D20F             
3598   D20F             BCD_Y2ARX_26: ; $D20F
3599   D20F AD 7A 01        EOR  (ARX + $01)
3600   D212 AE 7A 01        STA  (ARX + $01)
3601   D215             
3602   D215             BCD_Y2ARX_14: ; $D215
3603   D215 FD 0A           POP  X
3604   D217 9E 71           BCH BCD_Y2ARX_27 ; $D1A8
3605   D219             
3606   D219             BCD_Y2ARX_17: ; $D219
3607   D219 D9              SHL
3608   D21A 93 62           BCS BCD_Y2ARX_25 ; $D1BA
3609   D21C 9E 09           BCH BCD_Y2ARX_14 ; $D215
3610   D21E             
3611   D21E             BCD_Y2ARX_18: ; $D21E
3612   D21E D5              SHR
3613   D21F 93 0C           BCS BCD_Y2ARX_14 ; $D215
3614   D221 68 01           LDI  UH,$01
3615   D223 9E 10           BCH BCD_Y2ARX_14 ; $D215
3616   D225             
3617   D225             
3618   D225             
3619   D225             ;------------------------------------------------------------------------------
3620   D225             ; Finds address ofline number which contains address to which X-Reg points and 
3621   D225             ; transfers this value to search pointers (78A6 f.).
3622   D225             ;            Address: D225
3623   D225             ;         Parameters: X-Reg contains an address from the program memory for 
3624   D225             ;                     which the line start address is to be determined.
3625   D225             ; 
3626   D225             ; Modified Registers: X-Reg, Y-Reg and search pointers (78A6 f.) contain the 
3627   D225             ;                     start address found. U-Reg=78A7. Accumulator contains the 
3628   D225             ;                     low byte of the address found.
3629   D225             ;   Error conditions: Basically, the search starts from the start of the 
3630   D225             ;                     program memory. An error check as to whether the address 
3631   D225             ;                     sought is outside of the program memory is not carried 
3632   D225             ;                     out and is also not indicated by the flags when exiting.
3633   D225             ;------------------------------------------------------------------------------
3634   D225             BCD_Y2ARX_33: ; $D225
3635   D225 FD 5A           STX  Y
3636   D227 CD 12           VMJ  ($12)
3637   D229             
3638   D229             
3639   D229             
3640   D229             ;------------------------------------------------------------------------------
3641   D229             ; Finds the address of the program line pointed to by Y-Reg from the address 
3642   D229             ; pointed to by X-Reg. (like D225)
3643   D229             ;            Address: D229
3644   D229             ;         Parameters: X-Reg must point to the high byte of a line number in 
3645   D229             ;                     program memory from which to search.
3646   D229             ; 
3647   D229             ; Modified Registers: like D225
3648   D229             ;   Error conditions: like D225
3649   D229             ;------------------------------------------------------------------------------
3650   D229             BCD_Y2ARX_31: ; $D229
3651   D229 FD 6A           STX  U
3652   D22B 56              DEC  Y
3653   D22C 64              INC  U
3654   D22D             
3655   D22D             BCD_Y2ARX_30: ; $D22D
3656   D22D 64              INC  U
3657   D22E 65              LIN  U
3658   D22F FD EA           ADR  U
3659   D231 FB              SEC
3660   D232 24              LDA  UL
3661   D233 10              SBC  YL
3662   D234 A4              LDA  UH
3663   D235 90              SBC  YH
3664   D236 83 09           BCS BCD_Y2ARX_28 ; $D241
3665   D238             
3666   D238             BCD_Y2ARX_29: ; $D238
3667   D238 65              LIN  U
3668   D239 DD              INC  A
3669   D23A 93 04           BCS BCD_Y2ARX_29 ; $D238
3670   D23C FD 28           LDX  U
3671   D23E 46              DEC  X
3672   D23F 9E 14           BCH BCD_Y2ARX_30 ; $D22D
3673   D241             
3674   D241             BCD_Y2ARX_28: ; $D241
3675   D241 FD 5A           STX  Y
3676   D243 CA              VEJ  (CA) \ ABYTL(SRCH_ADD_H) ; $78A6
3676   D244 A6          
3677   D245 9A              RTN
3678   D246             
3679   D246             
3680   D246             
3681   D246             ;------------------------------------------------------------------------------
3682   D246             ; Transfer program line to input buffer
3683   D246             ;            Address: D246: Line where error occurred
3684   D246             ;                     D24E: Program line that was processed last
3685   D246             ;                     D26F: 1st program line
3686   D246             ;                     D277: transfer last program line
3687   D246             ;         Parameters: Corresponding search pointers must be set in memory map.
3688   D246             ; 
3689   D246             ; Modified Registers: X-Reg points to the high byte of the next line number. 
3690   D246             ;                     Y-Reg points to the cursor position within input buffer. 
3691   D246             ;                     U-Reg and Accumulator overwritten.
3692   D246             ;   Error conditions: None
3693   D246             ;------------------------------------------------------------------------------
3694   D246             ; $D246 - Transfer line where error occurred to input buffer
3695   D246             BCD_Y2ARX_45:
3696   D246 CC              VEJ  (CC) \ ABYTL(ERR_ADD_H) ; $78B2
3696   D247 B2          
3697   D248 FD 5A           STX  Y
3698   D24A CC              VEJ  (CC) \ ABYTL(ERR_TOP_H) ; $78B6
3698   D24B B6          
3699   D24C 8E 06           BCH BCD_Y2ARX_48 ; $D254
3700   D24E             
3701   D24E             ;------------------------------------------------------------------------------
3702   D24E             ; $D24E - Transfer line of the instruction to be processed to input buffer
3703   D24E             ;------------------------------------------------------------------------------
3704   D24E             BCD_Y2ARX_44: 
3705   D24E CC              VEJ  (CC) \ ABYTL(PREV_ADD_H) ; $78A0
3705   D24F A0          
3706   D250 FD 5A           STX  Y
3707   D252 CC              VEJ  (CC) \ ABYTL(PREV_TOP_H) ; $78A4
3707   D253 A4          
3708   D254                 
3709   D254             BCD_Y2ARX_48: ; $D254
3710   D254 FD 98           PSH  Y
3711   D256 BE D2 29        SJP  (BCD_Y2ARX_31) ; $D229
3712   D259 FD 0A           POP  X
3713   D25B F9              REC
3714   D25C 04              LDA  XL
3715   D25D 10              SBC  YL
3716   D25E DF              DEC  A
3717   D25F DF              DEC  A
3718   D260 DF              DEC  A
3719   D261 8B 1B           BZS BCD_Y2ARX_32 ; $D27E
3720   D263 2A              STA  UL
3721   D264 46              DEC  X
3722   D265 46              DEC  X
3723   D266 05              LDA  (X)
3724   D267 B7 E0           CPI  A,$E0
3725   D269 24              LDA  UL
3726   D26A 81 12           BCR BCD_Y2ARX_32 ; $D27E
3727   D26C DF              DEC  A
3728   D26D 8E 0F           BCH BCD_Y2ARX_32 ; $D27E
3729   D26F             
3730   D26F             ;------------------------------------------------------------------------------
3731   D26F             ; $D26F - Transfers 1st line of program to input buffer
3732   D26F             ;------------------------------------------------------------------------------
3733   D26F             BCD_Y2ARX_47:
3734   D26F CD 12           VMJ  ($12)
3735   D271             
3736   D271             BCD_Y2ARX_38: ; $D271
3737   D271 CA              VEJ  (CA) \ ABYTL(SRCH_ADD_H) ; $78A6
3737   D272 A6          
3738   D273 FD 5A           STX  Y
3739   D275 8E 05           BCH $D27C
3740   D277             
3741   D277             ;------------------------------------------------------------------------------
3742   D277             ; $D277 - Transfers last line of program to input buffer
3743   D277             ; Lists line in which BREAK occurred on the LCD.
3744   D277             ;------------------------------------------------------------------------------
3745   D277             BCD_Y2ARX_46:
3746   D277 CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
3746   D278 67          
3747   D279             
3748   D279             BCD_Y2ARX_42: ; $D279
3749   D279 BE D2 25        SJP  (BCD_Y2ARX_33) ; $D225
3750   D27C B5 00           LDI  A,$00
3751   D27E             
3752   D27E             BCD_Y2ARX_32: ; $D27E
3753   D27E FD C8           PSH  A
3754   D280 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
3754   D281 65          
3755   D282 94              LDA  YH
3756   D283 86              CPA  XH
3757   D284 83 08           BCS BCD_Y2ARX_34 ; $D28E
3758   D286 CC              VEJ  (CC) \ ABYTL(ST_ROM_MOD) ; $7860
3758   D287 60          
3759   D288 4A 07           LDI  XL,$07
3760   D28A 05              LDA  (X)
3761   D28B DB              ROL
3762   D28C 81 21           BCR BCD_Y2ARX_35 ; $D2AF
3763   D28E             
3764   D28E             BCD_Y2ARX_34: ; $D28E
3765   D28E BE D0 30        SJP  (INBUF_INIT)
3766   D291 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
3766   D292 A6          
3767   D293 45              LIN  X
3768   D294 28              STA  UH
3769   D295 45              LIN  X
3770   D296 2A              STA  UL
3771   D297 FD 88           PSH  X
3772   D299 CD 10           VMJ  ($10) \ ABYT($40)
3772   D29B 40          
3773   D29C FD 0A           POP  X
3774   D29E 45              LIN  X
3775   D29F DF              DEC  A
3776   D2A0 B9 7F           ANI  A,$7F
3777   D2A2 2A              STA  UL
3778   D2A3 FD 98           PSH  Y
3779   D2A5             
3780   D2A5             BCD_Y2ARX_36: ; $D2A5
3781   D2A5 F5              TIN
3782   D2A6 88 03           LOP  UL,BCD_Y2ARX_36 ; $D2A5
3783   D2A8 FD 1A           POP  Y
3784   D2AA             
3785   D2AA             BCD_Y2ARX_37: ; $D2AA
3786   D2AA FD 8A           POP  A
3787   D2AC FD DA           ADR  Y
3788   D2AE 9A              RTN
3789   D2AF             
3790   D2AF             BCD_Y2ARX_35: ; $D2AF
3791   D2AF 68 1F           LDI  UH,$1F
3792   D2B1 9E 09           BCH BCD_Y2ARX_37 ; $D2AA
3793   D2B3             
3794   D2B3             ;------------------------------------------------------------------------------
3795   D2B3             ; $D2B3 - Transfers next line to Input buffer
3796   D2B3             ; Finds the last line number $D2B3
3797   D2B3             ;------------------------------------------------------------------------------
3798   D2B3 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
3798   D2B4 A6          
3799   D2B5 44              INC  X
3800   D2B6 44              INC  X
3801   D2B7 45              LIN  X
3802   D2B8 FD CA           ADR  X
3803   D2BA 05              LDA  (X)
3804   D2BB DD              INC  A
3805   D2BC 91 4D           BCR  BCD_Y2ARX_38 ; $D271
3806   D2BE CD 16           VMJ  ($16)
3807   D2C0 B5 FF           LDI  A,$FF
3808   D2C2 8E 07           BCH BCD_Y2ARX_39 ; $D2CB
3809   D2C4             
3810   D2C4             BCD_Y2ARX_40: ; $D2C4
3811   D2C4 F7              CIN
3812   D2C5 89 09           BZR BCD_Y2ARX_1 ; $D2D0
3813   D2C7 88 05           LOP  UL,BCD_Y2ARX_40 ; $D2C4
3814   D2C9 FD 62           DEC  UH
3815   D2CB             
3816   D2CB             BCD_Y2ARX_39: ; $D2CB
3817   D2CB 93 09           BCS BCD_Y2ARX_40 ; $D2C4
3818   D2CD             
3819   D2CD             BCD_Y2ARX_41: ; $D2CD
3820   D2CD 68 00           LDI  UH,$00
3821   D2CF 9A              RTN
3822   D2D0             
3823   D2D0             ;------------------------------------------------------------------------------
3824   D2D0             ; $D2D0 - Transmits output line to which X-Reg points to Input buffer
3825   D2D0             ; Lists program line on LCD.
3826   D2D0             ;------------------------------------------------------------------------------
3827   D2D0             BCD_Y2ARX_1:
3828   D2D0 46              DEC  X
3829   D2D1 9E 62           BCH BCD_Y2ARX_38 ; $D271
3830   D2D3             
3831   D2D3             ;------------------------------------------------------------------------------
3832   D2D3             ; $D2D3 - Searches for line address according to search pointer
3833   D2D3             ;------------------------------------------------------------------------------
3834   D2D3             BCD_Y2ARX_43:
3835   D2D3 CD 12           VMJ  ($12)
3836   D2D5 FD 6A           STX  U
3837   D2D7 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
3837   D2D8 A6          
3838   D2D9 BE DF E2        SJP  (U_MINUS_X)
3839   D2DC 93 11           BCS BCD_Y2ARX_41 ; $D2CD
3840   D2DE 9E 67           BCH BCD_Y2ARX_42 ; $D279
3841   D2E0             
3842   D2E0             ;------------------------------------------------------------------------------
3843   D2E0             ; $D2E0 - Searches for line number according to U-Reg from merge start
3844   D2E0             ; Searches for the line number from the start of the merge.
3845   D2E0             ;------------------------------------------------------------------------------
3846   D2E0             BCD_Y2ARX_2: 
3847   D2E0 CC              VEJ  (CC) \ ABYTL($7869)
3847   D2E1 69          
3848   D2E2 FD 98           PSH  Y
3849   D2E4 8E 19           BCH SRCHPRGLINE_2 ; $D2FF
3850   D2E6             
3851   D2E6             ;------------------------------------------------------------------------------
3852   D2E6             ; (1A) $D2E0 - Searches according to U-Reg ; D2E6
3853   D2E6             ; Searches for line numbers according to U-Reg. Jump if an error occurs.
3854   D2E6             ;------------------------------------------------------------------------------
3855   D2E6 6C FF           CPI  UH,$FF
3856   D2E8 89 3D           BZR SRCHPRGLINE_3 ; $D327
3857   D2EA             
3858   D2EA             ;------------------------------------------------------------------------------
3859   D2EA             ; $D2EA - Searches line number according to U-Reg from beginning of program memory
3860   D2EA             ; Searches for line number corresponding to U-Reg; updated program pointer. 
3861   D2EA             ; If not found, jump to Distance Address.
3862   D2EA             ;------------------------------------------------------------------------------
3863   D2EA             LINESEARCH:
3864   D2EA CD 12           VMJ  ($12)
3865   D2EC             
3866   D2EC             ;------------------------------------------------------------------------------
3867   D2EC             ; $D2EC - Searches for program line from U-Reg from X-Reg
3868   D2EC             ;------------------------------------------------------------------------------
3869   D2EC             SRCHPRGLINE:
3870   D2EC FD 98           PSH  Y
3871   D2EE FD A8           PSH  U
3872   D2F0 CA              VEJ  (CA) \ ABYTL(SRCH_TOP_H) ; $78AA
3872   D2F1 AA          
3873   D2F2             
3874   D2F2             SRCHPRGLINE_10: ; $D2F2
3875   D2F2 FD 2A           POP  U
3876   D2F4 6C FF           CPI  UH,$FF
3877   D2F6 89 07           BZR SRCHPRGLINE_2 ; $D2FF
3878   D2F8 FD 88           PSH  X
3879   D2FA E6              VEJ  (E6)
3880   D2FB FD 0A           POP  X
3881   D2FD             
3882   D2FD             SRCHPRGLINE_8: ; $D2FD
3883   D2FD 68 FF           LDI  UH,$FF
3884   D2FF             
3885   D2FF             SRCHPRGLINE_2: ; $D2FF
3886   D2FF BE D0 BC        SJP  (DEL_DIM_VARS_14) ; $D0BC
3887   D302 A5 78 A8        LDA  (SRCH_LINE_H)
3888   D305 B7 FF           CPI  A,$FF
3889   D307 81 38           BCR SRCHPRGLINE_4 ; $D341
3890   D309 6C FF           CPI  UH,$FF
3891   D30B 81 11           BCR SRCHPRGLINE_5 ; $D31E
3892   D30D CD 16           VMJ  ($16)
3893   D30F 81 0D           BCR SRCHPRGLINE_5 ; $D31E
3894   D311 46              DEC  X
3895   D312 46              DEC  X
3896   D313 B5 FF           LDI  A,$FF
3897   D315             
3898   D315             SRCHPRGLINE_7: ; $D315
3899   D315 F7              CIN
3900   D316 89 0A           BZR SRCHPRGLINE_6 ; $D322
3901   D318 88 05           LOP  UL,SRCHPRGLINE_7 ; $D315
3902   D31A FD 62           DEC  UH
3903   D31C 93 09           BCS SRCHPRGLINE_7 ; $D315
3904   D31E             
3905   D31E             SRCHPRGLINE_5: ; $D31E
3906   D31E 68 0B           LDI  UH,$0B
3907   D320 CD 4A           VMJ  ($4A) ; ($4A)($25)
3908   D322             
3909   D322             SRCHPRGLINE_6: ; $D322
3910   D322 46              DEC  X
3911   D323 CA              VEJ  (CA) \ ABYTL(SRCH_TOP_H) ; $78AA
3911   D324 AA          
3912   D325 9E 2A           BCH SRCHPRGLINE_8 ; $D2FD
3913   D327             
3914   D327             SRCHPRGLINE_3: ; $D327
3915   D327 CC              VEJ  (CC) \ ABYTL(CURR_LINE_H) ; $789C
3915   D328 9C          
3916   D329 24              LDA  UL
3917   D32A 00              SBC  XL
3918   D32B A4              LDA  UH
3919   D32C 80              SBC  XH
3920   D32D 83 04           BCS SRCHPRGLINE_9 ; $D333
3921   D32F CC              VEJ  (CC) \ ABYTL(SRCH_TOP_H) ; $78AA
3921   D330 AA          
3922   D331 9E 47           BCH SRCHPRGLINE
3923   D333             
3924   D333             SRCHPRGLINE_9: ; $D333
3925   D333 FD 98           PSH  Y
3926   D335 FD A8           PSH  U
3927   D337 CC              VEJ  (CC) \ ABYTL(CURR_TOP_H) ; $789E
3927   D338 9E          
3928   D339 CA              VEJ  (CA) \ ABYTL(SRCH_TOP_H) ; $78AA
3928   D33A AA          
3929   D33B 56              DEC  Y
3930   D33C CD 20           VMJ  ($20)
3931   D33E 38              NOP
3932   D33F 9E 4F           BCH SRCHPRGLINE_10 ; $D2F2
3933   D341             
3934   D341             SRCHPRGLINE_4: ; $D341
3935   D341 6C FF           CPI  UH,$FF
3936   D343 89 1D           BZR SRCHPRGLINE_11 ; $D362
3937   D345 45              LIN  X
3938   D346 B7 22           CPI  A,$22
3939   D348 89 11           BZR SRCHPRGLINE_12 ; $D35B
3940   D34A FD 88           PSH  X
3941   D34C FD 5A           STX  Y
3942   D34E CD 0C           VMJ  ($0C)
3943   D350 B5 04           LDI  A,$04
3944   D352 BE D0 F9        SJP  (DEL_DIM_VARS_15) ; $D0F9
3945   D355 FD 0A           POP  X
3946   D357 68 FF           LDI  UH,$FF
3947   D359 89 14           BZR SRCHPRGLINE_13 ; $D36F
3948   D35B             
3949   D35B             SRCHPRGLINE_12: ; $D35B
3950   D35B 46              DEC  X
3951   D35C             
3952   D35C             SRCHPRGLINE_14: ; $D35C
3953   D35C 46              DEC  X
3954   D35D 45              LIN  X
3955   D35E FD CA           ADR  X
3956   D360 9E 63           BCH SRCHPRGLINE_2 ; $D2FF
3957   D362             
3958   D362             SRCHPRGLINE_11: ; $D362
3959   D362 A6              CPA  UH
3960   D363 91 09           BCR  SRCHPRGLINE_14 ; $D35C
3961   D365 99 49           BZR  SRCHPRGLINE_5 ; $D31E
3962   D367 A5 78 A9        LDA  (SRCH_LINE_L)
3963   D36A 26              CPA  UL
3964   D36B 91 11           BCR  SRCHPRGLINE_14 ; $D35C
3965   D36D 99 51           BZR  SRCHPRGLINE_5 ; $D31E
3966   D36F             
3967   D36F             SRCHPRGLINE_13: ; $D36F
3968   D36F CD 4E           VMJ  ($4E) ; ($4E)($27)
3969   D371             
3970   D371             
3971   D371             
3972   D371             ;------------------------------------------------------------------------------
3973   D371             ; $D371 - Reserves space for simple variables
3974   D371             ; Reserves space for simple variables and corrects variable pointers.
3975   D371             ;------------------------------------------------------------------------------
3976   D371             SRCHPRGLINE_16:
3977   D371 A5 78 84        LDA  (CURVARADD_L)
3978   D374 B9 20           ANI  A,$20
3979   D376 D5              SHR
3980   D377 1A              STA  YL
3981   D378 89 04           BZR SRCHPRGLINE_15 ; $D37E
3982   D37A 5A 08           LDI  YL,$08
3983   D37C B5 88           LDI  A,$88
3984   D37E             
3985   D37E             SRCHPRGLINE_15: ; $D37E
3986   D37E AE 78 85        STA  (CURVARTYPE) ; $7885
3987   D381 B5 00           LDI  A,$00
3988   D383 18              STA  YH
3989   D384 2A              STA  UL
3990   D385 28              STA  UH
3991   D386             
3992   D386             ;------------------------------------------------------------------------------
3993   D386             ; $D386 - Reserves space for variables
3994   D386             ;------------------------------------------------------------------------------
3995   D386             SRCHPRGLINE_1:
3996   D386 FD A8           PSH  U
3997   D388 F4              VEJ  (F4) \ AWRD(VAR_START_H)
3997   D389 78 99       
3998   D38B B5 07           LDI  A,$07
3999   D38D F9              REC
4000   D38E 12              ADC  YL
4001   D38F 0A              STA  XL
4002   D390 B5 00           LDI  A,$00
4003   D392 92              ADC  YH
4004   D393 08              STA  XH
4005   D394 83 39           BCS DELU_FROMX_2 ; $D3CF
4006   D396 BE DF E2        SJP  (U_MINUS_X)
4007   D399 81 34           BCR DELU_FROMX_2 ; $D3CF
4008   D39B FD 28           LDX  U
4009   D39D 46              DEC  X
4010   D39E CD 16           VMJ  ($16)
4011   D3A0 83 2D           BCS DELU_FROMX_2 ; $D3CF
4012   D3A2 44              INC  X
4013   D3A3 CA              VEJ  (CA) \ ABYTL($7899)
4013   D3A4 99          
4014   D3A5 F4              VEJ  (F4) \ AWRD(CURVARADD_H)
4014   D3A6 78 83       
4015   D3A8 B9 7F           ANI  A,$7F
4016   D3AA 41              SIN  X
4017   D3AB 24              LDA  UL
4018   D3AC 41              SIN  X
4019   D3AD 14              LDA  YL
4020   D3AE 2A              STA  UL
4021   D3AF 94              LDA  YH
4022   D3B0 28              STA  UH
4023   D3B1 54              INC  Y
4024   D3B2 54              INC  Y
4025   D3B3 54              INC  Y
4026   D3B4 94              LDA  YH
4027   D3B5 41              SIN  X
4028   D3B6 14              LDA  YL
4029   D3B7 41              SIN  X
4030   D3B8 FD 1A           POP  Y
4031   D3BA 14              LDA  YL
4032   D3BB 41              SIN  X
4033   D3BC 94              LDA  YH
4034   D3BD 41              SIN  X
4035   D3BE A5 78 85        LDA  (CURVARTYPE) ; $7885
4036   D3C1 41              SIN  X
4037   D3C2 FD 5A           STX  Y
4038   D3C4             
4039   D3C4             
4040   D3C4             ;------------------------------------------------------------------------------
4041   D3C4             ; Delete U bytes from X-Reg
4042   D3C4             ;            Address: DC34
4043   D3C4             ;          Parameter: X-Reg points to the start address of the area to be deleted
4044   D3C4             ; 
4045   D3C4             ; Modified Registers: X-Reg, U-Reg, Accumulator
4046   D3C4             ;   Error conditions: None
4047   D3C4             ;------------------------------------------------------------------------------
4048   D3C4             ; Deletes U-bytes from X-Reg
4049   D3C4             DELU_FROMX: ; $D3C4
4050   D3C4 66              DEC  U
4051   D3C5 B5 00           LDI  A,$00
4052   D3C7             
4053   D3C7             DELU_FROMX_1: ; $D3C7
4054   D3C7 41              SIN  X
4055   D3C8 88 03           LOP  UL,DELU_FROMX_1 ; $D3C7
4056   D3CA FD 62           DEC  UH
4057   D3CC 93 07           BCS DELU_FROMX_1 ; $D3C7
4058   D3CE 9A              RTN
4059   D3CF             
4060   D3CF             DELU_FROMX_2: ; $D3CF
4061   D3CF 68 0A           LDI  UH,$0A
4062   D3D1 FB              SEC
4063   D3D2 FD 0A           POP  X
4064   D3D4 9A              RTN
4065   D3D5             
4066   D3D5             
4067   D3D5             
4068   D3D5             ;------------------------------------------------------------------------------
4069   D3D5             ; Conversion decimal to hexadecimal
4070   D3D5             ; Address:	D3D5
4071   D3D5             ;   Entry parameters: Y-Reg points to 1st ASCII character of decimal number. 
4072   D3D5             ;                     Leading zeros are skipped.
4073   D3D5             ; 
4074   D3D5             ; Modified registers: U-Reg contains hex result. (0000-FEFF).
4075   D3D5             ;                     Y-Reg points to address after last decimal number.
4076   D3D5             ;   Error conditions: If the value range is not complied with, 
4077   D3D5             ;                     error code 1E UH is loaded and the carry flag is set.
4078   D3D5             ;------------------------------------------------------------------------------
4079   D3D5             DEC2HEX: ; $D3D5
4080   D3D5 4A 00           LDI  XL,$00
4081   D3D7 48 00           LDI  XH,$00
4082   D3D9             
4083   D3D9             DEC2HEX_4: ; $D3D9
4084   D3D9 FD 88           PSH  X
4085   D3DB CD 02           VMJ  ($02) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_2) ; $D3FE
4085   D3DD 30          
4085   D3DE 3A          
4085   D3DF 1E          
4086   D3E0 FD 0A           POP  X
4087   D3E2 FD 98           PSH  Y
4088   D3E4 FD C8           PSH  A
4089   D3E6 FD 5A           STX  Y
4090   D3E8 6A 0A           LDI  UL,$0A
4091   D3EA CD 50           VMJ  ($50) ; ($50)($28)
4092   D3EC FD 8A           POP  A
4093   D3EE 68 1E           LDI  UH,$1E
4094   D3F0 FD 1A           POP  Y
4095   D3F2 83 12           BCS DEC2HEX_3 ; $D406
4096   D3F4 4C FF           CPI  XH,$FF
4097   D3F6 8B 0E           BZS DEC2HEX_3 ; $D406
4098   D3F8 B9 0F           ANI  A,$0F
4099   D3FA FD CA           ADR  X
4100   D3FC 9E 25           BCH DEC2HEX_4 ; $D3D9
4101   D3FE             
4102   D3FE             DEC2HEX_2: ; $D3FE
4103   D3FE C6              VEJ  (C6)
4104   D3FF FD 2A           POP  U
4105   D401 24              LDA  UL
4106   D402 F9              REC
4107   D403 89 01           BZR DEC2HEX_3 ; $D406
4108   D405 A4              LDA  UH
4109   D406             
4110   D406             DEC2HEX_3: ; $D406
4111   D406 9A              RTN
4112   D407             
4113   D407             
4114   D407             
4115   D407             ;------------------------------------------------------------------------------
4116   D407             ; Retrieves the encoded name of variable pointed to by Y-Reg
4117   D407             ;            Address: D407
4118   D407             ;                     1 Data byte
4119   D407             ;   Entry parameters: Y-Reg points to 1st byte of variable name in main memory
4120   D407             ; 
4121   D407             ; Modified registers: X-Reg contains return address
4122   D407             ;                     Y-Reg points to the index or byte after variable name.
4123   D407             ;                     U-Reg contains encoded variable names.
4124   D407             ;   Error conditions: If variable name is not allowed, branch to offset (D1).
4125   D407             ;------------------------------------------------------------------------------
4126   D407             DEC2HEX_13: ; $D407
4127   D407 C0              VEJ  (C0)
4128   D408 CD 00           VMJ  ($00) \ ABYT($40) \ ABYT($5B) \ ABRF(DEC2HEX_128) ; $D42F
4128   D40A 40          
4128   D40B 5B          
4128   D40C 22          
4129   D40D             
4130   D40D             
4131   D40D             
4132   D40D             ;------------------------------------------------------------------------------
4133   D40D             ; Find encoded variable name whose 1st letter is in UL and 2nd letter in Y-Reg.
4134   D40D             ;            Address: D40D
4135   D40D             ;                     1 Data byte
4136   D40D             ;   Entry parameters: Y-Reg points to 2nd letters of variable. UL=1st letter
4137   D40D             ; 
4138   D40D             ; Modified registers: Like D407
4139   D40D             ;   Error conditions: Like D407
4140   D40D             ;------------------------------------------------------------------------------
4141   D40D             DEC2HEX_70: ; $D40D
4142   D40D 24              LDA  UL
4143   D40E 08              STA  XH
4144   D40F 4A 00           LDI  XL,$00
4145   D411             
4146   D411             DEC2HEX_9: ; $D411
4147   D411 FD 88           PSH  X
4148   D413 CD 02           VMJ  ($02) \ ABYT($41) \ ABYT($5B) \ ABRF(DEC2HEX_5) ; $D41A
4148   D415 41          
4148   D416 5B          
4148   D417 02          
4149   D418 8E 08           BCH DEC2HEX_7 ; $D422
4150   D41A             
4151   D41A             DEC2HEX_5: ; $D41A
4152   D41A CD 00           VMJ  ($00) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_6) ; $D43B
4152   D41C 30          
4152   D41D 3A          
4152   D41E 1C          
4153   D41F B9 DF           ANI  A,$DF
4154   D421 2A              STA  UL
4155   D422             
4156   D422             DEC2HEX_7: ; $D422
4157   D422 FD 0A           POP  X
4158   D424 4C 40           CPI  XH,$40
4159   D426 8B 31           BZS DEC2HEX_8 ; $D459
4160   D428 04              LDA  XL
4161   D429 99 1A           BZR DEC2HEX_9 ; $D411
4162   D42B 24              LDA  UL
4163   D42C 0A              STA  XL
4164   D42D 9E 1E           BCH DEC2HEX_9 ; $D411
4165   D42F             
4166   D42F             DEC2HEX_128: ; $D42F
4167   D42F C4              VEJ  (C4) \ AWRD($F15B) \ ABRF(DEC2HEX_10) ; $D435
4167   D430 F1 5B       
4167   D432 02          
4168   D433 CD 4C           VMJ  ($4C) ; ($4C)($26)
4169   D435             
4170   D435             DEC2HEX_10: ; $D435
4171   D435 A4              LDA  UH
4172   D436 2A              STA  UL
4173   D437 68 15           LDI  UH,$15
4174   D439 CD 48           VMJ  ($48) ; ($48)($24)
4175   D43B             
4176   D43B             DEC2HEX_6: ; $D43B
4177   D43B C4              VEJ  (C4) \ ACHR($24) \ ABRF(DEC2HEX_11) ; $D447
4177   D43C 24          
4177   D43D 09          
4178   D43E FD 2A           POP  U
4179   D440 B5 20           LDI  A,$20
4180   D442 FD EA           ADR  U
4181   D444 FD A8           PSH  U
4182   D446 C0              VEJ  (C0)
4183   D447             
4184   D447             DEC2HEX_11: ; $D447
4185   D447 C4              VEJ  (C4) \ ACHR($28) \ ABRF(DEC2HEX_12) ; $D452
4185   D448 28          
4185   D449 08          
4186   D44A FD 2A           POP  U
4187   D44C B5 80           LDI  A,$80
4188   D44E FD EA           ADR  U
4189   D450 CD 4C           VMJ  ($4C) ; ($4C)($26)
4190   D452             
4191   D452             DEC2HEX_12: ; $D452
4192   D452 C6              VEJ  (C6)
4193   D453 FD 2A           POP  U
4194   D455 6C 40           CPI  UH,$40
4195   D457 C9 4C           VZR  ($4C) ; ($4C)($26)
4196   D459             
4197   D459             DEC2HEX_8: ; $D459
4198   D459 68 14           LDI  UH,$14
4199   D45B CD 48           VMJ  ($48) ; ($48)($24)
4200   D45D             
4201   D45D             
4202   D45D             
4203   D45D             ;------------------------------------------------------------------------------
4204   D45D             ; (CE) Gets the address of the variable whose name is pointed to by Y-Reg
4205   D45D             ;            Address: D45D (CE)
4206   D45D             ;                     2 Data bytes
4207   D45D             ;                     D1 = selection of permitted variable types
4208   D45D             ;                     14: Array variable must not yet be dimensioned
4209   D45D             ;                     58: all variable types allowed
4210   D45D             ;                     48: only string variables allowed
4211   D45D             ;                     68: only numeric variables allowed.
4212   D45D             ;   Entry parameters: X-Reg contains return address
4213   D45D             ; 
4214   D45D             ; Modified registers: Y-Reg points to next byte in main memory
4215   D45D             ;                     U-Reg contains the start address of the variable.
4216   D45D             ;                     AR-X may contain CSI or BCD value of searched var.
4217   D45D             ;   Error conditions: This subroutine can produce a variety of error
4218   D45D             ;                     conditions depending on the preselected data byte 1 and 
4219   D45D             ;                     the variable type. If an error is detected, then a
4220   D45D             ;                     branch is made to the offset address defined by D2.
4221   D45D             ;------------------------------------------------------------------------------
4222   D45D             GET_VAR_ADDR: ; $D45D
4223   D45D BE D4 07        SJP  (DEC2HEX_13) ; $D407
4224   D460 58              .BYTE $58
4225   D461             
4226   D461             ;------------------------------------------------------------------------------
4227   D461             ; (0E) Find address of the variable whose name is stored in U-Reg
4228   D461             ; Line above and below different in PC-1500 Intern ***
4229   D461             ;            Address: D461 (0E)
4230   D461             ;                     2 Data bytes (see (CE))
4231   D461             ;   Entry parameters: U-Reg contains variable name
4232   D461             ;
4233   D461             ; Modified registers: Like (CE)
4234   D461             ;   Error conditions: Like (CE)
4235   D461             ;------------------------------------------------------------------------------
4236   D461             GET_VAR_NAME: ; $D461
4237   D461 FD 0A           POP X
4238   D463 45              LIN  X
4239   D464 FD 88           PSH  X
4240   D466 46              DEC  X
4241   D467 FD C8           PSH  A
4242   D469 24              LDA  UL
4243   D46A B9 A0           ANI  A,$A0
4244   D46C 0D              EOR  (X)
4245   D46D BF C0           BII  A,$C0
4246   D46F 8B 9B           BZS DEC2HEX_14 ; $D50C
4247   D471 BF 30           BII  A,$30
4248   D473 8B 97           BZS DEC2HEX_14 ; $D50C
4249   D475 6C 40           CPI  UH,$40
4250   D477 8B 97           BZS DEC2HEX_15 ; $D510
4251   D479 6C 5B           CPI  UH,$5B
4252   D47B 81 03           BCR DEC2HEX_16 ; $D480
4253   D47D BA D5 D8        JMP  DEC2HEX_29 ; $D5D8
4254   D480             
4255   D480             DEC2HEX_16: ; $D480
4256   D480 24              LDA  UL
4257   D481 B9 DF           ANI  A,$DF
4258   D483 89 30           BZR DEC2HEX_17 ; $D4B5
4259   D485             
4260   D485             DEC2HEX_37: ; $D485
4261   D485 A4              LDA  UH
4262   D486 B9 1F           ANI  A,$1F
4263   D488 4A F8           LDI  XL,$F8
4264   D48A 48 78           LDI  XH,$78
4265   D48C 6E 20           CPI  UL,$20
4266   D48E 81 13           BCR DEC2HEX_18 ; $D4A3
4267   D490 4A B0           LDI  XL,$B0
4268   D492 B7 05           CPI  A,$05
4269   D494 81 0C           BCR DEC2HEX_19 ; $D4A2
4270   D496 4A 00           LDI  XL,$00
4271   D498 48 76           LDI  XH,$76
4272   D49A B7 10           CPI  A,$10
4273   D49C 81 04           BCR DEC2HEX_19 ; $D4A2
4274   D49E 4A 50           LDI  XL,$50
4275   D4A0 48 77           LDI  XH,$77
4276   D4A2             
4277   D4A2             DEC2HEX_19: ; $D4A2
4278   D4A2 D9              SHL
4279   D4A3             
4280   D4A3             DEC2HEX_18: ; $D4A3
4281   D4A3 D9              SHL
4282   D4A4 D9              SHL
4283   D4A5 D9              SHL
4284   D4A6 FD CA           ADR  X
4285   D4A8 68 00           LDI  UH,$00
4286   D4AA FD 8A           POP  A
4287   D4AC FD C8           PSH  A
4288   D4AE D1              ROR
4289   D4AF 24              LDA  UL
4290   D4B0 83 4E           BCS DEC2HEX_20 ; $D500
4291   D4B2 BA D5 E6        JMP  DEC2HEX_21 ; $D5E6
4292   D4B5             
4293   D4B5             DEC2HEX_17: ; $D4B5
4294   D4B5 CC              VEJ  (CC) \ ABYTL(VAR_START_H) ; $7899
4294   D4B6 99          
4295   D4B7 8E 11           BCH DEC2HEX_30 ; $D4CA
4296   D4B9 FD 0A           POP  X
4297   D4BB BA DC F6        JMP  LOAD_NEXT_2 ; $DCF6
4298   D4BE             
4299   D4BE             DEC2HEX_23: ; $D4BE
4300   D4BE 44              INC  X
4301   D4BF             
4302   D4BF             DEC2HEX_24: ; $D4BF
4303   D4BF 45              LIN  X
4304   D4C0 FD C8           PSH  A
4305   D4C2 45              LIN  X
4306   D4C3 F9              REC
4307   D4C4 02              ADC  XL
4308   D4C5 0A              STA  XL
4309   D4C6 FD 8A           POP  A
4310   D4C8 82              ADC  XH
4311   D4C9 08              STA  XH
4312   D4CA             
4313   D4CA             DEC2HEX_30: ; $D4CA
4314   D4CA A7 78 64        CPA  (RAM_END_H)
4315   D4CD 83 DA           BCS DEC2HEX_22 ; $D5A9
4316   D4CF 45              LIN  X
4317   D4D0 A6              CPA  UH
4318   D4D1 99 15           BZR  DEC2HEX_23 ; $D4BE
4319   D4D3 45              LIN  X
4320   D4D4 26              CPA  UL
4321   D4D5 99 18           BZR  DEC2HEX_24 ; $D4BF
4322   D4D7 FD 8A           POP  A
4323   D4D9 FD C8           PSH  A
4324   D4DB D5              SHR
4325   D4DC 83 10           BCS DEC2HEX_25 ; $D4EE
4326   D4DE 44              INC  X
4327   D4DF 44              INC  X
4328   D4E0 D5              SHR
4329   D4E1 83 78           BCS DEC2HEX_26 ; $D55B
4330   D4E3 D5              SHR
4331   D4E4 81 60           BCR DEC2HEX_27 ; $D546
4332   D4E6 68 05           LDI  UH,$05
4333   D4E8 8E BB           BCH DEC2HEX_28 ; $D5A5
4334   D4EA             
4335   D4EA             DEC2HEX_31: ; $D4EA
4336   D4EA 68 01           LDI  UH,$01
4337   D4EC 8E B7           BCH DEC2HEX_28 ; $D5A5
4338   D4EE             
4339   D4EE             DEC2HEX_25: ; $D4EE
4340   D4EE 6E 80           CPI  UL,$80
4341   D4F0             
4342   D4F0             DEC2HEX_49: ; $D4F0
4343   D4F0 68 01           LDI  UH,$01
4344   D4F2 81 0C           BCR DEC2HEX_20 ; $D500
4345   D4F4 68 21           LDI  UH,$21
4346   D4F6             
4347   D4F6             DEC2HEX_33: ; $D4F6
4348   D4F6 55              LIN  Y
4349   D4F7 B7 2A           CPI  A,$2A
4350   D4F9 99 11           BZR DEC2HEX_31 ; $D4EA
4351   D4FB 55              LIN  Y
4352   D4FC B7 29           CPI  A,$29
4353   D4FE 99 16           BZR DEC2HEX_31 ; $D4EA
4354   D500             
4355   D500             DEC2HEX_20: ; $D500
4356   D500 FD 8A           POP  A
4357   D502 24              LDA  UL
4358   D503 B9 20           ANI  A,$20
4359   D505 D5              SHR
4360   D506 D5              SHR
4361   D507 A2              ADC  UH
4362   D508 FD 6A           STX  U
4363   D50A             
4364   D50A             DEC2HEX_45: ; $D50A
4365   D50A CD 4C           VMJ  ($4C) ; ($4C)($26)
4366   D50C             
4367   D50C             DEC2HEX_14: ; $D50C
4368   D50C 68 07           LDI  UH,$07
4369   D50E 8E 95           BCH DEC2HEX_28 ; $D5A5
4370   D510             
4371   D510             DEC2HEX_15: ; $D510
4372   D510 FD 8A           POP  A
4373   D512 FD C8           PSH  A
4374   D514 B9 07           ANI  A,$07
4375   D516 8B 1B           BZS DEC2HEX_32 ; $D533
4376   D518 D5              SHR
4377   D519 91 0F           BCR DEC2HEX_14 ; $D50C
4378   D51B 4A C0           LDI  XL,$C0
4379   D51D 48 78           LDI  XH,$78
4380   D51F 68 10           LDI  UH,$10
4381   D521 6E A0           CPI  UL,$A0
4382   D523 93 2F           BCS DEC2HEX_33 ; $D4F6
4383   D525 0A              STA  XL
4384   D526 48 79           LDI  XH,$79
4385   D528 9E 34           BCH DEC2HEX_33 ; $D4F6
4386   D52A             
4387   D52A             
4388   D52A             
4389   D52A             ;------------------------------------------------------------------------------
4390   D52A             ; $D52A - Determines indexed default variable
4391   D52A             ;------------------------------------------------------------------------------
4392   D52A             DEC2HEX_78:
4393   D52A FD C8           PSH  A
4394   D52C FD A8           PSH  U
4395   D52E CD 28           VMJ  ($28) \ ABRF(DEC2HEX_34) ; $D5F5
4395   D530 C4          
4396   D531 8E 07           BCH DEC2HEX_35 ; $D53A
4397   D533             
4398   D533             DEC2HEX_32: ; $D533
4399   D533 FD A8           PSH  U
4400   D535 DE              VEJ  (DE) \ ABRF(DEC2HEX_34) ; $D5F5
4400   D536 BE          
4401   D537 C2              VEJ  (C2) \ ACHR($29) \ ABRF(DEC2HEX_36) ; $D5F3
4401   D538 29          
4401   D539 B9          
4402   D53A             
4403   D53A             DEC2HEX_35: ; $D53A
4404   D53A D0              VEJ  (D0) \ ABYT($0F) \ ABRF(DEC2HEX_34) ; $D5F5
4404   D53B 0F          
4404   D53C B8          
4405   D53D FD 2A           POP  U
4406   D53F 28              STA  UH
4407   D540 24              LDA  UL
4408   D541 D9              SHL
4409   D542 D5              SHR
4410   D543 2A              STA  UL
4411   D544 9E C1           BCH DEC2HEX_37 ; $D485
4412   D546             
4413   D546             DEC2HEX_27: ; $D546
4414   D546 6E 80           CPI  UL,$80
4415   D548 83 19           BCS DEC2HEX_38 ; $D563
4416   D54A 44              INC  X
4417   D54B 44              INC  X
4418   D54C 45              LIN  X
4419   D54D             
4420   D54D             DEC2HEX_42: ; $D54D
4421   D54D CD 24           VMJ  ($24)
4422   D54F FD 6A           STX  U
4423   D551 FD 8A           POP  A
4424   D553 BF 08           BII  A,$08
4425   D555 89 02           BZR DEC2HEX_39 ; $D559
4426   D557 CD 0A           VMJ  ($0A)
4427   D559             
4428   D559             DEC2HEX_39: ; $D559
4429   D559 CD 4C           VMJ  ($4C) ; ($4C)($26)
4430   D55B             
4431   D55B             DEC2HEX_26: ; $D55B
4432   D55B FD 88           PSH  X
4433   D55D BE D7 CA        SJP  (DEC2HEX_40) ; $D7CA
4434   D560 94              LDA  YH
4435   D561 8E 05           BCH DEC2HEX_43 ; $D568
4436   D563             
4437   D563             DEC2HEX_38: ; $D563
4438   D563 FD 88           PSH  X
4439   D565 CD 2C           VMJ  ($2C) \ ABRF(DEC2HEX_34) ; $D5F5
4439   D567 8D          
4440   D568             
4441   D568             DEC2HEX_43: ; $D568
4442   D568 FD 0A           POP  X
4443   D56A FD 98           PSH  Y
4444   D56C 45              LIN  X
4445   D56D 1A              STA  YL
4446   D56E 26              CPA  UL
4447   D56F 81 30           BCR DEC2HEX_41 ; $D5A1
4448   D571 45              LIN  X
4449   D572 A6              CPA  UH
4450   D573 81 2C           BCR DEC2HEX_41 ; $D5A1
4451   D575 45              LIN  X
4452   D576 FD C8           PSH  A
4453   D578 FD 88           PSH  X
4454   D57A FD C8           PSH  A
4455   D57C 24              LDA  UL
4456   D57D FD C8           PSH  A
4457   D57F A4              LDA  UH
4458   D580 2A              STA  UL
4459   D581 58 00           LDI  YH,$00
4460   D583 68 00           LDI  UH,$00
4461   D585 54              INC  Y
4462   D586 CD 50           VMJ  ($50) ; ($50)($28)
4463   D588 FD 8A           POP  A
4464   D58A FD DA           ADR  Y
4465   D58C FD 8A           POP  A
4466   D58E B9 7F           ANI  A,$7F
4467   D590 2A              STA  UL
4468   D591 CD 50           VMJ  ($50) ; ($50)($28)
4469   D593 FD 0A           POP  X
4470   D595 14              LDA  YL
4471   D596 02              ADC  XL
4472   D597 0A              STA  XL
4473   D598 94              LDA  YH
4474   D599 82              ADC  XH
4475   D59A 08              STA  XH
4476   D59B FD 8A           POP  A
4477   D59D FD 1A           POP  Y
4478   D59F 9E 54           BCH DEC2HEX_42 ; $D54D
4479   D5A1             
4480   D5A1             DEC2HEX_41: ; $D5A1
4481   D5A1 68 09           LDI  UH,$09
4482   D5A3             
4483   D5A3             DEC2HEX_48: ; $D5A3
4484   D5A3 FD 1A           POP  Y
4485   D5A5             
4486   D5A5             DEC2HEX_28: ; $D5A5
4487   D5A5 FD 8A           POP  A
4488   D5A7 CD 48           VMJ  ($48) ; ($48)($24)
4489   D5A9             
4490   D5A9             DEC2HEX_22: ; $D5A9
4491   D5A9 6E 80           CPI  UL,$80
4492   D5AB FD 8A           POP  A
4493   D5AD 81 08           BCR DEC2HEX_44 ; $D5B7
4494   D5AF BF 04           BII  A,$04
4495   D5B1 99 A9           BZR DEC2HEX_45 ; $D50A
4496   D5B3 68 06           LDI  UH,$06
4497   D5B5 CD 48           VMJ  ($48) ; ($48)($24)
4498   D5B7             
4499   D5B7             DEC2HEX_44: ; $D5B7
4500   D5B7 FD C8           PSH  A
4501   D5B9 B9 07           ANI  A,$07
4502   D5BB 8B 23           BZS DEC2HEX_46 ; $D5E0
4503   D5BD ED 78 79 80     BII  (CASS_FLAG),$80
4504   D5C1 8B 2C           BZS DEC2HEX_47 ; $D5EF
4505   D5C3 DA              VEJ  (DA)
4506   D5C4 FD 98           PSH  Y
4507   D5C6 BE D3 71        SJP  (SRCHPRGLINE_16) ; $D371
4508   D5C9 93 28           BCS DEC2HEX_48 ; $D5A3
4509   D5CB FD 18           LDX  Y
4510   D5CD FD 1A           POP  Y
4511   D5CF A5 78 84        LDA  (CURVARADD_L)
4512   D5D2 2A              STA  UL
4513   D5D3 46              DEC  X
4514   D5D4 46              DEC  X
4515   D5D5 46              DEC  X
4516   D5D6 9E E8           BCH DEC2HEX_49 ; $D4F0
4517   D5D8             
4518   D5D8             DEC2HEX_29: ; $D5D8
4519   D5D8 FD 8A           POP  A
4520   D5DA FD C8           PSH  A
4521   D5DC B9 07           ANI  A,$07
4522   D5DE 99 D4           BZR DEC2HEX_14 ; $D50C
4523   D5E0             
4524   D5E0             DEC2HEX_46: ; $D5E0
4525   D5E0 A4              LDA  UH
4526   D5E1 BB 80           ORI  A,$80
4527   D5E3 08              STA  XH
4528   D5E4 24              LDA  UL
4529   D5E5 0A              STA  XL
4530   D5E6             
4531   D5E6             DEC2HEX_21: ; $D5E6
4532   D5E6 B9 20           ANI  A,$20
4533   D5E8 D5              SHR
4534   D5E9 99 9E           BZR DEC2HEX_42 ; $D54D
4535   D5EB B5 88           LDI  A,$88
4536   D5ED 9E A2           BCH DEC2HEX_42 ; $D54D
4537   D5EF             
4538   D5EF             DEC2HEX_47: ; $D5EF
4539   D5EF 68 15           LDI  UH,$15
4540   D5F1 9E 4E           BCH DEC2HEX_28 ; $D5A5
4541   D5F3             
4542   D5F3             DEC2HEX_36: ; $D5F3
4543   D5F3 68 01           LDI  UH,$01
4544   D5F5             
4545   D5F5             DEC2HEX_34: ; $D5F5
4546   D5F5 FD 0A           POP  X
4547   D5F7 9E 54           BCH DEC2HEX_28 ; $D5A5
4548   D5F9             
4549   D5F9             
4550   D5F9             
4551   D5F9             ;------------------------------------------------------------------------------
4552   D5F9             ; (D0) $D5F9 - Convert AR-X to integer and load to U-Reg. D1 specifies the area. 
4553   D5F9             ; If exceeded, jump
4554   D5F9             ;------------------------------------------------------------------------------
4555   D5F9 FD 0A           POP  X 
4556   D5FB 45              LIN  X
4557   D5FC FD 88           PSH  X
4558   D5FE FD 98           PSH  Y
4559   D600 FD C8           PSH  A
4560   D602 5A 00           LDI  YL,$00
4561   D604 58 00           LDI  YH,$00
4562   D606 A5 7A 04        LDA  (ARX + $04)
4563   D609 B7 B2           CPI  A,$B2
4564   D60B 81 33           BCR DEC2HEX_50 ; $D640
4565   D60D 89 11           BZR DEC2HEX_51 ; $D620
4566   D60F DC              VEJ  (DC)
4567   D610 FD 5A           STX  Y
4568   D612 5C 80           CPI  YH,$80
4569   D614 81 31           BCR DEC2HEX_52 ; $D647
4570   D616 FD 8A           POP  A
4571   D618 B9 1F           ANI  A,$1F
4572   D61A B7 04           CPI  A,$04
4573   D61C CB 4E           VZS  ($4E) ; ($4E)($27)
4574   D61E 8E 2B           BCH DEC2HEX_53 ; $D64B
4575   D620             
4576   D620             DEC2HEX_51: ; $D620
4577   D620 2A              STA  UL
4578   D621 FD 8A           POP  A
4579   D623 DB              ROL
4580   D624 68 11           LDI  UH,$11
4581   D626 81 83           BCR DEC2HEX_54 ; $D6AB
4582   D628 6E C1           CPI  UL,$C1
4583   D62A 68 FF           LDI  UH,$FF
4584   D62C 89 3C           BZR DEC2HEX_55 ; $D66A
4585   D62E DB              ROL
4586   D62F 81 39           BCR DEC2HEX_55 ; $D66A
4587   D631 D1              ROR
4588   D632 D5              SHR
4589   D633 FD C8           PSH  A
4590   D635 DC              VEJ  (DC)
4591   D636 8B 0F           BZS DEC2HEX_52 ; $D647
4592   D638 05              LDA  (X)
4593   D639 1A              STA  YL
4594   D63A 04              LDA  XL
4595   D63B AE 78 94        STA  (STR_BUF_PTR_L)
4596   D63E 8E 07           BCH DEC2HEX_52 ; $D647
4597   D640             
4598   D640             DEC2HEX_50: ; $D640
4599   D640 A5 7A 00        LDA  (ARX)
4600   D643 2A              STA  UL
4601   D644 D9              SHL
4602   D645 81 2F           BCR DEC2HEX_56 ; $D676
4603   D647             
4604   D647             DEC2HEX_52: ; $D647
4605   D647 FD 8A           POP  A
4606   D649 B9 1F           ANI  A,$1F
4607   D64B             
4608   D64B             DEC2HEX_53: ; $D64B
4609   D64B D5              SHR
4610   D64C 81 08           BCR DEC2HEX_57 ; $D656
4611   D64E 5E 00           CPI  YL,$00
4612   D650 89 04           BZR DEC2HEX_57 ; $D656
4613   D652 5C 00           CPI  YH,$00
4614   D654 8B 53           BZS DEC2HEX_58 ; $D6A9
4615   D656             
4616   D656             DEC2HEX_57: ; $D656
4617   D656 D9              SHL
4618   D657 4A AD           LDI  XL,$AD
4619   D659 48 D6           LDI  XH,$D6
4620   D65B FD CA           ADR  X
4621   D65D 45              LIN  X
4622   D65E 12              ADC  YL
4623   D65F 05              LDA  (X)
4624   D660 92              ADC  YH
4625   D661 83 46           BCS DEC2HEX_58 ; $D6A9
4626   D663 14              LDA  YL
4627   D664 2A              STA  UL
4628   D665 94              LDA  YH
4629   D666 28              STA  UH
4630   D667             
4631   D667             DEC2HEX_61: ; $D667
4632   D667 BE D9 E7        SJP  (ARUINT2ARX)
4633   D66A             
4634   D66A             DEC2HEX_55: ; $D66A
4635   D66A CD 4E           VMJ  ($4E) ; ($4E)($27)
4636   D66C             
4637   D66C             DEC2HEX_60: ; $D66C
4638   D66C FD A8           PSH  U
4639   D66E 6A 0A           LDI  UL,$0A
4640   D670 CD 50           VMJ  ($50) ; ($50)($28)
4641   D672 FD 2A           POP  U
4642   D674 83 31           BCS DEC2HEX_59 ; $D6A7
4643   D676             
4644   D676             DEC2HEX_56: ; $D676
4645   D676 4A 04           LDI  XL,$04
4646   D678 48 7A           LDI  XH,$7A
4647   D67A D7              DRL  (X)
4648   D67B 46              DEC  X
4649   D67C D7              DRL  (X)
4650   D67D 46              DEC  X
4651   D67E D7              DRL  (X)
4652   D67F B9 F0           ANI  A,$F0
4653   D681 F1              AEX
4654   D682 12              ADC  YL
4655   D683 1A              STA  YL
4656   D684 B5 00           LDI  A,$00
4657   D686 28              STA  UH
4658   D687 92              ADC  YH
4659   D688 18              STA  YH
4660   D689 83 1C           BCS DEC2HEX_59 ; $D6A7
4661   D68B 88 21           LOP  UL,DEC2HEX_60 ; $D66C
4662   D68D 28              STA  UH
4663   D68E 14              LDA  YL
4664   D68F 2A              STA  UL
4665   D690 ED 7A 01 80     BII  (ARX + $01),$80
4666   D694 9B 4F           BZS DEC2HEX_52 ; $D647
4667   D696 BE DA A8        SJP  (TWOSCOMP)
4668   D699 6C 80           CPI  UH,$80
4669   D69B 81 0A           BCR DEC2HEX_59 ; $D6A7
4670   D69D FD 8A           POP  A
4671   D69F B9 1F           ANI  A,$1F
4672   D6A1 B7 04           CPI  A,$04
4673   D6A3 9B 3E           BZS DEC2HEX_61 ; $D667
4674   D6A5 8E 02           BCH DEC2HEX_58 ; $D6A9
4675   D6A7             
4676   D6A7             DEC2HEX_59: ; $D6A7
4677   D6A7 FD 8A           POP  A
4678   D6A9             
4679   D6A9             DEC2HEX_58: ; $D6A9
4680   D6A9 68 13           LDI  UH,$13
4681   D6AB             
4682   D6AB             DEC2HEX_54: ; $D6AB
4683   D6AB CD 4A           VMJ  ($4A) ; ($4A)($25)
4684   D6AD             
4685   D6AD             ; Parameters for subroutine (D0) ; D6AD 
4686   D6AD 00 00 00 01     .BYTE $00,$00,$00,$01,$00,$80,$00,$80
4686   D6B1 00 80 00 80 
4687   D6B5 00 FF 64 FF     .BYTE $00,$FF,$64,$FF,$AF,$FF,$E5,$FF
4687   D6B9 AF FF E5 FF 
4688   D6BD E6 FF 38        .BYTE $E6,$FF,$38
4689   D6C0             
4690   D6C0             
4691   D6C0             
4692   D6C0             ;------------------------------------------------------------------------------
4693   D6C0             ; (2E) $DC60 - Calculates formula expression and transfers result to AR-X.
4694   D6C0             ;------------------------------------------------------------------------------
4695   D6C0 FD 98           PSH  Y 
4696   D6C2 BE D3 D5        SJP  (DEC2HEX)
4697   D6C5 83 16           BCS DEC2HEX_62 ; $D6DD
4698   D6C7 8B 14           BZS DEC2HEX_62 ; $D6DD
4699   D6C9 BE D9 E7        SJP  (ARUINT2ARX)
4700   D6CC C2              VEJ  (C2) \ ACHR($2E) \ ABRF($D6D1)
4700   D6CD 2E          
4700   D6CE 02          
4701   D6CF 8E 0C           BCH DEC2HEX_62 ; $D6DD
4702   D6D1 C4              VEJ  (C4) \ ACHR($45) \ ABRF($D6D6)
4702   D6D2 45          
4702   D6D3 02          
4703   D6D4 8E 07           BCH DEC2HEX_62 ; $D6DD
4704   D6D6 FD 0A           POP  X
4705   D6D8 C6              VEJ  (C6)
4706   D6D9             
4707   D6D9             DEC2HEX_1:  ; $D6D9
4708   D6D9 B5 02           LDI  A,$02
4709   D6DB 8E 04           BCH DEC2HEX_63 ; $D6E1
4710   D6DD             
4711   D6DD             DEC2HEX_62:  ; $D6DD
4712   D6DD FD 1A           POP  Y
4713   D6DF             
4714   D6DF             ;------------------------------------------------------------------------------
4715   D6DF             ; $D6DF - (DE) Calculates formula pointed to by Y-Reg and transfers the result to AR-X. 
4716   D6DF             ; Jump if an error occurs.
4717   D6DF             ;------------------------------------------------------------------------------
4718   D6DF B5 01           LDI  A,$01 
4719   D6E1             
4720   D6E1             DEC2HEX_63:  ; $D6E1
4721   D6E1 E9 78 89 FE     ANI  ($7889),$FE
4722   D6E5             
4723   D6E5             DEC2HEX_127:  ; $D6E5
4724   D6E5 AE 78 81        STA  ($7881)
4725   D6E8 CC              VEJ  (CC) \ ABYTL($7890)
4725   D6E9 90          
4726   D6EA F9              REC
4727   D6EB B3 04           ADI  A,$04
4728   D6ED 08              STA  XH
4729   D6EE CA              VEJ  (CA) \ ABYTL($7892)
4729   D6EF 92          
4730   D6F0 64              INC  U
4731   D6F1 B5 10           LDI  A,$10
4732   D6F3 2E              STA  (U)
4733   D6F4 BA D8 26        JMP  DEC2HEX_64 ; $D826
4734   D6F7             
4735   D6F7             DEC2HEX_66:  ; $D6F7
4736   D6F7 BA DA 25        JMP  BCMD_RLM_STR_1 ; $DA25
4737   D6FA             
4738   D6FA             DEC2HEX_87:  ; $D6FA
4739   D6FA CD 00           VMJ  ($00) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_65) ; $D70E
4739   D6FC 30          
4739   D6FD 3A          
4739   D6FE 0F          
4740   D6FF ED 78 81 1D     BII  ($7881),$1D
4741   D703 9B 0E           BZS DEC2HEX_66 ; $D6F7
4742   D705             
4743   D705             DEC2HEX_105:  ; $D705
4744   D705 56              DEC  Y
4745   D706 6A 4F           LDI  UL,$4F
4746   D708 BE D1 4F        SJP  (BCD_Y2ARX) \ ABRF(DEC2HEX_67) ; $D7F3
4746   D70B E7          
4747   D70C 8E 28           BCH DEC2HEX_68 ; $D736
4748   D70E             
4749   D70E             DEC2HEX_65:  ; $D70E
4750   D70E CD 00           VMJ  ($00) \ ABYT($40) \ ABYT($5B) \ ABRF(DEC2HEX_69) ; $D738
4750   D710 40          
4750   D711 5B          
4750   D712 25          
4751   D713 ED 78 81 1D     BII  ($7881),$1D
4752   D717 9B 22           BZS DEC2HEX_66 ; $D6F7
4753   D719 BE D4 0D        SJP  (DEC2HEX_70) ; $D40D
4754   D71C D6              VEJ  (D6) \ ABYT($6E)
4754   D71D 6E          
4755   D71E 80              SBC  XH
4756   D71F 81 11           BCR DEC2HEX_71 ; $D732
4757   D721 BE DB E0        SJP  (ISARXBCD_5) ; $DBE0
4758   D724 C3 48           VCS  ($48) ; ($48)($24)
4759   D726 B5 01           LDI  A,$01
4760   D728 AE 78 81        STA  ($7881)
4761   D72B B5 01           LDI  A,$01
4762   D72D AE 78 8C        STA  (NUMARGS)
4763   D730 8E 35           BCH DEC2HEX_72 ; $D767
4764   D732             
4765   D732             DEC2HEX_71:  ; $D732
4766   D732 CD 0E           VMJ  ($0E) \ ABYT($50) \ ABRF(DEC2HEX_67) ; $D7F3
4766   D734 50          
4766   D735 BD          
4767   D736             
4768   D736             DEC2HEX_68:  ; $D736
4769   D736 8E E9           BCH DEC2HEX_73 ; $D821
4770   D738             
4771   D738             DEC2HEX_69:  ; $D738
4772   D738 24              LDA  UL
4773   D739 6A 10           LDI  UL,$10
4774   D73B BE DA 98        SJP  (MULT16B_1) ; $DA98
4775   D73E 2A              STA  UL
4776   D73F 45              LIN  X
4777   D740 28              STA  UH
4778   D741 45              LIN  X
4779   D742 A9 78 81        AND  ($7881)
4780   D745 9B 50           BZS DEC2HEX_66 ; $D6F7
4781   D747 45              LIN  X
4782   D748 FD C8           PSH  A
4783   D74A 45              LIN  X
4784   D74B 48 D7           LDI  XH,$D7
4785   D74D 4A 55           LDI  XL,$55
4786   D74F FD CA           ADR  X
4787   D751 FD 8A           POP  A
4788   D753 FD 5E           STX  P
4789   D755 ED 78 81 1D     BII  ($7881),$1D
4790   D759 8B DC           BZS DEC2HEX_74 ; $D837
4791   D75B 68 83           LDI  UH,$83
4792   D75D B5 04           LDI  A,$04
4793   D75F             
4794   D75F             DEC2HEX_107:  ; $D75F
4795   D75F AE 78 81        STA  ($7881)
4796   D762 BE DB E0        SJP  (ISARXBCD_5) ; $DBE0
4797   D765 C3 48           VCS  ($48) ; ($48)($24)
4798   D767             
4799   D767             DEC2HEX_72:  ; $D767
4800   D767 BA D8 9D        JMP  DEC2HEX_75 ; $D89D
4801   D76A 6A 01           LDI  UL,$01
4802   D76C 17              CPA  (Y)
4803   D76D 89 04           BZR DEC2HEX_101 ; $D773
4804   D76F 6A 05           LDI  UL,$05
4805   D771 8E 06           BCH DEC2HEX_100 ; $D779
4806   D773             
4807   D773             DEC2HEX_101:  ; $D773
4808   D773 DD              INC  A
4809   D774 17              CPA  (Y)
4810   D775 89 03           BZR DEC2HEX_99 ; $D77A
4811   D777 6A 00           LDI  UL,$00
4812   D779             
4813   D779             DEC2HEX_100:  ; $D779
4814   D779 54              INC  Y
4815   D77A             
4816   D77A             DEC2HEX_99:  ; $D77A
4817   D77A B5 08           LDI  A,$08
4818   D77C 8E B9           BCH DEC2HEX_74 ; $D837
4819   D77E 6A 02           LDI  UL,$02
4820   D780 17              CPA  (Y)
4821   D781 99 09           BZR DEC2HEX_99 ; $D77A
4822   D783 6A 06           LDI  UL,$06
4823   D785 9E 0E           BCH DEC2HEX_100 ; $D779
4824   D787 2A              STA  UL
4825   D788 9E 10           BCH DEC2HEX_99 ; $D77A
4826   D78A CD 0C           VMJ  ($0C)
4827   D78C 8E 93           BCH DEC2HEX_73 ; $D821
4828   D78E EC              VEJ  (EC)
4829   D78F             
4830   D78F             DEC2HEX_104:  ; $D78F
4831   D78F CD 02           VMJ  ($02) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_102) ; $D796
4831   D791 30          
4831   D792 3A          
4831   D793 02          
4832   D794 8E 07           BCH $D79D
4833   D796             
4834   D796             DEC2HEX_102:  ; $D796
4835   D796 CD 00           VMJ  ($00) \ ABYT($41) \ ABYT($47) \ ABRF(DEC2HEX_103) ; $D7B1
4835   D798 41          
4835   D799 47          
4835   D79A 16          
4836   D79B B3 09           ADI  A,$09
4837   D79D 4A 06           LDI  XL,$06
4838   D79F 48 7A           LDI  XH,$7A
4839   D7A1 F1              AEX
4840   D7A2 D7              DRL  (X)
4841   D7A3 46              DEC  X
4842   D7A4 D7              DRL  (X)
4843   D7A5 B9 F0           ANI  A,$F0
4844   D7A7 68 10           LDI  UH,$10
4845   D7A9 C9 48           VZR  ($48) ; ($48)($24)
4846   D7AB 9E 1E           BCH DEC2HEX_104 ; $D78F
4847   D7AD 9E AA           BCH DEC2HEX_105 ; $D705
4848   D7AF 8E EF           BCH DEC2HEX_106 ; $D8A0
4849   D7B1             
4850   D7B1             DEC2HEX_103:  ; $D7B1
4851   D7B1 C6              VEJ  (C6)
4852   D7B2 DC              VEJ  (DC)
4853   D7B3 BE DD 2F        SJP  (LOAD_NEXT_1) ; $DD2F
4854   D7B6 00              SBC  XL
4855   D7B7 8E 68           BCH DEC2HEX_73 ; $D821
4856   D7B9 6A 6B           LDI  UL,$6B
4857   D7BB 9E 5E           BCH DEC2HEX_107 ; $D75F
4858   D7BD             
4859   D7BD             DEC2HEX_89:  ; $D7BD
4860   D7BD CC              VEJ  (CC) \ ABYTL($7893)
4860   D7BE 93          
4861   D7BF             
4862   D7BF             DEC2HEX_80:  ; $D7BF
4863   D7BF A7 78 91        CPA  (GOSB_STK_PTR_L)
4864   D7C2 89 34           BZR DEC2HEX_108 ; $D7F8
4865   D7C4 ED 78 89 01     BII  ($7889),$01
4866   D7C8 8B 8E           BZS DEC2HEX_109 ; $D858
4867   D7CA             
4868   D7CA             
4869   D7CA             
4870   D7CA             ;------------------------------------------------------------------------------
4871   D7CA             ; ; $D7CA - UH = 1st index, UL = 2nd index of a variable. Jump if error.
4872   D7CA             ;------------------------------------------------------------------------------
4873   D7CA             DEC2HEX_40:  
4874   D7CA EF 78 8C FD     ADI  (NUMARGS),$FD
4875   D7CE 68 08           LDI  UH,$08
4876   D7D0 C3 48           VCS  ($48) ; ($48)($24)
4877   D7D2 BE F9 2B        SJP  (ADD_ARU_ARX_1) ; $F92B
4878   D7D5 C3 48           VCS  ($48) ; ($48)($24)
4879   D7D7 D0              VEJ  (D0) \ ABYT($08) \ ABRF(DEC2HEX_67) ; $D7F3
4879   D7D8 08          
4879   D7D9 19          
4880   D7DA EF 78 8C 01     ADI  (NUMARGS),$01
4881   D7DE C1 4C           VCR  ($4C) ; ($4C)($26)
4882   D7E0 FD A8           PSH  U
4883   D7E2 CD 30           VMJ  ($30)
4884   D7E4 BE F9 2B        SJP  (ADD_ARU_ARX_1) ; $F92B
4885   D7E7 C3 48           VCS  ($48) ; ($48)($24)
4886   D7E9 D0              VEJ  (D0) \ ABYT($08) \ ABRF(DEC2HEX_110) ; $D7F1
4886   D7EA 08          
4886   D7EB 05          
4887   D7EC FD 2A           POP  U
4888   D7EE 28              STA  UH
4889   D7EF CD 4C           VMJ  ($4C) ; ($4C)($26)
4890   D7F1             
4891   D7F1             DEC2HEX_110:  ; $D7F1
4892   D7F1 FD 0A           POP  X
4893   D7F3             
4894   D7F3             DEC2HEX_67:  ; $D7F3
4895   D7F3 CD 48           VMJ  ($48) ; ($48)($24)
4896   D7F5             
4897   D7F5             DEC2HEX_93:  ; $D7F5
4898   D7F5 BA D6 FA        JMP  DEC2HEX_87 ; $D6FA
4899   D7F8             
4900   D7F8             DEC2HEX_108:  ; $D7F8
4901   D7F8 BE DB D3        SJP  (ISARXBCD_7) ; $DBD3
4902   D7FB 6C 60           CPI  UH,$60
4903   D7FD 89 06           BZR DEC2HEX_88 ; $D805
4904   D7FF EF 78 8C 01     ADI  (NUMARGS),$01
4905   D803 9E 48           BCH DEC2HEX_89 ; $D7BD
4906   D805             
4907   D805             DEC2HEX_88:  ; $D805
4908   D805 6C 20           CPI  UH,$20
4909   D807 8B 94           BZS DEC2HEX_75 ; $D89D
4910   D809 48 10           LDI  XH,$10
4911   D80B 6C 5B           CPI  UH,$5B
4912   D80D 83 6B           BCS DEC2HEX_76 ; $D87A
4913   D80F 6C 40           CPI  UH,$40
4914   D811 81 67           BCR DEC2HEX_76 ; $D87A
4915   D813 89 08           BZR DEC2HEX_77 ; $D81D
4916   D815 B5 00           LDI  A,$00
4917   D817 BE D5 2A        SJP  (DEC2HEX_78) ; $D52A
4918   D81A DC              VEJ  (DC)
4919   D81B             
4920   D81B             DEC2HEX_115:  ; $D81B
4921   D81B 8E 04           BCH DEC2HEX_73 ; $D821
4922   D81D             
4923   D81D             DEC2HEX_77:  ; $D81D
4924   D81D CD 0E           VMJ  ($0E) \ ABYT($52) \ ABRF(DEC2HEX_79) ; $D8F7
4924   D81F 52          
4924   D820 D6          
4925   D821             
4926   D821             DEC2HEX_73:  ; $D821
4927   D821 B5 02           LDI  A,$02
4928   D823 AE 78 81        STA  ($7881)
4929   D826             
4930   D826             DEC2HEX_64:  ; $D826
4931   D826 CC              VEJ  (CC) \ ABYTL($7881)
4931   D827 81          
4932   D828 D5              SHR
4933   D829 83 08           BCS $D833 ; ***
4934   D82B BE DB 95        SJP  (ISARXBCD_6) ; $DB95
4935   D82E 04              LDA  XL
4936   D82F BE DF A0        SJP  (BCMD_TIME_8) ; $DFA0
4937   D832 C4              VEJ  (C4) \ ACHR($BA) \ ABRF($D90C) ; ***
4937   D833 BA          
4937   D834 D7          
4938   D835 2B              ORA  (U)
4939   D836 56              DEC  Y
4940   D837             
4941   D837             DEC2HEX_74:  ; $D837
4942   D837 AE 78 81        STA  ($7881)
4943   D83A             
4944   D83A             DEC2HEX_116:  ; $D83A
4945   D83A CC              VEJ  (CC) \ ABYTL($7893)
4945   D83B 93          
4946   D83C 6C 10           CPI  UH,$10
4947   D83E 9B 81           BZS DEC2HEX_80 ; $D7BF
4948   D840 A7 78 91        CPA  (GOSB_STK_PTR_L)
4949   D843 89 1F           BZR DEC2HEX_81 ; $D864
4950   D845 A5 78 89        LDA  ($7889)
4951   D848 6C 10           CPI  UH,$10
4952   D84A 83 05           BCS DEC2HEX_82 ; $D851
4953   D84C D5              SHR
4954   D84D 81 0A           BCR DEC2HEX_83 ; $D859
4955   D84F 8E 26           BCH DEC2HEX_84 ; $D877
4956   D851             
4957   D851             DEC2HEX_82:  ; $D851
4958   D851 6C 60           CPI  UH,$60
4959   D853 89 3E           BZR DEC2HEX_85 ; $D893
4960   D855 D5              SHR
4961   D856 83 3B           BCS DEC2HEX_85 ; $D893
4962   D858             
4963   D858             DEC2HEX_109:  ; $D858
4964   D858 56              DEC  Y
4965   D859             
4966   D859             DEC2HEX_83:  ; $D859
4967   D859 CD 28           VMJ  ($28) \ ABRF(DEC2HEX_79) ; $D8F7
4967   D85B 9B          
4968   D85C BE F9 2B        SJP  (ADD_ARU_ARX_1) ; $F92B
4969   D85F C3 48           VCS  ($48) ; ($48)($24)
4970   D861 CD 4C           VMJ  ($4C) ; ($4C)($26)
4971   D863 38              NOP
4972   D864             
4973   D864             DEC2HEX_81:  ; $D864
4974   D864 0A              STA  XL
4975   D865 48 7A           LDI  XH,$7A
4976   D867 44              INC  X
4977   D868 05              LDA  (X)
4978   D869 A6              CPA  UH
4979   D86A 8B 1F           BZS DEC2HEX_86 ; $D88B
4980   D86C 81 25           BCR DEC2HEX_85 ; $D893
4981   D86E             
4982   D86E             DEC2HEX_92:  ; $D86E
4983   D86E FD 28           LDX  U
4984   D870 BE DB D3        SJP  (ISARXBCD_7) ; $DBD3
4985   D873 6C 70           CPI  UH,$70
4986   D875 83 03           BCS DEC2HEX_76 ; $D87A
4987   D877             
4988   D877             DEC2HEX_84:  ; $D877
4989   D877 BA DA 25        JMP  BCMD_RLM_STR_1 ; $DA25
4990   D87A             
4991   D87A             DEC2HEX_76:  ; $D87A
4992   D87A FD 88           PSH  X
4993   D87C             
4994   D87C             DEC2HEX_111:  ; $D87C
4995   D87C FD 98           PSH  Y
4996   D87E 24              LDA  UL
4997   D87F 1A              STA  YL
4998   D880 A4              LDA  UH
4999   D881 18              STA  YH
5000   D882 B7 E0           CPI  A,$E0
5001   D884 81 51           BCR DEC2HEX_90 ; $D8D7
5002   D886 CD 1C           VMJ  ($1C) \ ABYT($01)
5002   D888 01          
5003   D889 8E 67           BCH DEC2HEX_91 ; $D8F2
5004   D88B             
5005   D88B             DEC2HEX_86:  ; $D88B
5006   D88B 6C 60           CPI  UH,$60
5007   D88D 8B 04           BZS DEC2HEX_85 ; $D893
5008   D88F 6C 84           CPI  UH,$84
5009   D891 99 25           BZR DEC2HEX_92 ; $D86E
5010   D893             
5011   D893             DEC2HEX_85:  ; $D893
5012   D893 BE DB E0        SJP  (ISARXBCD_5) ; $DBE0
5013   D896 C3 48           VCS  ($48) ; ($48)($24)
5014   D898 BE DB F5        SJP  (ISARXBCD_1); $DBF5
5015   D89B C3 48           VCS  ($48) ; ($48)($24)
5016   D89D             
5017   D89D             DEC2HEX_75:  ; $D89D
5018   D89D C0              VEJ  (C0)
5019   D89E 91 AB           BCR DEC2HEX_93 ; $D7F5
5020   D8A0             
5021   D8A0             DEC2HEX_106:  ; $D8A0
5022   D8A0 A5 78 81        LDA  ($7881)
5023   D8A3 6E 80           CPI  UL,$80
5024   D8A5 81 06           BCR DEC2HEX_94 ; $D8AD
5025   D8A7 56              DEC  Y
5026   D8A8 56              DEC  Y
5027   D8A9 68 00           LDI  UH,$00
5028   D8AB 8E 12           BCH DEC2HEX_95 ; $D8BF
5029   D8AD             
5030   D8AD             DEC2HEX_94:  ; $D8AD
5031   D8AD 6E 60           CPI  UL,$60
5032   D8AF 83 15           BCS DEC2HEX_96 ; $D8C6
5033   D8B1 6E 50           CPI  UL,$50
5034   D8B3 8B 04           BZS DEC2HEX_97 ; $D8B9
5035   D8B5 6E 51           CPI  UL,$51
5036   D8B7 89 16           BZR DEC2HEX_98 ; $D8CF
5037   D8B9             
5038   D8B9             DEC2HEX_97:  ; $D8B9
5039   D8B9 6C F1           CPI  UH,$F1
5040   D8BB 89 12           BZR DEC2HEX_98 ; $D8CF
5041   D8BD 68 70           LDI  UH,$70
5042   D8BF             
5043   D8BF             DEC2HEX_95:  ; $D8BF
5044   D8BF BF 22           BII  A,$22
5045   D8C1 9B 4C           BZS DEC2HEX_84 ; $D877
5046   D8C3 BA D7 7A        JMP  DEC2HEX_99 ; $D77A
5047   D8C6             
5048   D8C6             DEC2HEX_96:  ; $D8C6
5049   D8C6 BF 1D           BII  A,$1D
5050   D8C8 9B 53           BZS DEC2HEX_84 ; $D877
5051   D8CA B5 10           LDI  A,$10
5052   D8CC BA D7 5F        JMP  DEC2HEX_107 ; $D75F
5053   D8CF             
5054   D8CF             DEC2HEX_98:  ; $D8CF
5055   D8CF BF 1D           BII  A,$1D
5056   D8D1 9B 5C           BZS DEC2HEX_84 ; $D877
5057   D8D3 FD A8           PSH  U
5058   D8D5 9E 5B           BCH DEC2HEX_111 ; $D87C
5059   D8D7             
5060   D8D7             DEC2HEX_90:  ; $D8D7
5061   D8D7 CD 28           VMJ  ($28) \ ABRF(DEC2HEX_91) ; D8F2
5061   D8D9 18          
5062   D8DA 5C 83           CPI  YH,$83
5063   D8DC 89 2B           BZR DEC2HEX_112 ; $D909
5064   D8DE D2              VEJ  (D2) \ ABRF($D8F2) \ ABYT($80)
5064   D8DF 12          
5064   D8E0 80          
5065   D8E1 5E 2D           CPI  YL,$2D
5066   D8E3 81 0B           BCR DEC2HEX_113 ; $D8F0
5067   D8E5 4A 02           LDI  XL,$02
5068   D8E7 48 7A           LDI  XH,$7A
5069   D8E9 47              LDE  X
5070   D8EA 8B 04           BZS DEC2HEX_113 ; $D8F0
5071   D8EC B5 80           LDI  A,$80
5072   D8EE 0D              EOR  (X)
5073   D8EF             
5074   D8EF             DEC2HEX_124:  ; $D8EF
5075   D8EF 0E              STA  (X)
5076   D8F0             
5077   D8F0             DEC2HEX_113:  ; $D8F0
5078   D8F0 68 00           LDI  UH,$00
5079   D8F2             
5080   D8F2             DEC2HEX_91:  ; $D8F2
5081   D8F2 FD 1A           POP  Y
5082   D8F4 FD 0A           POP  X
5083   D8F6 A4              LDA  UH
5084   D8F7             
5085   D8F7             DEC2HEX_79:  ; $D8F7
5086   D8F7 C9 48           VZR  ($48) ; ($48)($24)
5087   D8F9 4C E0           CPI  XH,$E0
5088   D8FB 81 04           BCR DEC2HEX_114 ; $D901
5089   D8FD 4E 60           CPI  XL,$60
5090   D8FF 91 E6           BCR DEC2HEX_115 ; $D81B
5091   D901             
5092   D901             DEC2HEX_114:  ; $D901
5093   D901 DD              INC  A
5094   D902 AE 78 8C        STA  (NUMARGS)
5095   D905 FD 6A           STX  U
5096   D907 9E CF           BCH DEC2HEX_116 ; $D83A
5097   D909             
5098   D909             DEC2HEX_112:  ; $D909
5099   D909 8F 68           BVS DEC2HEX_117 ; $D973
5100   D90B FD 98           PSH  Y
5101   D90D BE DB 95        SJP  (ISARXBCD_6) ; $DB95
5102   D910 3E              STA  (V)
5103   D911 E6              VEJ  (E6)
5104   D912 CD 30           VMJ  ($30)
5105   D914 BE DB 95        SJP  (ISARXBCD_6) ; $DB95
5106   D917 55              LIN  Y
5107   D918 FD 1A           POP  Y
5108   D91A 94              LDA  YH
5109   D91B DF              DEC  A
5110   D91C 85 25           BHR DEC2HEX_118 ; $D943
5111   D91E DF              DEC  A
5112   D91F 87 4E           BHS DEC2HEX_119 ; $D96F
5113   D921 5E 2B           CPI  YL,$2B
5114   D923 89 4A           BZR DEC2HEX_119 ; $D96F
5115   D925             
5116   D925             
5117   D925             
5118   D925             ;------------------------------------------------------------------------------
5119   D925             ; $DFA0 - Concatenate two strings
5120   D925             ;------------------------------------------------------------------------------
5121   D925 BE DF A0        SJP  (BCMD_TIME_8)
5122   D928 48 DC           LDI  XH,$DC
5123   D92A FD 5A           STX  Y
5124   D92C FD A8           PSH  U
5125   D92E 6A 15           LDI  UL,$15
5126   D930 BE DE BE        SJP  (BCMD_TIME_7) ; $DEBE
5127   D933 BE DF A1        SJP  (XREG2STRBUF) \ ABRF(BCMD_RLM_STR_2) ; $DA29
5127   D936 F2          
5128   D937 A5 7A 07        LDA  (ARX + $07)
5129   D93A FD 2A           POP  U
5130   D93C 22              ADC  UL
5131   D93D FD 18           LDX  Y
5132   D93F CD 24           VMJ  ($24)
5133   D941             
5134   D941             DEC2HEX_126:  ; $D941
5135   D941 9E 53           BCH DEC2HEX_113 ; $D8F0
5136   D943             
5137   D943             DEC2HEX_118:  ; $D943
5138   D943 14              LDA  YL
5139   D944 BE D0 F9        SJP  (DEL_DIM_VARS_15) ; $D0F9
5140   D947 9E 59           BCH DEC2HEX_113 ; $D8F0
5141   D949             
5142   D949             DEC2HEX_120:  ; $D949
5143   D949 14              LDA  YL
5144   D94A BE D0 D2        SJP  (DEL_DIM_VARS_16) ; $D0D2
5145   D94D 9E 5F           BCH DEC2HEX_113 ; $D8F0
5146   D94F D2              VEJ  (D2) \ ABRF($D952) \ ABYT($80)
5146   D950 01          
5146   D951 80          
5147   D952 E6              VEJ  (E6)
5148   D953 CD 30           VMJ  ($30)
5149   D955 D2              VEJ  (D2) \ ABRF($D96D) \ ABYT($80) ; ABRF address +1 off
5149   D956 16          
5149   D957 80          
5150   D958 FD 1A           POP  Y
5151   D95A 94              LDA  YH
5152   D95B DF              DEC  A
5153   D95C 95 15           BHR DEC2HEX_120 ; $D949
5154   D95E DF              DEC  A
5155   D95F 87 03           BHS DEC2HEX_121 ; $D964
5156   D961 BA EF 94        JMP  OUTBUFCLR_1 ; $EF94
5157   D964             
5158   D964             DEC2HEX_121:  ; $D964
5159   D964 DF              DEC  A
5160   D965 87 03           BHS DEC2HEX_122 ; $D96A
5161   D967 BA EF A5        JMP  OUTBUFCLR_2 ; $EFA5
5162   D96A             
5163   D96A             DEC2HEX_122:  ; $D96A
5164   D96A BA EF B1        JMP  OUTBUFCLR_3 ; $EFB1
5165   D96D FD 1A           POP  Y
5166   D96F             
5167   D96F             DEC2HEX_119:  ; $D96F
5168   D96F 68 11           LDI  UH,$11
5169   D971             
5170   D971             DEC2HEX_125:  ; $D971
5171   D971 9E 81           BCH DEC2HEX_91 ; $D8F2
5172   D973             
5173   D973             DEC2HEX_117:  ; $D973
5174   D973 D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_RLM_STR_3) ; $DA2B
5174   D974 04          
5174   D975 B5          
5175   D976 FD A8           PSH  U
5176   D978 CD 30           VMJ  ($30)
5177   D97A D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_RLM_STR_2) ; $DA29)
5177   D97B 04          
5177   D97C AC          
5178   D97D FD 2A           POP  U
5179   D97F 4A 06           LDI  XL,$06
5180   D981 48 7A           LDI  XH,$7A
5181   D983 24              LDA  UL
5182   D984 52              DEC  YL
5183   D985 87 06           BHS DEC2HEX_123 ; $D98D
5184   D987 09              AND  (X)
5185   D988 43              SDE  X
5186   D989 A4              LDA  UH
5187   D98A 09              AND  (X)
5188   D98B 9E 9E           BCH DEC2HEX_124 ; $D8EF
5189   D98D             
5190   D98D             DEC2HEX_123:  ; $D98D
5191   D98D 0B              ORA  (X)
5192   D98E 43              SDE  X
5193   D98F A4              LDA  UH
5194   D990 0B              ORA  (X)
5195   D991 9E A4           BCH DEC2HEX_124 ; $D8EF
5196   D993             
5197   D993             
5198   D993             
5199   D993             ;------------------------------------------------------------------------------
5200   D993             ; $D993 - Basic commands PEEK#/PEEK
5201   D993             ;------------------------------------------------------------------------------
5202   D993             BCMD_PEEK:
5203   D993 D0              VEJ  (D0) \ ABYT($00) \ ABRF(ARUINT2ARX_1) ; $D9F2
5203   D994 00          
5203   D995 5C          
5204   D996 50              INC  YL
5205   D997 25              LDA  (U)
5206   D998 87 02           BHS BCMD_PEEK_1 ; $D99C
5207   D99A FD 25           LDA  #(U)
5208   D99C             
5209   D99C             BCMD_PEEK_1: ; $D99C
5210   D99C 8E 46           BCH BCMD_LEN_1 ; $D9E4
5211   D99E             
5212   D99E             
5213   D99E             
5214   D99E             ;------------------------------------------------------------------------------
5215   D99E             ; $D99E - Basic command NOT
5216   D99E             ;------------------------------------------------------------------------------
5217   D99E             BCMD_NOT:
5218   D99E D0              VEJ  (D0) \ ABYT($04) \ ABRF(ARUINT2ARX_1) ; $D9F2
5218   D99F 04          
5218   D9A0 51          
5219   D9A1 BE DA A8        SJP  (TWOSCOMP)
5220   D9A4 66              DEC  U
5221   D9A5 BE D9 E7        SJP  (ARUINT2ARX)
5222   D9A8 8E 97           BCH BCMD_RLM_STR_4 ; $DA41
5223   D9AA             
5224   D9AA             
5225   D9AA             
5226   D9AA             ;------------------------------------------------------------------------------
5227   D9AA             ; $D9AA - Basic INKEY$ command
5228   D9AA             ;------------------------------------------------------------------------------
5229   D9AA             BCMD_INKY:
5230   D9AA BE E4 2C        SJP  (KEY2ASCII)
5231   D9AD 48 D0           LDI  XH,$D0
5232   D9AF 8E 05           BCH BCMD_CHR_1 ; $D9B6
5233   D9B1             
5234   D9B1             
5235   D9B1             
5236   D9B1             ;------------------------------------------------------------------------------
5237   D9B1             ; $D981 - Basic CHR$ Command
5238   D9B1             ;------------------------------------------------------------------------------
5239   D9B1             BCMD_CHR:
5240   D9B1 D0              VEJ  (D0) \ ABYT($08) \ ABRF(ARUINT2ARX_1) ; $D9F2
5240   D9B2 08          
5240   D9B3 3E          
5241   D9B4 48 C1           LDI  XH,$C1
5242   D9B6             
5243   D9B6             BCMD_CHR_1: ; $D9B6
5244   D9B6 0A              STA  XL
5245   D9B7 2A              STA  UL
5246   D9B8 24              LDA  UL
5247   D9B9 8B 02           BZS BCMD_CHR_2 ; $D9BD
5248   D9BB B5 01           LDI  A,$01
5249   D9BD             
5250   D9BD             BCMD_CHR_2: ; $D9B6
5251   D9BD BE DF B4        SJP  (XREG2STRBUF_1) ; $DFB4
5252   D9C0 83 30           BCS ARUINT2ARX_1 ; $D9F2
5253   D9C2 04              LDA  XL
5254   D9C3 8B 01           BZS BCMD_CHR_3 ; $D9C6
5255   D9C5 51              SIN  Y
5256   D9C6             
5257   D9C6             BCMD_CHR_3: ; $D9C6
5258   D9C6 84              LDA  XH
5259   D9C7 18              STA  YH
5260   D9C8 BE DF C5        SJP  (ARX2STRBUF_1) ; $DFC5
5261   D9CB 94              LDA  YH
5262   D9CC 2E              STA  (U)
5263   D9CD 8E 72           BCH BCMD_RLM_STR_4 ; $DA41
5264   D9CF             
5265   D9CF             
5266   D9CF             
5267   D9CF             ;------------------------------------------------------------------------------
5268   D9CF             ; $D9CF - Basic STRS command
5269   D9CF             ;------------------------------------------------------------------------------
5270   D9CF             BCMD_STR:
5271   D9CF D2              VEJ  (D2) \ ABRF(ARUINT2ARX_1) \ ABYT($80)
5271   D9D0 21          
5271   D9D1 80          
5272   D9D2 BE EF 1B        SJP  (ARX2STRNG)
5273   D9D5 8E 66           BCH BCMD_RLM_STR_5 ; $DA3D
5274   D9D7             
5275   D9D7             
5276   D9D7             
5277   D9D7             ;------------------------------------------------------------------------------
5278   D9D7             ; $D9D7 - Basic VAL command
5279   D9D7             ;------------------------------------------------------------------------------
5280   D9D7             BCMD_LEN:
5281   D9D7 BE D1 4C        SJP  (DEL_DIM_VARS_17) ; $D14C
5282   D9DA 17              CPA  (Y)
5283   D9DB 8E 64           BCH BCMD_RLM_STR_4 ; $DA41
5284   D9DD             
5285   D9DD             
5286   D9DD             
5287   D9DD             ;------------------------------------------------------------------------------
5288   D9DD             ; $D9DD - Basic LEN / ASC Command 
5289   D9DD             ;------------------------------------------------------------------------------
5290   D9DD DC              VEJ  (DC)
5291   D9DE 8B 05           BZS BCMD_LEN_2 ; $D9E5
5292   D9E0 52              DEC  YL
5293   D9E1 87 02           BHS BCMD_LEN_2 ; $D9E5
5294   D9E3 05              LDA  (X)
5295   D9E4             
5296   D9E4             BCMD_LEN_1: ; $D9E4
5297   D9E4 2A              STA  UL
5298   D9E5             
5299   D9E5             BCMD_LEN_2: ; $D9E5
5300   D9E5 68 00           LDI  UH,$00
5301   D9E7             
5302   D9E7             
5303   D9E7             
5304   D9E7             ;------------------------------------------------------------------------------
5305   D9E7             ; $D9E7 - Transfers U-Reg as an integer to AR-X in the format '82 UH UL '.
5306   D9E7             ;------------------------------------------------------------------------------
5307   D9E7             ARUINT2ARX:
5308   D9E7 4A 04           LDI  XL,$04
5309   D9E9 48 7A           LDI  XH,$7A
5310   D9EB B5 B2           LDI  A,$B2
5311   D9ED 41              SIN  X
5312   D9EE A4              LDA  UH
5313   D9EF 41              SIN  X
5314   D9F0 24              LDA  UL
5315   D9F1 0E              STA  (X)
5316   D9F2             
5317   D9F2             ARUINT2ARX_1: ; $D9F2
5318   D9F2 9A              RTN
5319   D9F3             
5320   D9F3             
5321   D9F3             
5322   D9F3             ;------------------------------------------------------------------------------
5323   D9F3             ; $D9F3 - Basic RIGHT$ / LEFT$ / MID$ Commands
5324   D9F3             ;------------------------------------------------------------------------------
5325   D9F3             BCMD_RLM_STR:
5326   D9F3 14              LDA  YL
5327   D9F4 B9 03           ANI  A,$03
5328   D9F6 BE DB B3        SJP  (ISARXBCD_8) ; $DBB3
5329   D9F9 9D D0           BVR $D92B ; ***
5330   D9FB 0C              DCS  (X)
5331   D9FC 9A              RTN
5332   D9FD 18              STA  YH
5333   D9FE 68 00           LDI  UH,$00
5334   DA00 5E 7B           CPI  YL,$7B
5335   DA02 89 07           BZR BCMD_RLM_STR_6 ; $DA0B
5336   DA04 CD 30           VMJ  ($30)
5337   DA06 D0              VEJ  (D0) \ ABYT($0D) \ ABRF(MULT16B_2) ; $DA97
5337   DA07 0D          
5337   DA08 8E          
5338   DA09 DF              DEC  A
5339   DA0A 28              STA  UH
5340   DA0B             
5341   DA0B             BCMD_RLM_STR_6: ; DA0B
5342   DA0B CD 30           VMJ  ($30)
5343   DA0D BE DB 95        SJP  (ISARXBCD_6) ; $DB95
5344   DA10 86              CPA  XH
5345   DA11 4A 07           LDI  XL,$07
5346   DA13 48 7A           LDI  XH,$7A
5347   DA15 05              LDA  (X)
5348   DA16 FB              SEC
5349   DA17 A0              SBC  UH
5350   DA18 81 20           BCR BCMD_RLM_STR_7 ; $DA3A
5351   DA1A 90              SBC  YH
5352   DA1B 81 12           BCR BCMD_RLM_STR_8 ; $DA2F
5353   DA1D 5E 7A           CPI  YL,$7A
5354   DA1F 83 01           BCS BCMD_RLM_STR_9 ; $DA22
5355   DA21 28              STA  UH
5356   DA22             
5357   DA22             BCMD_RLM_STR_9: ; $DA22
5358   DA22 94              LDA  YH
5359   DA23 8E 0B           BCH BCMD_RLM_STR_10 ; $DA30
5360   DA25             
5361   DA25             BCMD_RLM_STR_1: ; $DA25
5362   DA25 68 01           LDI  UH,$01
5363   DA27 CD 48           VMJ  ($48) ; ($48)($24)
5364   DA29             
5365   DA29             BCMD_RLM_STR_2: ; $DA29
5366   DA29 FD 0A           POP  X
5367   DA2B             
5368   DA2B             BCMD_RLM_STR_3: ; $DA2B
5369   DA2B 9E BC           BCH DEC2HEX_125 ; $D971
5370   DA2D 9E EE           BCH DEC2HEX_126 ; $D941
5371   DA2F             
5372   DA2F             BCMD_RLM_STR_8: ; $DA2F
5373   DA2F 92              ADC  YH
5374   DA30             
5375   DA30             BCMD_RLM_STR_10: ;$ DA30
5376   DA30 43              SDE  X
5377   DA31 05              LDA  (X)
5378   DA32 F9              REC
5379   DA33 A2              ADC  UH
5380   DA34 43              SDE  X
5381   DA35 05              LDA  (X)
5382   DA36 B3 00           ADI  A,$00
5383   DA38 8E 02           BCH BCMD_RLM_STR_11 ; $DA3C
5384   DA3A             
5385   DA3A             BCMD_RLM_STR_7: ; $DA3A
5386   DA3A B5 00           LDI  A,$00
5387   DA3C             
5388   DA3C             BCMD_RLM_STR_11: ; $DA3C
5389   DA3C 0E              STA  (X)
5390   DA3D             
5391   DA3D             BCMD_RLM_STR_5: ; $DA3D
5392   DA3D BE DF A0        SJP  (BCMD_TIME_8) ; $DFA0
5393   DA40 66              DEC  U
5394   DA41             
5395   DA41             BCMD_RLM_STR_4: ; $DA41
5396   DA41 68 00           LDI  UH,$00
5397   DA43 9A              RTN
5398   DA44             
5399   DA44             
5400   DA44             
5401   DA44             ;------------------------------------------------------------------------------
5402   DA44             ; $DA44 - Basic STATUS Command
5403   DA44             ;------------------------------------------------------------------------------
5404   DA44             BCMD_STATUS:
5405   DA44 D0              VEJ  (D0) \ ABYT($08) \ ABRF(MULT16B_3) ; $DAA7
5405   DA45 08          
5405   DA46 60          
5406   DA47 62              DEC  UL
5407   DA48 81 13           BCR BCMD_MEM
5408   DA4A 8B 16           BZS BCMD_MEM_1 ; $DA62
5409   DA4C CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; 7867
5409   DA4D 67          
5410   DA4E 44              INC  X
5411   DA4F 62              DEC  UL
5412   DA50 8B 07           BZS BCMD_STATUS_1 ; $DA59
5413   DA52 CC              VEJ  (CC) \ ABYTL($7899)
5413   DA53 99          
5414   DA54 62              DEC  UL
5415   DA55 8B 02           BZS BCMD_STATUS_1 ; $DA59
5416   DA57 CC              VEJ  (CC) \ ABYTL(PREV_LINE_H) ; $78A2
5416   DA58 A2          
5417   DA59             
5418   DA59             BCMD_STATUS_1: ; $DA59
5419   DA59 FD 6A           STX  U
5420   DA5B 8E 0F           BCH BCMD_MEM_2 ; $DA6C
5421   DA5D             
5422   DA5D             
5423   DA5D             
5424   DA5D             ;------------------------------------------------------------------------------
5425   DA5D             ; $DA5D - Basic MEM Command
5426   DA5D             ;------------------------------------------------------------------------------
5427   DA5D             BCMD_MEM:
5428   DA5D BE DF EE        SJP  (MEM_IN_UREG)
5429   DA60 8E 03           BCH BCMD_MEM_3 ; $DA65
5430   DA62             
5431   DA62             BCMD_MEM_1: ; $DA62
5432   DA62 CD 14           VMJ  ($14)
5433   DA64 64              INC  U
5434   DA65             
5435   DA65             BCMD_MEM_3: ; $DA65
5436   DA65 64              INC  U
5437   DA66 83 04           BCS BCMD_MEM_2 ; $DA6C
5438   DA68 6A 00           LDI  UL,$00
5439   DA6A 68 00           LDI  UH,$00
5440   DA6C             
5441   DA6C             BCMD_MEM_2: ; $DA6C
5442   DA6C CD 10           VMJ  ($10) \ ABYT($00)
5442   DA6E 00          
5443   DA6F 9E 30           BCH BCMD_RLM_STR_4 ; $DA41
5444   DA71             
5445   DA71             
5446   DA71             
5447   DA71             ;------------------------------------------------------------------------------
5448   DA71             ; (50) 16 * 16 Bit Multiplication (U-Reg * Y-Reg)
5449   DA71             ;            Address: DA71 (50)
5450   DA71             ;   Entry parameters: At entry, U-Reg and Y-Reg each contain a hex value that is to be multiplied with one another.
5451   DA71             ; 
5452   DA71             ; Modified registers: The result is in X-Reg and Y-Reg
5453   DA71             ;   Error conditions: Carry=1 when overflow occurs
5454   DA71             ;------------------------------------------------------------------------------
5455   DA71             MULT16B: ; $DA71
5456   DA71 4A 00           LDI  XL,$00
5457   DA73 48 00           LDI  XH,$00
5458   DA75             
5459   DA75             MULT16B_8: ; $DA75
5460   DA75 A4              LDA  UH
5461   DA76 D5              SHR
5462   DA77 28              STA  UH
5463   DA78 24              LDA  UL
5464   DA79 D1              ROR
5465   DA7A 2A              STA  UL
5466   DA7B 81 09           BCR MULT16B_4 ; $DA86
5467   DA7D F9              REC
5468   DA7E 14              LDA  YL
5469   DA7F 02              ADC  XL
5470   DA80 0A              STA  XL
5471   DA81 94              LDA  YH
5472   DA82 82              ADC  XH
5473   DA83 08              STA  XH
5474   DA84 83 0E           BCS MULT16B_5 ; $DA94
5475   DA86             
5476   DA86             MULT16B_4: ; $DA86
5477   DA86 24              LDA  UL
5478   DA87 89 03           BZR MULT16B_6 ; $DA8C
5479   DA89 A4              LDA  UH
5480   DA8A 8B 09           BZS MULT16B_7 ; $DA95
5481   DA8C             
5482   DA8C             MULT16B_6: ; $DA8C
5483   DA8C 14              LDA  YL
5484   DA8D D9              SHL
5485   DA8E 1A              STA  YL
5486   DA8F 94              LDA  YH
5487   DA90 DB              ROL
5488   DA91 18              STA  YH
5489   DA92 91 1F           BCR MULT16B_8 ; $DA75
5490   DA94             
5491   DA94             MULT16B_5: ; $DA94
5492   DA94 9A              RTN
5493   DA95             
5494   DA95             MULT16B_7: ; $DA95
5495   DA95 FD 5A           STX  Y
5496   DA97             
5497   DA97             MULT16B_2: ; $DA97
5498   DA97 9A              RTN
5499   DA98             
5500   DA98             
5501   DA98             
5502   DA98             ;------------------------------------------------------------------------------
5503   DA98             ; $DA98 - Searches operator table by value in accumulator
5504   DA98             ;------------------------------------------------------------------------------
5505   DA98             MULT16B_1: ; 
5506   DA98 4A A7           LDI  XL,$A7
5507   DA9A 48 C3           LDI  XH,$C3
5508   DA9C             
5509   DA9C             MULT16B_9: ; $DA9C
5510   DA9C 44              INC  X
5511   DA9D 44              INC  X
5512   DA9E 44              INC  X
5513   DA9F 44              INC  X
5514   DAA0 F7              CIN
5515   DAA1 8B 04           BZS MULT16B_3 ; $DAA7
5516   DAA3 88 09           LOP  UL,MULT16B_9 ; $DA9C
5517   DAA5 4A D4           LDI  XL,$D4
5518   DAA7             
5519   DAA7             MULT16B_3: ; $DAA7
5520   DAA7 9A              RTN
5521   DAA8             
5522   DAA8             
5523   DAA8             
5524   DAA8             ;------------------------------------------------------------------------------
5525   DAA8             ; $DAA8 - Forms a two’s complement of U-Reg
5526   DAA8             ;------------------------------------------------------------------------------
5527   DAA8             TWOSCOMP:
5528   DAA8 A4              LDA  UH
5529   DAA9 BD FF           EAI  $FF
5530   DAAB 28              STA  UH
5531   DAAC 24              LDA  UL
5532   DAAD BD FF           EAI  $FF
5533   DAAF 2A              STA  UL
5534   DAB0 64              INC  U
5535   DAB1 9A              RTN
5536   DAB2             
5537   DAB2             
5538   DAB2             
5539   DAB2             ;------------------------------------------------------------------------------
5540   DAB2             ; $DAB2 - Y-Reg points to a string with USING parameters. Evaluation and transfer to 
5541   DAB2             ; the using pointers.
5542   DAB2             ;------------------------------------------------------------------------------
5543   DAB2             EVAL_USING:
5544   DAB2 B5 00           LDI  A,$00
5545   DAB4             
5546   DAB4             ;------------------------------------------------------------------------------
5547   DAB4             ; $DAB4 - Read USING parameters and update in memory. Jump in case of error.
5548   DAB4             ;------------------------------------------------------------------------------
5549   DAB4             EVAL_USING_1:
5550   DAB4 AE 78 82        STA  (STK_PTR_GSB_FOR)
5551   DAB7 CD 36           VMJ  ($36)
5552   DAB9 81 05           BCR EVAL_USING_2 ; $DAC0
5553   DABB FD 98           PSH  Y
5554   DABD DC              VEJ  (DC)
5555   DABE 8E 08           BCH EVAL_USING_3 ; $DAC8
5556   DAC0             
5557   DAC0             EVAL_USING_2: ; $DAC0
5558   DAC0 6C 15           CPI  UH,$15
5559   DAC2 89 80           BZR EVAL_USING_4 ; $DB44
5560   DAC4 6A 00           LDI  UL,$00
5561   DAC6 FD 88           PSH  X
5562   DAC8             
5563   DAC8             EVAL_USING_3: ; $DAC8
5564   DAC8 B5 00           LDI  A,$00
5565   DACA 5A 08           LDI  YL,$08
5566   DACC 58 7A           LDI  YH,$7A
5567   DACE 28              STA  UH
5568   DACF 51              SIN  Y
5569   DAD0 51              SIN  Y
5570   DAD1 1E              STA  (Y)
5571   DAD2 62              DEC  UL
5572   DAD3 83 51           BCS EVAL_USING_5 ; $DB26
5573   DAD5             
5574   DAD5             EVAL_USING_12: ; $DAD5
5575   DAD5 FD 1A           POP  Y
5576   DAD7 55              LIN  Y
5577   DAD8 B7 E0           CPI  A,$E0
5578   DADA 81 05           BCR EVAL_USING_6 ; $DAE1
5579   DADC 54              INC  Y
5580   DADD             
5581   DADD             EVAL_USING_9: ; $DADD
5582   DADD 68 01           LDI  UH,$01
5583   DADF CD 48           VMJ  ($48) ; ($48)($24)
5584   DAE1             
5585   DAE1             EVAL_USING_6: ; $DAE1
5586   DAE1 B7 3B           CPI  A,$3B
5587   DAE3 8B 09           BZS EVAL_USING_7 ; $DAEE
5588   DAE5 B7 3A           CPI  A,$3A
5589   DAE7 8B 04           BZS EVAL_USING_8 ; $DAED
5590   DAE9 B7 0D           CPI  A,$0D
5591   DAEB 99 10           BZR EVAL_USING_9 ; $DADD
5592   DAED             
5593   DAED             EVAL_USING_8: ; $DAED
5594   DAED F9              REC
5595   DAEE             
5596   DAEE             EVAL_USING_7: ; $DAEE
5597   DAEE DB              ROL
5598   DAEF AD 78 82        EOR  (STK_PTR_GSB_FOR)
5599   DAF2 D1              ROR
5600   DAF3 91 18           BCR EVAL_USING_9 ; $DADD
5601   DAF5 FD 98           PSH  Y
5602   DAF7 5A 95           LDI  YL,$95
5603   DAF9 58 78           LDI  YH,$78
5604   DAFB 4A 0A           LDI  XL,$0A
5605   DAFD 48 7A           LDI  XH,$7A
5606   DAFF A4              LDA  UH
5607   DB00 8B 0D           BZS EVAL_USING_10 ; $DB0F
5608   DB02 51              SIN  Y
5609   DB03 4A 08           LDI  XL,$08
5610   DB05 F5              TIN
5611   DB06 45              LIN  X
5612   DB07 54              INC  Y
5613   DB08 53              SDE  Y
5614   DB09 05              LDA  (X)
5615   DB0A CB 4E           VZS  ($4E) ; ($4E)($27)
5616   DB0C             
5617   DB0C             EVAL_USING_11: ; $DB0C
5618   DB0C 1E              STA  (Y)
5619   DB0D CD 4E           VMJ  ($4E) ; ($4E)($27)
5620   DB0F             
5621   DB0F             EVAL_USING_10: ; $DB0F
5622   DB0F 5A 97           LDI  YL,$97
5623   DB11 05              LDA  (X)
5624   DB12 99 08           BZR EVAL_USING_11 ; $DB0C
5625   DB14 54              INC  Y
5626   DB15 53              SDE  Y
5627   DB16 53              SDE  Y
5628   DB17 53              SDE  Y
5629   DB18 9E 0E           BCH EVAL_USING_11 ; $DB0C
5630   DB1A             
5631   DB1A             EVAL_USING_13: ; $DB1A
5632   DB1A 5F 01           ADI  (Y),$01
5633   DB1C 62              DEC  UL
5634   DB1D 91 4A           BCR EVAL_USING_12 ; $DAD5
5635   DB1F F7              CIN
5636   DB20 9B 08           BZS EVAL_USING_13 ; $DB1A
5637   DB22 A4              LDA  UH
5638   DB23 89 1D           BZR EVAL_USING_14 ; $DB42
5639   DB25 46              DEC  X
5640   DB26             
5641   DB26             EVAL_USING_5: ; $DB26
5642   DB26 45              LIN  X
5643   DB27 B7 26           CPI  A,$26
5644   DB29 9B 11           BZS EVAL_USING_13 ; $DB1A
5645   DB2B 5A 08           LDI  YL,$08
5646   DB2D             
5647   DB2D             EVAL_USING_24: ; $DB2D
5648   DB2D FD 88           PSH  X
5649   DB2F CD 34           VMJ  ($34) \ ABYT($06) \ ABYT($23) \ ABRF(EVAL_USING_15) \
5649   DB31 06          
5649   DB32 23          
5649   DB33 15          
5649   DB34             
5650   DB34 2A                                       ABYT($2A) \ ABRF(EVAL_USING_16) \ 
5650   DB35 10          
5650   DB36             
5651   DB36 2B                                       ABYT($2B) \ ABRF(EVAL_USING_18) \ 
5651   DB37 25          
5651   DB38             
5652   DB38 5E                                       ABYT($5E) \ ABRF(EVAL_USING_17) \
5652   DB39 31          
5652   DB3A             
5653   DB3A 2C                                       ABYT($2C) \ ABRF(EVAL_USING_19) \ 
5653   DB3B 47          
5653   DB3C             
5654   DB3C 2E                                       ABYT($2E) \ ABRF(EVAL_USING_20) \ 
5654   DB3D 24          
5654   DB3E             
5655   DB3E 26                                       ABYT($26) \ ABRF(EVAL_USING_21)
5655   DB3F 38          
5656   DB40             
5657   DB40             EVAL_USING_23: ; $DB40
5658   DB40 FD 0A           POP  X
5659   DB42             
5660   DB42             EVAL_USING_14: ; $DB42
5661   DB42 68 0C           LDI  UH,$0C
5662   DB44             
5663   DB44             EVAL_USING_4: ; $DB44
5664   DB44 CD 4A           VMJ  ($4A) ;  ($4A)($25)
5665   DB46             
5666   DB46             EVAL_USING_16: ; $DB46
5667   DB46 BB 40           ORI  A,$40
5668   DB48 28              STA  UH
5669   DB49             
5670   DB49             EVAL_USING_15: ; $DB49
5671   DB49 15              LDA  (Y)
5672   DB4A DD              INC  A
5673   DB4B 87 01           BHS EVAL_USING_22 ; $DB4E
5674   DB4D 1E              STA  (Y)
5675   DB4E             
5676   DB4E             EVAL_USING_22: ; $DB4E
5677   DB4E 6C 80           CPI  UH,$80
5678   DB50 93 12           BCS EVAL_USING_23 ; $DB40
5679   DB52 A4              LDA  UH
5680   DB53 BB 01           ORI  A,$01
5681   DB55 28              STA  UH
5682   DB56             
5683   DB56             EVAL_USING_25: ; $DB56
5684   DB56 FD 0A           POP  X
5685   DB58 45              LIN  X
5686   DB59 88 2E           LOP  UL,EVAL_USING_24 ; $DB2D
5687   DB5B 9E 88           BCH EVAL_USING_12 ; $DAD5
5688   DB5D             
5689   DB5D             EVAL_USING_18: ; $DB5D
5690   DB5D BB 20           ORI  A,$20
5691   DB5F             
5692   DB5F             EVAL_USING_26: ; $DB5F
5693   DB5F 28              STA  UH
5694   DB60 9E 14           BCH EVAL_USING_22 ; $DB4E
5695   DB62             
5696   DB62             EVAL_USING_20: ; $DB62
5697   DB62 5E 08           CPI  YL,$08
5698   DB64 99 26           BZR EVAL_USING_23 ; $DB40
5699   DB66 54              INC  Y
5700   DB67 5B 01           ORI  (Y),$01
5701   DB69 9E 1D           BCH EVAL_USING_22 ; $DB4E
5702   DB6B             
5703   DB6B             EVAL_USING_17: ; $DB6B
5704   DB6B BB 80           ORI  A,$80
5705   DB6D 28              STA  UH
5706   DB6E 5A 08           LDI  YL,$08
5707   DB70 B5 02           LDI  A,$02
5708   DB72 17              CPA  (Y)
5709   DB73 91 1F           BCR EVAL_USING_25 ; $DB56
5710   DB75 1E              STA  (Y)
5711   DB76 9E 22           BCH EVAL_USING_25 ; $DB56
5712   DB78             
5713   DB78             EVAL_USING_21: ; $DB78
5714   DB78 5A 0A           LDI  YL,$0A
5715   DB7A 15              LDA  (Y)
5716   DB7B 99 3D           BZR EVAL_USING_23 ; $DB40
5717   DB7D FD 0A           POP  X
5718   DB7F B5 26           LDI  A,$26
5719   DB81 9E 69           BCH EVAL_USING_13 ; $DB1A
5720   DB83             
5721   DB83             EVAL_USING_19: ; $DB83
5722   DB83 BB 10           ORI  A,$10
5723   DB85 9E 28           BCH EVAL_USING_26 ; $DB5F
5724   DB87             
5725   DB87             
5726   DB87             
5727   DB87             ;------------------------------------------------------------------------------
5728   DB87             ; (26) Checks AR-X for BCD format and branches
5729   DB87             ; Branches to offset address P1 if a BCD value is present in AR-X. 
5730   DB87             ; If a CSI could be recognized in the AR-X, continue after the address following P1.
5731   DB87             ; 
5732   DB87             ;            Address:	DB87 (26)
5733   DB87             ;    Entry Parameter:	No
5734   DB87             ; Modified Registers:	X-Reg contains return address. U Reg, accumulator
5735   DB87             ;   Error conditions:	UH contains error code 11 if a BCD value is detected.
5736   DB87             ;------------------------------------------------------------------------------
5737   DB87             ISARXBCD: ; $DB87
5738   DB87 B5 B2           LDI  A,$B2
5739   DB89 A7 7A 04        CPA  (ARX + $04)
5740   DB8C 81 03           BCR ISARXBCD_9 ; $DB91
5741   DB8E BA DC F1        JMP  LOAD_NEXT_3 ; $DCF1
5742   DB91             
5743   DB91             ISARXBCD_9: ; $DB91
5744   DB91 68 11           LDI  UH,$11
5745   DB93 CD 48           VMJ  ($48) ; ($48)($24)
5746   DB95             
5747   DB95             ;------------------------------------------------------------------------------
5748   DB95             ; $DB95 - Checks whether the address in the AR-X is within the string buffer. If OK, 
5749   DB95             ; resets the string buffer pointer. If not, set error 11 in UH and jump.
5750   DB95             ;------------------------------------------------------------------------------
5751   DB95             ISARXBCD_6:
5752   DB95 4A 04           LDI  XL,$04
5753   DB97 48 7A           LDI  XH,$7A
5754   DB99 45              LIN  X
5755   DB9A B7 C1           CPI  A,$C1
5756   DB9C 91 0D           BCR ISARXBCD_9 ; $DB91
5757   DB9E 45              LIN  X
5758   DB9F B7 7B           CPI  A,$7B
5759   DBA1 C9 4C           VZR  ($4C) ; ($4C)($26)
5760   DBA3 05              LDA  (X)
5761   DBA4 B7 10           CPI  A,$10
5762   DBA6 C1 4C           VCR  ($4C) ; ($4C)($26)
5763   DBA8 B7 60           CPI  A,$60
5764   DBAA C3 4C           VCS  ($4C) ; ($4C)($26)
5765   DBAC AE 78 94        STA  (STR_BUF_PTR_L)
5766   DBAF CD 4C           VMJ  ($4C) ; ($4C)($26)
5767   DBB1             
5768   DBB1             
5769   DBB1             
5770   DBB1             ;------------------------------------------------------------------------------
5771   DBB1             ; (28) $DBB1 - Checks in $788C to see if the variable was one-dimensional. If not, load 
5772   DBB1             ; error code 12 to UH and jump.
5773   DBB1             ;------------------------------------------------------------------------------
5774   DBB1 B5 01           LDI  A,$01
5775   DBB3             
5776   DBB3             ;------------------------------------------------------------------------------
5777   DBB3             ; $DBB3 - Checks whether the variable is one-dimensional. Jump, if not
5778   DBB3             ;------------------------------------------------------------------------------
5779   DBB3             ISARXBCD_8:
5780   DBB3 A7 78 8C        CPA  (NUMARGS)
5781   DBB6 CB 4C           VZS  ($4C) ; ($4C)($26) 
5782   DBB8 68 12           LDI  UH,$12
5783   DBBA CD 48           VMJ  ($48) ; ($48)
5784   DBBC             
5785   DBBC             
5786   DBBC             
5787   DBBC             ;------------------------------------------------------------------------------
5788   DBBC             ; (F4) Loads U-Reg with address from main memory
5789   DBBC             ; Address:	D8BC (F4)
5790   DBBC             ;          Parameter: D1 & D2 identify address to load into U-Reg.
5791   DBBC             ;
5792   DBBC             ; Modified Registers: U-Reg, Accumulator
5793   DBBC             ;   Error conditions: None
5794   DBBC             ;------------------------------------------------------------------------------
5795   DBBC             ADDR_2_UREG: ; $D8BC 
5796   DBBC FD 2A           POP  U
5797   DBBE 65              LIN  U
5798   DBBF 64              INC  U
5799   DBC0 FD A8           PSH  U
5800   DBC2 66              DEC  U
5801   DBC3 FD C8           PSH  A
5802   DBC5 25              LDA  (U)
5803   DBC6 2A              STA  UL
5804   DBC7 FD 8A           POP  A
5805   DBC9 28              STA  UH
5806   DBCA             
5807   DBCA             ISARXBCD_10: ; $DBCA
5808   DBCA 65              LIN  U
5809   DBCB FD C8           PSH  A
5810   DBCD 25              LDA  (U)
5811   DBCE 2A              STA  UL
5812   DBCF FD 8A           POP  A
5813   DBD1 28              STA  UH
5814   DBD2 9A              RTN
5815   DBD3             
5816   DBD3             
5817   DBD3             
5818   DBD3             ;------------------------------------------------------------------------------
5819   DBD3             ; $DBD3 - Gets U-Reg from basic stack
5820   DBD3             ;------------------------------------------------------------------------------
5821   DBD3             ISARXBCD_7: ; 
5822   DBD3 EF 78 93 02     ADI  (BAS_PENOP_STK_L),$02
5823   DBD7 A5 78 93        LDA  (BAS_PENOP_STK_L)
5824   DBDA 2A              STA  UL
5825   DBDB 62              DEC  UL
5826   DBDC 68 7A           LDI  UH,$7A
5827   DBDE 9E 16           BCH ISARXBCD_10 ; $DBCA
5828   DBE0             
5829   DBE0             
5830   DBE0             
5831   DBE0             
5832   DBE0             ;------------------------------------------------------------------------------
5833   DBE0             ; $DBE0 - Save U-Reg on the basic stack. Loads error code 0E to UH in case of stack 
5834   DBE0             ; overflow. If o.k. C = 0.
5835   DBE0             ;------------------------------------------------------------------------------
5836   DBE0             ISARXBCD_5:
5837   DBE0 A5 78 93        LDA  (BAS_PENOP_STK_L)
5838   DBE3 0A              STA  XL
5839   DBE4 A5 78 92        LDA  (BAS_DATA_STK_L)
5840   DBE7 06              CPA  XL
5841   DBE8 83 45           BCS ISARXBCD_11 ; $DC2F
5842   DBEA 48 7A           LDI  XH,$7A
5843   DBEC 24              LDA  UL
5844   DBED 43              SDE  X
5845   DBEE A4              LDA  UH
5846   DBEF 43              SDE  X
5847   DBF0 04              LDA  XL
5848   DBF1 AE 78 93        STA  (BAS_PENOP_STK_L)
5849   DBF4 9A              RTN
5850   DBF5             
5851   DBF5             
5852   DBF5             
5853   DBF5             ;------------------------------------------------------------------------------
5854   DBF5             ; $DBF5 - Transfer AR-X to Basic Stack
5855   DBF5             ;------------------------------------------------------------------------------
5856   DBF5             ISARXBCD_1:
5857   DBF5 A5 78 92        LDA  (BAS_DATA_STK_L)
5858   DBF8 0A              STA  XL
5859   DBF9 B7 38           CPI  A,$38
5860   DBFB 81 32           BCR ISARXBCD_11 ; $DC2F
5861   DBFD B3 06           ADI  A,$06
5862   DBFF 83 2E           BCS ISARXBCD_11 ; $DC2F
5863   DC01 A7 78 93        CPA  (BAS_PENOP_STK_L)
5864   DC04 83 29           BCS ISARXBCD_11 ; $DC2F
5865   DC06 EF 78 92 08     ADI  (BAS_DATA_STK_L),$08
5866   DC0A 48 7A           LDI  XH,$7A
5867   DC0C             
5868   DC0C             ;------------------------------------------------------------------------------
5869   DC0C             ; $DC0C - Transfers AR-X from the memory cell pointed to by X-Reg. (8-bytes).
5870   DC0C             ;------------------------------------------------------------------------------
5871   DC0C             ISARXBCD_24:
5872   DC0C FD 98           PSH  Y
5873   DC0E FD 5A           STX  Y
5874   DC10 4A 00           LDI  XL,$00
5875   DC12 48 7A           LDI  XH,$7A
5876   DC14 8E 10           BCH ISARXBCD_12 ; $DC26
5877   DC16             
5878   DC16             
5879   DC16             ;------------------------------------------------------------------------------
5880   DC16             ; (30) $DC16 - Get AR-X from Basic Stack 
5881   DC16             ;------------------------------------------------------------------------------
5882   DC16 EF 78 92 F8     ADI  (BAS_DATA_STK_L),$F8
5883   DC1A A5 78 92        LDA  (BAS_DATA_STK_L)
5884   DC1D 0A              STA  XL
5885   DC1E 48 7A           LDI  XH,$7A
5886   DC20             
5887   DC20             ; Stores 8 bytes from address X-Reg to AR-X.
5888   DC20             ISARXBCD_2: ; $ DC20
5889   DC20 FD 98           PSH  Y
5890   DC22 5A 00           LDI  YL,$00
5891   DC24 58 7A           LDI  YH,$7A
5892   DC26             
5893   DC26             ISARXBCD_12: ; $ DC26
5894   DC26 6A 07           LDI  UL,$07
5895   DC28             
5896   DC28             ISARXBCD_13: ; $ DC28
5897   DC28 F5              TIN
5898   DC29 88 03           LOP  UL,ISARXBCD_13 ; $DC28
5899   DC2B FD 1A           POP  Y
5900   DC2D F9              REC
5901   DC2E 9A              RTN
5902   DC2F             
5903   DC2F             ISARXBCD_11: ; $ DC2F
5904   DC2F 68 0E           LDI  UH,$0E
5905   DC31 9A              RTN
5906   DC32             
5907   DC32             ISARXBCD_4: ; $ DC32
5908   DC32 FD 2A           POP  U
5909   DC34 FD 98           PSH  Y
5910   DC36             
5911   DC36 ED 78 80 10     BII  (DISPARAM),$10
5912   DC3A 8B 0D           BZS ISARXBCD_15 ; $DC49
5913   DC3C 62              DEC  UL
5914   DC3D 8B 05           BZS ISARXBCD_16 ; $DC44
5915   DC3F BE D2 D3        SJP  (BCD_Y2ARX_43) ; $D2D3
5916   DC42 8E 5C           BCH ISARXBCD_17 ; $DCA0
5917   DC44             
5918   DC44             ISARXBCD_16: ; $ DC44
5919   DC44 BE D2 B3        SJP  ($D2B3)
5920   DC47 8E 57           BCH ISARXBCD_17 ; $DCA0
5921   DC49             
5922   DC49             ISARXBCD_15: ; $ DC49
5923   DC49 ED 78 8A E0     BII  (BREAKPARAM),$E0
5924   DC4D 8B 05           BZS ISARXBCD_18 ; $DC54
5925   DC4F BE D2 4E        SJP  (BCD_Y2ARX_44) ; $D24E
5926   DC52 8E 0A           BCH ISARXBCD_19 ; $DC5E
5927   DC54             
5928   DC54             ISARXBCD_18: ; $ DC54
5929   DC54 CC              VEJ  (CC) \ ABYTL(ERR_LINE_H) ; $78B4
5929   DC55 B4          
5930   DC56 AB 78 B5        ORA  (ERR_LINE_L)
5931   DC59 8B 38           BZS ISARXBCD_20 ; $DC93
5932   DC5B BE D2 46        SJP  (BCD_Y2ARX_45) ; $D246
5933   DC5E             
5934   DC5E             ISARXBCD_19: ; $ DC5E
5935   DC5E 81 2F           BCR ISARXBCD_21 ; $DC8F
5936   DC60 B5 54           LDI  A,$54
5937   DC62 ED 76 4F 20     BII  (DISP_BUFF + $4F),$20
5938   DC66 C9 44           VZR  ($44) ; ($44)($22)
5939   DC68 BE EE 80        SJP  (SAVELCD2BUF)
5940   DC6B CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880)
5940   DC6C 80          
5941   DC6D FD C8           PSH  A
5942   DC6F B5 54           LDI  A,$54
5943   DC71 AE 78 80        STA  (DISPARAM)
5944   DC74 BE E8 CA        SJP  (PRGMDISP)
5945   DC77 E9 7B 0E BF     ANI  (CURS_CTRL),$BF
5946   DC7B BE E2 3D        SJP  (WAITNOKEYS)
5947   DC7E BE EE 99        SJP  (BUF2LCD)
5948   DC81 FD 8A           POP  A
5949   DC83 B9 DF           ANI  A,$DF
5950   DC85 AE 78 80        STA  (DISPARAM)
5951   DC88 BF C0           BII  A,$C0
5952   DC8A 8B 03           BZS ISARXBCD_21 ; $DC8F
5953   DC8C F2              VEJ  (F2)
5954   DC8D CD 42           VMJ  ($42) ; ($42)($21)
5955   DC8F             
5956   DC8F             ISARXBCD_21: ; $DC8F
5957   DC8F FD 1A           POP  Y
5958   DC91 CD 46           VMJ  ($46) ; ($46)($23)
5959   DC93             
5960   DC93             ISARXBCD_20: ; $DC93
5961   DC93 62              DEC  UL
5962   DC94 91 07           BCR ISARXBCD_21 ; $DC8F
5963   DC96 8B 05           BZS ISARXBCD_22 ; $DC9D
5964   DC98 BE D2 77        SJP  (BCD_Y2ARX_46) ; $D277
5965   DC9B 8E 03           BCH ISARXBCD_17 ; $DCA0
5966   DC9D             
5967   DC9D             ISARXBCD_22: ; $DC9D
5968   DC9D BE D2 6F        SJP  (BCD_Y2ARX_47) ; $D26F
5969   DCA0             
5970   DCA0             ISARXBCD_17: ; $DCA0
5971   DCA0 91 13           BCR ISARXBCD_21 ; $DC8F
5972   DCA2 B5 14           LDI  A,$14
5973   DCA4 CD 44           VMJ  ($44) ; ($44)($22)
5974   DCA6             
5975   DCA6             
5976   DCA6             
5977   DCA6             ;------------------------------------------------------------------------------
5978   DCA6             ; (2C) $DCA6 - Passes function result to AR-X. $DCA6
5979   DCA6             ;------------------------------------------------------------------------------
5980   DCA6 B5 01           LDI  A,$01
5981   DCA8 AE 78 89        STA  ($7889)
5982   DCAB BA D6 E5        JMP  DEC2HEX_127 ; $D6E5
5983   DCAE             
5984   DCAE             
5985   DCAE             
5986   DCAE             ;------------------------------------------------------------------------------
5987   DCAE             ; $DCAE - Compares accumulator with pointer to the input buffer
5988   DCAE             ;------------------------------------------------------------------------------
5989   DCAE             ISARXBCD_3:
5990   DCAE DF              DEC  A
5991   DCAF A7 78 8B        CPA  (INBUFPTR_L)
5992   DCB2 9A              RTN
5993   DCB3 80 00 FF        .BYTE $80,$00,$FF
5994   DCB6             
5995   DCB6             
5996   DCB6             
5997   DCB6             ;------------------------------------------------------------------------------
5998   DCB6             ; (02) Checks if next character in main memory in specific ASCII code range
5999   DCB6             ; Address:	DCB6 (02)
6000   DCB6             ; D1 = Smallest value within the interval
6001   DCB6             ; D2 = Smallest value above the interval
6002   DCB6             ; D3 = Distance 
6003   DCB6             ; 
6004   DCB6             ;    Entry Parameter:	Y-Reg points to character to be tested. U-Reg contains the character loaded from memory in UL.
6005   DCB6             ; Modified Registers:	X-Reg return address, accumulators, Y-Reg points to the next character
6006   DCB6             ;   Error conditions:	A token or character read outside of the interval continues the program at offset D3
6007   DCB6             ;------------------------------------------------------------------------------
6008   DCB6             CHAR_MEM_N_RANGE_: ; $DCB6
6009   DCB6 C0              VEJ  (C0) ; $DCB6
6010   DCB7                 
6011   DCB7             
6012   DCB7             
6013   DCB7             ;------------------------------------------------------------------------------
6014   DCB7             ; (00) Checks whether character in U-Reg in specific ASCII code range
6015   DCB7             ;            Address: DCB7 (00)
6016   DCB7             ;                     D1 = smallest value within the interval
6017   DCB7             ;                     D2 = smallest value above the interval
6018   DCB7             ;                     D3 = distance address
6019   DCB7             ; 
6020   DCB7             ;    Entry Parameter: U-Reg contains character loaded from memory in UL.
6021   DCB7             ; Modified Registers: X-Reg return address, accumulator
6022   DCB7             ;   Error conditions: Token/caracter read outside interval continues program at offset D3
6023   DCB7             ;------------------------------------------------------------------------------
6024   DCB7             CHAR_U_N_RANGE_: ; $DCB7
6025   DCB7 FD 0A           POP  X 
6026   DCB9 A4              LDA  UH
6027   DCBA 89 39           BZR LOAD_NEXT_4 ; $DCF5
6028   DCBC 24              LDA  UL
6029   DCBD F7              CIN
6030   DCBE 81 36           BCR LOAD_NEXT_2 ; $DCF6
6031   DCC0 F7              CIN
6032   DCC1 81 23           BCR LOAD_NEXT_5 ; $DCE6
6033   DCC3 8E 3E           BCH LOAD_NEXT_6 ; $DD03
6034   DCC5             
6035   DCC5             
6036   DCC5             
6037   DCC5             ;------------------------------------------------------------------------------
6038   DCC5             ; (C8) Branch if not end of command sequence or end of line
6039   DCC5             ;            Address: DCC5 (C8)
6040   DCC5             ;                 D1: Distance Address
6041   DCC5             ;    Entry Parameter: None
6042   DCC5             ; Modified Registers: X-Reg contains return address
6043   DCC5             ;   Error conditions: Carry-Flag = 1 if an end of the command sequence was 
6044   DCC5             ;                     recognized in a Basic program (:).
6045   DCC5             ;------------------------------------------------------------------------------
6046   DCC5             CHECK_AT_END: ; $DCC5 (C8)
6047   DCC5 C0              VEJ  (C0)
6048   DCC6 D8              VEJ  (D8)
6049   DCC7 8B 04           BZS ISARXBCD_23 ; $DCCD
6050   DCC9 6E 3A           CPI  UL,$3A
6051   DCCB 8B 24           BZS LOAD_NEXT_3 ; $DCF1
6052   DCCD             
6053   DCCD             ISARXBCD_23: ; $DCCD
6054   DCCD 6E 0D           CPI  UL,$0D
6055   DCCF F9              REC
6056   DCD0 8B 1F           BZS LOAD_NEXT_3 ; $DCF1
6057   DCD2 8E 2D           BCH LOAD_NEXT_7 ; $DD01
6058   DCD4             
6059   DCD4             
6060   DCD4             
6061   DCD4             ;------------------------------------------------------------------------------
6062   DCD4             ; (C2) Checks for the presence of a specific character or token. If found,  
6063   DCD4             ; a branch is made to the offset address.
6064   DCD4             ;            Address:	1. DCD4 (C2) with character/token loading
6065   DCD4             ;                       2. DCD5 (C4) character/token already in U-Reg.
6066   DCD4             ;                       D1, D2: character or token expected.
6067   DCD4             ;                       D3: Distance Address
6068   DCD4             ; 
6069   DCD4             ;    Entry Parameter: Y-Reg points to main memory
6070   DCD4             ; Modified Registers: Y-Reg has been incremented.
6071   DCD4             ;   Error conditions: None
6072   DCD4             ;------------------------------------------------------------------------------ 
6073   DCD4             LOAD_NEXT_C2: ; $DCD4 (C2)
6074   DCD4 C0              VEJ  (C0)
6075   DCD5             
6076   DCD5             ;------------------------------------------------------------------------------ 
6077   DCD5             ; (C4) $DCD5 - Checks tokens/characters in U-Reg with data bytes If not equal, branch.
6078   DCD5             ;------------------------------------------------------------------------------ 
6079   DCD5             LOAD_NEXT_C4:
6080   DCD5 FD 0A           POP  X
6081   DCD7 45              LIN  X
6082   DCD8 B7 E0           CPI  A,$E0
6083   DCDA 83 03           BCS LOAD_NEXT_8 ; $DCDF
6084   DCDC 46              DEC  X
6085   DCDD B5 00           LDI  A,$00
6086   DCDF             
6087   DCDF             LOAD_NEXT_8: ; $DCDF
6088   DCDF A6              CPA  UH
6089   DCE0 89 14           BZR LOAD_NEXT_2 ; $DCF6
6090   DCE2 45              LIN  X
6091   DCE3 26              CPA  UL
6092   DCE4 89 1D           BZR LOAD_NEXT_6 ; $DD03
6093   DCE6             
6094   DCE6             LOAD_NEXT_5: ; $DCE6
6095   DCE6 44              INC  X
6096   DCE7 FD 5E           STX  P
6097   DCE9 FD 0A           POP  X
6098   DCEB 8E 04           BCH LOAD_NEXT_3 ; $DCF1
6099   DCED             
6100   DCED             
6101   DCED             
6102   DCED             ;------------------------------------------------------------------------------
6103   DCED             ; (4C) Return to a main program (after the last data byte)
6104   DCED             ; Address:	(4C) DCE9
6105   DCED             ;   Entry parameters: The stack must show an address of main program pointing
6106   DCED             ;                     to the last of data bytes following the subprogram call.
6107   DCED             ; 
6108   DCED             ; Modified registers: X-Reg contains return address
6109   DCED             ;   Error conditions: None
6110   DCED             ;------------------------------------------------------------------------------
6111   DCED             RTN_AFTER_DATA: ; $DCE9
6112   DCED FD 0A           POP  X
6113   DCEF FD 1A           POP  Y
6114   DCF1             
6115   DCF1             ;------------------------------------------------------------------------------
6116   DCF1             ; (4E) Return to main program (after data byte). Restore Basic program pointer
6117   DCF1             ; Address:	(4E) DCED
6118   DCF1             ;   Entry parameters: As (4C). In addition, Basic program pointer is on stack.
6119   DCF1             ; 
6120   DCF1             ; Modified registers: Basic program pointer (Y-Reg) restored, else like (4C).
6121   DCF1             ;   Error conditions: None
6122   DCF1             ;------------------------------------------------------------------------------
6123   DCF1             LOAD_NEXT_3: ; $DCF1
6124   DCF1 FD 0A           POP  X
6125   DCF3 9E 0F           BCH LOAD_NEXT_5 ; $DCE6
6126   DCF5             
6127   DCF5             LOAD_NEXT_4: ; $DCF5
6128   DCF5 44              INC  X
6129   DCF6             
6130   DCF6             LOAD_NEXT_2: ; $DCF6
6131   DCF6 44              INC  X
6132   DCF7 8E 0A           BCH LOAD_NEXT_6 ; $DD03
6133   DCF9             
6134   DCF9             ;------------------------------------------------------------------------------
6135   DCF9             ; (48) Return to a main program (relative jump)
6136   DCF9             ;            Address: (48) DCF9
6137   DCF9             ;   Entry parameters: The stack must show an address of the main program that 
6138   DCF9             ;                     points to last of data bytes following subprogram call.
6139   DCF9             ; 
6140   DCF9             ; Modified registers: X-Reg contains address where the main program continues.
6141   DCF9             ;   Error conditions: None
6142   DCF9             ;------------------------------------------------------------------------------
6143   DCF9             RTN_TO_MAIN: ; $DCF9
6144   DCF9 FD 0A           POP  X
6145   DCFB 8E 04           BCH LOAD_NEXT_7 ; $DD01
6146   DCFD             
6147   DCFD             
6148   DCFD             
6149   DCFD             ;------------------------------------------------------------------------------
6150   DCFD             ; (4A) $DCFD - Return to distance address. Restore Y-Reg $DCFD
6151   DCFD             ;------------------------------------------------------------------------------
6152   DCFD FD 0A           POP  X
6153   DCFF FD 1A           POP  Y
6154   DD01             
6155   DD01             LOAD_NEXT_7: ; $DD01
6156   DD01 FD 0A           POP  X
6157   DD03             
6158   DD03             LOAD_NEXT_6: ; $DD03
6159   DD03 45              LIN  X
6160   DD04 FD CA           ADR  X
6161   DD06 FD 5E           STX  P
6162   DD08             
6163   DD08             
6164   DD08             
6165   DD08             ;------------------------------------------------------------------------------
6166   DD08             ; (C0) $DD08 - Load next character/token into U-REG
6167   DD08             ;------------------------------------------------------------------------------
6168   DD08 68 00           LDI  UH,$00
6169   DD0A 55              LIN  Y
6170   DD0B B7 E0           CPI  A,$E0
6171   DD0D 81 02           BCR LOAD_NEXT_9 ; $DD11
6172   DD0F 28              STA  UH
6173   DD10 55              LIN  Y
6174   DD11             
6175   DD11             LOAD_NEXT_9: ; $DD11
6176   DD11 2A              STA  UL
6177   DD12 9A              RTN
6178   DD13             
6179   DD13             
6180   DD13             
6181   DD13             ;------------------------------------------------------------------------------
6182   DD13             ; (C6) $DD13 - Decrements Y-Reg for tokens in U-Reg by 2-bytes, or by 1-byte 
6183   DD13             ; for characters. Correct program pointer
6184   DD13             ;------------------------------------------------------------------------------
6185   DD13 6C 00           CPI  UH,$00
6186   DD15 8B 01           BZS LOAD_NEXT_10 ; $DD18
6187   DD17 56              DEC  Y
6188   DD18             
6189   DD18             LOAD_NEXT_10: ; $DD18
6190   DD18 56              DEC  Y
6191   DD19 9A              RTN
6192   DD1A             
6193   DD1A             
6194   DD1A             
6195   DD1A             ;------------------------------------------------------------------------------
6196   DD1A             ; (D2) Convert AR-X with subroutine DD2D (10) if it is integer value.
6197   DD1A             ; Else if address of a string is there, a branch is made to offset address D1.
6198   DD1A             ;            Address:	DD1A (D2)
6199   DD1A             ; 	                    D1: Distance Address if AR-X contains string address
6200   DD1A             ;                       D2: Data byte for possibly called subprogram DD2D (10)
6201   DD1A             ;
6202   DD1A             ;    Entry Parameter:	None
6203   DD1A             ; Modified Registers:	X-Reg, U-Reg, Accumulator
6204   DD1A             ;   Error conditions:	None
6205   DD1A             ;------------------------------------------------------------------------------
6206   DD1A             CONVERT_ARX_IF_INT: ; $DD1A (D2)
6207   DD1A A5 7A 04        LDA  (ARX + $04)
6208   DD1D B7 B2           CPI  A,$B2
6209   DD1F 81 02           BCR LOAD_NEXT_11 ; $DD23
6210   DD21 99 22           BZR LOAD_NEXT_7 ; $DD01
6211   DD23             
6212   DD23             LOAD_NEXT_11: ; $DD23
6213   DD23 FD 0A           POP  X
6214   DD25 44              INC  X
6215   DD26 91 42           BCR LOAD_NEXT_5 ; $DCE6
6216   DD28 FD 88           PSH  X
6217   DD2A F4              VEJ  (F4) \ AWRD(ARX + $05)
6217   DD2B 7A 05       
6218   DD2D                 
6219   DD2D             
6220   DD2D             
6221   DD2D             ;------------------------------------------------------------------------------
6222   DD2D             ; (10)  Convert U-Reg according to data bytes
6223   DD2D             ;       00: Save U-Reg to AR-X in BCD format. (0-65535)
6224   DD2D             ;       40: Save to (Y-Reg) in ASCII
6225   DD2D             ;       8D: Save U-Reg in AR-X as BCD. (integer number)
6226   DD2D             ;       E0: Save to Y-Reg with 2 digits in ASCII
6227   DD2D             ;------------------------------------------------------------------------------
6228   DD2D FD 28           LDX  U ; $DD2D
6229   DD2F             
6230   DD2F             ;------------------------------------------------------------------------------
6231   DD2F             ; $DD2F Like subroutine (10-DD2D).
6232   DD2F             ;------------------------------------------------------------------------------
6233   DD2F             LOAD_NEXT_1:
6234   DD2F FD 2A           POP  U
6235   DD31 65              LIN  U
6236   DD32 FD A8           PSH  U
6237   DD34 FD 98           PSH  Y
6238   DD36 FD C8           PSH  A
6239   DD38 FD 88           PSH  X
6240   DD3A EC              VEJ  (EC)
6241   DD3B BE F7 5B        SJP  (CLR_SM_ARX3)
6242   DD3E EB 7A 0C 10     ORI  (ARZ + $04),$10
6243   DD42 FD 2A           POP  U
6244   DD44 FD 8A           POP  A
6245   DD46 D9              SHL
6246   DD47 FD C8           PSH  A
6247   DD49 58 7A           LDI  YH,$7A
6248   DD4B 81 0B           BCR LOAD_NEXT_12 ; $DD58
6249   DD4D 6C 80           CPI  UH,$80
6250   DD4F 81 07           BCR LOAD_NEXT_12 ; $DD58
6251   DD51 BE DA A8        SJP  (TWOSCOMP)
6252   DD54 EB 7A 01 80     ORI  (ARX + $01),$80
6253   DD58             
6254   DD58             LOAD_NEXT_12: ; $DD58
6255   DD58 4A 04           LDI  XL,$04
6256   DD5A 5A 0C           LDI  YL,$0C
6257   DD5C 24              LDA  UL
6258   DD5D 89 38           BZR LOAD_NEXT_13 ; $DD97
6259   DD5F A4              LDA  UH
6260   DD60 89 36           BZR LOAD_NEXT_14 ; $DD98
6261   DD62 04              LDA  XL
6262   DD63 AE 7A 00        STA  (ARX)
6263   DD66 BE F6 5D        SJP  (ARX2BCD_ABS)
6264   DD69 A5 7A 00        LDA  (ARX)
6265   DD6C 2A              STA  UL
6266   DD6D FD 8A           POP  A
6267   DD6F D9              SHL
6268   DD70 FD 1A           POP  Y
6269   DD72 81 22           BCR LOAD_NEXT_15 ; $DD96
6270   DD74 4A 01           LDI  XL,$01
6271   DD76 D9              SHL
6272   DD77 81 0E           BCR LOAD_NEXT_16 ; $DD87
6273   DD79 47              LDE  X
6274   DD7A D9              SHL
6275   DD7B B5 20           LDI  A,$20
6276   DD7D 81 02           BCR LOAD_NEXT_17 ; $DD81
6277   DD7F B5 2D           LDI  A,$2D
6278   DD81             
6279   DD81             LOAD_NEXT_17: ; $DD81
6280   DD81 51              SIN  Y
6281   DD82 24              LDA  UL
6282   DD83 6A 01           LDI  UL,$01
6283   DD85 8B 0A           BZS LOAD_NEXT_18 ; $DD91
6284   DD87             
6285   DD87             LOAD_NEXT_16: ; $DD87
6286   DD87 4A 04           LDI  XL,$04
6287   DD89 D7              DRL  (X)
6288   DD8A 46              DEC  X
6289   DD8B D7              DRL  (X)
6290   DD8C 46              DEC  X
6291   DD8D D7              DRL  (X)
6292   DD8E F1              AEX
6293   DD8F B9 0F           ANI  A,$0F
6294   DD91             
6295   DD91             LOAD_NEXT_18: ; $DD91
6296   DD91 BB 30           ORI  A,$30
6297   DD93 51              SIN  Y
6298   DD94 88 0F           LOP  UL,LOAD_NEXT_16 ; $DD87
6299   DD96             
6300   DD96             LOAD_NEXT_15: ; $DD96
6301   DD96 9A              RTN
6302   DD97             
6303   DD97             LOAD_NEXT_13: ; $DD97
6304   DD97 A4              LDA  UH
6305   DD98             
6306   DD98             LOAD_NEXT_14: ; $DD98
6307   DD98 D5              SHR
6308   DD99 28              STA  UH
6309   DD9A 24              LDA  UL
6310   DD9B D1              ROR
6311   DD9C 2A              STA  UL
6312   DD9D 81 0B           BCR LOAD_NEXT_19 ; $DDAA
6313   DD9F F9              REC
6314   DDA0 57              LDE  Y
6315   DDA1 8C              DCA  (X)
6316   DDA2 43              SDE  X
6317   DDA3 57              LDE  Y
6318   DDA4 8C              DCA  (X)
6319   DDA5 43              SDE  X
6320   DDA6 55              LIN  Y
6321   DDA7 8C              DCA  (X)
6322   DDA8 0E              STA  (X)
6323   DDA9 54              INC  Y
6324   DDAA             
6325   DDAA             LOAD_NEXT_19: ; $DDAA
6326   DDAA 15              LDA  (Y)
6327   DDAB 9C              DCA  (Y)
6328   DDAC 53              SDE  Y
6329   DDAD 15              LDA  (Y)
6330   DDAE 9C              DCA  (Y)
6331   DDAF 53              SDE  Y
6332   DDB0 15              LDA  (Y)
6333   DDB1 9C              DCA  (Y)
6334   DDB2 1E              STA  (Y)
6335   DDB3 9E 5D           BCH LOAD_NEXT_12 ; $DD58
6336   DDB5             
6337   DDB5             
6338   DDB5             
6339   DDB5             ;------------------------------------------------------------------------------
6340   DDB5             ; (F6) $DDB5 - U-Reg transferred to main memory
6341   DDB5             ;            Address: DDB5 (F6)
6342   DDB5             ;          Parameter: D1 & D2 identify address to which U-Reg is transferred
6343   DDB5             ; 
6344   DDB5             ; Modified Registers: X-Reg contains address of 2nd memory cell, accumulator
6345   DDB5             ;   Error conditions: None
6346   DDB5             ;------------------------------------------------------------------------------
6347   DDB5             UREG_2_MEM: ; $DDB5
6348   DDB5 FD 0A           POP  X
6349   DDB7 45              LIN  X
6350   DDB8 44              INC  X
6351   DDB9 FD 88           PSH  X
6352   DDBB 46              DEC  X
6353   DDBC FD C8           PSH  A
6354   DDBE 05              LDA  (X)
6355   DDBF 0A              STA  XL
6356   DDC0 FD 8A           POP  A
6357   DDC2 08              STA  XH
6358   DDC3 A4              LDA  UH
6359   DDC4 41              SIN  X
6360   DDC5 24              LDA  UL
6361   DDC6 0E              STA  (X)
6362   DDC7 9A              RTN
6363   DDC8             
6364   DDC8             
6365   DDC8             
6366   DDC8             ;------------------------------------------------------------------------------
6367   DDC8             ; (CC) $DDC8 - Load X-Reg with 16-bit value from memory page 78XX
6368   DDC8             ;            Address: DDC8 (CC)
6369   DDC8             ;                     D1: Low byte of address in memory page 78XX
6370   DDC8             ;   Entry parameters: None
6371   DDC8             ;
6372   DDC8             ; Modified registers: X-Reg contains value from (7801 f.). Accumulator includes (78D1)
6373   DDC8             ;   Error conditions: None
6374   DDC8             ;------------------------------------------------------------------------------
6375   DDC8 FD 0A           POP  X
6376   DDCA 45              LIN  X
6377   DDCB FD 88           PSH  X
6378   DDCD 0A              STA  XL
6379   DDCE 48 78           LDI  XH,$78
6380   DDD0 45              LIN  X
6381   DDD1 FD C8           PSH  A
6382   DDD3 05              LDA  (X)
6383   DDD4 0A              STA  XL
6384   DDD5 FD 8A           POP  A
6385   DDD7 08              STA  XH
6386   DDD8 9A              RTN
6387   DDD9             
6388   DDD9             
6389   DDD9             
6390   DDD9             ;------------------------------------------------------------------------------
6391   DDD9             ; (08) Transfers the result from AR-X to a fixed variable or clock module
6392   DDD9             ;            Address: DDD9 (08)
6393   DDD9             ;                     Distance Address
6394   DDD9             ;   Entry parameters: AR-X contains BCD value, integer value or CSI (7883 ff.) 
6395   DDD9             ;                     contains pointer of prepared variable with bit 7 of 
6396   DDD9             ;                     address set if variable is not already set up in variable 
6397   DDD9             ;                     memory. If there is a pointer greater than DB00 in 
6398   DDD9             ;                     (7883 f.), the clock module is written with value from 
6399   DDD9             ;                     AR-X. The subprogram checks whether the variable type of 
6400   DDD9             ;                     prepared variable (output variable) matches that in AR-X.
6401   DDD9             ; 
6402   DDD9             ; Modified registers: X-Reg contains return address: Y-Reg pointer to main memory.
6403   DDD9             ;   Error conditions: If an error is detected (wrong format, insufficient variable memory or invalid value for the clock module), the process continues with the distance address D1.
6404   DDD9             ;------------------------------------------------------------------------------
6405   DDD9             ARX_2_VAR: ; $DDD9
6406   DDD9 FD 98           PSH  Y
6407   DDDB CD 26           VMJ  ($26)
6408   DDDD 00              SBC  XL
6409   DDDE D1              ROR
6410   DDDF AD 78 85        EOR  (CURVARTYPE) ; $7885
6411   DDE2 D9              SHL
6412   DDE3 68 07           LDI  UH,$07
6413   DDE5 C3 4A           VCS  ($4A) ;($4A)($25)
6414   DDE7 CC              VEJ  (CC) \ ABYTL(CURVARADD_H) ; $7883
6414   DDE8 83          
6415   DDE9 4C 80           CPI  XH,$80
6416   DDEB 81 0B           BCR LOAD_NEXT_20 ; $DDF8
6417   DDED 4C DB           CPI  XH,$DB
6418   DDEF 83 2C           BCS LOAD_NEXT_21 ;  $DE1D
6419   DDF1 BE D3 71        SJP  (SRCHPRGLINE_16) ; $D371
6420   DDF4 C3 4A           VCS  ($4A) ;($4A)($25)
6421   DDF6 FD 18           LDX  Y
6422   DDF8             
6423   DDF8             LOAD_NEXT_20: ; $DDF8
6424   DDF8 ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
6425   DDFC 8B 05           BZS LOAD_NEXT_22 ; $DE03
6426   DDFE BE DC 0C        SJP  (ISARXBCD_24) ; $DC0C
6427   DE01 CD 4E           VMJ  ($4E) ; ($4E)($27)
6428   DE03             
6429   DE03             LOAD_NEXT_22: ; $DE03
6430   DE03 FD 5A           STX  Y
6431   DE05 DC              VEJ  (DC)
6432   DE06 FB              SEC
6433   DE07 A1 78 85        SBC  (CURVARTYPE); $7885
6434   DE0A 68 00           LDI  UH,$00
6435   DE0C 81 06           BCR LOAD_NEXT_23 ; $DE14
6436   DE0E A5 78 85        LDA  (CURVARTYPE); $7885
6437   DE11 2A              STA  UL
6438   DE12 68 01           LDI  UH,$01
6439   DE14             
6440   DE14             LOAD_NEXT_23: ; $DE14
6441   DE14 BE D0 49        SJP  (SYSMSG_3)
6442   DE17 A4              LDA  UH
6443   DE18 89 01           BZR LOAD_NEXT_24 ; $DE1B
6444   DE1A 1E              STA  (Y)
6445   DE1B             
6446   DE1B             LOAD_NEXT_24: ; $DE1B
6447   DE1B CD 4E           VMJ  ($4E) ; ($4E)($27)
6448   DE1D             
6449   DE1D             LOAD_NEXT_21: ; $DE1D
6450   DE1D E6              VEJ  (E6)
6451   DE1E A5 7A 00        LDA  (ARX)
6452   DE21 BF 80           BII  A,$80
6453   DE23 89 08           BZR LOAD_NEXT_25 ; $DE2D
6454   DE25 B1 06           SBI  A,$06
6455   DE27 81 0C           BCR LOAD_NEXT_26 ; $DE35
6456   DE29             
6457   DE29             LOAD_NEXT_31: ; $DE29
6458   DE29 68 17           LDI  UH,$17
6459   DE2B CD 4A           VMJ  ($4A) ; ($4A)($25)
6460   DE2D             
6461   DE2D             LOAD_NEXT_25: ; $DE2D
6462   DE2D B7 FC           CPI  A,$FC
6463   DE2F 68 F6           LDI  UH,$F6
6464   DE31 81 03           BCR LOAD_NEXT_27 ; $DE36
6465   DE33 B3 F9           ADI  A,$F9
6466   DE35             
6467   DE35             LOAD_NEXT_26: ; $DE35
6468   DE35 28              STA  UH
6469   DE36             
6470   DE36             LOAD_NEXT_27: ; $DE36
6471   DE36 48 7A           LDI  XH,$7A
6472   DE38             
6473   DE38             LOAD_NEXT_29: ; $DE38
6474   DE38 4A 02           LDI  XL,$02
6475   DE3A FD 60           INC  UH
6476   DE3C 83 0A           BCS LOAD_NEXT_28 ; $DE48
6477   DE3E 6A 04           LDI  UL,$04
6478   DE40 B5 00           LDI  A,$00
6479   DE42             
6480   DE42             LOAD_NEXT_30: ; $DE42
6481   DE42 D3              DRR  (X)
6482   DE43 44              INC  X
6483   DE44 88 04           LOP  UL,LOAD_NEXT_30 ; $DE42
6484   DE46 9E 10           BCH LOAD_NEXT_29 ; $DE38
6485   DE48             
6486   DE48             LOAD_NEXT_28: ; $DE48
6487   DE48 05              LDA  (X)
6488   DE49 B7 13           CPI  A,$13
6489   DE4B 93 24           BCS LOAD_NEXT_31 ; $DE29
6490   DE4D B7 10           CPI  A,$10
6491   DE4F 81 02           BCR LOAD_NEXT_32 ; $DE53
6492   DE51 B3 09           ADI  A,$09
6493   DE53             
6494   DE53             LOAD_NEXT_32: ; $DE53
6495   DE53 B9 0F           ANI  A,$0F
6496   DE55 F1              AEX
6497   DE56 0E              STA  (X)
6498   DE57 BE E5 9A        SJP  (ARX2TIME)
6499   DE5A CD 56           VMJ  ($56) ; ($56)($2B)
6500   DE5C CD 4E           VMJ  ($4E) ; ($4E)($27)
6501   DE5E             
6502   DE5E             
6503   DE5E             
6504   DE5E             ;------------------------------------------------------------------------------
6505   DE5E             ; (0A) Variable, whose address is in AR-X, is transferred numerically to AR-X, 
6506   DE5E             ;      if string: determine length
6507   DE5E             ;            Address: DE5E (0A)
6508   DE5E             ;   Entry parameters: AR-X must contain the CSI of a variable. If the clock 
6509   DE5E             ;                     module is to be read out, the high byte of the address 
6510   DE5E             ;                     must be greater than DB.
6511   DE5E             ; 
6512   DE5E             ; Modified registers: Variable was transferred to AR-X. X-Reg points to the 1st
6513   DE5E             ;                     byte after the transmitted value. Y Reg on 7A08
6514   DE5E             ;   Error conditions: Like (CE)
6515   DE5E             ;------------------------------------------------------------------------------
6516   DE5E             VAR_2_ARX: ; $DE5E
6517   DE5E DC              VEJ  (DC) 
6518   DE5F 4C 80           CPI  XH,$80
6519   DE61 B9 80           ANI  A,$80
6520   DE63 83 15           BCS LOAD_NEXT_33 ; $DE7A
6521   DE65 8B 03           BZS LOAD_NEXT_34 ; $DE6A
6522   DE67 BA DC 20        JMP  ISARXBCD_2 ; $DC20
6523   DE6A             
6524   DE6A             LOAD_NEXT_34: ; $DE6A
6525   DE6A FD 88           PSH  X
6526   DE6C 62              DEC  UL
6527   DE6D 68 00           LDI  UH,$00
6528   DE6F             
6529   DE6F             LOAD_NEXT_36: ; $DE6F
6530   DE6F 45              LIN  X
6531   DE70 8B 04           BZS LOAD_NEXT_35 ; $DE76
6532   DE72 FD 60           INC  UH
6533   DE74 88 07           LOP  UL,LOAD_NEXT_36 ; $DE6F
6534   DE76             
6535   DE76             LOAD_NEXT_35: ; $DE76
6536   DE76 FD 0A           POP  X
6537   DE78 8E 34           BCH BCMD_TIME_9 ; $DEAE
6538   DE7A             
6539   DE7A             LOAD_NEXT_33: ; $DE71
6540   DE7A 8B 33           BZS BCMD_TIME_10 ; $DEAF
6541   DE7C 4C DB           CPI  XH,$DB
6542   DE7E 83 02           BCS BCMD_TIME
6543   DE80 EC              VEJ  (EC)
6544   DE81 9A              RTN
6545   DE82             
6546   DE82             
6547   DE82             
6548   DE82             ;------------------------------------------------------------------------------
6549   DE82             ; $DE82 - Basic command TIME
6550   DE82             ;------------------------------------------------------------------------------
6551   DE82             BCMD_TIME:
6552   DE82 EC              VEJ  (EC)
6553   DE83 BE E5 B4        SJP  (TIME2ARX)
6554   DE86 4A 02           LDI  XL,$02
6555   DE88 B5 00           LDI  A,$00
6556   DE8A D3              DRR  (X)
6557   DE8B B7 A0           CPI  A,$A0
6558   DE8D 81 02           BCR BCMD_TIME_11 ; $DE91
6559   DE8F 4F 06           ADI  (X),$06
6560   DE91             
6561   DE91             BCMD_TIME_11: ; $DE91
6562   DE91 EB 7A 00 05     ORI  (ARX),$05
6563   DE95 E8              VEJ  (E8)
6564   DE96 9A              RTN
6565   DE97             
6566   DE97             
6567   DE97             
6568   DE97             ;------------------------------------------------------------------------------
6569   DE97             ; (0C) $DE97 - Gets length of the string from U-Reg and creates CSI in AR-X.
6570   DE97             ;------------------------------------------------------------------------------
6571   DE97 6A 50           LDI  UL,$50
6572   DE99 FD 18           LDX  Y
6573   DE9B 68 00           LDI  UH,$00
6574   DE9D             
6575   DE9D             BCMD_TIME_13: ; $DE9D
6576   DE9D 62              DEC  UL
6577   DE9E 81 0E           BCR BCMD_TIME_9 ; $DEAE
6578   DEA0 55              LIN  Y
6579   DEA1 B7 22           CPI  A,$22
6580   DEA3 8B 09           BZS BCMD_TIME_9 ; $DEAE
6581   DEA5 B7 0D           CPI  A,$0D
6582   DEA7 8B 04           BZS BCMD_TIME_12 ; $DEAD
6583   DEA9 FD 60           INC  UH
6584   DEAB 9E 10           BCH BCMD_TIME_13 ; $DE9D
6585   DEAD             
6586   DEAD             BCMD_TIME_12: ; $DEAD
6587   DEAD 56              DEC  Y
6588   DEAE             
6589   DEAE             BCMD_TIME_9: ; $DEAE
6590   DEAE A4              LDA  UH
6591   DEAF             
6592   DEAF             
6593   DEAF             ;------------------------------------------------------------------------------
6594   DEAF             ; (24) Creates CSI in AR-X
6595   DEAF             ;            Address: DEAF (24)
6596   DEAF             ;          Parameter: X-Reg contains the start address of the string
6597   DEAF             ;                     Accumulator contains the string length
6598   DEAF             ; Modified Registers: (7A04) = D0
6599   DEAF             ;                     (7A05 - 7A06) = address of the string
6600   DEAF             ;                     (7A07) = String length
6601   DEAF             ;                      U-Reg = 7A04, Accumulator
6602   DEAF             ;   Error conditions: None
6603   DEAF             ;------------------------------------------------------------------------------
6604   DEAF             BCMD_TIME_10: ; $DEAF
6605   DEAF 6A 07           LDI  UL,$07
6606   DEB1 68 7A           LDI  UH,$7A
6607   DEB3 63              SDE  U
6608   DEB4 04              LDA  XL
6609   DEB5 63              SDE  U
6610   DEB6 84              LDA  XH
6611   DEB7 63              SDE  U
6612   DEB8 B5 D0           LDI  A,$D0
6613   DEBA 2E              STA  (U)
6614   DEBB 9A              RTN
6615   DEBC             
6616   DEBC             
6617   DEBC             ;------------------------------------------------------------------------------
6618   DEBC             ; (DC) $DEBC - Loads CSI from AR-X address to X-Reg length to UL and accumulator
6619   DEBC             ;------------------------------------------------------------------------------
6620   DEBC 6A 05           LDI  UL,$05
6621   DEBE             
6622   DEBE             ; Transfers from address 7A UL, 16-bit address to X-Reg and length to UL.
6623   DEBE             BCMD_TIME_7: ; $DEBE
6624   DEBE 68 7A           LDI  UH,$7A
6625   DEC0 65              LIN  U
6626   DEC1 08              STA  XH
6627   DEC2 65              LIN  U
6628   DEC3 0A              STA  XL
6629   DEC4 25              LDA  (U)
6630   DEC5 2A              STA  UL
6631   DEC6 9A              RTN
6632   DEC7             
6633   DEC7             
6634   DEC7             
6635   DEC7             ;------------------------------------------------------------------------------
6636   DEC7             ; $DEC7 - Get program pointer from basic stack
6637   DEC7             ;------------------------------------------------------------------------------
6638   DEC7             BCMD_TIME_4: 
6639   DEC7 D4              VEJ  (D4) \ ABYT($A0)
6639   DEC8 A0          
6640   DEC9 A5 78 82        LDA  (STK_PTR_GSB_FOR)
6641   DECC 2A              STA  UL
6642   DECD 68 7A           LDI  UH,$7A
6643   DECF 8E 08           BCH BCMD_TIME_14 ; $DED9
6644   DED1             
6645   DED1             
6646   DED1             ;------------------------------------------------------------------------------
6647   DED1             ; (D6) $DED1 - Loads address pointer from memory to AR-Y: A6=PROGRAM, AC=BREAK, B8=0N ERROR.
6648   DED1             ;------------------------------------------------------------------------------
6649   DED1 FD 0A           POP  X
6650   DED3 45              LIN  X
6651   DED4 2A              STA  UL
6652   DED5 FD 88           PSH  X
6653   DED7 68 78           LDI  UH,$78
6654   DED9             
6655   DED9             BCMD_TIME_14: ; $DED9
6656   DED9 4A 9C           LDI  XL,$9C
6657   DEDB 48 78           LDI  XH,$78
6658   DEDD 65              LIN  U
6659   DEDE 18              STA  YH
6660   DEDF 65              LIN  U
6661   DEE0 1A              STA  YL
6662   DEE1 8E 10           BCH BCMD_TIME_15 ; $DEF3
6663   DEE3             
6664   DEE3             
6665   DEE3             
6666   DEE3             ;------------------------------------------------------------------------------
6667   DEE3             ; (D4) Save the pointer of the current processing status to memory
6668   DEE3             ;            Address: DEE3 (D4)
6669   DEE3             ;                     D1 determines which area of program pointer is updated.
6670   DEE3             ;                     D1 can assume the following values:
6671   DEE3             ;                     A0: The address of the line currently being processed is 
6672   DEE3             ;                         transferred to (78A0-78A1). Contents of the Y Reg. 
6673   DEE3             ;                         The current line number is taken from (789C-789D) and 
6674   DEE3             ;                         transferred to (78A2 f.). The program start address
6675   DEE3             ;                         is taken from (789E f.) and transferred to (78A4 f.).
6676   DEE3             ;                     AC: Information about a BREAK that has been carried out 
6677   DEE3             ;                         is saved in same way as data byte A0 to (78AC ff.).
6678   DEE3             ;                     B2: Similar ERROR information as (78B2 ff.)
6679   DEE3             ;   Entry parameters: Y-Reg points to Basic main memory
6680   DEE3             ;
6681   DEE3             ; Modified registers: X-Reg, Y-Reg
6682   DEE3             ;   Error conditions: None
6683   DEE3             ;------------------------------------------------------------------------------
6684   DEE3 FD 2A           POP  U
6685   DEE5 65              LIN  U
6686   DEE6 0A              STA  XL
6687   DEE7 FD A8           PSH  U
6688   DEE9 48 78           LDI  XH,$78
6689   DEEB             
6690   DEEB             BCMD_TIME_16: ; $DEEB
6691   DEEB 68 78           LDI  UH,$78
6692   DEED 6A 9C           LDI  UL,$9C
6693   DEEF 94              LDA  YH
6694   DEF0 41              SIN  X
6695   DEF1 14              LDA  YL
6696   DEF2             
6697   DEF2             BCMD_TIME_17: ; $DEF2
6698   DEF2 41              SIN  X
6699   DEF3             
6700   DEF3             BCMD_TIME_15: ; $DEF3
6701   DEF3 65              LIN  U
6702   DEF4 41              SIN  X
6703   DEF5 65              LIN  U
6704   DEF6 41              SIN  X
6705   DEF7 65              LIN  U
6706   DEF8 41              SIN  X
6707   DEF9 65              LIN  U
6708   DEFA 41              SIN  X
6709   DEFB 9A              RTN
6710   DEFC             
6711   DEFC             
6712   DEFC             
6713   DEFC             ;------------------------------------------------------------------------------
6714   DEFC             ; $DEFC - Write address, line number, and start address of nth instruction to stack
6715   DEFC             ;------------------------------------------------------------------------------
6716   DEFC             BCMD_TIME_5: 
6717   DEFC C8              VEJ  (C8) \ ABRF(BCMD_TIME_6) ; $DEFE
6717   DEFD 00          
6718   DEFE             
6719   DEFE             ;------------------------------------------------------------------------------
6720   DEFE             ; $DEFE - Address, line number, program start of current instruction on basic stack
6721   DEFE             ;------------------------------------------------------------------------------
6722   DEFE             BCMD_TIME_6: ; 
6723   DEFE CD 18           VMJ  ($18)
6724   DF00 CC              VEJ  (CC) \ ABYTL($7881)
6724   DF01 81          
6725   DF02 48 7A           LDI  XH,$7A
6726   DF04 9E 1B           BCH BCMD_TIME_16 ; $DEEB
6727   DF06             
6728   DF06             
6729   DF06             ;------------------------------------------------------------------------------
6730   DF06             ; $DF06 - Transfers 3 addresses (program pointer) within memory map
6731   DF06             ; Relocate 6 bytes starting from address 78UL to 78XL.
6732   DF06             ;------------------------------------------------------------------------------
6733   DF06             BCMD_TIME_1: ; 
6734   DF06 68 78           LDI  UH,$78
6735   DF08 48 78           LDI  XH,$78
6736   DF0A 65              LIN  U
6737   DF0B 41              SIN  X
6738   DF0C 65              LIN  U
6739   DF0D 9E 1D           BCH BCMD_TIME_17 ; $DEF2
6740   DF0F             
6741   DF0F             
6742   DF0F             
6743   DF0F             ;------------------------------------------------------------------------------
6744   DF0F             ; (36) $DF0F - Create CSI in AR-X for string. C=0 if no string found
6745   DF0F             ;            Address: DF0F (36)
6746   DF0F             ;   Entry parameters: Y-Reg points to double quotes or name of string variable 
6747   DF0F             ;                     in main memory.
6748   DF0F             ;
6749   DF0F             ; Modified registers: AR-X contains the CSI of the string
6750   DF0F             ;   Error conditions: If no string was recognized, Carry=0
6751   DF0F             ;------------------------------------------------------------------------------
6752   DF0F             STRING_2_CSI: ; 
6753   DF0F FD 98           PSH  Y
6754   DF11 C2              VEJ  (C2) \ ACHR($22) \ ABRF(BCMD_TIME_18) ; $DF18
6754   DF12 22          
6754   DF13 04          
6755   DF14 CD 0C           VMJ  ($0C)
6756   DF16 8E 04           BCH BCMD_TIME_19 ; $DF1C
6757   DF18             
6758   DF18             BCMD_TIME_18: ; $DF18
6759   DF18 C6              VEJ  (C6)
6760   DF19 CE              VEJ  (CE) \ ABYT($40) \ ABRF(BCMD_TIME_20) ; $DF1F
6760   DF1A 40          
6760   DF1B 03          
6761   DF1C             
6762   DF1C             BCMD_TIME_19: ; $DF1C
6763   DF1C FB              SEC
6764   DF1D 8E 01           BCH BCMD_TIME_21 ; $DF20
6765   DF1F             
6766   DF1F             BCMD_TIME_20: ; $DF1F
6767   DF1F F9              REC
6768   DF20             
6769   DF20             BCMD_TIME_21: ; $DF20
6770   DF20 FD 0A           POP  X
6771   DF22 9A              RTN
6772   DF23             
6773   DF23             
6774   DF23             ;------------------------------------------------------------------------------
6775   DF23             ; (34) Syntax check and multiple branching
6776   DF23             ; Multiple branching after character test
6777   DF23             ; 
6778   DF23             ; Address:	DF23 (34)
6779   DF23             ;      D1: Number of character tests +1
6780   DF23             ;      D2: Sign that the accumulator is being checked for agreement.
6781   DF23             ;      D3: Relative jump by D3 bytes if agreement with the accumulator was
6782   DF23             ;          found. Each additional character that is tested for agreement
6783   DF23             ;          with the accumulator always occupies two bytes analogous to D2 & D3
6784   DF23             ;                     
6785   DF23             ; 
6786   DF23             ;    Entry Parameter: Accumulator contains characters whose occurrences are 
6787   DF23             ;                     searched for in the branching table. The character to be 
6788   DF23             ;                     tested should be stored in UH, otherwise it will be lost.
6789   DF23             ; Modified Registers: X-Reg contains return address. U Reg, accumulator
6790   DF23             ;   Error conditions: None
6791   DF23             ;------------------------------------------------------------------------------
6792   DF23             CHARTESTBRANCH: ; $DF23
6793   DF23 FD 0A           POP  X
6794   DF25 FD A8           PSH  U
6795   DF27 28              STA  UH
6796   DF28 45              LIN  X
6797   DF29 2A              STA  UL
6798   DF2A A4              LDA  UH
6799   DF2B             
6800   DF2B             BCMD_TIME_23: ; $DF2B
6801   DF2B F7              CIN
6802   DF2C 8B 05           BZS BCMD_TIME_22 ; $DF33
6803   DF2E 44              INC  X
6804   DF2F 88 06           LOP  UL,BCMD_TIME_23 ; $DF2B
6805   DF31 8E 03           BCH BCMD_TIME_24 ; $DF36
6806   DF33             
6807   DF33             BCMD_TIME_22: ; $DF33
6808   DF33 45              LIN  X
6809   DF34 FD CA           ADR  X
6810   DF36             
6811   DF36             BCMD_TIME_24: ; $DF36
6812   DF36 FD 2A           POP  U
6813   DF38 A4              LDA  UH
6814   DF39 FD 5E           STX  P
6815   DF3B             
6816   DF3B             
6817   DF3B             
6818   DF3B             ;------------------------------------------------------------------------------
6819   DF3B             ; (D8) Checks calculator mode $DF3B
6820   DF3B             ;            Address: DF3B (D8)
6821   DF3B             ; 
6822   DF3B             ;    Entry Parameter: None
6823   DF3B             ; Modified Registers: Zero flag= 1 if calculator is in direct mode
6824   DF3B             ;   Error conditions: None
6825   DF3B             ;------------------------------------------------------------------------------
6826   DF3B             CHECK_CALC_MODE: ; $DF38 (d8)
6827   DF3B A5 78 9D        LDA  (CURR_LINE_L)
6828   DF3E AB 78 9C        ORA  (CURR_LINE_H)
6829   DF41 9A              RTN
6830   DF42             
6831   DF42             
6832   DF42             
6833   DF42             ;------------------------------------------------------------------------------
6834   DF42             ; $DF42 - Syntax check: Checks whether the string is enclosed in “…” max 80 characters. 
6835   DF42             ; Whether the program is running. If so, Z=0.
6836   DF42             ;------------------------------------------------------------------------------
6837   DF42             BCMD_TIME_3: ; 
6838   DF42 6A 50           LDI  UL,$50
6839   DF44             
6840   DF44             ;------------------------------------------------------------------------------
6841   DF44             ; $DF44 - As above, Syntax check: whether the string is enclosed by “…”. If not UL=FF.
6842   DF44             ;------------------------------------------------------------------------------
6843   DF44             BCMD_TIME_2: ; 
6844   DF44 68 00           LDI  UH,$00
6845   DF46 62              DEC  UL
6846   DF47             
6847   DF47             BCMD_TIME_29: ; $DF47
6848   DF47 55              LIN  Y
6849   DF48 CD 34           VMJ  ($34) \ ABYT($03) \ ABYT($2C) \ 
6849   DF4A 03          
6849   DF4B 2C          
6849   DF4C             
6850   DF4C 0C                   ABRF(BCMD_TIME_25) \ ABYT($22) \ ABRF(BCMD_TIME_26) \ 
6850   DF4D 22          
6850   DF4E 0F          
6850   DF4F             
6851   DF4F 0D                   ABYT($0D) \ ABRF(BCMD_TIME_27) \ ABYT($3A) \ ABRF(BCMD_TIME_28)
6851   DF50 06          
6851   DF51 3A          
6851   DF52 02          
6852   DF53 9E 0E           BCH BCMD_TIME_29 ; $DF47
6853   DF55             
6854   DF55             BCMD_TIME_28: ; $DF55
6855   DF55 99 10           BZR BCMD_TIME_29 ; $DF47
6856   DF57             
6857   DF57             BCMD_TIME_27: ; $DF57
6858   DF57 56              DEC  Y
6859   DF58 9A              RTN
6860   DF59             
6861   DF59             BCMD_TIME_25: ; $DF59
6862   DF59 99 14           BZR BCMD_TIME_29 ; $DF47
6863   DF5B 88 16           LOP  UL,BCMD_TIME_29 ; $DF47
6864   DF5D 9A              RTN
6865   DF5E             
6866   DF5E             BCMD_TIME_26: ; $DF5E
6867   DF5E BD 01           EAI  $01
6868   DF60 28              STA  UH
6869   DF61 9E 1C           BCH BCMD_TIME_29 ; $DF47
6870   DF63             
6871   DF63             
6872   DF63             
6873   DF63             ;------------------------------------------------------------------------------
6874   DF63             ; (22) $DF63 - If string constant follows in main memory, save CSI to AR-X $DF63
6875   DF63             ;            Address:	DF63 (22)
6876   DF63             ; 
6877   DF63             ;    Entry Parameter:	Y-Reg must point to main memory
6878   DF63             ; Modified Registers:	Y-Reg points to the next memory location in main memory following the string. AR-X may contain CSI. U-Reg contains the next character/token.
6879   DF63             ;   Error conditions:	Carry=1 if string found and CSI created in AR-X Carry=0 if no string found
6880   DF63             ;------------------------------------------------------------------------------
6881   DF63             IS_STRING: ;    
6882   DF63 C2              VEJ  (C2) \ ACHR($22) \ ABRF($DF70)
6882   DF64 22          
6882   DF65 0A          
6883   DF66 CD 0C           VMJ  ($0C)
6884   DF68 C2              VEJ  (C2) \ ACHR($0D) \ ABRF($DF6C)
6884   DF69 0D          
6884   DF6A 01          
6885   DF6B 9A              RTN
6886   DF6C C4              VEJ  (C4) \ ACHR($3A) \ ABRF($DF70)
6886   DF6D 3A          
6886   DF6E 01          
6887   DF6F C0              VEJ  (C0)
6888   DF70 F9              REC
6889   DF71 9A              RTN
6890   DF72             
6891   DF72             
6892   DF72             
6893   DF72             ;------------------------------------------------------------------------------
6894   DF72             ; (20) $DF72 - Find next beginning of line from (Y-Reg)
6895   DF72             ; Increments Y-Reg to the low byte of the next line number (REM).
6896   DF72             ;------------------------------------------------------------------------------
6897   DF72 B5 0D           LDI  A,$0D
6898   DF74 6A 4C           LDI  UL,$4C
6899   DF76 FD 18           LDX  Y
6900   DF78             
6901   DF78             BCMD_TIME_31: ; $DF78
6902   DF78 F7              CIN
6903   DF79 8B 02           BZS BCMD_TIME_30 ; $DF7D
6904   DF7B 88 05           LOP  UL,BCMD_TIME_31 ; $DF78
6905   DF7D             
6906   DF7D             BCMD_TIME_30: ; $DF7D
6907   DF7D FD 5A           STX  Y
6908   DF7F 9A              RTN
6909   DF80             
6910   DF80             
6911   DF80             
6912   DF80             ;------------------------------------------------------------------------------
6913   DF80             ; (18) $DF80 - Updates program parameters for next instruction
6914   DF80             ;------------------------------------------------------------------------------
6915   DF80 D4              VEJ  (D4) \ ABYT($A0)
6915   DF81 A0          
6916   DF82 83 0A           BCS BCMD_TIME_32 ; $DF8E
6917   DF84 55              LIN  Y
6918   DF85 AE 78 9C        STA  (CURR_LINE_H)
6919   DF88 55              LIN  Y
6920   DF89 AE 78 9D        STA  (CURR_LINE_L)
6921   DF8C 54              INC  Y
6922   DF8D 9A              RTN
6923   DF8E             
6924   DF8E             BCMD_TIME_32: ; $DF8E
6925   DF8E 94              LDA  YH
6926   DF8F BB 80           ORI  A,$80
6927   DF91 18              STA  YH
6928   DF92 9A              RTN
6929   DF93             
6930   DF93             
6931   DF93             
6932   DF93             ;------------------------------------------------------------------------------
6933   DF93             ; (12) $DF93 - Loads program start address to X-Reg
6934   DF93             ;------------------------------------------------------------------------------
6935   DF93 CC              VEJ  (CC) \ ABYTL($61) ; $7861
6935   DF94 61          
6936   DF95 DB              ROL
6937   DF96 81 02           BCR BCMD_TIME_33 ; $DF9A
6938   DF98 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
6938   DF99 65          
6939   DF9A             
6940   DF9A             BCMD_TIME_33: ; $DF9A
6941   DF9A 9A              RTN
6942   DF9B B5 10           LDI  A,$10
6943   DF9D AE 78 94        STA  (STR_BUF_PTR_L)
6944   DFA0             
6945   DFA0             
6946   DFA0             ;------------------------------------------------------------------------------
6947   DFA0             ; $DFA0 - Inserts a string, the address of which is stored in 
6948   DFA0             ; the AR-X, into the string buffer. Jump if overflow. Update buffer pointers.
6949   DFA0             ;------------------------------------------------------------------------------
6950   DFA0             BCMD_TIME_8: ; $DFA0
6951   DFA0 DC              VEJ  (DC)
6952   DFA1             
6953   DFA1             ;------------------------------------------------------------------------------
6954   DFA1             ; $DFA1 - Inserts String pointed to by X-Res into String buffer. Jump if overflow.
6955   DFA1             ;------------------------------------------------------------------------------
6956   DFA1             XREG2STRBUF: ; 
6957   DFA1 FD 98           PSH  Y
6958   DFA3 BE DF B4        SJP  (XREG2STRBUF_1) ; $DFB4
6959   DFA6 C3 4A           VCS  ($4A) ;($4A)($25)
6960   DFA8 24              LDA  UL
6961   DFA9             
6962   DFA9             XREG2STRBUF_3: ; $DFA9
6963   DFA9 DF              DEC  A
6964   DFAA 81 03           BCR XREG2STRBUF_2 ; $DFAF
6965   DFAC F5              TIN
6966   DFAD 9E 06           BCH XREG2STRBUF_3 ; $DFA9
6967   DFAF             
6968   DFAF             XREG2STRBUF_2: ; $DFAF
6969   DFAF BE DF C5        SJP  (ARX2STRBUF_1) ; $DFC5
6970   DFB2 CD 4E           VMJ  ($4E) ; ($4E)($27)
6971   DFB4             
6972   DFB4             
6973   DFB4             
6974   DFB4             ;------------------------------------------------------------------------------
6975   DFB4             ; $DFB4 - Checks whether the string buffer can still hold the number of 
6976   DFB4             ; characters contained in the accumulator. If not, C=1.
6977   DFB4             ;------------------------------------------------------------------------------
6978   DFB4             XREG2STRBUF_1: ; $DFB4
6979   DFB4 2A              STA  UL
6980   DFB5 A5 78 94        LDA  (STR_BUF_PTR_L)
6981   DFB8 1A              STA  YL
6982   DFB9 F9              REC
6983   DFBA 22              ADC  UL
6984   DFBB 68 0F           LDI  UH,$0F
6985   DFBD 83 02           BCS XREG2STRBUF_4 ; $DFC1
6986   DFBF B7 61           CPI  A,$61
6987   DFC1             
6988   DFC1             XREG2STRBUF_4: ; $DFC1
6989   DFC1 58 7B           LDI  YH,$7B
6990   DFC3 9A              RTN
6991   DFC4             
6992   DFC4             
6993   DFC4             
6994   DFC4             ;------------------------------------------------------------------------------
6995   DFC4             ; $DFC4 - Save String buffer pointers to X-Reg and AR-X. Updating pointer with YL
6996   DFC4             ;------------------------------------------------------------------------------
6997   DFC4             ARX2STRBUF: ; 
6998   DFC4 2A              STA  UL
6999   DFC5             
7000   DFC5             ; $DFC5 Loads AR-X with a pointer to the string buffer.
7001   DFC5             ARX2STRBUF_1: ; $DFC5
7002   DFC5 A5 78 94        LDA  (STR_BUF_PTR_L)
7003   DFC8 0A              STA  XL
7004   DFC9 14              LDA  YL
7005   DFCA AE 78 94        STA  (STR_BUF_PTR_L)
7006   DFCD 48 7B           LDI  XH,$7B
7007   DFCF 24              LDA  UL
7008   DFD0 8B 04           BZS ARX2STRBUF_2 ; $DFD6
7009   DFD2 E9 78 74 7F     ANI  (CURSOR_ENA),$7F
7010   DFD6             
7011   DFD6             ARX2STRBUF_2: ; $DFD6
7012   DFD6 BA DE AF        JMP  BCMD_TIME_10 ; $DEAF
7013   DFD9 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
7013   DFDA 65          
7014   DFDB             
7015   DFDB             ARX2STRBUF_3: ; $DFD8
7016   DFDB A5 78 64        LDA  (RAM_END_H)
7017   DFDE 28              STA  UH
7018   DFDF 6A 00           LDI  UL,$00
7019   DFE1             
7020   DFE1             ARX2STRBUF_4: ; $DFE1
7021   DFE1 66              DEC  U
7022   DFE2             
7023   DFE2             
7024   DFE2             ;------------------------------------------------------------------------------
7025   DFE2             ;  $DFE2 U-Reg=U-Reg-X-Reg. If overflow occurs C=0 and UH=16
7026   DFE2             ;------------------------------------------------------------------------------
7027   DFE2             U_MINUS_X: ; 
7028   DFE2 FB              SEC
7029   DFE3 24              LDA  UL
7030   DFE4 00              SBC  XL
7031   DFE5 2A              STA  UL
7032   DFE6 A4              LDA  UH
7033   DFE7 80              SBC  XH
7034   DFE8 28              STA  UH
7035   DFE9 83 02           BCS U_MINUS_X_1 ; $DFED
7036   DFEB 68 16           LDI  UH,$16
7037   DFED             
7038   DFED             U_MINUS_X_1: ; $DFED
7039   DFED 9A              RTN
7040   DFEE             
7041   DFEE             
7042   DFEE             
7043   DFEE             ;------------------------------------------------------------------------------
7044   DFEE             ; $DFEE - Calculates the free memory space "MEM" in U-Reg
7045   DFEE             ;------------------------------------------------------------------------------
7046   DFEE             MEM_IN_UREG: ; 
7047   DFEE CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
7047   DFEF 67          
7048   DFF0 44              INC  X
7049   DFF1 9E 18           BCH ARX2STRBUF_3 ; $DFDB
7050   DFF3             
7051   DFF3             
7052   DFF3             
7053   DFF3             ;------------------------------------------------------------------------------
7054   DFF3             ; $DFF3 - U-Reg= STATUS 1-2. Program start after X-Reg; length according to U.
7055   DFF3             ;------------------------------------------------------------------------------
7056   DFF3             PRGST2XREG: ; $DFF3
7057   DFF3 CD 12           VMJ  ($12)
7058   DFF5             
7059   DFF5             
7060   DFF5             
7061   DFF5             ;------------------------------------------------------------------------------
7062   DFF5             ; (16) $DFF5 U-Reg= U-Reg - X-Reg. Determines the difference between 
7063   DFF5             ; the X-Reg and the end of the program memory (STATUS 1-2).
7064   DFF5             ;------------------------------------------------------------------------------
7065   DFF5             PRGST2XREG_1: ; $DFF5
7066   DFF5 F4              VEJ  (F4) \ AWRD(BASPRG_END_H)
7066   DFF6 78 67       
7067   DFF8 9E 19           BCH ARX2STRBUF_4 ; $DFE1
7068   DFFA             
7069   DFFA             ;------------------------------------------------------------------------------
7070   DFFA             ; (14) $DFFA U-Reg= STATUS 1-2 . Loads X with program start, U with length.
7071   DFFA             ;------------------------------------------------------------------------------
7072   DFFA CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
7072   DFFB 65          
7073   DFFC 9E 09           BCH PRGST2XREG_1 ; $DFF5
7074   DFFE E4              VEJ  (E4)
7075   DFFF E4              VEJ  (E4)
7076   E000             
7077   E000             
7078   E000             
7079   E000             ;------------------------------------------------------------------------------
7080   E000             ; $E000 - Reset-Routine
7081   E000             ;------------------------------------------------------------------------------
7082   E000             RESET: ; 
7083   E000 FD BE           RIE
7084   E002 B5 00           LDI  A,$00
7085   E004 FD CE           AM0
7086   E006 FD C0           RDP
7087   E008 6A C0           LDI  UL,$C0
7088   E00A             
7089   E00A             RESET_1: ; $E00A
7090   E00A 88 02           LOP  UL,RESET_1 ; $E00A
7091   E00C FD C1           SDP
7092   E00E 6A C0           LDI  UL,$C0
7093   E010             
7094   E010             RESET_2: ; $E010
7095   E010 88 02           LOP  UL,RESET_2 ; $E010
7096   E012 FD C0           RDP
7097   E014 68 96           LDI  UH,$96
7098   E016 6A FF           LDI  UL,$FF
7099   E018             
7100   E018             RESET_3: ; $E018
7101   E018 88 02           LOP  UL,RESET_3 ; $E018
7102   E01A FD 62           DEC  UH
7103   E01C 93 06           BCS RESET_3 ; $E018
7104   E01E B5 00           LDI  A,$00
7105   E020 FD AE F0 0A     STA  #(PC1500_MSK_REG)
7106   E024 FD AE B0 0A     STA  #($B00A)
7107   E028 FD AE F0 0B     STA  #(PC1500_IF_REG)
7108   E02C FD AE DC 00     STA  #($DC00)
7109   E030 FD AE B0 0B     STA  #($B00B)
7110   E034 48 7A           LDI  XH,$7A
7111   E036 4A 10           LDI  XL,$10
7112   E038 6A 0F           LDI  UL,$0F
7113   E03A B5 A0           LDI  A,$A0
7114   E03C 07              CPA  (X)
7115   E03D 8B 01           BZS RESET_4 ; $E040
7116   E03F D5              SHR
7117   E040             
7118   E040             RESET_4: ; $E040
7119   E040 07              CPA  (X)
7120   E041 44              INC  X
7121   E042 89 09           BZR RESET_5 ; $E04D
7122   E044 DD              INC  A
7123   E045 88 07           LOP  UL,RESET_4 ; $E040
7124   E047 D9              SHL
7125   E048 B5 00           LDI  A,$00
7126   E04A DB              ROL
7127   E04B 8E 10           BCH RESET_6 ; $E05D
7128   E04D             
7129   E04D             RESET_5: ; $E04D
7130   E04D B5 41           LDI  A,$41
7131   E04F AE 76 4E        STA  (DISP_BUFF + $4E)
7132   E052 B5 43           LDI  A,$43
7133   E054 AE 76 4F        STA  (DISP_BUFF + $4F)
7134   E057 E9 78 6B 00     ANI  (BEEP_PTR),$00
7135   E05B B5 02           LDI  A,$02
7136   E05D             
7137   E05D             RESET_6: ; $E05D
7138   E05D 48 7A           LDI  XH,$7A
7139   E05F 4A 20           LDI  XL,$20
7140   E061 41              SIN  X
7141   E062 B5 00           LDI  A,$00
7142   E064 41              SIN  X
7143   E065 43              SDE  X
7144   E066 46              DEC  X
7145   E067 4D 01           BII  (X),$01
7146   E069 89 DC           BZR RESET_7 ; $E147
7147   E06B AA 78 4F        LDI  S,(CPU_STACK + $4F)
7148   E06E EB 78 5D FF     ORI  (KATAFLAGS),$FF
7149   E072 E9 7B 0E 01     ANI  (CURS_CTRL),$01
7150   E076 B5 60           LDI  A,$60
7151   E078 AE 79 D1        STA  (OPN)
7152   E07B BE F5 B5        SJP  (BCMD_PI)
7153   E07E CD 5C           VMJ  ($5C) ; ($5C)($2E)
7154   E080 48 79           LDI  XH,$79
7155   E082 4A D2           LDI  XL,$D2
7156   E084 6A 0C           LDI  UL,$0C
7157   E086 CD BA           VMJ  ($BA) ; ($BA)($5D)
7158   E088             
7159   E088             RESET_22: ; $E088
7160   E088 BE E1 53        SJP  (IO_INT)
7161   E08B 58 7A           LDI  YH,$7A
7162   E08D 5A 14           LDI  YL,$14
7163   E08F B5 FF           LDI  A,$FF
7164   E091 6A 04           LDI  UL,$04
7165   E093             
7166   E093             RESET_8: ; $E093
7167   E093 53              SDE  Y
7168   E094 88 03           LOP  UL,RESET_8 ; $E093
7169   E096 48 00           LDI  XH,$00
7170   E098             
7171   E098             RESET_11: ; $E098
7172   E098 4A 00           LDI  XL,$00
7173   E09A 05              LDA  (X)
7174   E09B 2A              STA  UL
7175   E09C B5 5A           LDI  A,$5A
7176   E09E 0E              STA  (X)
7177   E09F 07              CPA  (X)
7178   E0A0 89 22           BZR RESET_9 ; $E0C4
7179   E0A2 B5 A5           LDI  A,$A5
7180   E0A4 0E              STA  (X)
7181   E0A5 07              CPA  (X)
7182   E0A6 89 1C           BZR RESET_9 ; $E0C4
7183   E0A8 24              LDA  UL
7184   E0A9 0E              STA  (X)
7185   E0AA 5A 13           LDI  YL,$13
7186   E0AC 15              LDA  (Y)
7187   E0AD DD              INC  A
7188   E0AE 81 02           BCR RESET_10 ; $E0B2
7189   E0B0 84              LDA  XH
7190   E0B1 1E              STA  (Y)
7191   E0B2             
7192   E0B2             RESET_10: ; $E0B2
7193   E0B2 FD 40           INC  XH
7194   E0B4 4C 70           CPI  XH,$70
7195   E0B6 91 20           BCR RESET_11 ; $E098
7196   E0B8 5A 14           LDI  YL,$14
7197   E0BA             
7198   E0BA             RESET_15: ; $E0BA
7199   E0BA 84              LDA  XH
7200   E0BB 53              SDE  Y
7201   E0BC 15              LDA  (Y)
7202   E0BD DD              INC  A
7203   E0BE 81 02           BCR RESET_12 ; $E0C2
7204   E0C0 84              LDA  XH
7205   E0C1 1E              STA  (Y)
7206   E0C2             
7207   E0C2             RESET_12: ; $E0C2
7208   E0C2 8E 29           BCH RESET_13 ; $E0ED
7209   E0C4             
7210   E0C4             RESET_9: ; $E0C4
7211   E0C4 5A 13           LDI  YL,$13
7212   E0C6 45              LIN  X
7213   E0C7 B7 55           CPI  A,$55
7214   E0C9 89 1C           BZR RESET_14 ; $E0E7
7215   E0CB 55              LIN  Y
7216   E0CC DD              INC  A
7217   E0CD 91 15           BCR RESET_15 ; $E0BA
7218   E0CF 5A 10           LDI  YL,$10
7219   E0D1 15              LDA  (Y)
7220   E0D2 DD              INC  A
7221   E0D3 91 23           BCR RESET_10 ; $E0B2
7222   E0D5 45              LIN  X
7223   E0D6 DD              INC  A
7224   E0D7 83 02           BCS RESET_16 ; $E0DB
7225   E0D9 DF              DEC  A
7226   E0DA 08              STA  XH
7227   E0DB             
7228   E0DB             RESET_16: ; $E0DB
7229   E0DB 84              LDA  XH
7230   E0DC 51              SIN  Y
7231   E0DD 05              LDA  (X)
7232   E0DE D9              SHL
7233   E0DF 93 2F           BCS RESET_10 ; $E0B2
7234   E0E1 45              LIN  X
7235   E0E2 82              ADC  XH
7236   E0E3 51              SIN  Y
7237   E0E4 F5              TIN
7238   E0E5 9E 35           BCH RESET_10 ; $E0B2
7239   E0E7             
7240   E0E7             RESET_14: ; $E0E8
7241   E0E7 55              LIN  Y
7242   E0E8 DD              INC  A
7243   E0E9 91 31           BCR RESET_15 ; $E0BA
7244   E0EB 9E 3B           BCH RESET_10 ; $E0B2
7245   E0ED             
7246   E0ED             RESET_13: ; $E0ED
7247   E0ED 48 78           LDI  XH,$78
7248   E0EF 4A 64           LDI  XL,$64
7249   E0F1 54              INC  Y
7250   E0F2 6A 04           LDI  UL,$04
7251   E0F4             
7252   E0F4             RESET_18: ; $E0F4
7253   E0F4 57              LDE  Y
7254   E0F5 07              CPA  (X)
7255   E0F6 8B 04           BZS RESET_17 ; $E0FC
7256   E0F8 EB 7A 20 04     ORI  (ARV),$04
7257   E0FC             
7258   E0FC             RESET_17: ; $E0FC
7259   E0FC 43              SDE  X
7260   E0FD 88 0B           LOP  UL,RESET_18 ; $E0F4
7261   E0FF B5 00           LDI  A,$00
7262   E101 CD 5A           VMJ  ($5A) ; ($5A)($2D)
7263   E103 EB 7B 0E 01     ORI  (CURS_CTRL),$01
7264   E107 CD BE           VMJ  ($BE) ; ($BE)($5F)
7265   E109 81 15           BCR RESET_19 ; $E120
7266   E10B             
7267   E10B             RESET_20: ; $E10B
7268   E10B FD C8           PSH  A
7269   E10D FD 88           PSH  X
7270   E10F 4A 0A           LDI  XL,$0A
7271   E111 68 E1           LDI  UH,$E1
7272   E113 6A 18           LDI  UL,$18
7273   E115 BA E2 0E        JMP  ISR_HANDLER_1 ; $E20E
7274   E118 FD 0A           POP  X
7275   E11A FD 8A           POP  A
7276   E11C CD BC           VMJ  ($BC) ; ($BC)($5E)
7277   E11E 93 15           BCS RESET_20 ; $E10B
7278   E120             
7279   E120             RESET_19: ; $E120
7280   E120 FD EB F0 0A     ORI  #(PC1500_MSK_REG),$01
7280   E124 01 
7281   E125 FD EB B0 0A     ORI  #($B00A),$01
7281   E129 01 
7282   E12A FD C1           SDP
7283   E12C FD 81           SIE
7284   E12E 48 7A           LDI  XH,$7A
7285   E130 4A 20           LDI  XL,$20
7286   E132 45              LIN  X
7287   E133 BF 01           BII  A,$01
7288   E135 8B 0D           BZS RESET_21 ; $E144
7289   E137 45              LIN  X
7290   E138 89 0A           BZR RESET_21 ; $E144
7291   E13A 05              LDA  (X)
7292   E13B 89 07           BZR RESET_21 ; $E144
7293   E13D FD 2A           POP  U
7294   E13F FD 1A           POP  Y
7295   E141 BA E2 43        JMP  WAIT4KB ; $E243
7296   E144             
7297   E144             RESET_21: ; $E144
7298   E144 BA C9 E4        JMP  COLD_START ; $C9E4
7299   E147             
7300   E147             RESET_7: ; $E147
7301   E147 A5 7A 30        LDA  (ARS)
7302   E14A 08              STA  XH
7303   E14B A5 7A 31        LDA  (ARS + $01)
7304   E14E 0A              STA  XL
7305   E14F FD 4E           STX  S
7306   E151 9E CB           BCH RESET_22 ; $E088
7307   E153             
7308   E153             
7309   E153             ; $E153 Initializes I/O module with table from E168.
7310   E153             IO_INT:
7311   E153 FD 98           PSH  Y
7312   E155 48 E1           LDI  XH,$E1
7313   E157 4A 68           LDI  XL,$68
7314   E159 58 F0           LDI  YH,$F0
7315   E15B 5A 07           LDI  YL,$07
7316   E15D 6A 08           LDI  UL,$08
7317   E15F             
7318   E15F             IO_INT_1: ; $E15F
7319   E15F 45              LIN  X
7320   E160 FD 1E           STA  #(Y)
7321   E162 54              INC  Y
7322   E163 88 06           LOP  UL,IO_INT_1 ; $E15F
7323   E165 FD 1A           POP  Y
7324   E167 9A              RTN
7325   E168             
7326   E168             
7327   E168             ;------------------------------------------------------------------------------
7328   E168             ; $E168 - Parameters for initializing the I/0 ports
7329   E168             ;------------------------------------------------------------------------------
7330   E168             IO_TBL: ; 
7331   E168 23              .BYTE $23 ; #F007
7332   E169 C0              .BYTE $C0 ; #F008
7333   E16A D7              .BYTE $D7 ; #F009
7334   E16B 00              .BYTE $00 ; #F00A
7335   E16C 00              .BYTE $00 ; #F00B
7336   E16D 00              .BYTE $00 ; #F00C
7337   E16E 00              .BYTE $00 ; #F00D
7338   E16F FF              .BYTE $FF ; #F00E
7339   E170 00              .BYTE $00 ; #F00F
7340   E171             
7341   E171             
7342   E171             
7343   E171             ;------------------------------------------------------------------------------
7344   E171             ; (F8) $E171 - Maskable interrupt routine
7345   E171             ;------------------------------------------------------------------------------
7346   E171             ISR_HANDLER: ; 
7347   E171 FD C8           PSH  A
7348   E173 FD 88           PSH  X
7349   E175 FD 98           PSH  Y
7350   E177 FD A8           PSH  U
7351   E179 A5 79 D0        LDA  (PU_PV)
7352   E17C FD C8           PSH  A
7353   E17E FD ED F0 0B     BII  #(PC1500_IF_REG),$01
7353   E182 01 
7354   E183 8B 65           BZS $E1EA
7355   E185 FD E9 F0 0A     ANI  #(PC1500_MSK_REG),$FE
7355   E189 FE 
7356   E18A FD E9 B0 0A     ANI  #($B00A),$FE
7356   E18E FE 
7357   E18F FD A5 DE 00     LDA  #($DE00)
7358   E193 FD E9 B0 0B     ANI  #($B00B),$FE
7358   E197 FE 
7359   E198 FD AE DC 00     STA  #($DC00)
7360   E19C BD FF           EAI  $FF
7361   E19E 8B 2E           BZS ISR_HANDLER_2 ; $E1CE
7362   E1A0             
7363   E1A0             ISR_HANDLER_8: ; $E1A0
7364   E1A0 B8              RPV
7365   E1A1             
7366   E1A1             ISR_HANDLER_6:  ;$E1A1
7367   E1A1 48 B0           LDI  XH,$B0
7368   E1A3 4A 00           LDI  XL,$00
7369   E1A5             
7370   E1A5             ISR_HANDLER_5: ; $E1A5
7371   E1A5 FD 88           PSH  X
7372   E1A7 D5              SHR
7373   E1A8 FD C8           PSH  A
7374   E1AA 81 0D           BCR ISR_HANDLER_3 ; $E1B9
7375   E1AC B5 55           LDI  A,$55
7376   E1AE 07              CPA  (X)
7377   E1AF 89 08           BZR ISR_HANDLER_3 ; $E1B9
7378   E1B1 68 E1           LDI  UH,$E1
7379   E1B3 6A B9           LDI  UL,$B9
7380   E1B5 4A 13           LDI  XL,$13
7381   E1B7 8E 55           BCH ISR_HANDLER_1 ; $E20E
7382   E1B9             
7383   E1B9             ISR_HANDLER_3: ; $E189
7384   E1B9 FD 8A           POP  A
7385   E1BB FD 0A           POP  X
7386   E1BD 8B 0F           BZS ISR_HANDLER_2 ; $E1CE
7387   E1BF 4C 90           CPI  XH,$90
7388   E1C1 81 08           BCR ISR_HANDLER_4 ; $E1CB
7389   E1C3 1A              STA  YL
7390   E1C4 B5 EF           LDI  A,$EF
7391   E1C6 82              ADC  XH
7392   E1C7 08              STA  XH
7393   E1C8 14              LDA  YL
7394   E1C9 9E 26           BCH ISR_HANDLER_5 ; $E1A5
7395   E1CB             
7396   E1CB             ISR_HANDLER_4: ; $E1CB
7397   E1CB A8              SPV
7398   E1CC 9E 2D           BCH ISR_HANDLER_6 ; $E1A1
7399   E1CE             
7400   E1CE             ISR_HANDLER_2: ; $E1CE
7401   E1CE FD ED F0 0B     BII  #(PC1500_IF_REG),$01
7401   E1D2 01 
7402   E1D3 8B 15           BZS ISR_HANDLER_7 ; $E1EA
7403   E1D5 FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FE
7403   E1D9 FE 
7404   E1DA FD A5 B0 0B     LDA  #($B00B)
7405   E1DE FD A9 B0 0A     AND  #($B00A)
7406   E1E2 B9 0E           ANI  A,$0E
7407   E1E4 8B 04           BZS ISR_HANDLER_7 ; $E1EA
7408   E1E6 B5 01           LDI  A,$01
7409   E1E8 9E 4A           BCH ISR_HANDLER_8 ; $E1A0
7410   E1EA             
7411   E1EA             ISR_HANDLER_7: ; $E1EA
7412   E1EA A5 79 DA        LDA  ($79DA)
7413   E1ED B7 55           CPI  A,$55
7414   E1EF 89 21           BZR ISR_HANDLER_9 ; $E212
7415   E1F1 FD A5 F0 0B     LDA  #(PC1500_IF_REG)
7416   E1F5 FD A9 F0 0A     AND  #(PC1500_MSK_REG)
7417   E1F9 B9 0E           ANI  A,$0E
7418   E1FB 8B 15           BZS ISR_HANDLER_9 ; $E212
7419   E1FD 68 E2           LDI  UH,$E2
7420   E1FF 6A 12           LDI  UL,$12
7421   E201 A5 79 DB        LDA  ($79DB)
7422   E204 08              STA  XH
7423   E205 A5 79 DC        LDA  ($79DC)
7424   E208 0A              STA  XL
7425   E209 D5              SHR
7426   E20A B8              RPV
7427   E20B 81 01           BCR ISR_HANDLER_1 ; $E20E
7428   E20D A8              SPV
7429   E20E             
7430   E20E             ISR_HANDLER_1: ; $E20E
7431   E20E FD A8           PSH  U
7432   E210 FD 5E           STX  P
7433   E212             
7434   E212             ISR_HANDLER_9: ; $E212
7435   E212 FD EB B0 0A     ORI  #($B00A),$01
7435   E216 01 
7436   E217 FD EB F0 0A     ORI  #(PC1500_MSK_REG),$01
7436   E21B 01 
7437   E21C FD 8A           POP  A
7438   E21E AE 79 D0        STA  (PU_PV)
7439   E221 CD A0           VMJ  ($A0) ; ($A0)($50)
7440   E223 FD 2A           POP  U
7441   E225 FD 1A           POP  Y
7442   E227 FD 0A           POP  X
7443   E229             
7444   E229             ISR_HANDLER_10: ; $E229
7445   E229 FD 8A           POP  A
7446   E22B             
7447   E22B             
7448   E22B             ;------------------------------------------------------------------------------
7449   E22B             ; (FC) $E22B - Non-Maskable Interrupt
7450   E22B             ;------------------------------------------------------------------------------
7451   E22B             NMI_HANDLER: ; 
7452   E22B 8A              RTI
7453   E22C             
7454   E22C             
7455   E22C             
7456   E22C             ;------------------------------------------------------------------------------
7457   E22C             ; (FA) $E22C - Timer Interrupt
7458   E22C             ;------------------------------------------------------------------------------
7459   E22C             TIMER_ISR:  ; 
7460   E22C FD C8           PSH  A
7461   E22E B5 00           LDI  A,$00
7462   E230 FD CE           AM0
7463   E232 9E 0B           BCH ISR_HANDLER_10 ; $E229
7464   E234             
7465   E234             
7466   E234             
7467   E234             ;------------------------------------------------------------------------------
7468   E234             ; (A0) $E234 - PV-banking according to status of Bit 0 in $7900. If 0, PV=1.
7469   E234             ;------------------------------------------------------------------------------
7470   E234             PVBANK: 
7471   E234 B8              RPV
7472   E235 ED 79 D0 01     BII  (PU_PV),$01
7473   E239 8B 01           BZS PVBANK_1 ;$E23C
7474   E23B A8              SPV
7475   E23C             
7476   E23C             PVBANK_1: ; $E23C
7477   E23C 9A              RTN
7478   E23D             
7479   E23D             
7480   E23D             
7481   E23D             ;------------------------------------------------------------------------------
7482   E23D             ; $E23D - Waits until no more keys are pressed
7483   E23D             ;------------------------------------------------------------------------------
7484   E23D             WAITNOKEYS: 
7485   E23D EB 7B 0E 03     ORI  (CURS_CTRL),$03
7486   E241 8E 0B           BCH WAIT4KB_2 ; $E24E
7487   E243             
7488   E243             
7489   E243             
7490   E243             ;------------------------------------------------------------------------------
7491   E243             ; $E243 - Entering a Character Using the Keyboard (Page 324:Keyboard Status)
7492   E243             ; Waiting for input from keyboard. Character is in accumulator
7493   E243             ;------------------------------------------------------------------------------
7494   E243             WAIT4KB:
7495   E243 A5 79 D4        LDA  ($79D4)
7496   E246             
7497   E246             WAIT4KB_1: ; $E246
7498   E246 B7 55           CPI  A,$55
7499   E248 8B 6D           BZS WAIT4KB_3 $E2B7
7500   E24A E9 7B 0E FD     ANI  (CURS_CTRL),$FD
7501   E24E             
7502   E24E             WAIT4KB_2: ; $E24E
7503   E24E 48 7B           LDI  XH,$7B
7504   E250 ED 7B 0E 40     BII  (CURS_CTRL),$40
7505   E254 89 05           BZR WAIT4KB_4 ; $E25B
7506   E256 4A 09           LDI  XL,$09
7507   E258 B5 60           LDI  A,$60
7508   E25A 41              SIN  X
7509   E25B             
7510   E25B             WAIT4KB_4: ; $E25B
7511   E25B 4A 0A           LDI  XL,$0A
7512   E25D B5 FE           LDI  A,$FE
7513   E25F 41              SIN  X
7514   E260 B5 1D           LDI  A,$1D
7515   E262 41              SIN  X
7516   E263 41              SIN  X
7517   E264 B5 80           LDI  A,$80
7518   E266 41              SIN  X
7519   E267 68 F8           LDI  UH,$F8
7520   E269             
7521   E269             WAIT4KB_11: ; $E269
7522   E269 CD A6           VMJ  ($A6) ; ($A6)($53)
7523   E26B 89 CD           BZR WAIT4KB_5 ; $E33A
7524   E26D BE E4 18        SJP  (ISKEY)
7525   E270 8B 52           BZS WAIT4KB_6 ; $E2C4
7526   E272 BE E4 2C        SJP  (KEY2ASCII)
7527   E275 83 4D           BCS WAIT4KB_6 ; $E2C4
7528   E277 38              NOP
7529   E278 ED 7B 0E 01     BII  (CURS_CTRL),$01
7530   E27C 8B 2E           BZS WAIT4KB_7 ; $E2AC
7531   E27E ED 7B 0E 40     BII  (CURS_CTRL),$40
7532   E282 8B 7B           BZS WAIT4KB_8 ; $E2FF
7533   E284 04              LDA  XL
7534   E285 A7 7B 0F        CPA  (KEY_LAST)
7535   E288 89 6C           BZR WAIT4KB_9 ; $E2F6
7536   E28A 48 7B           LDI  XH,$7B
7537   E28C 4A 09           LDI  XL,$09
7538   E28E 05              LDA  (X)
7539   E28F DD              INC  A
7540   E290 81 0B           BCR WAIT4KB_10 ; $E29D
7541   E292 B5 F2           LDI  A,$F2
7542   E294 0E              STA  (X)
7543   E295 48 FE           LDI  XH,$FE
7544   E297 A5 7B 0F        LDA  (KEY_LAST)
7545   E29A 0A              STA  XL
7546   E29B 8E C9           BCH AUTO_OFF_1 ; $E366
7547   E29D             
7548   E29D             WAIT4KB_10: ; $E29D
7549   E29D 0E              STA  (X)
7550   E29E             
7551   E29E             WAIT4KB_20: ; $E29E
7552   E29E E9 79 D9 00     ANI  ($79D9),$00
7553   E2A2 B5 57           LDI  A,$57
7554   E2A4 FD CE           AM0
7555   E2A6 FD 81           SIE
7556   E2A8 FD B1           HLT
7557   E2AA 9E 43           BCH WAIT4KB_11 ; $E269
7558   E2AC             
7559   E2AC             WAIT4KB_7: ; $E2AC
7560   E2AC BE E4 2C        SJP  (KEY2ASCII)
7561   E2AF 83 13           BCS WAIT4KB_6 ; $E2C4
7562   E2B1 04              LDA  XL
7563   E2B2 AE 7B 0F        STA  (KEY_LAST)
7564   E2B5 8E AF           BCH AUTO_OFF_1 ; $E366
7565   E2B7             
7566   E2B7             WAIT4KB_3: ; $E2B7
7567   E2B7 CC              VEJ  (CC) \ ABYTL($785B)
7567   E2B8 5B          
7568   E2B9 38              NOP
7569   E2BA 04              LDA  XL
7570   E2BB D5              SHR
7571   E2BC FD BE           RIE
7572   E2BE B8              RPV
7573   E2BF 81 01           BCR WAIT4KB_12 ; $E2C2
7574   E2C1 A8              SPV
7575   E2C2             
7576   E2C2             WAIT4KB_12: ; $E2C2
7577   E2C2 FD 5E           STX  P
7578   E2C4             
7579   E2C4             WAIT4KB_6: ; $E2C4
7580   E2C4 ED 7B 0E 01     BII  (CURS_CTRL),$01
7581   E2C8 8B 0E           BZS WAIT4KB_13 ; $E2D8
7582   E2CA ED 7B 0E 40     BII  (CURS_CTRL),$40
7583   E2CE 89 26           BZR WAIT4KB_9 ; $E2F6
7584   E2D0 FD 60           INC  UH
7585   E2D2 81 0A           BCR WAIT4KB_14 ; $E2DE
7586   E2D4 E9 7B 0E FE     ANI  (CURS_CTRL),$FE
7587   E2D8             
7588   E2D8             WAIT4KB_13: ; $E2D8
7589   E2D8 ED 7B 0E 02     BII  (CURS_CTRL),$02
7590   E2DC 89 14           BZR WAIT4KB_15 ; $E2F2
7591   E2DE             
7592   E2DE             WAIT4KB_14: ; $E2DE
7593   E2DE 6A 02           LDI  UL,$02
7594   E2E0 48 7B           LDI  XH,$7B
7595   E2E2 4A 0D           LDI  XL,$0D
7596   E2E4             
7597   E2E4             WAIT4KB_17: ; $E2E4
7598   E2E4 46              DEC  X
7599   E2E5 4F 01           ADI  (X),$01
7600   E2E7 81 1A           BCR WAIT4KB_16 ; $E303
7601   E2E9 88 07           LOP  UL,WAIT4KB_17 ; $E2E4
7602   E2EB B5 FF           LDI  A,$FF
7603   E2ED 41              SIN  X
7604   E2EE 41              SIN  X
7605   E2EF 0E              STA  (X)
7606   E2F0 8E 4D           BCH AUTO_OFF
7607   E2F2             
7608   E2F2             WAIT4KB_15: ; $E2F2
7609   E2F2 B5 00           LDI  A,$00
7610   E2F4 F9              REC
7611   E2F5 9A              RTN
7612   E2F6             
7613   E2F6             WAIT4KB_9: ; $E2F6
7614   E2F6 B5 60           LDI  A,$60
7615   E2F8 AE 7B 09        STA  (KEY_REPEAT)
7616   E2FB E9 7B 0E 9F     ANI  (CURS_CTRL),$9F
7617   E2FF             
7618   E2FF             WAIT4KB_8: ; $E2FF
7619   E2FF 68 F8           LDI  UH,$F8
7620   E301 9E 25           BCH WAIT4KB_14 ; $E2DE
7621   E303             
7622   E303             WAIT4KB_16: ; $E303
7623   E303 4A 0B           LDI  XL,$0B
7624   E305 45              LIN  X
7625   E306 BF 07           BII  A,$07
7626   E308 89 0B           BZR WAIT4KB_18 ; $E315
7627   E30A 05              LDA  (X)
7628   E30B 89 08           BZR WAIT4KB_18 ; $E315
7629   E30D FD C0           RDP
7630   E30F 6A BC           LDI  UL,$BC
7631   E311             
7632   E311             WAIT4KB_19: ; $E311
7633   E311 88 02           LOP  UL,WAIT4KB_19 ; $E311
7634   E313 FD C1           SDP
7635   E315             
7636   E315             WAIT4KB_18: ; $E315
7637   E315 ED 78 7C 01     BII  (CURSOR_BLNK),$01
7638   E319 9B 7D           BZS WAIT4KB_20 ; $E29E
7639   E31B EF 7B 0D 01     ADI  (CURS_BLNK_CTR),$01
7640   E31F 91 83           BCR WAIT4KB_20 ; $E29E
7641   E321 EB 7B 0D 80     ORI  (CURS_BLNK_CTR),$80
7642   E325 FD A8           PSH  U
7643   E327 CC              VEJ  (CC) \ ABYTL(CURS_POS_NBUF_H) ; $787E
7643   E328 7E          
7644   E329 EF 78 7C 80     ADI  (CURSOR_BLNK),$80
7645   E32D B5 7F           LDI  A,$7F
7646   E32F 81 03           BCR WAIT4KB_21 ; $E334
7647   E331 A5 78 7D        LDA  (BLNKD_CHAR_CODE)
7648   E334             
7649   E334             WAIT4KB_21: ; $E334
7650   E334 CD 8A           VMJ  ($8A) ; ($8A)($45) ; ($8A)($45)
7651   E336 FD 2A           POP  U
7652   E338 9E 9C           BCH WAIT4KB_20 ; $E29E
7653   E33A             
7654   E33A             WAIT4KB_5: ; $E33A
7655   E33A B5 0E           LDI  A,$0E
7656   E33C FB              SEC
7657   E33D 9A              RTN
7658   E33E 38              NOP
7659   E33F             
7660   E33F             
7661   E33F             
7662   E33F             ;------------------------------------------------------------------------------
7663   E33F             ; $E33F - Auto-Power-Off Routine
7664   E33F             ;------------------------------------------------------------------------------
7665   E33F             AUTO_OFF: ; 
7666   E33F B5 A0           LDI  A,$A0
7667   E341 48 7A           LDI  XH,$7A
7668   E343 4A 10           LDI  XL,$10
7669   E345 6A 0F           LDI  UL,$0F
7670   E347             
7671   E347             AUTO_OFF_2: ; $E347
7672   E347 41              SIN  X
7673   E348 DD              INC  A
7674   E349 88 04           LOP  UL,AUTO_OFF_2 ; $E347
7675   E34B FD 98           PSH  Y
7676   E34D FD A8           PSH  U
7677   E34F FD 48           LDX  S
7678   E351 84              LDA  XH
7679   E352 AE 7A 30        STA  (ARS)
7680   E355 04              LDA  XL
7681   E356 AE 7A 31        STA  (ARS + $01)
7682   E359 FD 4C           .BYTE $FD, $4C ;    OFF ***ADD TO TASM
7683   E35B FD 4C           .BYTE $FD, $4C ;    OFF
7684   E35D FD 4C           .BYTE $FD, $4C ;    OFF
7685   E35F FD 2A           POP  U
7686   E361 FD 1A           POP  Y
7687   E363 BA E2 69        JMP  WAIT4KB_11 ; $E269
7688   E366             
7689   E366             AUTO_OFF_1: ; $E366
7690   E366 68 76           LDI  UH,$76
7691   E368 6A 4E           LDI  UL,$4E
7692   E36A EB 7B 0E 01     ORI  (CURS_CTRL),$01
7693   E36E 05              LDA  (X)
7694   E36F B7 3E           CPI  A,$3E
7695   E371 81 55           BCR AUTO_OFF_3 ; $E3C8
7696   E373 B7 41           CPI  A,$41
7697   E375 83 16           BCS AUTO_OFF_4 ; $E38D
7698   E377 6D 04           BII  (U),$04
7699   E379 8B 36           BZS AUTO_OFF_5 ; $E3B1
7700   E37B             
7701   E37B             AUTO_OFF_9: ; $E37B
7702   E37B FD BE           RIE
7703   E37D A5 78 5D        LDA  (KATAFLAGS)
7704   E380 D9              SHL
7705   E381 B8              RPV
7706   E382 81 01           BCR AUTO_OFF_6 ; $E385
7707   E384 A8              SPV
7708   E385             
7709   E385             AUTO_OFF_6: ; $E385
7710   E385 A5 78 5E        LDA  (KATACHAR)
7711   E388 DF              DEC  A
7712   E389 08              STA  XH
7713   E38A 05              LDA  (X)
7714   E38B 8E 26           BCH AUTO_OFF_7 ; $E3B3
7715   E38D             
7716   E38D             AUTO_OFF_4: ; $E38D
7717   E38D 6D 80           BII  (U),$80
7718   E38F 89 16           BZR AUTO_OFF_8 ; $E3A7
7719   E391 6D 04           BII  (U),$04
7720   E393 99 1A           BZR AUTO_OFF_9 ; $E37B
7721   E395 6D 08           BII  (U),$08
7722   E397 89 08           BZR AUTO_OFF_10 ; $E3A1
7723   E399 6D 02           BII  (U),$02
7724   E39B 89 0F           BZR AUTO_OFF_11 ; $E3AC
7725   E39D             
7726   E39D             AUTO_OFF_12: ; $E39D
7727   E39D F9              REC
7728   E39E 69 7D           ANI  (U),$7D
7729   E3A0 9A              RTN
7730   E3A1             
7731   E3A1             AUTO_OFF_10: ; $E3A1
7732   E3A1 6D 02           BII  (U),$02
7733   E3A3 8B 07           BZS AUTO_OFF_11 ; $E3AC
7734   E3A5 9E 0A           BCH AUTO_OFF_12 ; $E39D
7735   E3A7             
7736   E3A7             AUTO_OFF_8: ; $E3A7
7737   E3A7 F9              REC
7738   E3A8 B3 40           ADI  A,$40
7739   E3AA 9E 0F           BCH AUTO_OFF_12 ; $E39D
7740   E3AC             
7741   E3AC             AUTO_OFF_11: ; $E3AC
7742   E3AC F9              REC
7743   E3AD B3 20           ADI  A,$20
7744   E3AF 9E 14           BCH AUTO_OFF_12 ; $E39D
7745   E3B1             
7746   E3B1             AUTO_OFF_5: ; $E3B1
7747   E3B1 FD BE           RIE
7748   E3B3             
7749   E3B3             AUTO_OFF_7: ; $E3B3
7750   E3B3 6D 02           BII  (U),$02
7751   E3B5 8B 05           BZS AUTO_OFF_13 ; $E3BC
7752   E3B7 B5 40           LDI  A,$40
7753   E3B9 FD CA           ADR  X
7754   E3BB 05              LDA  (X)
7755   E3BC             
7756   E3BC             AUTO_OFF_13: ; $E3BC
7757   E3BC CD A0           VMJ  ($A0) ; ($A0)($50)
7758   E3BE FD 81           SIE
7759   E3C0 9E 25           BCH AUTO_OFF_12 ; $E39D
7760   E3C2             
7761   E3C2             AUTO_OFF_17: ; $E3C2
7762   E3C2 6D 04           BII  (U),$04
7763   E3C4 99 4B           BZR AUTO_OFF_9 ; $E37B
7764   E3C6 9E 17           BCH AUTO_OFF_5 ; $E3B1
7765   E3C8             
7766   E3C8             AUTO_OFF_3: ; $E3C8
7767   E3C8 B7 01           CPI  A,$01
7768   E3CA 8B 1C           BZS AUTO_OFF_14 ; $E3E8
7769   E3CC B7 02           CPI  A,$02
7770   E3CE 8B 26           BZS AUTO_OFF_15 ; $E3F6
7771   E3D0 B7 1B           CPI  A,$1B
7772   E3D2 8B 1B           BZS AUTO_OFF_16 ; $E3EF
7773   E3D4 6D 80           BII  (U),$80
7774   E3D6 9B 16           BZS AUTO_OFF_17 ; $E3C2
7775   E3D8 B7 20           CPI  A,$20
7776   E3DA 8B 08           BZS $E3E4
7777   E3DC B7 3D           CPI  A,$3D
7778   E3DE 99 1E           BZR AUTO_OFF_17 ; $E3C2
7779   E3E0 B5 9D           LDI  A,$9D
7780   E3E2 9E 47           BCH AUTO_OFF_12 ; $E39D
7781   E3E4 B5 80           LDI  A,$80
7782   E3E6 9E 4B           BCH AUTO_OFF_12 ; $E39D
7783   E3E8             
7784   E3E8             AUTO_OFF_14: ; $E3E8
7785   E3E8 25              LDA  (U)
7786   E3E9 BD 02           EAI  $02
7787   E3EB B9 7F           ANI  A,$7F
7788   E3ED 8E 19           BCH AUTO_OFF_18 ; $E408
7789   E3EF             
7790   E3EF             AUTO_OFF_16: ; $E3EF
7791   E3EF 25              LDA  (U)
7792   E3F0 BD 80           EAI  $80
7793   E3F2 B9 FD           ANI  A,$FD
7794   E3F4 8E 12           BCH AUTO_OFF_18 ; $E408
7795   E3F6             
7796   E3F6             AUTO_OFF_15: ; $E3F6
7797   E3F6 FD ED F0 0F     BII  #(PC1500_PRT_B),$08
7797   E3FA 08 
7798   E3FB 89 0F           BZR AUTO_OFF_19 ; $E40C
7799   E3FD A5 78 5D        LDA  (KATAFLAGS)
7800   E400 D9              SHL
7801   E401 89 10           BZR AUTO_OFF_20 ; $E413
7802   E403 25              LDA  (U)
7803   E404 BD 04           EAI  $04
7804   E406 B9 77           ANI  A,$77
7805   E408             
7806   E408             AUTO_OFF_18: ; $E408
7807   E408 2E              STA  (U)
7808   E409 BA E2 43        JMP  WAIT4KB ; $E243
7809   E40C             
7810   E40C             AUTO_OFF_19: ; $E40C
7811   E40C 25              LDA  (U)
7812   E40D BD 08           EAI  $08
7813   E40F B9 7B           ANI  A,$7B
7814   E411 9E 0B           BCH AUTO_OFF_18 ; $E408
7815   E413             
7816   E413             AUTO_OFF_20: ; $E413
7817   E413 25              LDA  (U)
7818   E414 B9 73           ANI  A,$73
7819   E416 9E 10           BCH AUTO_OFF_18 ; $E408
7820   E418             
7821   E418             
7822   E418             
7823   E418             ;------------------------------------------------------------------------------
7824   E418             ; $E418 - Checks whether key is pressed. If not, Z=1.
7825   E418             ;------------------------------------------------------------------------------
7826   E418             ISKEY:
7827   E418 B5 FF           LDI  A,$FF
7828   E41A             
7829   E41A             ; Keyboard query. If no key is pressed Z=0.
7830   E41A             ISKEY_1: ; $E41A
7831   E41A FD AE F0 0C     STA  #(PC1500_PRT_A_DIR)
7832   E41E FD E9 F0 0E     ANI  #(PC1500_PRT_A),$00
7832   E422 00 
7833   E423 6A 03           LDI  UL,$03
7834   E425             
7835   E425             ISKEY_2: ; $E425
7836   E425 88 02           LOP  UL,ISKEY_2 ; $E425
7837   E427 FD BA           ITA
7838   E429 BD FF           EAI  $FF
7839   E42B 9A              RTN
7840   E42C             
7841   E42C             
7842   E42C             
7843   E42C             ;------------------------------------------------------------------------------
7844   E42C             ; $E42C - Keyboard query: ASCII code in accumulator. If no key pressed: C=1.
7845   E42C             ;------------------------------------------------------------------------------
7846   E42C             KEY2ASCII:
7847   E42C 4A 80           LDI  XL,$80
7848   E42E B5 01           LDI  A,$01
7849   E430             
7850   E430             KEY2ASCII_3: ; $E430
7851   E430 08              STA  XH
7852   E431 BE E4 1A        SJP  (ISKEY_1) ; $E41A
7853   E434 89 0E           BZR KEY2ASCII_1 ; $E444
7854   E436 F9              REC
7855   E437 B5 08           LDI  A,$08
7856   E439 02              ADC  XL
7857   E43A 0A              STA  XL
7858   E43B 84              LDA  XH
7859   E43C D9              SHL
7860   E43D 83 02           BCS KEY2ASCII_2 ; $E441
7861   E43F 99 11           BZR KEY2ASCII_3 ; $E430
7862   E441             
7863   E441             KEY2ASCII_2: ; $E441
7864   E441 B5 00           LDI  A,$00
7865   E443 9A              RTN
7866   E444             
7867   E444             KEY2ASCII_1: ; $E444
7868   E444 D9              SHL
7869   E445 83 05           BCS KEY2ASCII_4 ; $E44C
7870   E447 40              INC  XL
7871   E448 91 06           BCR KEY2ASCII_1 ; $E444
7872   E44A 9E 0B           BCH KEY2ASCII_2 ; $E441
7873   E44C             
7874   E44C             KEY2ASCII_4: ; $E44C
7875   E44C 48 FE           LDI  XH,$FE
7876   E44E 05              LDA  (X)
7877   E44F F9              REC
7878   E450 9A              RTN
7879   E451             
7880   E451             
7881   E451             
7882   E451             ;------------------------------------------------------------------------------
7883   E451             ; (A6) $E451 - Checks if Break was pressed. If so, Z=0; if no Z=1.
7884   E451             ;------------------------------------------------------------------------------
7885   E451             CHK_BRK:
7886   E451 FD ED F0 0B     BII  #(PC1500_IF_REG),$02
7886   E455 02 
7887   E456 9A              RTN
7888   E457             
7889   E457             
7890   E457             
7891   E457             ;------------------------------------------------------------------------------
7892   E457             ; $E466 - Basic command OPN
7893   E457             ;------------------------------------------------------------------------------
7894   E457 C8              VEJ  (C8) \ ABRF(CHK_BRK_1) ; 
7894   E458 0D          
7895   E459 FD 98           PSH  Y
7896   E45B             
7897   E45B             CHK_BRK_2: ; $E45B
7898   E45B B5 60           LDI  A,$60
7899   E45D             
7900   E45D             CHK_BRK_6: ; $E45D
7901   E45D AE 79 D1        STA  (OPN)
7902   E460 FD 1A           POP  Y
7903   E462 FD 81           SIE
7904   E464 56              DEC  Y
7905   E465 E2              VEJ  (E2)
7906   E466             
7907   E466             CHK_BRK_1: ; $E466
7908   E466 C6              VEJ  (C6)
7909   E467 CD 36           VMJ  ($36)
7910   E469 81 BF           BCR BCMD_PRINT_1 ; $E52A
7911   E46B C8              VEJ  (C8) \ ABRF(BCMD_PRINT_1) ; $E52A
7911   E46C BD          
7912   E46D FD 98           PSH  Y
7913   E46F 48 7A           LDI  XH,$7A
7914   E471 58 7A           LDI  YH,$7A
7915   E473 CD 82           VMJ  ($82) ; ($82)($41)
7916   E475 58 E4           LDI  YH,$E4
7917   E477 5A E3           LDI  YL,$E3
7918   E479 CD 9E           VMJ  ($9E) ; ($9E)($4F)
7919   E47B 99 22           BZR CHK_BRK_2 ; $E45B
7920   E47D CD BE           VMJ  ($BE) ; ($BE)($5F)
7921   E47F 81 14           BCR CHK_BRK_3 ; $E495
7922   E481             
7923   E481             CHK_BRK_5: ; $E481
7924   E481 FD A8           PSH  U
7925   E483 FD 88           PSH  X
7926   E485 4A 02           LDI  XL,$02
7927   E487 FD 5A           STX  Y
7928   E489 CD 9E           VMJ  ($9E) ; ($9E)($4F)
7929   E48B FD 0A           POP  X
7930   E48D FD 2A           POP  U
7931   E48F 89 09           BZR CHK_BRK_4 ; $E49A
7932   E491 CD BC           VMJ  ($BC) ; ($BC)($5E)
7933   E493 93 14           BCS CHK_BRK_5 ; $E481
7934   E495             
7935   E495             CHK_BRK_3: ; $E495
7936   E495 FD 1A           POP  Y
7937   E497 68 22           LDI  UH,$22
7938   E499 E0              VEJ  (E0)
7939   E49A             
7940   E49A             CHK_BRK_4: ; $E49A
7941   E49A A4              LDA  UH
7942   E49B D5              SHR
7943   E49C 84              LDA  XH
7944   E49D D1              ROR
7945   E49E 9E 43           BCH CHK_BRK_6 ; $E45D
7946   E4A0             
7947   E4A0             
7948   E4A0             
7949   E4A0             ;------------------------------------------------------------------------------
7950   E4A0             ; (9E) Comparison of two strings
7951   E4A0             ; Checks string 1st byte Y-Reg points to matches string CSI is stored in AR-Y.
7952   E4A0             ; Address:	E4A0 (9E)
7953   E4A0             ; 
7954   E4A0             ;    Entry Parameter:	Y-Reg points to the 1st byte of string to be checked
7955   E4A0             ;                       AR-Y contains CSI of the 2nd string
7956   E4A0             ; Modified Registers:	All
7957   E4A0             ;   Error conditions:	If match, numeric value (BCD format) loaded into AR-X
7958   E4A0             ;------------------------------------------------------------------------------
7959   E4A0             STR_COMP: ; $E4A0 (9E)
7960   E4A0 CD 0C           VMJ  ($0C)
7961   E4A2 B5 04           LDI  A,$04
7962   E4A4 BE D0 F9        SJP  (DEL_DIM_VARS_15) ; $D0F9
7963   E4A7 9A              RTN
7964   E4A8             
7965   E4A8             
7966   E4A8             
7967   E4A8             ;------------------------------------------------------------------------------
7968   E4A8             ; (BE) Searches 1st token table below C000
7969   E4A8             ; Searches token table if CE-158 or CE-150 connected C=1. With CE-150 UH=2 CE-158 UH=1.
7970   E4A8             ;------------------------------------------------------------------------------
7971   E4A8             TOK_TABL_SRCH: ; $E4A8
7972   E4A8 FD BE           RIE
7973   E4AA B8              RPV
7974   E4AB B5 02           LDI  A,$02
7975   E4AD             
7976   E4AD             TOK_TABL_SRCH_5: ; $E4AD
7977   E4AD 48 B8           LDI  XH,$B8
7978   E4AF 28              STA  UH
7979   E4B0             
7980   E4B0             TOK_TABL_SRCH_3: ; $E4B0
7981   E4B0 B5 55           LDI  A,$55
7982   E4B2 4A 00           LDI  XL,$00
7983   E4B4 07              CPA  (X)
7984   E4B5 8B 16           BZS TOK_TABL_SRCH_1 ; $E4CD
7985   E4B7             
7986   E4B7             
7987   E4B7             
7988   E4B7             ;------------------------------------------------------------------------------
7989   E4B7             ; (BC) $E4B7 Searches for the next lower token table (8000-BFFF) based on the
7990   E4B7             ; address area pointed to by X-Reg.
7991   E4B7             ;------------------------------------------------------------------------------
7992   E4B7 A4              LDA  UH
7993   E4B8 4C 88           CPI  XH,$88
7994   E4BA 81 06           BCR TOK_TABL_SRCH_2 ; $E4C2
7995   E4BC 84              LDA  XH
7996   E4BD B3 F7           ADI  A,$F7
7997   E4BF 08              STA  XH
7998   E4C0 9E 12           BCH TOK_TABL_SRCH_3 ; $E4B0
7999   E4C2             
8000   E4C2             TOK_TABL_SRCH_2: ; $E4C2
8001   E4C2 D5              SHR
8002   E4C3 83 03           BCS TOK_TABL_SRCH_4 ; $E4C8
8003   E4C5 A8              SPV
8004   E4C6 9E 1B           BCH TOK_TABL_SRCH_5 ; $E4AD
8005   E4C8             
8006   E4C8             TOK_TABL_SRCH_4: ; $E4C8
8007   E4C8 CD A0           VMJ  ($A0) ; ($A0)($50)
8008   E4CA F9              REC
8009   E4CB FD 81           SIE
8010   E4CD             
8011   E4CD             TOK_TABL_SRCH_1: ; $E4CD
8012   E4CD 9A              RTN
8013   E4CE             
8014   E4CE             
8015   E4CE             
8016   E4CE             ;------------------------------------------------------------------------------
8017   E4CE             ; $E4CE Searches for token table whose number is in UL
8018   E4CE             ; Searches for the start address of the token table, the number of which is in
8019   E4CE             ;the accumulator. C=0 if not found. If available C=1.
8020   E4CE             ;------------------------------------------------------------------------------
8021   E4CE CD BE           VMJ  ($BE) ; ($BE)($5F)
8022   E4D0 81 09           BCR TOK_TABL_SRCH_6 ; $E4DB
8023   E4D2             
8024   E4D2             TOK_TABL_SRCH_8: ; $E4D2
8025   E4D2 44              INC  X
8026   E4D3 24              LDA  UL
8027   E4D4 07              CPA  (X)
8028   E4D5 8B 05           BZS TOK_TABL_SRCH_7 ; $E4DC
8029   E4D7 CD BC           VMJ  ($BC) ; ($BC)($5E)
8030   E4D9 93 09           BCS TOK_TABL_SRCH_8 ; $E4D2
8031   E4DB             
8032   E4DB             TOK_TABL_SRCH_6: ; $E4DB
8033   E4DB 9A              RTN
8034   E4DC             
8035   E4DC             TOK_TABL_SRCH_7: ; $E4DC
8036   E4DC A4              LDA  UH
8037   E4DD AE 79 D0        STA  (PU_PV)
8038   E4E0 FD 81           SIE
8039   E4E2 9A              RTN
8040   E4E3             
8041   E4E3             
8042   E4E3             
8043   E4E3             ;------------------------------------------------------------------------------
8044   E4E3             ; $E4E3 - Text for comparison OPN "LCD"
8045   E4E3             ;------------------------------------------------------------------------------
8046   E4E3 4C 43 44 0D     .BYTE $4C,$43,$44,$0D ; LCD/CR
8047   E4E7             
8048   E4E7             
8049   E4E7             
8050   E4E7             ;------------------------------------------------------------------------------
8051   E4E7             ; $E427 - INPUT# - Routine
8052   E4E7             ;------------------------------------------------------------------------------
8053   E4E7             BCMD_INPUTNUM: ; 
8054   E4E7 B5 84           LDI  A,$84
8055   E4E9 8E 05           BCH BCMD_PRINT_2 ; $E4F0
8056   E4EB             
8057   E4EB             
8058   E4EB             
8059   E4EB             ;------------------------------------------------------------------------------
8060   E4EB             ; $E4EB - Basic-Command PRINT
8061   E4EB             ;------------------------------------------------------------------------------
8062   E4EB             BCMD_PRINT: ; 
8063   E4EB C2              VEJ  (C2) \ ACHR($23) \ ABRF(BCMD_PRINT_3) ; $E513
8063   E4EC 23          
8063   E4ED 25          
8064   E4EE B5 04           LDI  A,$04
8065   E4F0             
8066   E4F0             BCMD_PRINT_2: ; $E4F0
8067   E4F0 AE 78 79        STA  (CASS_FLAG)
8068   E4F3 C2              VEJ  (C2) \ ACHR($2D) \ ABRF(BCMD_PRINT_4) ; $E51E
8068   E4F4 2D          
8068   E4F5 28          
8069   E4F6 DE              VEJ  (DE) \ ABRF(BCMD_PRINT_5) ; $E529
8069   E4F7 31          
8070   E4F8 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_PRINT_1) ; $E52A
8070   E4F9 2C          
8070   E4FA 2F          
8071   E4FB D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_PRINT_5) ; $E529
8071   E4FC 08          
8071   E4FD 2B          
8072   E4FE B7 02           CPI  A,$02
8073   E500 81 15           BCR BCMD_PRINT_6 ; $E517
8074   E502 BE E4 CE        SJP  ($E4CE)
8075   E505 81 20           BCR BCMD_PRINT_7 ; $E527
8076   E507 4A 10           LDI  XL,$10
8077   E509 ED 78 79 80     BII  (CASS_FLAG),$80
8078   E50D 8B 02           BZS BCMD_PRINT_8 ; $E511
8079   E50F 4A 0D           LDI  XL,$0D
8080   E511             
8081   E511             BCMD_PRINT_8: ; $E511
8082   E511 FD 5E           STX  P
8083   E513             
8084   E513             BCMD_PRINT_3: ; $E513
8085   E513 C6              VEJ  (C6)
8086   E514 BA E6 B6        JMP  BCMD_PAUSE_1 ; $E6B6
8087   E517             
8088   E517             BCMD_PRINT_6: ; $E517
8089   E517 D5              SHR
8090   E518 81 04           BCR BCMD_PRINT_4 ; $E51E
8091   E51A EB 78 79 10     ORI  (CASS_FLAG),$10
8092   E51E             
8093   E51E             BCMD_PRINT_4: ; $E51E
8094   E51E B5 5C           LDI  A,$5C
8095   E520 CD 3C           VMJ  ($3C)
8096   E522 81 03           BCR BCMD_PRINT_7 ; $E527
8097   E524 BA B8 A3        JMP  $B8A3 ; ***
8098   E527             
8099   E527             BCMD_PRINT_7: ; $E527
8100   E527 68 23           LDI  UH,$23
8101   E529             
8102   E529             BCMD_PRINT_5: ; $E529
8103   E529 E0              VEJ  (E0)
8104   E52A             
8105   E52A             BCMD_PRINT_1: ; $E52A
8106   E52A E4              VEJ  (E4)
8107   E52B             
8108   E52B             
8109   E52B             
8110   E52B             ;------------------------------------------------------------------------------
8111   E52B             ; $E52B - Writes to clock chip
8112   E52B             ;------------------------------------------------------------------------------
8113   E52B             WRITE2CLOCK: ; 
8114   E52B FD AA           TTA
8115   E52D FD C8           PSH  A
8116   E52F FD BE           RIE
8117   E531 B5 08           LDI  A,$08
8118   E533 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8119   E535 B5 00           LDI  A,$00
8120   E537 FD AE F0 0D     STA  #(PC1500_PRT_B_DIR)
8121   E53B 48 7A           LDI  XH,$7A
8122   E53D 4A 06           LDI  XL,$06
8123   E53F 68 04           LDI  UH,$04
8124   E541             
8125   E541             WRITE2CLOCK_3: ; $E541
8126   E541 05              LDA  (X)
8127   E542 6A 07           LDI  UL,$07
8128   E544 FD ED F0 0F     BII  #(PC1500_PRT_B),$40
8128   E548 40 
8129   E549 F9              REC
8130   E54A 8B 01           BZS WRITE2CLOCK_1 ; $E54D
8131   E54C FB              SEC
8132   E54D             
8133   E54D             WRITE2CLOCK_1: ; $E54D
8134   E54D D1              ROR
8135   E54E 83 1B           BCS $E56B
8136   E550 FD 59 FE        ANI  #(Y),$FE
8137   E553 FD 59 FE        ANI  #(Y),$FE
8138   E556             
8139   E556             WRITE2CLOCK_4: ; $E54D
8140   E556 FD 5B 04        ORI  #(Y),$04
8141   E559 FD 5B 04        ORI  #(Y),$04
8142   E55C FD 59 FB        ANI  #(Y),$FB
8143   E55F 88 1D           LOP  UL,$E544
8144   E561 43              SDE  X
8145   E562 FD 62           DEC  UH
8146   E564 93 25           BCS WRITE2CLOCK_3 ; $E541
8147   E566                 
8148   E566             WRITE2CLOCK_5: ; $E566 
8149   E566 FD 8A           POP  A
8150   E568 FD EC           ATT
8151   E56A 9A              RTN
8152   E56B             
8153   E56B             WRITE2CLOCK_2: ; $E56B
8154   E56B FD 5B 01        ORI  #(Y),$01
8155   E56E FD 5B 01        ORI  #(Y),$01
8156   E571 9E 1D           BCH WRITE2CLOCK_4 ; $E556
8157   E573             
8158   E573             
8159   E573             
8160   E573             ;------------------------------------------------------------------------------
8161   E573             ; (5A) Timer-mode-select routine. The PD 1990AC timer module is switched to 
8162   E573             ; its various operating modes via its inputs C0, C1, C2, which are fed via I/O 
8163   E573             ; ports PC3, PC4 and PC5 (#F008).
8164   E573             ;          Address:	E573 (5A)
8165   E573             ;   Entry parameters: At entry, Accumulator contains the control byte of the 
8166   E573             ;                     timer module. The timer can be operated with 4 modes.
8167   E573             ;                       C2	C1	C0	Mode	Effect
8168   E573             ;                       0	0	0	0	    Register hold
8169   E573             ;                       0 	0	1	1	    Register shift
8170   E573             ;                       0	1	0	2	    Time set
8171   E573             ;                       0	1	1	3	    Time read
8172   E573             ;                       B5	B4	B3 of Accumulator
8173   E573             ;
8174   E573             ; Modified registers: U-Reg
8175   E573             ;                     Y-Reg contains F008
8176   E573             ;                     Accumulator
8177   E573             ;   Error conditions: None
8178   E573             ;------------------------------------------------------------------------------
8179   E573             TIMEMODE: ; $E573
8180   E573 58 F0           LDI  YH,$F0
8181   E575 5A 08           LDI  YL,$08
8182   E577 28              STA  UH
8183   E578 FD AA           TTA
8184   E57A FD C8           PSH  A
8185   E57C FD BE           RIE
8186   E57E FD 15           LDA  #(Y)
8187   E580 B9 C0           ANI  A,$C0
8188   E582 F9              REC
8189   E583 A2              ADC  UH
8190   E584 FD 1E           STA  #(Y)
8191   E586 FD 1E           STA  #(Y)
8192   E588 B3 02           ADI  A,$02
8193   E58A FD 1E           STA  #(Y)
8194   E58C FD 1E           STA  #(Y)
8195   E58E B3 FE           ADI  A,$FE
8196   E590 FD 1E           STA  #(Y)
8197   E592 FD 1E           STA  #(Y)
8198   E594 6A 02           LDI  UL,$02
8199   E596             
8200   E596             TIMEMODE_1: ; $E596
8201   E596 88 02           LOP  UL,TIMEMODE_1 ; $E596
8202   E598 9E 34           BCH WRITE2CLOCK_5 ; $E566
8203   E59A             
8204   E59A             
8205   E59A             
8206   E59A             ;------------------------------------------------------------------------------
8207   E59A             ; $E59A - Transfers TIME from AR-X to clock module
8208   E59A             ;------------------------------------------------------------------------------
8209   E59A             ARX2TIME: ; 
8210   E59A FD 98           PSH  Y
8211   E59C FD 88           PSH  X
8212   E59E BE E5 2B        SJP  (WRITE2CLOCK)
8213   E5A1 B5 10           LDI  A,$10
8214   E5A3 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8215   E5A5             
8216   E5A5             ARX2TIME_1: ; $ E5A5
8217   E5A5 B5 00           LDI  A,$00
8218   E5A7 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8219   E5A9 FD 59 C7        ANI  #(Y),$C7
8220   E5AC FD 5B 08        ORI  #(Y),$08
8221   E5AF             
8222   E5AF             ARX2TIME_2: ; $ E5AF
8223   E5AF FD 0A           POP  X
8224   E5B1 FD 1A           POP  Y
8225   E5B3 9A              RTN
8226   E5B4             
8227   E5B4             
8228   E5B4             
8229   E5B4             ;------------------------------------------------------------------------------
8230   E5B4             ; $E5B4 - Reads clock chip to AR-X
8231   E5B4             ;------------------------------------------------------------------------------
8232   E5B4             TIME2ARX: ; 
8233   E5B4 FD 98           PSH  Y
8234   E5B6 FD 88           PSH  X
8235   E5B8 B5 18           LDI  A,$18
8236   E5BA CD 5A           VMJ  ($5A) ; ($5A)($2D)
8237   E5BC BE E5 2B        SJP  (WRITE2CLOCK)
8238   E5BF             
8239   E5BF             
8240   E5BF             
8241   E5BF             ;------------------------------------------------------------------------------
8242   E5BF             ; $E5C1 - Basic command BEEP
8243   E5BF             ;------------------------------------------------------------------------------
8244   E5BF 9E 1C           BCH ARX2TIME_1 ; 
8245   E5C1 C2              VEJ  (C2) \ AWRD($F19C) \ ABRF(TIME2ARX_1) ; $E5CC
8245   E5C2 F1 9C       
8245   E5C4 07          
8246   E5C5 E9 78 6B FE     ANI  (BEEP_PTR),$FE
8247   E5C9             
8248   E5C9             TIME2ARX_3: ; $ E5C9
8249   E5C9 CD A2           VMJ  ($A2) ; ($A2)($51)
8250   E5CB E2              VEJ  (E2)
8251   E5CC             
8252   E5CC             TIME2ARX_1: ; $ E5CC
8253   E5CC C4              VEJ  (C4) \ AWRD($F19E) \ ABRF(TIME2ARX_2) ; $E5D6
8253   E5CD F1 9E       
8253   E5CF 06          
8254   E5D0 EB 78 6B 01     ORI  (BEEP_PTR),$01
8255   E5D4 9E 0D           BCH TIME2ARX_3 ; $E5C9
8256   E5D6             
8257   E5D6             TIME2ARX_2: ; $ E5D6
8258   E5D6 C6              VEJ  (C6)
8259   E5D7 ED 78 6B 01     BII  (BEEP_PTR),$01
8260   E5DB 89 73           BZR TIME2ARX_4 ; $E650
8261   E5DD DE              VEJ  (DE) \ ABRF(TIME2ARX_12) ; $E653
8261   E5DE 74          
8262   E5DF D2              VEJ  (D2) \ ABRF(TIME2ARX_12) \ ABYT($80)
8262   E5E0 72          
8262   E5E1 80          
8263   E5E2 ED 7A 01 80     BII  (ARX + $01),$80
8264   E5E6 89 68           BZR TIME2ARX_4 ; $E650
8265   E5E8 ED 7A 02 F0     BII  (ARX + $02),$F0
8266   E5EC 8B 62           BZS TIME2ARX_4 ; $E650
8267   E5EE D0              VEJ  (D0) \ ABYT($00) \ ABRF(TIME2ARX_12) ; $E653
8267   E5EF 00          
8267   E5F0 62          
8268   E5F1 FD A8           PSH  U
8269   E5F3 C8              VEJ  (C8) \ ABRF(TIME2ARX_5) ; $E622
8269   E5F4 2D          
8270   E5F5 B5 FF           LDI  A,$FF
8271   E5F7             
8272   E5F7             TIME2ARX_15: ; $ E5F7
8273   E5F7 FD 2A           POP  U
8274   E5F9 FD 98           PSH  Y
8275   E5FB 1A              STA  YL
8276   E5FC FD A8           PSH  U
8277   E5FE             
8278   E5FE             TIME2ARX_9: ; $ E5FE
8279   E5FE 14              LDA  YL
8280   E5FF 8B 18           BZS TIME2ARX_6 ; $E619
8281   E601 BE E6 69        SJP  (BCMD_BEEP_STD)
8282   E604             
8283   E604             TIME2ARX_10: ; $ E604
8284   E604 FD 2A           POP  U
8285   E606 89 42           BZR TIME2ARX_7 ; $E64A
8286   E608 66              DEC  U
8287   E609 24              LDA  UL
8288   E60A 89 03           BZR TIME2ARX_8 ; $E60F
8289   E60C A4              LDA  UH
8290   E60D 8B 3B           BZS TIME2ARX_7 ; $E64A
8291   E60F             
8292   E60F             TIME2ARX_8: ; $ E60F
8293   E60F FD A8           PSH  U
8294   E611 68 00           LDI  UH,$00
8295   E613 6A 06           LDI  UL,$06
8296   E615 CD AC           VMJ  ($AC) ; ($AC)($56)
8297   E617 9E 1B           BCH TIME2ARX_9 ; $E5FE
8298   E619             
8299   E619             TIME2ARX_6: ; $ E619
8300   E619 A5 78 78        LDA  (BEEP_FREQ)
8301   E61C 2A              STA  UL
8302   E61D BE E6 6F        SJP  (BCMD_BEEP)
8303   E620 9E 1E           BCH TIME2ARX_10 ; $E604
8304   E622             
8305   E622             TIME2ARX_5: ; $ E622
8306   E622 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(TIME2ARX_11) ; $E654
8306   E623 2C          
8306   E624 2F          
8307   E625 DE              VEJ  (DE) \ ABRF(TIME2ARX_12) ; $E653
8307   E626 2C          
8308   E627 D0              VEJ  (D0) \ ABYT($08) \ ABRF(TIME2ARX_12) ; $E653
8308   E628 08          
8308   E629 29          
8309   E62A 24              LDA  UL
8310   E62B AE 78 78        STA  (BEEP_FREQ)
8311   E62E C8              VEJ  (C8) \ ABRF(TIME2ARX_13) ; $E636
8311   E62F 06          
8312   E630 48 01           LDI  XH,$01
8313   E632 4A A0           LDI  XL,$A0
8314   E634 8E 10           BCH TIME2ARX_14 ; $E646
8315   E636             
8316   E636             TIME2ARX_13: ; $ E636
8317   E636 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(TIME2ARX_11) ; $E654
8317   E637 2C          
8317   E638 1B          
8318   E639 DE              VEJ  (DE) \ ABRF(TIME2ARX_12) ; $E653
8318   E63A 18          
8319   E63B D0              VEJ  (D0) \ ABYT($02) \ ABRF(TIME2ARX_12) ; $E653
8319   E63C 02          
8319   E63D 15          
8320   E63E FD A8           PSH  U
8321   E640 C8              VEJ  (C8) \ ABRF(TIME2ARX_11) ; $E654
8321   E641 12          
8322   E642 FD 0A           POP  X
8323   E644 FD 40           INC  XH
8324   E646             
8325   E646             TIME2ARX_14: ; $ E646
8326   E646 B5 00           LDI  A,$00
8327   E648 9E 53           BCH TIME2ARX_15 ; $E5F7
8328   E64A             
8329   E64A             TIME2ARX_7: ; $ E64A
8330   E64A FD 1A           POP  Y
8331   E64C CD A2           VMJ  ($A2) ; ($A2)($51)
8332   E64E 56              DEC  Y
8333   E64F E2              VEJ  (E2)
8334   E650             
8335   E650             TIME2ARX_4: ; $ E650
8336   E650 BA C6 84        JMP  BCMD_DATA ; $C684
8337   E653             
8338   E653             TIME2ARX_12: ; $ E653
8339   E653 E0              VEJ  (E0)
8340   E654             
8341   E654             TIME2ARX_11: ; $ E654
8342   E654 E4              VEJ  (E4)
8343   E655             
8344   E655             
8345   E655             
8346   E655             ;------------------------------------------------------------------------------
8347   E655             ; (A2) Beep-On/Off
8348   E655             ;            Address: (A2) E655
8349   E655             ;   Entry parameters: (7868) contains in bit 0 the information whether beep ON 
8350   E655             ;                     (bit 0=1) or beep OFF (bit 0=1) should be switched.
8351   E655             ; 
8352   E655             ; Modified registers: Bit 6 in #(F008), i.e. PC6 is set to 0 at Beep Off. No 
8353   E655             ;                     registers changed. If beep off: Carry flag=1
8354   E655             ;   Error conditions: None
8355   E655             ;------------------------------------------------------------------------------
8356   E655             BEEP_ON_OFF: ; $E655
8357   E655 ED 78 6B 01     BII  (BEEP_PTR),$01
8358   E659 8B 07           BZS BEEP_ON_OFF_1 ; $E662
8359   E65B FD E9 F0 08     ANI  #(PC1500_PRT_C),$BF
8359   E65F BF 
8360   E660 FB              SEC
8361   E661 9A              RTN
8362   E662             
8363   E662             BEEP_ON_OFF_1: ; $E662
8364   E662 FD EB F0 08     ORI  #(PC1500_PRT_C),$40
8364   E666 40 
8365   E667 F9              REC
8366   E668 9A              RTN
8367   E669             
8368   E669             
8369   E669             
8370   E669             ;------------------------------------------------------------------------------
8371   E669             ; $E669 - Standard Beep
8372   E669             ;------------------------------------------------------------------------------
8373   E669             BCMD_BEEP_STD:
8374   E669 6A 08           LDI  UL,$08
8375   E66B 48 01           LDI  XH,$01
8376   E66D 4A A0           LDI  XL,$A0
8377   E66F             
8378   E66F             ;------------------------------------------------------------------------------
8379   E66F             ; $E66F - Beep with duration in X-Reg and pitch in UL
8380   E66F             ;------------------------------------------------------------------------------
8381   E66F             BCMD_BEEP: ; 
8382   E66F FD 98           PSH  Y
8383   E671 FD 88           PSH  X
8384   E673 FD A8           PSH  U
8385   E675 58 F0           LDI  YH,$F0
8386   E677 5A 08           LDI  YL,$08
8387   E679 24              LDA  UL
8388   E67A 28              STA  UH
8389   E67B             
8390   E67B             BCMD_BEEP_5: ; $E67B
8391   E67B B5 C8           LDI  A,$C8
8392   E67D FD 1E           STA  #(Y)
8393   E67F A4              LDA  UH
8394   E680 2A              STA  UL
8395   E681             
8396   E681             BCMD_BEEP_1: ; $E681
8397   E681 88 02           LOP  UL,BCMD_BEEP_1 ; $E681
8398   E683 FD ED F0 0B     BII  #(PC1500_IF_REG),$03
8398   E687 03 
8399   E688 89 14           BZR BCMD_BEEP_2 ; $E69E
8400   E68A 46              DEC  X
8401   E68B 84              LDA  XH
8402   E68C 8B 10           BZS BCMD_BEEP_2 ; $E69E
8403   E68E B5 88           LDI  A,$88
8404   E690 FD 1E           STA  #(Y)
8405   E692 A4              LDA  UH
8406   E693 2A              STA  UL
8407   E694             
8408   E694             BCMD_BEEP_3: ; $E694
8409   E694 88 02           LOP  UL,BCMD_BEEP_3 ; $E694
8410   E696 6A 01           LDI  UL,$01
8411   E698             
8412   E698             BCMD_BEEP_4: ; $E698
8413   E698 88 02           LOP  UL,BCMD_BEEP_4 ; $E698
8414   E69A 49 FF           ANI  (X),$FF
8415   E69C 9E 23           BCH BCMD_BEEP_5 ; $E67B
8416   E69E             
8417   E69E             BCMD_BEEP_2: ; $E69E
8418   E69E FD 2A           POP  U
8419   E6A0 9E F3           BCH ARX2TIME_2 ; $E5AF
8420   E6A2 E4              VEJ  (E4)
8421   E6A3 E4              VEJ  (E4)
8422   E6A4 E4              VEJ  (E4)
8423   E6A5             
8424   E6A5             
8425   E6A5             
8426   E6A5             ;------------------------------------------------------------------------------
8427   E6A5             ; $E6A5 - Basic command PAUSE
8428   E6A5             ;------------------------------------------------------------------------------
8429   E6A5             BCMD_PAUSE: ; 
8430   E6A5 B5 FF           LDI  A,$FF
8431   E6A7 8E 0F           BCH BCMD_PAUSE_2 ; $E6B8
8432   E6A9             
8433   E6A9             BCMD_PAUSE_25: ; $E6A9
8434   E6A9 B5 AA           LDI  A,$AA
8435   E6AB FD C8           PSH  A
8436   E6AD B5 60           LDI  A,$60
8437   E6AF AE 78 8F        STA  ($788F)
8438   E6B2 FD 98           PSH  Y
8439   E6B4 8E 57           BCH BCMD_PAUSE_3 ; $E70D
8440   E6B6             
8441   E6B6             BCMD_PAUSE_1: ; $E6B6
8442   E6B6 B5 00           LDI  A,$00
8443   E6B8             
8444   E6B8             BCMD_PAUSE_2: ; $E6B8
8445   E6B8 FD C8           PSH  A
8446   E6BA B5 60           LDI  A,$60
8447   E6BC AE 78 8F        STA  ($788F)
8448   E6BF C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_4); $E6FD
8448   E6C0 3C          
8449   E6C1             
8450   E6C1             BCMD_PAUSE_16: ; $E6C1
8451   E6C1 BE EC AE        SJP  (INIT_CURS)
8452   E6C4             
8453   E6C4             BCMD_PAUSE_21: ; $E6C4
8454   E6C4 CD 84           VMJ  ($84) ; ($84)($84)($42)
8455   E6C6 FD 8A           POP  A
8456   E6C8 D9              SHL
8457   E6C9 83 17           BCS BCMD_PAUSE_5 ; $E6E2
8458   E6CB             
8459   E6CB             BCMD_PAUSE_24: ; $E6CB
8460   E6CB D8              VEJ  (D8)
8461   E6CC 89 04           BZR BCMD_PAUSE_6 ; $E6D2
8462   E6CE B5 20           LDI  A,$20
8463   E6D0 8E 24           BCH BCMD_PAUSE_7 ; $E6F6
8464   E6D2             
8465   E6D2             BCMD_PAUSE_6: ; $E6D2
8466   E6D2 A5 78 71        LDA  (WAIT_CFG)
8467   E6D5 D5              SHR
8468   E6D6 83 08           BCS BCMD_PAUSE_8 ; $E6E0
8469   E6D8 D5              SHR
8470   E6D9 81 11           BCR BCMD_PAUSE_9 ; $E6EC
8471   E6DB F4              VEJ  (F4) \ AWRD(WAIT_CTR_H)
8471   E6DC 78 72       
8472   E6DE             
8473   E6DE             BCMD_PAUSE_10: ; $E6DE
8474   E6DE CD AC           VMJ  ($AC) ; ($AC)($56)
8475   E6E0             
8476   E6E0             BCMD_PAUSE_8: ; $E6E0
8477   E6E0 56              DEC  Y
8478   E6E1 E2              VEJ  (E2)
8479   E6E2             
8480   E6E2             BCMD_PAUSE_5: ; $E6E2
8481   E6E2 D9              SHL
8482   E6E3 68 00           LDI  UH,$00
8483   E6E5 6A 36           LDI  UL,$36
8484   E6E7 93 0B           BCS  BCMD_PAUSE_10 ; $E6DE
8485   E6E9 BA EE F7        JMP  BCMD_POINT_4 ; $EEF7
8486   E6EC             
8487   E6EC             BCMD_PAUSE_9: ; $E6EC
8488   E6EC EB 78 8A 20     ORI  (BREAKPARAM),$20
8489   E6F0 D4              VEJ  (D4) \ ABYT($AC)
8489   E6F1 AC          
8490   E6F2 D4              VEJ  (D4) \ ABYT($A0)
8490   E6F3 A0          
8491   E6F4 B5 02           LDI  A,$02
8492   E6F6             
8493   E6F6             BCMD_PAUSE_7: ; $E6F6
8494   E6F6 AE 78 80        STA  (DISPARAM)
8495   E6F9 CD 84           VMJ  ($84) ; ($84)($42)
8496   E6FB CD 46           VMJ  ($46)
8497   E6FD             
8498   E6FD             BCMD_PAUSE_4: ; $E6FD
8499   E6FD CD 9A           VMJ  ($9A) ; ($9A)($4D)
8500   E6FF C3 E0           VCS  ($E0)
8501   E701 DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_11) ; $E7A8
8501   E702 A5          
8502   E703 C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_12) ; $E744
8502   E704 3F          
8503   E705 FD 98           PSH  Y
8504   E707 ED 78 74 01     BII  (CURSOR_ENA),$01
8505   E70B 89 26           BZR BCMD_PAUSE_13 ; $E733
8506   E70D             
8507   E70D             BCMD_PAUSE_3: ; $E70D
8508   E70D BE EF 81        SJP  (OUTBUFCLR)
8509   E710 CD 98           VMJ  ($98) ; ($98)($4C
8510   E712 83 10           BCS BCMD_PAUSE_14 ; $E724
8511   E714 B5 02           LDI  A,$02
8512   E716 CD 96           VMJ  ($96) ; ($96)($4B)
8513   E718 83 8A           BCS BCMD_PAUSE_15 ; $E7A4
8514   E71A 2A              STA  UL
8515   E71B BD FF           EAI  $FF
8516   E71D B3 7B           ADI  A,$7B
8517   E71F AE 78 8F        STA  ($788F)
8518   E722 CD 94           VMJ  ($94) ; ($94)($4A)
8519   E724             
8520   E724             BCMD_PAUSE_14: ; $E724
8521   E724 B5 1A           LDI  A,$1A
8522   E726 BE EC B2        SJP  (INIT_MTRX)
8523   E729             
8524   E729             BCMD_PAUSE_18: ; $E729
8525   E729 68 7B           LDI  UH,$7B
8526   E72B 6A 60           LDI  UL,$60
8527   E72D CD 92           VMJ  ($92) ; ($92)($49)
8528   E72F FD 1A           POP  Y
8529   E731 9E 72           BCH BCMD_PAUSE_16 ; $E6C1
8530   E733             
8531   E733             BCMD_PAUSE_13: ; $E733
8532   E733 CD 98           VMJ  ($98) ; ($98)($4C)
8533   E735 83 07           BCS BCMD_PAUSE_17 ; $E73E
8534   E737 B5 01           LDI  A,$01
8535   E739 BE EC D6        SJP  (ARX2OUTBUF_F)
8536   E73C 83 66           BCS BCMD_PAUSE_15 ; $E7A4
8537   E73E             
8538   E73E             BCMD_PAUSE_17: ; $E73E
8539   E73E FB              SEC
8540   E73F 14              LDA  YL
8541   E740 B1 60           SBI  A,$60
8542   E742 9E 1B           BCH BCMD_PAUSE_18 ; $E729
8543   E744             
8544   E744             BCMD_PAUSE_12: ; $E744
8545   E744 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_PAUSE_19) ; $E785
8545   E745 2C          
8545   E746 3E          
8546   E747 FD 98           PSH  Y
8547   E749 CD 9C           VMJ  ($9C); ($9C)($4E)
8548   E74B 83 57           BCS BCMD_PAUSE_15 ; $E7A4
8549   E74D FD 1A           POP  Y
8550   E74F C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_20) ; $E766
8550   E750 15          
8551   E751 E9 78 74 FE     ANI  (CURSOR_ENA),$FE
8552   E755 BE EC 9C        SJP  (CLRNOCURSOR)
8553   E758 68 7B           LDI  UH,$7B
8554   E75A 6A 60           LDI  UL,$60
8555   E75C CD 92           VMJ  ($92) ; ($92)($49)
8556   E75E EB 78 74 01     ORI  (CURSOR_ENA),$01
8557   E762 91 A0           BCR BCMD_PAUSE_21 ; $E6C4
8558   E764 9E A5           BCH BCMD_PAUSE_16 ; $E6C1
8559   E766             
8560   E766             BCMD_PAUSE_20: ; $E766
8561   E766 CD 9A           VMJ  ($9A) ; ($9A)($4D)
8562   E768 C3 E0           VCS  ($E0)
8563   E76A DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_11) ; $E7A8
8563   E76B 3C          
8564   E76C C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_PAUSE_22) ; $E770
8564   E76D 2C          
8564   E76E 01          
8565   E76F E4              VEJ  (E4)
8566   E770             
8567   E770             BCMD_PAUSE_22: ; $E770
8568   E770 CD 04           VMJ  ($04) \ ABRF(BCMD_PAUSE_23) ; $E7A9
8568   E772 36          
8569   E773 FD 98           PSH  Y
8570   E775 CD 9C           VMJ  ($9C) ; ($9C)($4E)
8571   E777 83 2B           BCS BCMD_PAUSE_15 ; $E7A4
8572   E779 BE EC B2        SJP  (INIT_MTRX)
8573   E77C 9E 40           BCH BCMD_PAUSE_17 ; $E73E
8574   E77E CD 9A           VMJ  ($9A) ; ($9A)($4D)
8575   E780 C3 E0           VCS  ($E0)
8576   E782 DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_11) ; $E7A8
8576   E783 24          
8577   E784 C0              VEJ  (C0)
8578   E785             
8579   E785             BCMD_PAUSE_19: ; $E785
8580   E785 C4              VEJ  (C4) \ ACHR($3B) \ ABRF($E795)
8580   E786 3B          
8580   E787 0D          
8581   E788 FD 98           PSH  Y
8582   E78A BE EC E3        SJP  (ARXASCII2OUTBUF)
8583   E78D 83 15           BCS BCMD_PAUSE_15 ; $E7A4
8584   E78F FD 1A           POP  Y
8585   E791 C8              VEJ  (C8) \ ABRF($E7AA)
8585   E792 17          
8586   E793 9E 40           BCH $E755
8587   E795 CD 04           VMJ  ($04) \ ABRF(BCMD_PAUSE_23) ; $E7A9
8587   E797 11          
8588   E798 FD 98           PSH  Y
8589   E79A BE EC E3        SJP  (ARXASCII2OUTBUF)
8590   E79D 83 05           BCS BCMD_PAUSE_15 ; $E7A4
8591   E79F BE EC 9C        SJP  (CLRNOCURSOR)
8592   E7A2 9E 7B           BCH BCMD_PAUSE_18 ; $E729
8593   E7A4             
8594   E7A4             BCMD_PAUSE_15: ; $E7A4
8595   E7A4 68 24           LDI  UH,$24
8596   E7A6 FD 1A           POP  Y
8597   E7A8             
8598   E7A8             BCMD_PAUSE_11: ; $E7A8
8599   E7A8 E0              VEJ  (E0)
8600   E7A9             
8601   E7A9             BCMD_PAUSE_23: ; $E7A9
8602   E7A9 E4              VEJ  (E4)
8603   E7AA 9E 2E           BCH $E77E
8604   E7AC             
8605   E7AC             
8606   E7AC             
8607   E7AC             ;------------------------------------------------------------------------------
8608   E7AC             ; $E7AC - Basic command GPRINT
8609   E7AC             ;------------------------------------------------------------------------------
8610   E7AC             BCMD_GPRINT: ; 
8611   E7AC C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_1) ; $E7B0
8611   E7AD 02          
8612   E7AE 8E 5B           BCH $E80B
8613   E7B0             
8614   E7B0             BCMD_GPRINT_1: ; $E7B0
8615   E7B0 FD A8           PSH  U
8616   E7B2 BE EC 9C        SJP  (CLRNOCURSOR)
8617   E7B5 FD 2A           POP  U
8618   E7B7             
8619   E7B7             BCMD_GPRINT_19: ; $E7B7
8620   E7B7 C6              VEJ  (C6)
8621   E7B8 DE              VEJ  (DE) \ ABRF($E831)
8621   E7B9 77          
8622   E7BA BE ED AB        SJP  (MTRXNRANGE);($48)
8623   E7BD 83 38           BCS BCMD_GPRINT_2 ; $E7F7
8624   E7BF FD 98           PSH  Y
8625   E7C1 CD 8C           VMJ  ($8C) ; ($8C)($46)
8626   E7C3 FD 88           PSH  X
8627   E7C5 A5 7A 04        LDA  (ARX + $04)
8628   E7C8 B7 C0           CPI  A,$C0
8629   E7CA 81 1C           BCR BCMD_GPRINT_3 ; $E7E8
8630   E7CC DC              VEJ  (DC)
8631   E7CD             
8632   E7CD             BCMD_GPRINT_7: ; $E7CD
8633   E7CD 6E 02           CPI  UL,$02
8634   E7CF 81 22           BCR BCMD_GPRINT_4 ; $E7F3
8635   E7D1 BE ED 95        SJP  (ASCII2HEX)
8636   E7D4 FD 5A           STX  Y
8637   E7D6 FD 0A           POP  X
8638   E7D8 81 58           BCR BCMD_GPRINT_5 ; $E832
8639   E7DA CD 88           VMJ  ($88) ; ($88)($44)
8640   E7DC 62              DEC  UL
8641   E7DD 62              DEC  UL
8642   E7DE CD 8E           VMJ  ($8E) ; ($8E)($47)
8643   E7E0 83 13           BCS BCMD_GPRINT_6 ; $E7F5
8644   E7E2 FD 88           PSH  X
8645   E7E4 FD 18           LDX  Y
8646   E7E6 9E 1B           BCH BCMD_GPRINT_7 ; $E7CD
8647   E7E8             
8648   E7E8             BCMD_GPRINT_3: ; $E7E8
8649   E7E8 D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_GPRINT_8) ; $E836
8649   E7E9 08          
8649   E7EA 4B          
8650   E7EB FD 0A           POP  X
8651   E7ED CD 88           VMJ  ($88) ; ($88)($44)
8652   E7EF CD 8E           VMJ  ($8E) ; ($8E)($47)
8653   E7F1 8E 02           BCH BCMD_GPRINT_6 ; $E7F5
8654   E7F3             
8655   E7F3             BCMD_GPRINT_4: ; $E7F3
8656   E7F3 FD 0A           POP  X
8657   E7F5             
8658   E7F5             BCMD_GPRINT_6: ; $E7F5
8659   E7F5 FD 1A           POP  Y
8660   E7F7             
8661   E7F7             BCMD_GPRINT_2: ; $E7F7
8662   E7F7 C2              VEJ  (C2) \ ACHR($3B) \ ABRF(BCMD_GPRINT_9) ; $E808
8662   E7F8 3B          
8662   E7F9 0E          
8663   E7FA C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_10) ; $E83C
8663   E7FB 40          
8664   E7FC             
8665   E7FC             BCMD_GPRINT_20: ; $E7FC
8666   E7FC EB 78 74 01     ORI  (CURSOR_ENA),$01
8667   E800 BE ED AB        SJP  (MTRXNRANGE);($48)
8668   E803 83 0A           BCS BCMD_GPRINT_11 ; $E80F
8669   E805             
8670   E805             BCMD_GPRINT_13: ; $E805
8671   E805 BA E6 CB        JMP  BCMD_PAUSE_24 ; $E6CB
8672   E808             
8673   E808             BCMD_GPRINT_9: ; $E808
8674   E808 CD 04           VMJ  ($04) \ ABRF(BCMD_GPRINT_12) ; $E814
8674   E80A 09          
8675   E80B E9 78 74 FE     ANI  (CURSOR_ENA),$FE
8676   E80F             
8677   E80F             BCMD_GPRINT_11: ; $E80F
8678   E80F BE EC B2        SJP  (INIT_MTRX)
8679   E812 9E 0F           BCH BCMD_GPRINT_13 ; $E805
8680   E814             
8681   E814             BCMD_GPRINT_12: ; $E814
8682   E814 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_GPRINT_14) ; $E827
8682   E815 2C          
8682   E816 10          
8683   E817 BE ED AB        SJP  (MTRXNRANGE);($48)
8684   E81A 83 07           BCS BCMD_GPRINT_15 ; $E823
8685   E81C B5 00           LDI  A,$00
8686   E81E BE ED EF        SJP  (HEX2COL)
8687   E821 CD 8E           VMJ  ($8E) ; ($8E)($47)
8688   E823             
8689   E823             BCMD_GPRINT_15: ; $E823
8690   E823 C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_10) ; $E83C
8690   E824 17          
8691   E825 9E 2B           BCH BCMD_GPRINT_20 ; $E7FC
8692   E827             
8693   E827             BCMD_GPRINT_14: ; $E827
8694   E827 68 01           LDI  UH,$01
8695   E829             
8696   E829             BCMD_GPRINT_18: ; $E829
8697   E829 BE ED AB        SJP  (MTRXNRANGE);($48)
8698   E82C 81 03           BCR BCMD_GPRINT_16 ; $E831
8699   E82E BE EC B2        SJP  (INIT_MTRX)
8700   E831             
8701   E831             BCMD_GPRINT_16: ; $E831
8702   E831 E0              VEJ  (E0)
8703   E832             
8704   E832             BCMD_GPRINT_5: ; $E932
8705   E832 68 24           LDI  UH,$24
8706   E834 8E 02           BCH BCMD_GPRINT_17 ; $E838
8707   E836             
8708   E836             BCMD_GPRINT_8: ; $E836
8709   E836 FD 0A           POP  X
8710   E838             
8711   E838             BCMD_GPRINT_17: ; $E838
8712   E838 FD 1A           POP  Y
8713   E83A 9E 13           BCH BCMD_GPRINT_18 ; $E829
8714   E83C             
8715   E83C             BCMD_GPRINT_10: ; $E82C
8716   E83C 9E 87           BCH BCMD_GPRINT_19 ; $E7B7
8717   E83E             
8718   E83E             
8719   E83E             
8720   E83E             ;------------------------------------------------------------------------------
8721   E83E             ; $E83E - Basic command GCURSOR
8722   E83E             ;------------------------------------------------------------------------------
8723   E83E             BCMD_GCURSOR: ; 
8724   E83E DE              VEJ  (DE) \ ABRF(BCMD_WAIT_1) ; $E88A
8724   E83F 4A          
8725   E840 D0              VEJ  (D0) \ ABYT($0A) \ ABRF(BCMD_WAIT_1) ; $E88A
8725   E841 0A          
8725   E842 47          
8726   E843 24              LDA  UL
8727   E844 8E 17           BCH BCMD_CURSOR_2 ; $E85D
8728   E846             
8729   E846             
8730   E846             
8731   E846             ;------------------------------------------------------------------------------
8732   E846             ; $E846 - Basic command CURSOR
8733   E846             ;------------------------------------------------------------------------------
8734   E846             BCMD_CURSOR_1: ; 
8735   E846 C8              VEJ  (C8) \ ABRF(BCMD_CURSOR_3) ; $E852
8735   E847 0A          
8736   E848 E9 78 75 00     ANI  (CURSOR_PTR),$00
8737   E84C E9 78 74 FE     ANI  (CURSOR_ENA),$FE
8738   E850 56              DEC  Y
8739   E851 E2              VEJ  (E2)
8740   E852             
8741   E852             BCMD_CURSOR_3: ; $E852
8742   E852 C6              VEJ  (C6)
8743   E853 DE              VEJ  (DE) \ ABRF(BCMD_WAIT_1) ; $E88A
8743   E854 35          
8744   E855 D0              VEJ  (D0) \ ABYT($10) \ ABRF(BCMD_WAIT_1) ; $E88A
8744   E856 10          
8744   E857 32          
8745   E858 24              LDA  UL
8746   E859 D9              SHL
8747   E85A F9              REC
8748   E85B 22              ADC  UL
8749   E85C D9              SHL
8750   E85D             
8751   E85D             BCMD_CURSOR_2: ; $E85D
8752   E85D AE 78 75        STA  (CURSOR_PTR)
8753   E860 EB 78 74 01     ORI  (CURSOR_ENA),$01
8754   E864 E2              VEJ  (E2)
8755   E865             
8756   E865             
8757   E865             
8758   E865             ;------------------------------------------------------------------------------
8759   E865             ; $E865 - Basic Command CLS
8760   E865             ;------------------------------------------------------------------------------
8761   E865             BCMD_CLS: ; 
8762   E865 F2              VEJ  (F2)
8763   E866 BE EC AE        SJP  (INIT_CURS)
8764   E869 E2              VEJ  (E2)
8765   E86A             
8766   E86A             
8767   E86A             
8768   E86A             ;------------------------------------------------------------------------------
8769   E86A             ; $E86A - Basic Command WAIT
8770   E86A             ;------------------------------------------------------------------------------
8771   E86A             BCMD_WAIT: ; 
8772   E86A C8              VEJ  (C8) \ ABRF(BCMD_WAIT_2) ; $E871
8772   E86B 05          
8773   E86C 56              DEC  Y
8774   E86D B5 00           LDI  A,$00
8775   E86F 8E 15           BCH BCMD_WAIT_3 ; $E886
8776   E871             
8777   E871             BCMD_WAIT_2: ; $E871
8778   E871 C6              VEJ  (C6)
8779   E872 DE              VEJ  (DE) \ ABRF(BCMD_WAIT_1) ; $E88A
8779   E873 16          
8780   E874 D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_WAIT_1) ; $E88A
8780   E875 00          
8780   E876 13          
8781   E877 F6              VEJ  (F6) \ AWRD(WAIT_CTR_H)
8781   E878 78 72       
8782   E87A B5 02           LDI  A,$02
8783   E87C 6C 00           CPI  UH,$00
8784   E87E 89 06           BZR BCMD_WAIT_3 ; $E886
8785   E880 6E 00           CPI  UL,$00
8786   E882 89 02           BZR BCMD_WAIT_3 ; $E886
8787   E884 B5 03           LDI  A,$03
8788   E886             
8789   E886             BCMD_WAIT_3: ; $E886
8790   E886 AE 78 71        STA  (WAIT_CFG)
8791   E889 E2              VEJ  (E2)
8792   E88A             
8793   E88A             BCMD_WAIT_1: ; $E86A
8794   E88A E0              VEJ  (E0)
8795   E88B E4              VEJ  (E4)
8796   E88C             
8797   E88C             
8798   E88C             
8799   E88C             ;------------------------------------------------------------------------------
8800   E88C             ; $E88C - Time delay by 15.625 ms * U-Reg
8801   E88C             ;            Address: E88C (AC)
8802   E88C             ;   Entry parameters: U-Reg contains the number of delay loops.
8803   E88C             ; 
8804   E88C             ; Modified registers: U-Reg
8805   E88C             ;   Error conditions: It is possible to abort with the break key
8806   E88C             ;------------------------------------------------------------------------------
8807   E88C             TIMEDELAY: ; 
8808   E88C FD 98           PSH  Y
8809   E88E FD A8           PSH  U
8810   E890 B5 20           LDI  A,$20
8811   E892 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8812   E894 FD 2A           POP  U
8813   E896 B5 00           LDI  A,$00
8814   E898 FD AE F0 0D     STA  #(PC1500_PRT_B_DIR)
8815   E89C             
8816   E89C             TIMEDELAY_2: ; $E89C
8817   E89C FD ED F0 0F     BII  #(PC1500_PRT_B),$20
8817   E8A0 20 
8818   E8A1 8B 06           BZS TIMEDELAY_1 ; $E8A9
8819   E8A3 CD A6           VMJ  ($A6) ; ($A6)($53)
8820   E8A5 9B 0B           BZS TIMEDELAY_2 ; $E89C
8821   E8A7 8E 0B           BCH TIMEDELAY_3 ; $E8B4
8822   E8A9             
8823   E8A9             TIMEDELAY_1: ; $E8A9
8824   E8A9 FD ED F0 0F     BII  #(PC1500_PRT_B),$20
8824   E8AD 20 
8825   E8AE 89 0C           BZR TIMEDELAY_4 ; $E8BC
8826   E8B0 CD A6           VMJ  ($A6) ; ($A6)($53)
8827   E8B2 9B 0B           BZS TIMEDELAY_1 ; $E8A9
8828   E8B4             
8829   E8B4             TIMEDELAY_3: ; $E8B4
8830   E8B4 B5 00           LDI  A,$00
8831   E8B6 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8832   E8B8 FB              SEC
8833   E8B9             
8834   E8B9             TIMEDELAY_5: ; $E8B9
8835   E8B9 FD 1A           POP  Y
8836   E8BB 9A              RTN
8837   E8BC             
8838   E8BC             TIMEDELAY_4: ; $E8BC
8839   E8BC 62              DEC  UL
8840   E8BD 93 23           BCS TIMEDELAY_2 ; $E89C
8841   E8BF FD 62           DEC  UH
8842   E8C1 93 27           BCS TIMEDELAY_2 ; $E89C
8843   E8C3 B5 00           LDI  A,$00
8844   E8C5 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8845   E8C7 F9              REC
8846   E8C8 9E 11           BCH TIMEDELAY_5 ; $E8B9
8847   E8CA             
8848   E8CA             
8849   E8CA             
8850   E8CA             ;------------------------------------------------------------------------------
8851   E8CA             ; $E8CA - Display Program
8852   E8CA             ;------------------------------------------------------------------------------
8853   E8CA             PRGMDISP: ; 
8854   E8CA A5 78 80        LDA  (DISPARAM)
8855   E8CD BF 31           BII  A,$31
8856   E8CF 89 96           BZR PRGMDISP_1 ; $E967
8857   E8D1 FD 98           PSH  Y
8858   E8D3 14              LDA  YL
8859   E8D4 FD C8           PSH  A
8860   E8D6 48 7A           LDI  XH,$7A
8861   E8D8 4A 08           LDI  XL,$08
8862   E8DA ED 78 8A 10     BII  (BREAKPARAM),$10
8863   E8DE 89 10           BZR PRGMDISP_2 ; $E8F0
8864   E8E0 ED 78 80 40     BII  (DISPARAM),$40
8865   E8E4 8B 11           BZS PRGMDISP_3 ; $E8F7
8866   E8E6 FD 88           PSH  X
8867   E8E8 B5 E5           LDI  A,$E5
8868   E8EA             
8869   E8EA             PRGMDISP_5: ; $E8EA
8870   E8EA 68 7B           LDI  UH,$7B
8871   E8EC 6A B0           LDI  UL,$B0
8872   E8EE 8E 28           BCH PRGMDISP_4 ; $E918
8873   E8F0             
8874   E8F0             PRGMDISP_2: ; $E8F0
8875   E8F0 FD 88           PSH  X
8876   E8F2 A5 78 77        LDA  ($7877)
8877   E8F5 9E 0D           BCH PRGMDISP_5 ; $E8EA
8878   E8F7             
8879   E8F7             PRGMDISP_3: ; $E8F7
8880   E8F7 58 7B           LDI  YH,$7B
8881   E8F9 5A B0           LDI  YL,$B0
8882   E8FB 8E 71           BCH PRGMDISP_6 ; $E96E
8883   E8FD             
8884   E8FD             PRGMDISP_31: ; $E8FF
8885   E8FD ED 78 80 40     BII  (DISPARAM),$40
8886   E901 8B 6B           BZS PRGMDISP_6 ; $E96E
8887   E903 FD 8A           POP  A
8888   E905 FD C8           PSH  A
8889   E907 FD 88           PSH  X
8890   E909 FD 98           PSH  Y
8891   E90B FD 2A           POP  U
8892   E90D ED 78 7B FF     BII  ($787B),$FF
8893   E911 89 01           BZR PRGMDISP_7 ; $E914
8894   E913 1A              STA  YL
8895   E914             
8896   E914             PRGMDISP_7: ; $E914
8897   E914 F9              REC
8898   E915 04              LDA  XL
8899   E916 B3 DD           ADI  A,$DD
8900   E918             
8901   E918             PRGMDISP_4: ; $E918
8902   E918 64              INC  U
8903   E919 FD C8           PSH  A
8904   E91B FD A8           PSH  U
8905   E91D C0              VEJ  (C0)
8906   E91E 81 16           BCR PRGMDISP_8 ; $E936
8907   E920 CD 1C           VMJ  ($1C) \ ABYT($04)
8907   E922 04          
8908   E923 8B 11           BZS PRGMDISP_8 ; $E936
8909   E925 2A              STA  UL
8910   E926 FD 0A           POP  X
8911   E928 F9              REC
8912   E929 FD 8A           POP  A
8913   E92B 22              ADC  UL
8914   E92C 83 02           BCS PRGMDISP_9 ; $E930
8915   E92E 8E 11           BCH PRGMDISP_10 ; $E941
8916   E930             
8917   E930             PRGMDISP_9: ; $E930
8918   E930 C6              VEJ  (C6)
8919   E931 8E 28           BCH PRGMDISP_11 ; $E95B
8920   E933             
8921   E933             PRGMDISP_15: ; $E933
8922   E933 C0              VEJ  (C0)
8923   E934 83 29           BCS PRGMDISP_12 ; $E95F
8924   E936             
8925   E936             PRGMDISP_8: ; $E936
8926   E936 B5 01           LDI  A,$01
8927   E938             
8928   E938             PRGMDISP_16: ; $E938
8929   E938 2A              STA  UL
8930   E939 FD 0A           POP  X
8931   E93B F9              REC
8932   E93C FD 8A           POP  A
8933   E93E 22              ADC  UL
8934   E93F 83 1A           BCS PRGMDISP_11 ; $E95B
8935   E941             
8936   E941             PRGMDISP_10: ; $E941
8937   E941 C6              VEJ  (C6)
8938   E942 FD C8           PSH  A
8939   E944 14              LDA  YL
8940   E945 06              CPA  XL
8941   E946 81 11           BCR PRGMDISP_13 ; $E959
8942   E948 FD 88           PSH  X
8943   E94A 8B 0A           BZS PRGMDISP_14 ; $E956
8944   E94C 56              DEC  Y
8945   E94D 56              DEC  Y
8946   E94E 15              LDA  (Y)
8947   E94F B7 E0           CPI  A,$E0
8948   E951 93 20           BCS PRGMDISP_15 ; $E933
8949   E953 54              INC  Y
8950   E954 9E 23           BCH PRGMDISP_15 ; $E933
8951   E956             
8952   E956             PRGMDISP_14: ; $E956
8953   E956 56              DEC  Y
8954   E957 9E 26           BCH PRGMDISP_15 ;  $E933
8955   E959             
8956   E959             PRGMDISP_13: ; $E959
8957   E959 FD 8A           POP  A
8958   E95B             
8959   E95B             PRGMDISP_11: ; $E95B
8960   E95B FD 0A           POP  X
8961   E95D 8E 0F           BCH PRGMDISP_6 ; $E96E
8962   E95F             
8963   E95F             PRGMDISP_12: ; $E95F
8964   E95F CD 1C           VMJ  ($1C) \ ABYT($04)
8964   E961 04          
8965   E962 9B 2E           BZS PRGMDISP_8 ; $E936
8966   E964 DD              INC  A
8967   E965 9E 2F           BCH PRGMDISP_16 ; $E938
8968   E967             
8969   E967             PRGMDISP_1: ; $E967
8970   E967 F1              AEX
8971   E968 D5              SHR
8972   E969 83 BB           BCS STATUSCHK_1 $EA26
8973   E96B BA EE EC        JMP  BCMD_POINT_2 ; $EEEC
8974   E96E             
8975   E96E             PRGMDISP_6: ; $E96E
8976   E96E FD 8A           POP  A
8977   E970 FD C8           PSH  A
8978   E972 16              CPA  YL
8979   E973 89 04           BZR PRGMDISP_17 ; $E979
8980   E975 04              LDA  XL
8981   E976 AE 78 7B        STA  ($787B)
8982   E979             
8983   E979             PRGMDISP_17: ; $E979
8984   E979 C0              VEJ  (C0)
8985   E97A 83 1B           BCS PRGMDISP_18 ; $E997
8986   E97C B7 0D           CPI  A,$0D
8987   E97E 8B 2C           BZS PRGMDISP_19 ; $E9AC
8988   E980             
8989   E980             PRGMDISP_23: ; $E980
8990   E980 41              SIN  X
8991   E981 4E 22           CPI  XL,$22
8992   E983 91 17           BCR PRGMDISP_6 ; $E96E
8993   E985 BE E9 EB        SJP  (STATUSCHK)
8994   E988 83 2E           BCS PRGMDISP_20 ; $E9B8
8995   E98A B5 1A           LDI  A,$1A
8996   E98C             
8997   E98C             PRGMDISP_30: ; $E98C
8998   E98C 28              STA  UH
8999   E98D             
9000   E98D             PRGMDISP_29: ; $E98D
9001   E98D FD 8A           POP  A
9002   E98F A5 78 75        LDA  (CURSOR_PTR)
9003   E992 FD C8           PSH  A
9004   E994 A4              LDA  UH
9005   E995 8E 2E           BCH PRGMDISP_21 ; $E9C5
9006   E997             
9007   E997             PRGMDISP_18: ; $E997
9008   E997 FD 98           PSH  Y
9009   E999 FD 5A           STX  Y
9010   E99B CD 1C           VMJ  ($1C) \ ABYT($02)
9010   E99D 02          
9011   E99E 8B 08           BZS PRGMDISP_22 ; $E9A8
9012   E9A0 B5 20           LDI  A,$20
9013   E9A2             
9014   E9A2             PRGMDISP_24: ; $E9A2
9015   E9A2 FD 18           LDX  Y
9016   E9A4 FD 1A           POP  Y
9017   E9A6 9E 28           BCH PRGMDISP_23 ; $E980
9018   E9A8             
9019   E9A8             PRGMDISP_22: ; $E9A8
9020   E9A8 B5 7E           LDI  A,$7E
9021   E9AA 9E 0A           BCH PRGMDISP_24 ; $E9A2
9022   E9AC             
9023   E9AC             PRGMDISP_19: ; $E9AC
9024   E9AC BE E9 EB        SJP  (STATUSCHK)
9025   E9AF 81 1C           BCR PRGMDISP_25 ; $E9CD
9026   E9B1 B5 00           LDI  A,$00
9027   E9B3             
9028   E9B3             PRGMDISP_26: ; $E9B3
9029   E9B3 41              SIN  X
9030   E9B4 4E 22           CPI  XL,$22
9031   E9B6 91 05           BCR PRGMDISP_26 ; $E9B3
9032   E9B8             
9033   E9B8             PRGMDISP_20: ; $E9B8
9034   E9B8 FD 8A           POP  A
9035   E9BA A5 78 75        LDA  (CURSOR_PTR)
9036   E9BD FD C8           PSH  A
9037   E9BF E9 78 75 00     ANI  (CURSOR_PTR),$00
9038   E9C3 B5 1A           LDI  A,$1A
9039   E9C5             
9040   E9C5             PRGMDISP_21: ; $E9C5
9041   E9C5 68 7A           LDI  UH,$7A
9042   E9C7 6A 08           LDI  UL,$08
9043   E9C9 CD 92           VMJ  ($92) ; ($92)($49)
9044   E9CB 8E 2C           BCH STATUSCHK_2 ; $E9F9
9045   E9CD             
9046   E9CD             PRGMDISP_25: ; $E9CD
9047   E9CD 49 00           ANI  (X),$00
9048   E9CF 04              LDA  XL
9049   E9D0 B1 06           SBI  A,$06
9050   E9D2 A7 78 76        CPA  (CHARPOS_LCD)
9051   E9D5 83 0F           BCS PRGMDISP_27 ; $E9E6
9052   E9D7 2A              STA  UL
9053   E9D8 A5 78 76        LDA  (CHARPOS_LCD)
9054   E9DB 28              STA  UH
9055   E9DC DD              INC  A
9056   E9DD 20              SBC  UL
9057   E9DE 2A              STA  UL
9058   E9DF B5 00           LDI  A,$00
9059   E9E1             
9060   E9E1             PRGMDISP_28: ; $E9E1
9061   E9E1 41              SIN  X
9062   E9E2 88 03           LOP  UL,PRGMDISP_28 ; $E9E1
9063   E9E4 9E 59           BCH PRGMDISP_29 ; $E98D
9064   E9E6             
9065   E9E6             PRGMDISP_27: ; $E9E6
9066   E9E6 AE 78 76        STA  (CHARPOS_LCD)
9067   E9E9 9E 5F           BCH PRGMDISP_30 ; $E98C
9068   E9EB             
9069   E9EB             
9070   E9EB             
9071   E9EB             ;------------------------------------------------------------------------------
9072   E9EB             ; $E9EB - Checks display and input status. Checks computer status.
9073   E9EB             ;------------------------------------------------------------------------------
9074   E9EB             STATUSCHK: ; 
9075   E9EB ED 78 80 10     BII  (DISPARAM),$10
9076   E9EF 89 07           BZR STATUSCHK_3 ; $E9F8
9077   E9F1 ED 78 8A 10     BII  (BREAKPARAM),$10
9078   E9F5 8B 01           BZS STATUSCHK_3 ; $E9F8
9079   E9F7 F9              REC
9080   E9F8             
9081   E9F8             STATUSCHK_3: ; $E9F8
9082   E9F8 9A              RTN
9083   E9F9             
9084   E9F9             STATUSCHK_2: ; $E9F9
9085   E9F9 ED 78 80 40     BII  (DISPARAM),$40
9086   E9FD 8B 19           BZS STATUSCHK_4 ; $EA18
9087   E9FF CC              VEJ  (CC) \ ABYTL(CURS_POS_NBUF_H) ; $787E
9087   EA00 7E          
9088   EA01 A5 78 7D        LDA  (BLNKD_CHAR_CODE)
9089   EA04 B7 20           CPI  A,$20
9090   EA06 81 16           BCR STATUSCHK_5 ; $EA1E
9091   EA08 B5 7F           LDI  A,$7F
9092   EA0A EB 78 7C 81     ORI  (CURSOR_BLNK),$81
9093   EA0E             
9094   EA0E             STATUSCHK_7: ; $EA0E
9095   EA0E CD 8A           VMJ  ($8A) ; ($8A)($45)
9096   EA10             
9097   EA10             STATUSCHK_6: ; $EA10
9098   EA10 FD 8A           POP  A
9099   EA12 AE 78 75        STA  (CURSOR_PTR)
9100   EA15 FD 1A           POP  Y
9101   EA17 9A              RTN
9102   EA18             
9103   EA18             STATUSCHK_4: ; $EA18
9104   EA18 E9 78 7C 7E     ANI  (CURSOR_BLNK),$7E
9105   EA1C 9E 0E           BCH STATUSCHK_6 ; $EA10
9106   EA1E             
9107   EA1E             STATUSCHK_5: ; $EA1E
9108   EA1E B5 5F           LDI  A,$5F
9109   EA20 E9 78 7C 7E     ANI  (CURSOR_BLNK),$7E
9110   EA24 9E 18           BCH STATUSCHK_7 ; $EA0E
9111   EA26             
9112   EA26             STATUSCHK_1: ; $EA26
9113   EA26 FD 98           PSH  Y
9114   EA28 E9 78 7B 00     ANI  ($787B),$00
9115   EA2C ED 78 80 40     BII  (DISPARAM),$40
9116   EA30 89 02           BZR STATUSCHK_8 ; $EA34
9117   EA32 5A B0           LDI  YL,$B0
9118   EA34             
9119   EA34             STATUSCHK_8: ; $EA34
9120   EA34 14              LDA  YL
9121   EA35 FD C8           PSH  A
9122   EA37 48 7A           LDI  XH,$7A
9123   EA39 4A 08           LDI  XL,$08
9124   EA3B 5A B0           LDI  YL,$B0
9125   EA3D             
9126   EA3D             STATUSCHK_11: ; $EA3D
9127   EA3D FD 8A           POP  A
9128   EA3F FD C8           PSH  A
9129   EA41 16              CPA  YL
9130   EA42 8B 23           BZS STATUSCHK_9 ; $EA67
9131   EA44 C0              VEJ  (C0)
9132   EA45 B7 3A           CPI  A,$3A
9133   EA47 83 17           BCS STATUSCHK_10 ; $EA60
9134   EA49 B7 30           CPI  A,$30
9135   EA4B 81 13           BCR STATUSCHK_10 ; $EA60
9136   EA4D 41              SIN  X
9137   EA4E 4E 0E           CPI  XL,$0E
9138   EA50 91 15           BCR STATUSCHK_11 ; $EA3D
9139   EA52             
9140   EA52             STATUSCHK_14: ; $EA52
9141   EA52 B5 20           LDI  A,$20
9142   EA54 ED 78 80 04     BII  (DISPARAM),$04
9143   EA58 8B 02           BZS STATUSCHK_12 ; $EA5C
9144   EA5A B5 3A           LDI  A,$3A
9145   EA5C             
9146   EA5C             STATUSCHK_12: ; $EA5C
9147   EA5C 41              SIN  X
9148   EA5D             
9149   EA5D             STATUSCHK_13: ; $EA5D
9150   EA5D BA E8 FD        JMP  PRGMDISP_31 ; $E8FD
9151   EA60             
9152   EA60             STATUSCHK_10: ; $EA60
9153   EA60 C6              VEJ  (C6)
9154   EA61 4E 09           CPI  XL,$09
9155   EA63 91 08           BCR STATUSCHK_13 ; $EA5D
9156   EA65 9E 15           BCH STATUSCHK_14 ; $EA52
9157   EA67             
9158   EA67             STATUSCHK_9: ; $EA67
9159   EA67 C0              VEJ  (C0)
9160   EA68 B7 3A           CPI  A,$3A
9161   EA6A 93 0C           BCS STATUSCHK_10 ; $EA60
9162   EA6C B7 30           CPI  A,$30
9163   EA6E 91 10           BCR STATUSCHK_10 ; $EA60
9164   EA70 0E              STA  (X)
9165   EA71 04              LDA  XL
9166   EA72 AE 78 7B        STA  ($787B)
9167   EA75 44              INC  X
9168   EA76 9E 2A           BCH $EA4E
9169   EA78             
9170   EA78             
9171   EA78             
9172   EA78             ;------------------------------------------------------------------------------
9173   EA78             ; (96) $EA78 - Using formatting. If error C=1.
9174   EA78             ;------------------------------------------------------------------------------
9175   EA78             USING_FRMT: ; 
9176   EA78 FD C8           PSH  A
9177   EA7A CD 54           VMJ  ($54) ; ($54)($2A)
9178   EA7C 4A 10           LDI  XL,$10
9179   EA7E 6A 0D           LDI  UL,$0D
9180   EA80 B5 20           LDI  A,$20
9181   EA82             
9182   EA82             USING_FRMT_1: ; $EA82
9183   EA82 41              SIN  X
9184   EA83 88 03           LOP  UL,USING_FRMT_1 ; $EA82
9185   EA85 ED 78 96 FF     BII  (USINGM),$FF
9186   EA89 8B 43           BZS USING_FRMT_2 ; $EACE
9187   EA8B ED 78 95 80     BII  (USINGF),$80
9188   EA8F 89 95           BZR USING_FRMT_3 ; $EB26
9189   EA91 A5 78 98        LDA  (USINGMD)
9190   EA94 CD 86           VMJ  ($86) ; ($86)($43)
9191   EA96 83 A4           BCS USING_FRMT_4 ; $EB3C
9192   EA98 A4              LDA  UH
9193   EA99 1A              STA  YL
9194   EA9A             
9195   EA9A             USING_FRMT_12: ; $EA9A
9196   EA9A FD 8A           POP  A
9197   EA9C D5              SHR
9198   EA9D 81 06           BCR USING_FRMT_5 ; $EAA5
9199   EA9F             
9200   EA9F             USING_FRMT_7: ; $EA9F
9201   EA9F FB              SEC
9202   EAA0 14              LDA  YL
9203   EAA1 00              SBC  XL
9204   EAA2 DD              INC  A
9205   EAA3 F9              REC
9206   EAA4 9A              RTN
9207   EAA5             
9208   EAA5             USING_FRMT_5: ; $EAA5
9209   EAA5 D5              SHR
9210   EAA6 81 09           BCR USING_FRMT_6 ; $EAB1
9211   EAA8 5E 2A           CPI  YL,$2A
9212   EAAA 91 0D           BCR USING_FRMT_7 ; $EA9F
9213   EAAC 14              LDA  YL
9214   EAAD B3 E6           ADI  A,$E6
9215   EAAF 8E 03           BCH USING_FRMT_8 ; $EAB4
9216   EAB1             
9217   EAB1             USING_FRMT_6: ; $EAB1
9218   EAB1 14              LDA  YL
9219   EAB2 B3 F4           ADI  A,$F4
9220   EAB4             
9221   EAB4             USING_FRMT_8: ; $EAB4
9222   EAB4 0A              STA  XL
9223   EAB5             
9224   EAB5             USING_FRMT_10: ; $EAB5
9225   EAB5 05              LDA  (X)
9226   EAB6 B7 20           CPI  A,$20
9227   EAB8 9B 1B           BZS USING_FRMT_7 ; $EA9F
9228   EABA B7 2D           CPI  A,$2D
9229   EABC 9B 1F           BZS USING_FRMT_7 ; $EA9F
9230   EABE B7 2B           CPI  A,$2B
9231   EAC0 9B 23           BZS USING_FRMT_7 ; $EA9F
9232   EAC2 8E 08           BCH USING_FRMT_9 ; $EACC
9233   EAC4 8B 06           BZS USING_FRMT_9 ; $EACC
9234   EAC6 46              DEC  X
9235   EAC7 52              DEC  YL
9236   EAC8 5E 1E           CPI  YL,$1E
9237   EACA 93 17           BCS USING_FRMT_10 ; $EAB5
9238   EACC             
9239   EACC             USING_FRMT_9: ; $EACC
9240   EACC FB              SEC
9241   EACD 9A              RTN
9242   EACE             
9243   EACE             USING_FRMT_2: ; $EACE
9244   EACE BE EC 3C        SJP  (BCMD_DEC9)
9245   EAD1 83 09           BCS USING_FRMT_11 ; $EADC
9246   EAD3 B5 0A           LDI  A,$0A
9247   EAD5 CD 86           VMJ  ($86) ; ($86)($43)
9248   EAD7 BE EC 2F        SJP  (TRUNCDEC)
9249   EADA 9E 42           BCH USING_FRMT_12 ; $EA9A
9250   EADC             
9251   EADC             USING_FRMT_11: ; $EADC
9252   EADC 4A 00           LDI  XL,$00
9253   EADE 05              LDA  (X)
9254   EADF 49 00           ANI  (X),$00
9255   EAE1 FD C8           PSH  A
9256   EAE3 B5 0A           LDI  A,$0A
9257   EAE5 CD 86           VMJ  ($86) ; ($86)($43)
9258   EAE7 BE EC 2F        SJP  (TRUNCDEC)
9259   EAEA             
9260   EAEA             USING_FRMT_17: ; $EAEA
9261   EAEA 54              INC  Y
9262   EAEB FD 8A           POP  A
9263   EAED AE 7A 00        STA  (ARX)
9264   EAF0 2A              STA  UL
9265   EAF1 FD 8A           POP  A
9266   EAF3 FD C8           PSH  A
9267   EAF5 8B 27           BZS USING_FRMT_13 ; $EB1E
9268   EAF7             
9269   EAF7             USING_FRMT_15: ; $EAF7
9270   EAF7 B5 45           LDI  A,$45
9271   EAF9 51              SIN  Y
9272   EAFA FD 88           PSH  X
9273   EAFC FD 98           PSH  Y
9274   EAFE 24              LDA  UL
9275   EAFF FD C8           PSH  A
9276   EB01 CD 80           VMJ  ($80) ; ($80)($40)
9277   EB03 FD 8A           POP  A
9278   EB05 2A              STA  UL
9279   EB06 68 00           LDI  UH,$00
9280   EB08 D9              SHL
9281   EB09 81 02           BCR USING_FRMT_14 ; $EB0D
9282   EB0B 68 FF           LDI  UH,$FF
9283   EB0D             
9284   EB0D             USING_FRMT_14: ; $EB0D
9285   EB0D FD 1A           POP  Y
9286   EB0F CD 10           VMJ  ($10) \ ABYT($E0)
9286   EB11 E0          
9287   EB12 FD 98           PSH  Y
9288   EB14 BE F7 37        SJP  (XFER_ARY2ARX)
9289   EB17 FD 1A           POP  Y
9290   EB19 56              DEC  Y
9291   EB1A FD 0A           POP  X
9292   EB1C 9E 84           BCH USING_FRMT_12 ; $EA9A
9293   EB1E             
9294   EB1E             USING_FRMT_13: ; $EB1E
9295   EB1E 5E 27           CPI  YL,$27
9296   EB20 91 2B           BCR USING_FRMT_15 ; $EAF7
9297   EB22 5A 26           LDI  YL,$26
9298   EB24 9E 2F           BCH USING_FRMT_15 ; $EAF7
9299   EB26             
9300   EB26             USING_FRMT_3: ; $EB26
9301   EB26 4A 00           LDI  XL,$00
9302   EB28 05              LDA  (X)
9303   EB29 49 00           ANI  (X),$00
9304   EB2B FD C8           PSH  A
9305   EB2D A5 78 98        LDA  (USINGMD)
9306   EB30 B7 0E           CPI  A,$0E
9307   EB32 81 02           BCR USING_FRMT_16 ; $EB36
9308   EB34 B5 0D           LDI  A,$0D
9309   EB36             
9310   EB36             USING_FRMT_16: ; $EB36
9311   EB36 CD 86           VMJ  ($86) ; ($86)($43)
9312   EB38 A4              LDA  UH
9313   EB39 1A              STA  YL
9314   EB3A 9E 52           BCH USING_FRMT_17 ; $EAEA
9315   EB3C             
9316   EB3C             USING_FRMT_4: ; $EB3C
9317   EB3C FD 8A           POP  A
9318   EB3E FB              SEC
9319   EB3F 9A              RTN
9320   EB40             
9321   EB40             
9322   EB40             
9323   EB40             ;------------------------------------------------------------------------------
9324   EB40             ; (86) $EB40 - Converts AR-X to ASCII according to USING parameters
9325   EB40             ;------------------------------------------------------------------------------
9326   EB40             ARX2ASCII: ; 
9327   EB40 F9              REC
9328   EB41 B3 1E           ADI  A,$1E
9329   EB43 28              STA  UH
9330   EB44 CD 80           VMJ  ($80) ; ($80)($40)
9331   EB46 4A 31           LDI  XL,$31
9332   EB48 05              LDA  (X)
9333   EB49 49 00           ANI  (X),$00
9334   EB4B FD C8           PSH  A
9335   EB4D 46              DEC  X
9336   EB4E 05              LDA  (X)
9337   EB4F BF 80           BII  A,$80
9338   EB51 89 79           BZR ARX2ASCII_1 ; $EBCC
9339   EB53 ED 78 95 10     BII  (USINGF),$10
9340   EB57 89 32           BZR ARX2ASCII_2 ; $EB8B
9341   EB59 B7 0E           CPI  A,$0E
9342   EB5B 93 21           BCS USING_FRMT_4 ; $EB3C
9343   EB5D             
9344   EB5D             ARX2ASCII_9: ; $EB5D
9345   EB5D BD FF           EAI  $FF
9346   EB5F B3 1E           ADI  A,$1E
9347   EB61 1A              STA  YL
9348   EB62 FD C8           PSH  A
9349   EB64 54              INC  Y
9350   EB65             
9351   EB65             ARX2ASCII_15: ; $EB65
9352   EB65 B5 09           LDI  A,$09
9353   EB67             
9354   EB67             ARX2ASCII_5: ; $EB67
9355   EB67 FD C8           PSH  A
9356   EB69 BE F7 8C        SJP  (ARS_SHL_4BITS)
9357   EB6C F1              AEX
9358   EB6D B9 0F           ANI  A,$0F
9359   EB6F BB 30           ORI  A,$30
9360   EB71 51              SIN  Y
9361   EB72             
9362   EB72             ARX2ASCII_8: ; $EB72
9363   EB72 A4              LDA  UH
9364   EB73 16              CPA  YL
9365   EB74 81 B5           BCR ARX2ASCII_3 ; $EC2B
9366   EB76 5E 1F           CPI  YL,$1F
9367   EB78 8B 0E           BZS ARX2ASCII_4 ; $EB88
9368   EB7A FD 8A           POP  A
9369   EB7C DF              DEC  A
9370   EB7D 93 18           BCS ARX2ASCII_5 ; $EB67
9371   EB7F             
9372   EB7F             ARX2ASCII_6: ; $EB7F
9373   EB7F B5 30           LDI  A,$30
9374   EB81 51              SIN  Y
9375   EB82 A4              LDA  UH
9376   EB83 16              CPA  YL
9377   EB84 93 07           BCS ARX2ASCII_6 ; $EB7F
9378   EB86 8E 64           BCH ARX2ASCII_7 ; $EBEC
9379   EB88             
9380   EB88             ARX2ASCII_4: ; $EB88
9381   EB88 54              INC  Y
9382   EB89 9E 19           BCH ARX2ASCII_8 ; $EB72
9383   EB8B             
9384   EB8B             ARX2ASCII_2: ; $EB8B
9385   EB8B B7 0B           CPI  A,$0B
9386   EB8D 93 53           BCS USING_FRMT_4 ; $EB3C
9387   EB8F B7 03           CPI  A,$03
9388   EB91 91 36           BCR ARX2ASCII_9 ; $EB5D
9389   EB93 B7 06           CPI  A,$06
9390   EB95 81 87           BCR ARX2ASCII_10 ; $EC1E
9391   EB97 B7 09           CPI  A,$09
9392   EB99 B3 02           ADI  A,$02
9393   EB9B             
9394   EB9B             ARX2ASCII_21: ; $EB9B
9395   EB9B F9              REC
9396   EB9C BD FF           EAI  $FF
9397   EB9E B3 1E           ADI  A,$1E
9398   EBA0 1A              STA  YL
9399   EBA1 FD C8           PSH  A
9400   EBA3 54              INC  Y
9401   EBA4 B5 09           LDI  A,$09
9402   EBA6             
9403   EBA6             ARX2ASCII_12: ; $EBA6
9404   EBA6 FD C8           PSH  A
9405   EBA8 BE F7 8C        SJP  (ARS_SHL_4BITS)
9406   EBAB F1              AEX
9407   EBAC B9 0F           ANI  A,$0F
9408   EBAE BB 30           ORI  A,$30
9409   EBB0 51              SIN  Y
9410   EBB1             
9411   EBB1             ARX2ASCII_13: ; $EBB1
9412   EBB1 A4              LDA  UH
9413   EBB2 16              CPA  YL
9414   EBB3 81 76           BCR ARX2ASCII_3 ; $EC2B
9415   EBB5 5E 1F           CPI  YL,$1F
9416   EBB7 9B 31           BZS ARX2ASCII_4 ; $EB88
9417   EBB9 14              LDA  YL
9418   EBBA BD FF           EAI  $FF
9419   EBBC BF 03           BII  A,$03
9420   EBBE 8B 07           BZS ARX2ASCII_11 ; $EBC7
9421   EBC0 FD 8A           POP  A
9422   EBC2 DF              DEC  A
9423   EBC3 93 1F           BCS ARX2ASCII_12 ; $EBA6
9424   EBC5 9E 48           BCH ARX2ASCII_6 ; $EB7F
9425   EBC7             
9426   EBC7             ARX2ASCII_11: ; $EBC7
9427   EBC7 B5 2C           LDI  A,$2C
9428   EBC9 51              SIN  Y
9429   EBCA 9E 1B           BCH ARX2ASCII_13 ; $EBB1
9430   EBCC             
9431   EBCC             ARX2ASCII_1: ; $EBCC
9432   EBCC 2A              STA  UL
9433   EBCD 5A 1E           LDI  YL,$1E
9434   EBCF A5 78 96        LDA  (USINGM)
9435   EBD2 B7 01           CPI  A,$01
9436   EBD4 8B 03           BZS ARX2ASCII_14 ; $EBD9
9437   EBD6 B5 30           LDI  A,$30
9438   EBD8 53              SDE  Y
9439   EBD9             
9440   EBD9             ARX2ASCII_14: ; $EBD9
9441   EBD9 14              LDA  YL
9442   EBDA FD C8           PSH  A
9443   EBDC 24              LDA  UL
9444   EBDD BD FF           EAI  $FF
9445   EBDF 2A              STA  UL
9446   EBE0 5A 20           LDI  YL,$20
9447   EBE2             
9448   EBE2             ARX2ASCII_16: ; $EBE2
9449   EBE2 62              DEC  UL
9450   EBE3 91 80           BCR ARX2ASCII_15 ; $EB65
9451   EBE5 B5 30           LDI  A,$30
9452   EBE7 51              SIN  Y
9453   EBE8 A4              LDA  UH
9454   EBE9 16              CPA  YL
9455   EBEA 93 0A           BCS ARX2ASCII_16 ; $EBE2
9456   EBEC             
9457   EBEC             ARX2ASCII_7: ; $EBEC
9458   EBEC B5 2E           LDI  A,$2E
9459   EBEE AE 7A 1F        STA  (ARU + $07)
9460   EBF1 FD 8A           POP  A
9461   EBF3 1A              STA  YL
9462   EBF4 A5 78 96        LDA  (USINGM)
9463   EBF7 8B 19           BZS ARX2ASCII_17 ; $EC12
9464   EBF9 BD FF           EAI  $FF
9465   EBFB B3 20           ADI  A,$20
9466   EBFD 0A              STA  XL
9467   EBFE 05              LDA  (X)
9468   EBFF B7 20           CPI  A,$20
9469   EC01 99 C7           BZR USING_FRMT_4 ; $EB3C
9470   EC03 ED 78 95 40     BII  (USINGF),$40
9471   EC07 8B 0B           BZS ARX2ASCII_18 ; $EC14
9472   EC09             
9473   EC09             ARX2ASCII_19: ; $EC09
9474   EC09 04              LDA  XL
9475   EC0A 16              CPA  YL
9476   EC0B 8B 07           BZS ARX2ASCII_18 ; $EC14
9477   EC0D B5 2A           LDI  A,$2A
9478   EC0F 53              SDE  Y
9479   EC10 9E 09           BCH ARX2ASCII_19 ; $EC09
9480   EC12             
9481   EC12             ARX2ASCII_17: ; $EC12
9482   EC12 FD 18           LDX  Y
9483   EC14             
9484   EC14             ARX2ASCII_18: ; $EC14
9485   EC14 FD 8A           POP  A
9486   EC16 D9              SHL
9487   EC17 81 08           BCR ARX2ASCII_20 ; $EC21
9488   EC19 B5 2D           LDI  A,$2D
9489   EC1B             
9490   EC1B             ARX2ASCII_23: ; $EC1B
9491   EC1B 1E              STA  (Y)
9492   EC1C             
9493   EC1C             ARX2ASCII_22: ; $EC1C
9494   EC1C F9              REC
9495   EC1D 9A              RTN
9496   EC1E             
9497   EC1E             ARX2ASCII_10: ; $EC1E
9498   EC1E DD              INC  A
9499   EC1F 9E 86           BCH ARX2ASCII_21 ; $EB9B
9500   EC21             
9501   EC21             ARX2ASCII_20: ; $EC21
9502   EC21 ED 78 95 20     BII  (USINGF),$20
9503   EC25 9B 0B           BZS ARX2ASCII_22 ; $EC1C
9504   EC27 B5 2B           LDI  A,$2B
9505   EC29 9E 10           BCH ARX2ASCII_23 ; $EC1B
9506   EC2B             
9507   EC2B             ARX2ASCII_3: ; $EC2B
9508   EC2B FD 8A           POP  A
9509   EC2D 9E 43           BCH ARX2ASCII_7 ; $EBEC
9510   EC2F             
9511   EC2F             
9512   EC2F             
9513   EC2F             ;------------------------------------------------------------------------------
9514   EC2F             ; $EC2F - Determines the address at which the rightmost character is located
9515   EC2F             ; from the ASCII number string below 7A28 in the Y-Reg. (Truncation of the 
9516   EC2F             ; decimal places).
9517   EC2F             ;------------------------------------------------------------------------------
9518   EC2F             TRUNCDEC: ; $EC2F
9519   EC2F 5A 28           LDI  YL,$28
9520   EC31             
9521   EC31             TRUNCDEC_1: ; $EC31
9522   EC31 57              LDE  Y
9523   EC32 B7 30           CPI  A,$30
9524   EC34 9B 05           BZS TRUNCDEC_1 ; $EC31
9525   EC36 B7 2E           CPI  A,$2E
9526   EC38 8B 01           BZS TRUNCDEC_2 ; $EC3B
9527   EC3A 54              INC  Y
9528   EC3B             
9529   EC3B             TRUNCDEC_2: ;$EC3B
9530   EC3B 9A              RTN
9531   EC3C             
9532   EC3C             
9533   EC3C             ;------------------------------------------------------------------------------
9534   EC3C             ; $EC3C - Checks whether the value in AR-X can be completely represented with 9 decimal places. If not, C=1.
9535   EC3C             ;------------------------------------------------------------------------------
9536   EC3C             BCMD_DEC9: ; 
9537   EC3C A5 7A 00        LDA  (ARX)
9538   EC3F BF 80           BII  A,$80
9539   EC41 89 03           BZR BCMD_DEC9_1 ; $EC46
9540   EC43 B7 0A           CPI  A,$0A
9541   EC45 9A              RTN
9542   EC46             
9543   EC46             BCMD_DEC9_1: ; $EC46
9544   EC46 B7 F7           CPI  A,$F7
9545   EC48 81 4B           BCR XP_STROUT_1 ; $EC95
9546   EC4A B3 0C           ADI  A,$0C
9547   EC4C D5              SHR
9548   EC4D 1A              STA  YL
9549   EC4E 55              LIN  Y
9550   EC4F 83 08           BCS BCMD_DEC9_2 ; $EC59
9551   EC51 BF 0F           BII  A,$0F
9552   EC53             
9553   EC53             BCMD_DEC9_3: ; $EC53
9554   EC53 89 40           BZR XP_STROUT_1 ; $EC95
9555   EC55 5E 07           CPI  YL,$07
9556   EC57 93 3D           BCS ARX2ASCII_22 ; $EC1C
9557   EC59             
9558   EC59             BCMD_DEC9_2: ; $EC59
9559   EC59 55              LIN  Y
9560   EC5A 9E 09           BCH BCMD_DEC9_3 ; $EC53
9561   EC5C             
9562   EC5C             
9563   EC5C             
9564   EC5C             ;------------------------------------------------------------------------------
9565   EC5C             ; (94) $EC5C - Transfers the string whose address is in the X-Reg (lengh in UL) to the
9566   EC5C             ;  free area of the output buffer. If error C=1.
9567   EC5C             ;------------------------------------------------------------------------------
9568   EC5C             X_STROUT: ; 
9569   EC5C A5 78 8F        LDA  ($788F)
9570   EC5F 1A              STA  YL
9571   EC60 58 7B           LDI  YH,$7B
9572   EC62 8E 05           BCH X_STROUT_1 ; $EC69
9573   EC64             
9574   EC64             X_STROUT_3: ; $EC64
9575   EC64 5E B0           CPI  YL,$B0
9576   EC66 83 03           BCS X_STROUT_2 ; $EC6B
9577   EC68 F5              TIN
9578   EC69             
9579   EC69             X_STROUT_1: ; $EC69
9580   EC69 88 07           LOP  UL,X_STROUT_3 ; $EC64
9581   EC6B             
9582   EC6B             X_STROUT_2: ; $EC6B
9583   EC6B 9A              RTN
9584   EC6C             
9585   EC6C             
9586   EC6C             
9587   EC6C             ;------------------------------------------------------------------------------
9588   EC6C             ; $EC6C - If AR-X contains numeric value, if necessary. Convert integer to BCD:
9589   EC6C             ; C=0. If CSI available: Address from X-Reg; load length from to UL; C=1.
9590   EC6C             ;------------------------------------------------------------------------------
9591   EC6C             ARX2BCD:
9592   EC6C D2              VEJ  (D2) \ ABRF(ARX2BCD_2) \ ABYT($80)
9592   EC6D 03          
9592   EC6E 80          
9593   EC6F F9              REC
9594   EC70 9A              RTN
9595   EC71             
9596   EC71             ARX2BCD_2: ; $ 
9597   EC71 DC              VEJ  (DC)
9598   EC72             
9599   EC72             ARX2BCD_1: ; $EC72
9600   EC72 FB              SEC
9601   EC73 9A              RTN
9602   EC74             
9603   EC74             
9604   EC74             
9605   EC74             ;------------------------------------------------------------------------------
9606   EC74             ; (98) $EC74 - Converts AR-X from BCD to ASCII and transfers to Output buffer
9607   EC74             ;------------------------------------------------------------------------------
9608   EC74             ARXBCD2ASCII: ; 
9609   EC74 BE EC 6C        SJP  (ARX2BCD)
9610   EC77 81 1D           BCR $EC96
9611   EC79 2A              STA  UL
9612   EC7A A5 78 97        LDA  (USING_CHR)
9613   EC7D 8B 19           BZS $EC98
9614   EC7F 26              CPA  UL
9615   EC80 81 15           BCR XP_STROUT_4 ; $EC97
9616   EC82             
9617   EC82             ;------------------------------------------------------------------------------
9618   EC82             ; $EC82 - Transfers string pointed to by X-Reg into output buffer. Then writes
9619   EC82             ; A-UL spaces to the output buffer. Sets C=1 if the output buffer is full
9620   EC82             ;------------------------------------------------------------------------------
9621   EC82             XP_STROUT:
9622   EC82 20              SBC  UL
9623   EC83 FD C8           PSH  A
9624   EC85 CD 94           VMJ  ($94) ; ($94)($4A)
9625   EC87 FD 8A           POP  A
9626   EC89 2A              STA  UL
9627   EC8A B5 20           LDI  A,$20
9628   EC8C 8E 05           BCH XP_STROUT_3 ; $EC93
9629   EC8E 5E B0           CPI  YL,$B0
9630   EC90 83 04           BCS XP_STROUT_2 ; $EC96
9631   EC92 51              SIN  Y
9632   EC93             
9633   EC93             XP_STROUT_3: ; $EC93
9634   EC93 88 07           LOP  UL,$EC8E
9635   EC95             
9636   EC95             XP_STROUT_1: ; $EC82
9637   EC95 FB              SEC
9638   EC96             
9639   EC96             XP_STROUT_2: ; $EC96
9640   EC96 9A              RTN
9641   EC97             
9642   EC97             XP_STROUT_4: ; $EC97 
9643   EC97 2A              STA  UL
9644   EC98 CD 94           VMJ  ($94) ; ($94)($4A)
9645   EC9A 9E 07           BCH XP_STROUT_1 ; $EC95
9646   EC9C             
9647   EC9C             
9648   EC9C             
9649   EC9C             ;------------------------------------------------------------------------------
9650   EC9C             ; $EC9C - Clears LCD if cursor is not allowed and sets matrix pointer to 00
9651   EC9C             ;------------------------------------------------------------------------------
9652   EC9C             CLRNOCURSOR: ; 
9653   EC9C ED 78 74 01     BII  (CURSOR_ENA),$01
9654   ECA0 89 05           BZR $ECA7
9655   ECA2 F2              VEJ  (F2)
9656   ECA3 E9 78 75 00     ANI  (CURSOR_PTR),$00
9657   ECA7 A5 78 8F        LDA  ($788F)
9658   ECAA FB              SEC
9659   ECAB B1 60           SBI  A,$60
9660   ECAD 9A              RTN
9661   ECAE             
9662   ECAE             
9663   ECAE             
9664   ECAE             ;------------------------------------------------------------------------------
9665   ECAE             ; Deletes cursor flag and matrix pointer
9666   ECAE             ;            Address: ECAE
9667   ECAE             ;          Parameter: None
9668   ECAE             ;
9669   ECAE             ; Modified Registers: Cursor flag (7874) and matrix pointer are deleted
9670   ECAE             ;   Error conditions: None
9671   ECAE             ;------------------------------------------------------------------------------
9672   ECAE             INIT_CURS: ; $ECAE
9673   ECAE E9 78 74 FE     ANI  (CURSOR_ENA),$FE
9674   ECB2             
9675   ECB2             INIT_MTRX: ; $ECB2
9676   ECB2 E9 78 75 00     ANI  (CURSOR_PTR),$00
9677   ECB6 9A              RTN
9678   ECB7             
9679   ECB7             
9680   ECB7             
9681   ECB7             ;------------------------------------------------------------------------------
9682   ECB7             ; (97) $ECB7 - Transfers value to output buffer
9683   ECB7             ;------------------------------------------------------------------------------
9684   ECB7             ARX2OUTBUF: 
9685   ECB7 BE EC 6C        SJP  (ARX2BCD)
9686   ECBA 81 18           BCR ARX2OUTBUF_1 ; $ECD4
9687   ECBC 2A              STA  UL
9688   ECBD A5 78 97        LDA  (USING_CHR)
9689   ECC0 8B 04           BZS ARX2OUTBUF_2 ; $ECC6
9690   ECC2 B7 0E           CPI  A,$0E
9691   ECC4 81 02           BCR ARX2OUTBUF_3 ; $ECC8
9692   ECC6             
9693   ECC6             ARX2OUTBUF_2: ; $ECC6
9694   ECC6 B5 0D           LDI  A,$0D
9695   ECC8             
9696   ECC8             ARX2OUTBUF_3: ; $ECC8
9697   ECC8 26              CPA  UL
9698   ECC9 83 01           BCS ARX2OUTBUF_4 ; $ECCC
9699   ECCB 2A              STA  UL
9700   ECCC             
9701   ECCC             ARX2OUTBUF_4: ; $ECCC
9702   ECCC B5 0D           LDI  A,$0D
9703   ECCE FB              SEC
9704   ECCF BE EC 82        SJP  (XP_STROUT)
9705   ECD2 8E 09           BCH ARX2OUTBUF_F_1 ; $ECDD
9706   ECD4             
9707   ECD4             ARX2OUTBUF_1: ; $ECD4
9708   ECD4 B5 00           LDI  A,$00
9709   ECD6             
9710   ECD6             ;------------------------------------------------------------------------------
9711   ECD6             ; $ECD6 - Transfer AR-X formatted to Output Buffer
9712   ECD6             ;------------------------------------------------------------------------------
9713   ECD6             ARX2OUTBUF_F: ; 
9714   ECD6 CD 96           VMJ  ($96) ; ($96)($4B)
9715   ECD8 83 08           BCS ARX2OUTBUF_F_2 ; $ECE2
9716   ECDA 2A              STA  UL
9717   ECDB CD 94           VMJ  ($94) ; ($94)($4A)
9718   ECDD             
9719   ECDD             ARX2OUTBUF_F_1: ; $ECDD
9720   ECDD 14              LDA  YL
9721   ECDE AE 78 8F        STA  ($788F)
9722   ECE1 F9              REC
9723   ECE2             
9724   ECE2             ARX2OUTBUF_F_2: ; $ECE2
9725   ECE2 9A              RTN
9726   ECE3             
9727   ECE3             
9728   ECE3             
9729   ECE3             ;------------------------------------------------------------------------------
9730   ECE3             ; $ECE3 - Transfers value (string or numeric) to output buffer and resets output buffer pointer.
9731   ECE3             ;------------------------------------------------------------------------------
9732   ECE3             ARXASCII2OUTBUF: 
9733   ECE3 CD 98           VMJ  ($98) ; ($98)($4C)
9734   ECE5 93 0A           BCS ARX2OUTBUF_F_1 ; $ECDD
9735   ECE7 B5 01           LDI  A,$01
9736   ECE9 9E 15           BCH ARX2OUTBUF_F
9737   ECEB             
9738   ECEB             
9739   ECEB             
9740   ECEB             ;------------------------------------------------------------------------------
9741   ECEB             ; (9A) $ECEB - Executes using command pointed to by Y-Reg. If an error occurs C=1.
9742   ECEB             ;------------------------------------------------------------------------------
9743   ECEB             USING_PARAM: ; 
9744   ECEB C4              VEJ  (C4) \ AWRD($F085) \ ABRF($ECF5)
9744   ECEC F0 85       
9744   ECEE 06          
9745   ECEF BE DA B2        SJP  (EVAL_USING)
9746   ECF2 05              LDA  (X)
9747   ECF3 F9              REC
9748   ECF4 9A              RTN
9749   ECF5 C6              VEJ  (C6)
9750   ECF6 F9              REC
9751   ECF7 9A              RTN
9752   ECF8 FB              SEC
9753   ECF9 9A              RTN
9754   ECFA             
9755   ECFA             
9756   ECFA             
9757   ECFA             ;------------------------------------------------------------------------------
9758   ECFA             ; $ECFA - Output of 26 characters of the output buffer
9759   ECFA             ;------------------------------------------------------------------------------
9760   ECFA             OUTBUF2LCD: ; 
9761   ECFA B5 1A           LDI  A,$1A
9762   ECFC 68 7B           LDI  UH,$7B
9763   ECFE 6A 60           LDI  UL,$60
9764   ED00             
9765   ED00             ;------------------------------------------------------------------------------
9766   ED00             ; (92) $ED00 - Output of text on the LCD. U-Reg contains start address; A the length.
9767   ED00             ;------------------------------------------------------------------------------
9768   ED00             TEXTUREG_A: ; 
9769   ED00 FD C8           PSH  A
9770   ED02 CD 8C           VMJ  ($8C) ; ($8C)($46)
9771   ED04 FD 8A           POP  A
9772   ED06 FD 98           PSH  Y
9773   ED08 FD C8           PSH  A
9774   ED0A 66              DEC  U
9775   ED0B             
9776   ED0B             TEXTUREG_A4: ; $ED0B
9777   ED0B 64              INC  U
9778   ED0C A5 78 7B        LDA  ($787B)
9779   ED0F 26              CPA  UL
9780   ED10 8B 16           BZS TEXTUREG_A1 ; $ED28
9781   ED12 FD 8A           POP  A
9782   ED14 DF              DEC  A
9783   ED15 81 21           BCR TEXTUREG_A2 ; $ED38
9784   ED17 FD C8           PSH  A
9785   ED19 FD A8           PSH  U
9786   ED1B 25              LDA  (U)
9787   ED1C CD 8A           VMJ  ($8A) ; ($8A)($45)
9788   ED1E FD 2A           POP  U
9789   ED20 83 14           BCS TEXTUREG_A3 ; $ED36
9790   ED22 EF 78 75 06     ADI  (CURSOR_PTR),$06
9791   ED26 9E 1D           BCH TEXTUREG_A4 ; $ED0B
9792   ED28             
9793   ED28             TEXTUREG_A1: ; $ED28
9794   ED28 84              LDA  XH
9795   ED29 AE 78 7E        STA  (CURS_POS_NBUF_H)
9796   ED2C 04              LDA  XL
9797   ED2D AE 78 7F        STA  (CURS_POS_NBUF_L)
9798   ED30 25              LDA  (U)
9799   ED31 AE 78 7D        STA  (BLNKD_CHAR_CODE)
9800   ED34 9E 24           BCH $ED12
9801   ED36             
9802   ED36             TEXTUREG_A3: ; $ED36
9803   ED36 FD 8A           POP  A
9804   ED38             
9805   ED38             TEXTUREG_A2: ; $ED38
9806   ED38 FD 1A           POP  Y
9807   ED3A 9A              RTN
9808   ED3B             
9809   ED3B             
9810   ED3B             
9811   ED3B             ;------------------------------------------------------------------------------
9812   ED3B             ; $ED3B - Outputs text from U-Reg on LCD, # characters in XL. The output is 
9813   ED3B             ; independent of the value of the matrix pointer. Its old value is then restored.
9814   ED3B             ;------------------------------------------------------------------------------
9815   ED3B             TEXTUREG_XL:
9816   ED3B A5 78 75        LDA  (CURSOR_PTR)
9817   ED3E E9 78 75 00     ANI  (CURSOR_PTR),$00
9818   ED42 FD C8           PSH  A
9819   ED44 04              LDA  XL
9820   ED45 CD 92           VMJ  ($92) ; ($92)($49)
9821   ED47 FD 8A           POP  A
9822   ED49 AE 78 75        STA  (CURSOR_PTR)
9823   ED4C 9A              RTN
9824   ED4D             
9825   ED4D             
9826   ED4D             
9827   ED4D             ;------------------------------------------------------------------------------
9828   ED4D             ; $ED4D - Output a character at the next matrix column
9829   ED4D             ;------------------------------------------------------------------------------
9830   ED4D             CHAR2COL: ; 
9831   ED4D BE ED 57        SJP  (CHARA2COL)
9832   ED50 93 A0           BCS INIT_MTRX
9833   ED52 EF 78 75 06     ADI  (CURSOR_PTR),$06
9834   ED56 9A              RTN
9835   ED57             
9836   ED57             
9837   ED57             
9838   ED57             ;------------------------------------------------------------------------------
9839   ED57             ; $ED57 - Output of the character in accumulator at next matrix column. 
9840   ED57             ; The output address is calculated automatically.
9841   ED57             ;------------------------------------------------------------------------------
9842   ED57             CHARA2COL: ; $ED57
9843   ED57 28              STA  UH
9844   ED58 CD 8C           VMJ  ($8C) ; ($8C)($46)
9845   ED5A A4              LDA  UH
9846   ED5B             
9847   ED5B             ;------------------------------------------------------------------------------
9848   ED5B             ; (8A) $ED5B - Output of ASCII character in accumulator starting at matrix
9849   ED5B             ; column address pointed to by X-Reg. Second character set is recognized.
9850   ED5B             ;------------------------------------------------------------------------------
9851   ED5B             CHARA2COLX: ; 
9852   ED5B FD 98           PSH  Y
9853   ED5D BE EE 48        SJP  (CHAR2ADDR)
9854   ED60 6A 04           LDI  UL,$04
9855   ED62             
9856   ED62             CHARA2COLX_2: ; $ED62
9857   ED62 55              LIN  Y
9858   ED63 CD 88           VMJ  ($88) ; ($88)($44)
9859   ED65 4C 78           CPI  XH,$78
9860   ED67 83 08           BCS CHARA2COLX_1 ; $ED71
9861   ED69 88 09           LOP  UL,CHARA2COLX_2 ; $ED62
9862   ED6B B5 00           LDI  A,$00
9863   ED6D CD 88           VMJ  ($88) ; ($88)($44)
9864   ED6F 4C 78           CPI  XH,$78
9865   ED71             
9866   ED71             CHARA2COLX_1: ; $ED71
9867   ED71 B8              RPV
9868   ED72 ED 79 D0 01     BII  (PU_PV),$01
9869   ED76 8B 01           BZS $ED79 ; CHARA2COLX_3
9870   ED78 A8              SPV
9871   ED79             
9872   ED79             CHARA2COLX_3: ; $ED79
9873   ED79 FD 81           SIE
9874   ED7B 9E 45           BCH TEXTUREG_A2 ; $ED38
9875   ED7D             
9876   ED7D             
9877   ED7D             
9878   ED7D             ;------------------------------------------------------------------------------
9879   ED7D             ; Converts characters in the accumulator to HEX nibble
9880   ED7D             ;            Address: ED7D
9881   ED7D             ;   Entry parameters: Accumulator contains ASCII characters
9882   ED7D             ;
9883   ED7D             ; Modified registers: Accumulator contains converted HEX nibble (00-0F)
9884   ED7D             ;   Error conditions: Carry=0 if ASCII characters cannot be converted
9885   ED7D             ;------------------------------------------------------------------------------
9886   ED7D             A2HEX: ; $ED7D
9887   ED7D B7 47           CPI  A,$47
9888   ED7F 83 0C           BCS A2HEX_1 ; $ED8D
9889   ED81 B7 41           CPI  A,$41
9890   ED83 83 0D           BCS A2HEX_2 ; $ED92
9891   ED85 B7 3A           CPI  A,$3A
9892   ED87 83 04           BCS A2HEX_1 ; $ED8D
9893   ED89 B7 30           CPI  A,$30
9894   ED8B 83 02           BCS A2HEX_3 ; $ED8F
9895   ED8D             
9896   ED8D             A2HEX_1: ; $ED8D
9897   ED8D F9              REC
9898   ED8E 9A              RTN
9899   ED8F             
9900   ED8F             A2HEX_3: ; $ED8F
9901   ED8F B1 30           SBI  A,$30
9902   ED91 9A              RTN
9903   ED92             
9904   ED92             A2HEX_2: ; $ED92
9905   ED92 B1 37           SBI  A,$37
9906   ED94 9A              RTN
9907   ED95             
9908   ED95             
9909   ED95             
9910   ED95             ;------------------------------------------------------------------------------
9911   ED95             ; Convert 2 ASCII characters to a hex byte
9912   ED95             ;            Address: ED95
9913   ED95             ;   Entry parameters: X-Reg must point to the 1st character to be converted
9914   ED95             ; 
9915   ED95             ; Modified registers: X-Reg was incremented by 2 Accumulator contains hex value. Carry=0
9916   ED95             ;   Error conditions: Carry=0 if ASCII characters cannot be converted to hex.
9917   ED95             ;------------------------------------------------------------------------------
9918   ED95             ASCII2HEX: ; $ED95
9919   ED95 FD A8           PSH  U
9920   ED97 45              LIN  X
9921   ED98 BE ED 7D        SJP  (A2HEX)
9922   ED9B 81 0B           BCR ASCII2HEX_1 ; $EDA8
9923   ED9D F1              AEX
9924   ED9E 28              STA  UH
9925   ED9F 45              LIN  X
9926   EDA0 BE ED 7D        SJP  (A2HEX)
9927   EDA3 81 03           BCR ASCII2HEX_1 ; $EDA8
9928   EDA5 F9              REC
9929   EDA6 A2              ADC  UH
9930   EDA7 FB              SEC
9931   EDA8             
9932   EDA8             ASCII2HEX_1: ; $EDA8
9933   EDA8 FD 2A           POP  U
9934   EDAA 9A              RTN
9935   EDAB             
9936   EDAB             
9937   EDAB             
9938   EDAB             ;------------------------------------------------------------------------------
9939   EDAB             ; (90) $EDAB - Checks whether the matrix pointer is still in the permissible range 0-155. Set C=1 if not.
9940   EDAB             ;------------------------------------------------------------------------------
9941   EDAB             MTRXNRANGE: 
9942   EDAB A5 78 75        LDA  (CURSOR_PTR)
9943   EDAE B7 9C           CPI  A,$9C
9944   EDB0 9A              RTN
9945   EDB1             
9946   EDB1             
9947   EDB1             
9948   EDB1             ;------------------------------------------------------------------------------
9949   EDB1             ; (8E) $EDB1 - Increases matrix pointer if still in the permissible range 0-155 C=1 if not.
9950   EDB1             ;------------------------------------------------------------------------------
9951   EDB1             MTRXINC: 
9952   EDB1 A5 78 75        LDA  (CURSOR_PTR)
9953   EDB4 DD              INC  A
9954   EDB5 83 02           BCS MTRXINC_1 ; $EDB9
9955   EDB7 B7 9C           CPI  A,$9C
9956   EDB9             
9957   EDB9             MTRXINC_1: ; $EDB9
9958   EDB9 81 02           BCR $EDBD
9959   EDBB B5 9C           LDI  A,$9C
9960   EDBD             
9961   EDBD             MTRXINC_2: ; $EDBD
9962   EDBD AE 78 75        STA  (CURSOR_PTR)
9963   EDC0 9A              RTN
9964   EDC1             
9965   EDC1             
9966   EDC1             
9967   EDC1             ;------------------------------------------------------------------------------
9968   EDC1             ; $EDC1 - Cache LCD display of 7810-7BFF
9969   EDC1             ;------------------------------------------------------------------------------
9970   EDC1             LCDCACHE: ; 
9971   EDC1 FD 98           PSH  Y
9972   EDC3             
9973   EDC3             LCDCACHE_3: ; $EDC3
9974   EDC3 FB              SEC
9975   EDC4 58 7B           LDI  YH,$7B
9976   EDC6 5A 10           LDI  YL,$10
9977   EDC8 48 76           LDI  XH,$76
9978   EDCA             
9979   EDCA             LCDCACHE_2: ; $EDCA
9980   EDCA 4A 00           LDI  XL,$00
9981   EDCC 6A 4D           LDI  UL,$4D
9982   EDCE             
9983   EDCE             LCDCACHE_1: ; $EDCE
9984   EDCE F5              TIN
9985   EDCF 88 03           LOP  UL,LCDCACHE_1 ; $EDCE
9986   EDD1 91 9B           BCR TEXTUREG_A2 ; $ED38
9987   EDD3 F9              REC
9988   EDD4 48 77           LDI  XH,$77
9989   EDD6 9E 0E           BCH LCDCACHE_2 ; $EDCA
9990   EDD8             
9991   EDD8             
9992   EDD8             
9993   EDD8             ;------------------------------------------------------------------------------
9994   EDD8             ; $EDD8 - Retrieve LCD display from $7610-$7BFF
9995   EDD8             ;------------------------------------------------------------------------------
9996   EDD8             BCMD_BFF: ; 
9997   EDD8 FD 98           PSH  Y
9998   EDDA             
9999   EDDA             BCMD_BFF_3: ; $EDDA
10000  EDDA FB              SEC
10001  EDDB 48 7B           LDI  XH,$7B
10002  EDDD 4A 10           LDI  XL,$10
10003  EDDF 58 76           LDI  YH,$76
10004  EDE1             
10005  EDE1             BCMD_BFF_2: ; $EDE1
10006  EDE1 5A 00           LDI  YL,$00
10007  EDE3 6A 4D           LDI  UL,$4D
10008  EDE5             
10009  EDE5             BCMD_BFF_1: ; $EDD8
10010  EDE5 F5              TIN
10011  EDE6 88 03           LOP  UL,BCMD_BFF_1 ; $EDE5
10012  EDE8 91 B2           BCR TEXTUREG_A2 ; $ED38
10013  EDEA F9              REC
10014  EDEB 58 77           LDI  YH,$77
10015  EDED 9E 0E           BCH BCMD_BFF_2 ; $EDE1
10016  EDEF             
10017  EDEF             
10018  EDEF             
10019  EDEF             ;------------------------------------------------------------------------------
10020  EDEF             ; $EDEF - Output characters from accumulator to next matrix column address.
10021  EDEF             ;------------------------------------------------------------------------------
10022  EDEF             HEX2COL: 
10023  EDEF 28              STA  UH
10024  EDF0 CD 8C           VMJ  ($8C) ; ($8C)($46)
10025  EDF2 A4              LDA  UH
10026  EDF3 8E 01           BCH GPRNT_A_2LCD
10027  EDF5 55              LIN  Y
10028  EDF6             
10029  EDF6             ;------------------------------------------------------------------------------
10030  EDF6             ; (88) $EDF6 - Output of accumulator as "GPRINT" value on LCD
10031  EDF6             ; Output of the accumulator as a bit pattern on the LCD (X-Reg and f.).
10032  EDF6             ;------------------------------------------------------------------------------
10033  EDF6             GPRNT_A_2LCD:
10034  EDF6 28              STA  UH
10035  EDF7 B9 0F           ANI  A,$0F
10036  EDF9 4C 76           CPI  XH,$76
10037  EDFB 83 16           BCS GPRNT_A_2LCD_1 ; $EE13
10038  EDFD 49 F0           ANI  (X),$F0
10039  EDFF 0B              ORA  (X)
10040  EE00 41              SIN  X
10041  EE01 A4              LDA  UH
10042  EE02 F1              AEX
10043  EE03 B9 0F           ANI  A,$0F
10044  EE05 49 F0           ANI  (X),$F0
10045  EE07             
10046  EE07             GPRNT_A_2LCD_3: ; $EE07
10047  EE07 0B              ORA  (X)
10048  EE08 41              SIN  X
10049  EE09 4E 4E           CPI  XL,$4E
10050  EE0B 83 01           BCS GPRNT_A_2LCD_2 ; $EE0E
10051  EE0D 9A              RTN
10052  EE0E             
10053  EE0E             GPRNT_A_2LCD_2: ; $EE0E
10054  EE0E 4A 00           LDI  XL,$00
10055  EE10 FD 40           INC  XH
10056  EE12 9A              RTN
10057  EE13             
10058  EE13             GPRNT_A_2LCD_1: ; $EE13
10059  EE13 F1              AEX
10060  EE14 49 0F           ANI  (X),$0F
10061  EE16 0B              ORA  (X)
10062  EE17 41              SIN  X
10063  EE18 A4              LDA  UH
10064  EE19 B9 F0           ANI  A,$F0
10065  EE1B 49 0F           ANI  (X),$0F
10066  EE1D 9E 18           BCH GPRNT_A_2LCD_3 ; $EE07
10067  EE1F             
10068  EE1F             
10069  EE1F             
10070  EE1F             ;------------------------------------------------------------------------------
10071  EE1F             ; (8C) $EE1F - Calculates in X-Reg matrix column address from matrix pointer
10072  EE1F             ; Calculates the matrix column address from the matrix pointer $7875 in the X-Reg.
10073  EE1F             ;------------------------------------------------------------------------------
10074  EE1F             MATRIX_PTR2XREG:
10075  EE1F A5 78 75        LDA  (CURSOR_PTR)
10076  EE22             
10077  EE22             ;------------------------------------------------------------------------------
10078  EE22             ; $EE22 - Calculated from the accumulator matrix column address in the X-Reg.
10079  EE22             ;------------------------------------------------------------------------------
10080  EE22             MATRIX_A2XREG: 
10081  EE22 B7 4E           CPI  A,$4E
10082  EE24 83 10           BCS MATRIX_A2XREG_1 ; $EE36
10083  EE26 B7 27           CPI  A,$27
10084  EE28 83 05           BCS MATRIX_A2XREG_2 ; $EE2F
10085  EE2A 48 74           LDI  XH,$74
10086  EE2C D9              SHL
10087  EE2D 0A              STA  XL
10088  EE2E 9A              RTN
10089  EE2F             
10090  EE2F             MATRIX_A2XREG_2: ; $EE2F
10091  EE2F B1 27           SBI  A,$27
10092  EE31 48 75           LDI  XH,$75
10093  EE33 D9              SHL
10094  EE34 0A              STA  XL
10095  EE35 9A              RTN
10096  EE36             
10097  EE36             MATRIX_A2XREG_1: ; $EE36
10098  EE36 B7 75           CPI  A,$75
10099  EE38 83 07           BCS MATRIX_A2XREG_3 ; $EE41
10100  EE3A B1 4D           SBI  A,$4D
10101  EE3C 48 76           LDI  XH,$76
10102  EE3E D9              SHL
10103  EE3F 0A              STA  XL
10104  EE40 9A              RTN
10105  EE41             
10106  EE41             MATRIX_A2XREG_3: ; $EE41
10107  EE41 B1 75           SBI  A,$75
10108  EE43 48 77           LDI  XH,$77
10109  EE45 D9              SHL
10110  EE46 0A              STA  XL
10111  EE47 9A              RTN
10112  EE48             
10113  EE48             
10114  EE48             
10115  EE48             ;------------------------------------------------------------------------------
10116  EE48             ; $EE48 - Retrieves address in character set table for character in accumulator
10117  EE48             ; Retrieves the address in the character set table for characters in the
10118  EE48             ; accumulator. 2. Character set is taken into account. Table address is passed to Y-Reg.
10119  EE48             ;------------------------------------------------------------------------------
10120  EE48             CHAR2ADDR: 
10121  EE48 D9              SHL
10122  EE49 83 0F           BCS CHAR2ADDR_1 ; $EE5A
10123  EE4B             
10124  EE4B             CHAR2ADDR_6: ; $EE4B
10125  EE4B 58 FC           LDI  YH,$FC
10126  EE4D B7 40           CPI  A,$40
10127  EE4F 83 02           BCS CHAR2ADDR_2 ; $EE53
10128  EE51 B5 40           LDI  A,$40
10129  EE53             
10130  EE53             CHAR2ADDR_2: ; $EE53
10131  EE53 1A              STA  YL
10132  EE54             
10133  EE54             CHAR2ADDR_5: ; $EE54
10134  EE54 FD DA           ADR  Y
10135  EE56 D5              SHR
10136  EE57 FD DA           ADR  Y
10137  EE59 9A              RTN
10138  EE5A             
10139  EE5A             CHAR2ADDR_1: ; $EE5A
10140  EE5A 1A              STA  YL
10141  EE5B A5 78 5D        LDA  (KATAFLAGS)
10142  EE5E D9              SHL
10143  EE5F 89 0D           BZR CHAR2ADDR_3 ; $EE6E
10144  EE61 FD BE           RIE
10145  EE63 B8              RPV
10146  EE64 81 01           BCR CHAR2ADDR_4 ; $EE67
10147  EE66 A8              SPV
10148  EE67             
10149  EE67             CHAR2ADDR_4: ; $EE67
10150  EE67 A5 78 5E        LDA  (KATACHAR)
10151  EE6A 18              STA  YH
10152  EE6B 14              LDA  YL
10153  EE6C 9E 1A           BCH CHAR2ADDR_5 ; $EE54
10154  EE6E             
10155  EE6E             CHAR2ADDR_3: ; $EE6E
10156  EE6E 14              LDA  YL
10157  EE6F 9E 26           BCH CHAR2ADDR_6 ; $EE4B
10158  EE71             
10159  EE71             
10160  EE71             
10161  EE71             ;------------------------------------------------------------------------------
10162  EE71             ; (F2) Clears the LCD display
10163  EE71             ;            Address: EE71 (F2)
10164  EE71             ;          Parameter: None
10165  EE71             ;
10166  EE71             ; Modified Registers: U-Reg, Accumulator
10167  EE71             ;   Error conditions: None
10168  EE71             ;------------------------------------------------------------------------------
10169  EE71             LCDCLR: ; $EE71
10170  EE71 68 76           LDI  UH,$76
10171  EE73 BE EE 78        SJP  (LCDCLRRNG)
10172  EE76 68 77           LDI  UH,$77
10173  EE78             
10174  EE78             ;------------------------------------------------------------------------------
10175  EE78             ; $EE78 - Clears area from (UH00)-(UH4D)
10176  EE78             ;------------------------------------------------------------------------------
10177  EE78             LCDCLRRNG: ; 
10178  EE78 6A 4D           LDI  UL,$4D
10179  EE7A B5 00           LDI  A,$00
10180  EE7C             
10181  EE7C             LCDCLRRNG_1: ; $EE7C
10182  EE7C 2E              STA  (U)
10183  EE7D 88 03           LOP  UL,LCDCLRRNG_1 ; $EE7C
10184  EE7F 9A              RTN
10185  EE80             
10186  EE80             
10187  EE80             
10188  EE80             ;------------------------------------------------------------------------------
10189  EE80             ; $EE80 - Saves cursor parameters in cache from $786C. 
10190  EE80             ; Transfers the display to the buffer area.
10191  EE80             ;------------------------------------------------------------------------------
10192  EE80             SAVELCD2BUF: ; 
10193  EE80 E9 7A 07 00     ANI  (ARX + $07),$00
10194  EE84 EB 78 74 80     ORI  (CURSOR_ENA),$80
10195  EE88 FD 98           PSH  Y
10196  EE8A 48 78           LDI  XH,$78
10197  EE8C 4A 7C           LDI  XL,$7C
10198  EE8E 58 78           LDI  YH,$78
10199  EE90 5A 6C           LDI  YL,$6C
10200  EE92 6A 03           LDI  UL,$03
10201  EE94             
10202  EE94             SAVELCD2BUF_1: ; $EE94
10203  EE94 F5              TIN
10204  EE95 88 03           LOP  UL,SAVELCD2BUF_1 ; $EE94
10205  EE97 9E D6           BCH LCDCACHE_3 ; $EDC3
10206  EE99             
10207  EE99             
10208  EE99             
10209  EE99             ;------------------------------------------------------------------------------
10210  EE99             ; $EE99 - Transfer back cursor parameters and display.
10211  EE99             ;------------------------------------------------------------------------------
10212  EE99             BUF2LCD:
10213  EE99 ED 78 74 80     BII  (CURSOR_ENA),$80
10214  EE9D 8B 21           BZS LCDCHRLEFT_1 ; $EEC0
10215  EE9F FD 98           PSH  Y
10216  EEA1 48 78           LDI  XH,$78
10217  EEA3 4A 6C           LDI  XL,$6C
10218  EEA5 58 78           LDI  YH,$78
10219  EEA7 5A 7C           LDI  YL,$7C
10220  EEA9 6A 03           LDI  UL,$03
10221  EEAB             
10222  EEAB             BUF2LCD_1: ; $EEAB
10223  EEAB F5              TIN
10224  EEAC 88 03           LOP  UL,BUF2LCD_1 ; $EEAB
10225  EEAE 9E D6           BCH BCMD_BFF_3 ; $EDDA
10226  EEB0             
10227  EEB0             
10228  EEB0             
10229  EEB0             ;------------------------------------------------------------------------------
10230  EEB0             ; $EEB0 - Determines from accumulator number of characters that can be displayed. 
10231  EEB0             ; If output not possible C=1.
10232  EEB0             ;------------------------------------------------------------------------------
10233  EEB0             LCDCHRLEFT: ; 
10234  EEB0 6A 19           LDI  UL,$19
10235  EEB2 A5 78 75        LDA  (CURSOR_PTR)
10236  EEB5 8B 0E           BZS LCDCHRLEFT_2 ; $EEC5
10237  EEB7 DF              DEC  A
10238  EEB8 68 06           LDI  UH,$06
10239  EEBA FB              SEC
10240  EEBB             
10241  EEBB             LCDCHRLEFT_4: ; $EEBB
10242  EEBB A0              SBC  UH
10243  EEBC 81 04           BCR LCDCHRLEFT_3 ; $EEC2
10244  EEBE 88 05           LOP  UL,LCDCHRLEFT_4 ; $EEBB
10245  EEC0             
10246  EEC0             LCDCHRLEFT_1: ; $EEC0
10247  EEC0 FB              SEC
10248  EEC1 9A              RTN
10249  EEC2             
10250  EEC2             LCDCHRLEFT_3: ; $EEC2
10251  EEC2 A2              ADC  UH
10252  EEC3 89 01           BZR LCDCHRLEFT_5 ; $EEC6
10253  EEC5             
10254  EEC5             LCDCHRLEFT_2: ; $EEC5
10255  EEC5 60              INC  UL
10256  EEC6             
10257  EEC6             LCDCHRLEFT_5: ; $EEC6
10258  EEC6 24              LDA  UL
10259  EEC7 9B 09           BZS LCDCHRLEFT_1 ; $EEC0
10260  EEC9 F9              REC
10261  EECA 9A              RTN
10262  EECB             
10263  EECB             
10264  EECB             
10265  EECB             ;------------------------------------------------------------------------------
10266  EECB             ; $EECB - Basic command POINT
10267  EECB             ;------------------------------------------------------------------------------
10268  EECB             BCMD_POINT: ; 
10269  EECB D0              VEJ  (D0) \ ABYT($0A) \ ABRF($EF19) ; ***
10269  EECC 0A          
10269  EECD 4B          
10270  EECE BE EE 22        SJP  (MATRIX_A2XREG)
10271  EED1 4C 76           CPI  XH,$76
10272  EED3 83 0D           BCS BCMD_POINT_1 ; $EEE2
10273  EED5 45              LIN  X
10274  EED6 B9 0F           ANI  A,$0F
10275  EED8 2A              STA  UL
10276  EED9 45              LIN  X
10277  EEDA B9 0F           ANI  A,$0F
10278  EEDC F1              AEX
10279  EEDD             
10280  EEDD             BCMD_POINT_3: ; $EEE2
10281  EEDD F9              REC
10282  EEDE 22              ADC  UL
10283  EEDF BA D9 E4        JMP  BCMD_LEN_1 ; $D9E4
10284  EEE2             
10285  EEE2             BCMD_POINT_1: ; $EEE2
10286  EEE2 45              LIN  X
10287  EEE3 B9 F0           ANI  A,$F0
10288  EEE5 F1              AEX
10289  EEE6 2A              STA  UL
10290  EEE7 45              LIN  X
10291  EEE8 B9 F0           ANI  A,$F0
10292  EEEA 9E 0F           BCH BCMD_POINT_3 ; $EEDD
10293  EEEC             
10294  EEEC             BCMD_POINT_2: ; $EEEC
10295  EEEC D5              SHR
10296  EEED 81 15           BCR CURSOR_OFF_1 ; $EF04
10297  EEEF FD 98           PSH  Y
10298  EEF1 BE EF 05        SJP  (USING2STK)
10299  EEF4 BA E6 A9        JMP  BCMD_PAUSE_25 ; $E6A9
10300  EEF7             
10301  EEF7             BCMD_POINT_4: ; $EEF7
10302  EEF7 E9 78 74 7F     ANI  (CURSOR_ENA),$7F
10303  EEFB BE EF 35        SJP  (STK2USING)
10304  EEFE FD 1A           POP  Y
10305  EF00             
10306  EF00             
10307  EF00             
10308  EF00             ;------------------------------------------------------------------------------
10309  EF00             ; (84) $EF00 - Turns off the blinking cursor.
10310  EF00             ;------------------------------------------------------------------------------
10311  EF00             CURSOR_OFF: ;
10312  EF00 E9 78 7C FC     ANI  (CURSOR_BLNK),$FC
10313  EF04             
10314  EF04             CURSOR_OFF_1: ; $EF04
10315  EF04 9A              RTN
10316  EF05             
10317  EF05             
10318  EF05             
10319  EF05             ;------------------------------------------------------------------------------
10320  EF05             ; $EF05 - Saves USING parameters on processor stack ($7895-$7897) and deletes USING parameters.
10321  EF05             ;------------------------------------------------------------------------------
10322  EF05             USING2STK: ; 
10323  EF05 48 78           LDI  XH,$78
10324  EF07 4A 95           LDI  XL,$95
10325  EF09 FD 1A           POP  Y
10326  EF0B 6A 02           LDI  UL,$02
10327  EF0D             
10328  EF0D             USING2STK_1: ; $EF0D
10329  EF0D 45              LIN  X
10330  EF0E FD C8           PSH  A
10331  EF10 88 05           LOP  UL,USING2STK_1 ; $EF0D
10332  EF12 46              DEC  X
10333  EF13 B5 00           LDI  A,$00
10334  EF15 43              SDE  X
10335  EF16 43              SDE  X
10336  EF17 0E              STA  (X)
10337  EF18             
10338  EF18             USING2STK_2: ; $EF18
10339  EF18 FD 98           PSH  Y
10340  EF1A 9A              RTN
10341  EF1B             
10342  EF1B             
10343  EF1B             
10344  EF1B             ;------------------------------------------------------------------------------
10345  EF1B             ; $EF1B - Convert AR-X to string
10346  EF1B             ;------------------------------------------------------------------------------
10347  EF1B             ARX2STRNG: ; 
10348  EF1B BE EF 05        SJP  (USING2STK)
10349  EF1E B5 01           LDI  A,$01
10350  EF20 CD 96           VMJ  ($96) ; ($96)($4B)
10351  EF22 2A              STA  UL
10352  EF23 05              LDA  (X)
10353  EF24 B7 20           CPI  A,$20
10354  EF26 89 02           BZR ARX2STRNG_1 ; $EF2A
10355  EF28 62              DEC  UL
10356  EF29 44              INC  X
10357  EF2A             
10358  EF2A             ARX2STRNG_1: ; $EF2A
10359  EF2A 24              LDA  UL
10360  EF2B CD 24           VMJ  ($24)
10361  EF2D E9 78 74 7F     ANI  (CURSOR_ENA),$7F
10362  EF31 BE EF 35        SJP  (STK2USING)
10363  EF34 9A              RTN
10364  EF35             
10365  EF35             
10366  EF35             
10367  EF35             ;------------------------------------------------------------------------------
10368  EF35             ; $EF35 - Gets USING parameters from stack
10369  EF35             ;------------------------------------------------------------------------------
10370  EF35             STK2USING: ; 
10371  EF35 48 78           LDI  XH,$78
10372  EF37 4A 97           LDI  XL,$97
10373  EF39 FD 1A           POP  Y
10374  EF3B 6A 02           LDI  UL,$02
10375  EF3D             
10376  EF3D             STK2USING_1: ; $EF3D
10377  EF3D FD 8A           POP  A
10378  EF3F 43              SDE  X
10379  EF40 88 05           LOP  UL,STK2USING_1 ; $EF3D
10380  EF42 9E 2C           BCH USING2STK_2 ; $EF18
10381  EF44             
10382  EF44             
10383  EF44             
10384  EF44             ;------------------------------------------------------------------------------
10385  EF44             ; $EF44 - Outputs text on LCD display
10386  EF44             ;------------------------------------------------------------------------------
10387  EF44             TXT2LCD: ; 
10388  EF44 FD 88           PSH  X
10389  EF46 B5 00           LDI  A,$00
10390  EF48 6A 19           LDI  UL,$19
10391  EF4A 4D FF           BII  (X),$FF
10392  EF4C 8B 04           BZS TXT2LCD_1 ; $EF52
10393  EF4E DD              INC  A
10394  EF4F 44              INC  X
10395  EF50 88 08           LOP  UL,$EF4A
10396  EF52             
10397  EF52             TXT2LCD_1: ; $EF52
10398  EF52 0A              STA  XL
10399  EF53 F2              VEJ  (F2)
10400  EF54 FD 2A           POP  U
10401  EF56 BE ED 3B        SJP  (TEXTUREG_XL)
10402  EF59 9E 5B           BCH CURSOR_OFF
10403  EF5B             
10404  EF5B             
10405  EF5B             
10406  EF5B             ;------------------------------------------------------------------------------
10407  EF5B             ; $EF5B - Text output on LCD from (AR-Y)
10408  EF5B             ;------------------------------------------------------------------------------
10409  EF5B             TXT2LCD_ARY: ; 
10410  EF5B F9              REC
10411  EF5C B5 F0           LDI  A,$F0
10412  EF5E 02              ADC  XL
10413  EF5F 68 7A           LDI  UH,$7A
10414  EF61 6A 10           LDI  UL,$10
10415  EF63 FD A8           PSH  U
10416  EF65 9E 15           BCH TXT2LCD_1 ; $EF52
10417  EF67             
10418  EF67             
10419  EF67             
10420  EF67             ;------------------------------------------------------------------------------
10421  EF67             ; $EF67 - Prepare the LCD output
10422  EF67             ;------------------------------------------------------------------------------
10423  EF67             PREPLCDOUT:
10424  EF67 EB 78 8A 10     ORI  (BREAKPARAM),$10
10425  EF6B ED 78 74 01     BII  (CURSOR_ENA),$01
10426  EF6F 89 01           BZR PREPLCDOUT_1 ; $EF72
10427  EF71 F2              VEJ  (F2)
10428  EF72             
10429  EF72             PREPLCDOUT_1: ; $EF72
10430  EF72 E9 78 76 00     ANI  (CHARPOS_LCD),$00
10431  EF76 BE EE B0        SJP  (LCDCHRLEFT)
10432  EF79 83 05           BCS PREPLCDOUT_2 ; $EF80
10433  EF7B BD FF           EAI  $FF
10434  EF7D AE 78 77        STA  ($7877)
10435  EF80             
10436  EF80             PREPLCDOUT_2: ; $EF80
10437  EF80 9A              RTN
10438  EF81             
10439  EF81             
10440  EF81             
10441  EF81             ;------------------------------------------------------------------------------
10442  EF81             ; Clears output buffer
10443  EF81             ;            Address: EF81
10444  EF81             ;          Parameter: None
10445  EF81             ; 
10446  EF81             ; Modified Registers: X-Reg, U-Reg, Accumulator
10447  EF81             ;   Error conditions: None
10448  EF81             ;------------------------------------------------------------------------------
10449  EF81             OUTBUFCLR: ; $EF81
10450  EF81 48 7B           LDI  XH,$7B
10451  EF83 4A 60           LDI  XL,$60
10452  EF85 6A 4F           LDI  UL,$4F
10453  EF87 CD BA           VMJ  ($BA) ; ($BA)($5D)
10454  EF89 9A              RTN
10455  EF8A             
10456  EF8A             OUTBUFCLR_8: ; $EF8A
10457  EF8A 5A 07           LDI  YL,$07
10458  EF8C B5 06           LDI  A,$06
10459  EF8E BA F3 BA        JMP  BCMD_SIN_1 ; $F3BA
10460  EF91             
10461  EF91             OUTBUFCLR_7: ; $EF91
10462  EF91 BA F6 5D        JMP  ARX2BCD_ABS ; $F65D
10463  EF94             
10464  EF94             OUTBUFCLR_1: ; $EF94
10465  EF94 5E 2B           CPI  YL,$2B
10466  EF96 8B 04           BZS OUTBUFCLR_4 ; $EF9C
10467  EF98 EF 7A 11 80     ADI  (ARY + $01),$80
10468  EF9C             
10469  EF9C             OUTBUFCLR_4: ; $EF9C
10470  EF9C F0              VEJ  (F0)
10471  EF9D             
10472  EF9D             OUTBUFCLR_6: ; $EF9D
10473  EF9D 83 03           BCS $EFA2
10474  EF9F BA D8 F0        JMP  DEC2HEX_113 ; $D8F0
10475  EFA2 BA D8 F2        JMP  DEC2HEX_91 ; $D8F2
10476  EFA5             
10477  EFA5             OUTBUFCLR_2: ; $EFA5
10478  EFA5 5E 2A           CPI  YL,$2A
10479  EFA7 89 04           BZR OUTBUFCLR_5 ; $EFAD
10480  EFA9 CD 7E           VMJ  ($7E) ; ($7E)($3F)
10481  EFAB 9E 10           BCH OUTBUFCLR_6 ; $EF9D
10482  EFAD             
10483  EFAD             OUTBUFCLR_5: ; $EFAD
10484  EFAD CD 58           VMJ  ($58) ; ($58)($2C)
10485  EFAF 9E 14           BCH OUTBUFCLR_6 ; $EF9D
10486  EFB1             
10487  EFB1             OUTBUFCLR_3: ; $EFB1
10488  EFB1 BE F8 9C        SJP  ($F89C)
10489  EFB4 9E 19           BCH OUTBUFCLR_6 ; $EF9D
10490  EFB6             
10491  EFB6             
10492  EFB6             ;------------------------------------------------------------------------------
10493  EFB6             ; $EFB6 - Subtraction: AR-X = ARX – AR-Y
10494  EFB6             ;------------------------------------------------------------------------------
10495  EFB6             SUBTR: ; 
10496  EFB6 EF 7A 11 80     ADI  (ARY + $01),$80
10497  EFBA             
10498  EFBA             ;------------------------------------------------------------------------------
10499  EFBA             ; (F0) $EFBA - Addition: AR-X = AR-X + AR-Y
10500  EFBA             ;------------------------------------------------------------------------------
10501  EFBA             ADDIT: ; 
10502  EFBA CD 54           VMJ  ($54) ; ($54)($2A)
10503  EFBC 4A 02           LDI  XL,$02
10504  EFBE 5A 12           LDI  YL,$12
10505  EFC0 47              LDE  X
10506  EFC1 8B 33           BZS ADDIT_1 ; $EFF6
10507  EFC3 57              LDE  Y
10508  EFC4 8B 9F           BZS MULTIPLY_1 ; $F065
10509  EFC6 CD 7C           VMJ  ($7C) ; ($7C)($3E)
10510  EFC8 05              LDA  (X)
10511  EFC9 FB              SEC
10512  EFCA 11              SBC  (Y)
10513  EFCB 8B 18           BZS ADDIT_2 ; $EFE5
10514  EFCD 8F 2B           BVS ADDIT_3 ; $EFFA
10515  EFCF DB              ROL
10516  EFD0             
10517  EFD0             ADDIT_6: ; $EFD0
10518  EFD0 81 2C           BCR ADDIT_4 ; $EFFE
10519  EFD2 D1              ROR
10520  EFD3 BD FF           EAI  $FF
10521  EFD5 DD              INC  A
10522  EFD6 FD C8           PSH  A
10523  EFD8 15              LDA  (Y)
10524  EFD9 0E              STA  (X)
10525  EFDA FD 8A           POP  A
10526  EFDC 4A 07           LDI  XL,$07
10527  EFDE             
10528  EFDE             ADDIT_7: ; $EFDE
10529  EFDE B7 0C           CPI  A,$0C
10530  EFE0 83 21           BCS ADDIT_5 ; $F003
10531  EFE2 BE F7 F7        SJP  (ADD_ARU_ARX_2) ; $F7F7
10532  EFE5             
10533  EFE5             ADDIT_2: ; $EFE5
10534  EFE5 FD 8A           POP  A
10535  EFE7 FD C8           PSH  A
10536  EFE9 D9              SHL
10537  EFEA 83 20           BCS PC1500_PRT_A_DIR
10538  EFEC EE              VEJ  (EE)
10539  EFED             
10540  EFED             ADDIT_8: ; $EFED
10541  EFED FD 8A           POP  A
10542  EFEF             
10543  EFEF             ADDIT_9: ; $EFEF
10544  EFEF 28              STA  UH
10545  EFF0 FD 8A           POP  A
10546  EFF2 F9              REC
10547  EFF3 A2              ADC  UH
10548  EFF4 8E 61           BCH MULTIPLY_2 ; $F057
10549  EFF6             
10550  EFF6             ADDIT_1: ; $EFF6
10551  EFF6 CD 56           VMJ  ($56) ; ($56)($2B)
10552  EFF8 9E 69           BCH OUTBUFCLR_7 ; $EF91
10553  EFFA             
10554  EFFA             ADDIT_3: ; $EFFA
10555  EFFA B5 1F           LDI  A,$1F
10556  EFFC 9E 2E           BCH ADDIT_6 ; $EFD0
10557  EFFE             
10558  EFFE             ADDIT_4: ; $EFFE
10559  EFFE D1              ROR
10560  EFFF 4A 17           LDI  XL,$17
10561  F001 9E 25           BCH ADDIT_7 ; $EFDE
10562  F003             
10563  F003             ADDIT_5: ; $F003
10564  F003 04              LDA  XL
10565  F004 B9 F9           ANI  A,$F9
10566  F006 0A              STA  XL
10567  F007 BE F7 61        SJP  (CLR_7_XREG)
10568  F00A 9E 27           BCH ADDIT_2 ; $EFE5
10569  F00C CD 7A           VMJ  ($7A) ; ($7A)($3D)
10570  F00E 93 23           BCS ADDIT_8 ; $EFED
10571  F010 BE F7 EB        SJP  (ADD_ARU_ARX_3) ; $F7EB
10572  F013 FD 8A           POP  A
10573  F015 BD 80           EAI  $80
10574  F017 9E 2A           BCH ADDIT_9 ; $EFEF
10575  F019             
10576  F019             
10577  F019             
10578  F019             ;------------------------------------------------------------------------------
10579  F019             ; $F019 - AR-X = AR-X * AR-X
10580  F019             ;------------------------------------------------------------------------------
10581  F019             SQUARE: 
10582  F019 E6              VEJ  (E6)
10583  F01A             
10584  F01A             ;------------------------------------------------------------------------------
10585  F01A             ; $F01A - (7E) Multiplication: AR-X = AR-X* AR-Y
10586  F01A             ;------------------------------------------------------------------------------
10587  F01A             MULTIPLY: ;
10588  F01A CD 54           VMJ  ($54) ; ($54)($2A)
10589  F01C 4A 01           LDI  XL,$01
10590  F01E 5A 11           LDI  YL,$11
10591  F020 CD 7C           VMJ  ($7C) ; ($7C)($3E)
10592  F022 15              LDA  (Y)
10593  F023 F9              REC
10594  F024 03              ADC  (X)
10595  F025 8F 33           BVS MULTIPLY_3 ; $F05A
10596  F027 0E              STA  (X)
10597  F028 CD 78           VMJ  ($78) ; ($78)($3C)
10598  F02A CD 76           VMJ  ($76) ; ($76)($3B)
10599  F02C BE F8 20        SJP  (ADD_ARU_ARX_4) ; $F820
10600  F02F 5A 0F           LDI  YL,$0F
10601  F031             
10602  F031             MULTIPLY_5: ; $F031
10603  F031 FD 98           PSH  Y
10604  F033 15              LDA  (Y)
10605  F034 FD C8           PSH  A
10606  F036 B9 0F           ANI  A,$0F
10607  F038 F1              AEX
10608  F039 BE F0 67        SJP  (ADDMANY)
10609  F03C CD 74           VMJ  ($74) ; ($74)($3A)
10610  F03E FD 8A           POP  A
10611  F040 B9 F0           ANI  A,$F0
10612  F042 BE F0 67        SJP  (ADDMANY)
10613  F045 FD 1A           POP  Y
10614  F047 56              DEC  Y
10615  F048 5E 0A           CPI  YL,$0A
10616  F04A 81 04           BCR DIVISION_11 ; $F050
10617  F04C CD 74           VMJ  ($74) ; ($74)($3A)
10618  F04E 9E 1F           BCH MULTIPLY_5 ; $F031
10619  F050             
10620  F050             DIVISION_11: ; $F050
10621  F050 FD 2A           POP  U
10622  F052 24              LDA  UL
10623  F053 AE 7A 11        STA  (ARY + $01)
10624  F056 A4              LDA  UH
10625  F057             
10626  F057             MULTIPLY_2: ; $F057
10627  F057 CD 52           VMJ  ($52) ; ($52)($29
10628  F059 9A              RTN
10629  F05A             
10630  F05A             MULTIPLY_3: ; $F05A
10631  F05A FD 2A           POP  U
10632  F05C 83 04           BCS MULTIPLY_6 ; $F062
10633  F05E 68 25           LDI  UH,$25
10634  F060 FB              SEC
10635  F061 9A              RTN
10636  F062             
10637  F062             MULTIPLY_6: ; $F062
10638  F062 EC              VEJ  (EC)
10639  F063             
10640  F063             MULTIPLY_7: ; $F063
10641  F063 68 00           LDI  UH,$00
10642  F065             
10643  F065             MULTIPLY_1: ; $F065
10644  F065 F9              REC
10645  F066 9A              RTN
10646  F067             
10647  F067             
10648  F067             
10649  F067             ;------------------------------------------------------------------------------
10650  F067             ; $F067 - Adds the mantissas of those AR to the AR-X that are preselected by 
10651  F067             ; the value in the accumulator. If bit# is set 7:AR-W, 6:AR-V, 5:AR-U,
10652  F067             ; 4:AR-Y, 3:AR-Z are added.
10653  F067             ;------------------------------------------------------------------------------
10654  F067             ADDMANY: ; 
10655  F067 28              STA  UH
10656  F068 B5 2F           LDI  A,$2F
10657  F06A             
10658  F06A             ADDMANY_2: ; $F06A
10659  F06A FD C8           PSH  A
10660  F06C 1A              STA  YL
10661  F06D A4              LDA  UH
10662  F06E D9              SHL
10663  F06F 28              STA  UH
10664  F070 81 09           BCR ADDMANY_1 ; $F07B
10665  F072 CD 72           VMJ  ($72) ; ($72)($39)
10666  F074             
10667  F074             ADDMANY_3: ; $F074
10668  F074 F9              REC
10669  F075 FD 8A           POP  A
10670  F077 B3 F8           ADI  A,$F8
10671  F079 9E 11           BCH ADDMANY_2 ; $F06A
10672  F07B             
10673  F07B             ADDMANY_1: ; $F07B
10674  F07B 99 09           BZR ADDMANY_3 ; $F074
10675  F07D FD 8A           POP  A
10676  F07F 9A              RTN
10677  F080             
10678  F080             
10679  F080             
10680  F080             ;------------------------------------------------------------------------------
10681  F080             ; (6E) $F080 - Reciprocal of AR-X AR-X=1/AR-X (if error C=1).
10682  F080             ;------------------------------------------------------------------------------
10683  F080             RECIPRICAL: ; 
10684  F080 CD 6A           VMJ  ($6A) ; ($6A)($35)
10685  F082 CD 66           VMJ  ($66) ; ($66)($33)
10686  F084             
10687  F084             ;------------------------------------------------------------------------------
10688  F084             ; (58) $F084 - Division: AR-X = AR-X / AR- Y
10689  F084             ;------------------------------------------------------------------------------
10690  F084             DIVISION: ; 
10691  F084 CD 54           VMJ  ($54) ; ($54)($2A)
10692  F086 4A 01           LDI  XL,$01
10693  F088 5A 11           LDI  YL,$11
10694  F08A CD 7C           VMJ  ($7C) ; ($7C)($3E)
10695  F08C ED 7A 12 F0     BII  (ARY + $02),$F0
10696  F090 8B 51           BZS DIVISION_1 ; $F0E3
10697  F092 F9              REC
10698  F093 05              LDA  (X)
10699  F094 11              SBC  (Y)
10700  F095 9F 3D           BVS MULTIPLY_3 ; $F05A
10701  F097 0E              STA  (X)
10702  F098 BE F7 4B        SJP  (CLR_SM_ARZ)
10703  F09B BE F8 1C        SJP  (ADD_ARU_ARX_5) ; $F81C
10704  F09E B5 0C           LDI  A,$0C
10705  F0A0 FD C8           PSH  A
10706  F0A2             
10707  F0A2             DIVISION_6: ; $F0A2
10708  F0A2 BE F7 D9        SJP  (ADD_ARU_ARX_6) ; $F7D9
10709  F0A5 83 16           BCS DIVISION_2 ; $F0BD
10710  F0A7             
10711  F0A7             DIVISION_8: ; $F0A7
10712  F0A7 BE F7 C8        SJP  (ADD_ARU_ARX)
10713  F0AA 83 22           BCS DIVISION_3 ; $F0CE
10714  F0AC EE              VEJ  (EE)
10715  F0AD 83 29           BCS DIVISION_4 ; $F0D8
10716  F0AF             
10717  F0AF             DIVISION_10: ; $F0AF
10718  F0AF EE              VEJ  (EE)
10719  F0B0             
10720  F0B0             DIVISION_12: ; $F0B0
10721  F0B0 FD 8A           POP  A
10722  F0B2 DF              DEC  A
10723  F0B3 81 29           BCR DIVISION_5 ; $F0DE
10724  F0B5 FD C8           PSH  A
10725  F0B7 EA              VEJ  (EA)
10726  F0B8 BE F7 98        SJP  (ARZ_SHL_4BITS)
10727  F0BB 9E 1B           BCH DIVISION_6 ; $F0A2
10728  F0BD             
10729  F0BD             DIVISION_2: ; $F0BD
10730  F0BD BE F7 D9        SJP  (ADD_ARU_ARX_6) ; $F7D9
10731  F0C0 83 06           BCS DIVISION_7 ; $F0C8
10732  F0C2 EB 7A 0F 04     ORI  (ARZ + $07),$04
10733  F0C6 9E 21           BCH DIVISION_8 ; $F0A7
10734  F0C8             
10735  F0C8             DIVISION_7: ; $F0C8
10736  F0C8 EB 7A 0F 08     ORI  (ARZ + $07),$08
10737  F0CC 8E 04           BCH DIVISION_9 ; $F0D2
10738  F0CE             
10739  F0CE             DIVISION_3: ; $F0CE
10740  F0CE EB 7A 0F 02     ORI  (ARZ + $07),$02
10741  F0D2             
10742  F0D2             DIVISION_9: ; $F0D2
10743  F0D2 CD 7A           VMJ  ($7A) ; ($7A)($3D)
10744  F0D4 83 02           BCS DIVISION_4 ; $F0D8
10745  F0D6 9E 29           BCH DIVISION_10 ; $F0AF
10746  F0D8             
10747  F0D8             DIVISION_4: ; $F0D8
10748  F0D8 EB 7A 0F 01     ORI  (ARZ + $07),$01
10749  F0DC 9E 2E           BCH DIVISION_12 ; $F0B0
10750  F0DE             
10751  F0DE             DIVISION_5: ; $F0DE
10752  F0DE BE F7 1F        SJP  (XFER_SM_ARZ2ARX)
10753  F0E1 9E 93           BCH DIVISION_11 ; $F050
10754  F0E3             
10755  F0E3             DIVISION_1: ; $F0E3
10756  F0E3 FD 0A           POP  X
10757  F0E5 68 26           LDI  UH,$26
10758  F0E7 FB              SEC
10759  F0E8 9A              RTN
10760  F0E9             
10761  F0E9             
10762  F0E9             
10763  F0E9             ;------------------------------------------------------------------------------
10764  F0E9             ; $F0E9 -  AR-X = SQR (AR-X)
10765  F0E9             ;------------------------------------------------------------------------------
10766  F0E9             SQR_ROOT: ; 
10767  F0E9 CD 54           VMJ  ($54) ; ($54)($2A)
10768  F0EB 4A 01           LDI  XL,$01
10769  F0ED 47              LDE  X
10770  F0EE D9              SHL
10771  F0EF 83 6C           BCS SQR_ROOT_1 ; $F15D
10772  F0F1 05              LDA  (X)
10773  F0F2 BF 80           BII  A,$80
10774  F0F4 8B 01           BZS SQR_ROOT_2 ; $F0F7
10775  F0F6 FB              SEC
10776  F0F7             
10777  F0F7             SQR_ROOT_2: ; $F0F7
10778  F0F7 D1              ROR
10779  F0F8 0E              STA  (X)
10780  F0F9 81 01           BCR SQR_ROOT_3 ; $F0FC
10781  F0FB EA              VEJ  (EA)
10782  F0FC             
10783  F0FC             SQR_ROOT_3: ; $F0FC
10784  F0FC CD 70           VMJ  ($70) ; ($70)($38)
10785  F0FE BE F7 4B        SJP  (CLR_SM_ARZ)
10786  F101 B5 24           LDI  A,$24
10787  F103 EB 7A 12 10     ORI  (ARY + $02),$10
10788  F107 8E 26           BCH SQR_ROOT_4 ; $F12F
10789  F109             
10790  F109             SQR_ROOT_9: ; $F109
10791  F109 EE              VEJ  (EE)
10792  F10A FD 1A           POP  Y
10793  F10C FD 18           LDX  Y
10794  F10E 04              LDA  XL
10795  F10F F9              REC
10796  F110 B3 F8           ADI  A,$F8
10797  F112 0A              STA  XL
10798  F113 FD 8A           POP  A
10799  F115 B7 0F           CPI  A,$0F
10800  F117 A4              LDA  UH
10801  F118 81 06           BCR SQR_ROOT_5 ; $F120
10802  F11A F1              AEX
10803  F11B 0E              STA  (X)
10804  F11C 5F F1           ADI  (Y),$F1
10805  F11E 8E 0B           BCH SQR_ROOT_6 ; $F12B
10806  F120             
10807  F120             SQR_ROOT_5: ; $F120
10808  F120 0B              ORA  (X)
10809  F121 0E              STA  (X)
10810  F122 5E 17           CPI  YL,$17
10811  F124 83 30           BCS SQR_ROOT_7 ; $F156
10812  F126 5F FF           ADI  (Y),$FF
10813  F128 54              INC  Y
10814  F129 5B 10           ORI  (Y),$10
10815  F12B             
10816  F12B             SQR_ROOT_6: ; $F12B
10817  F12B EA              VEJ  (EA)
10818  F12C FD 8A           POP  A
10819  F12E DD              INC  A
10820  F12F             
10821  F12F             SQR_ROOT_4: ; $F12F
10822  F12F FD C8           PSH  A
10823  F131 D5              SHR
10824  F132 1A              STA  YL
10825  F133 B5 20           LDI  A,$20
10826  F135 81 02           BCR SQR_ROOT_8 ; $F139
10827  F137 B5 02           LDI  A,$02
10828  F139             
10829  F139             SQR_ROOT_8: ; $F139
10830  F139 68 00           LDI  UH,$00
10831  F13B FD C8           PSH  A
10832  F13D FD 98           PSH  Y
10833  F13F             
10834  F13F             SQR_ROOT_11: ; $F13F
10835  F13F CD 7A           VMJ  ($7A) ; ($7A)($3D)
10836  F141 91 3A           BCR SQR_ROOT_9 ; $F109
10837  F143 FD 1A           POP  Y
10838  F145 FD 8A           POP  A
10839  F147 FD C8           PSH  A
10840  F149 FD 98           PSH  Y
10841  F14B F9              REC
10842  F14C             
10843  F14C             SQR_ROOT_10: ; $F14C
10844  F14C 9C              DCA  (Y)
10845  F14D 53              SDE  Y
10846  F14E B5 00           LDI  A,$00
10847  F150 93 06           BCS SQR_ROOT_10 ; $F14C
10848  F152 FD 60           INC  UH
10849  F154 9E 17           BCH SQR_ROOT_11 ; $F13F
10850  F156             
10851  F156             SQR_ROOT_7: ; $F156
10852  F156 BE F7 1F        SJP  (XFER_SM_ARZ2ARX)
10853  F159 FD 8A           POP  A
10854  F15B E8              VEJ  (E8)
10855  F15C 9A              RTN
10856  F15D             
10857  F15D             SQR_ROOT_1: ; $F15D
10858  F15D 68 27           LDI  UH,$27
10859  F15F 8E 5F           BCH BCMD_LOG_2 ; $F1C0
10860  F161             
10861  F161             
10862  F161             
10863  F161             ;------------------------------------------------------------------------------
10864  F161             ; $F161 - Basic command LN
10865  F161             ;------------------------------------------------------------------------------
10866  F161             BCMD_LN: ; 
10867  F161 B5 02           LDI  A,$02
10868  F163 8E 02           BCH BCMD_LOG_3 ; $F167
10869  F165             
10870  F165             ;------------------------------------------------------------------------------
10871  F165             ; $F165 - Basic command LOG
10872  F165             ;------------------------------------------------------------------------------
10873  F165             BCMD_LOG: ; 
10874  F165 B5 00           LDI  A,$00
10875  F167             
10876  F167             BCMD_LOG_3: ; $F167
10877  F167 CD 54           VMJ  ($54) ; ($54)($2A)
10878  F169 4A 02           LDI  XL,$02
10879  F16B 4A 02           LDI  XL,$02
10880  F16D 4D F0           BII  (X),$F0
10881  F16F 9B 14           BZS SQR_ROOT_1 ; $F15D
10882  F171 46              DEC  X
10883  F172 4D FF           BII  (X),$FF
10884  F174 99 19           BZR SQR_ROOT_1 ; $F15D
10885  F176 46              DEC  X
10886  F177 4D 80           BII  (X),$80
10887  F179 89 47           BZR BCMD_LOG_4 ; $F1C2
10888  F17B FD C8           PSH  A
10889  F17D             
10890  F17D             BCMD_LOG_8: ; $F17D
10891  F17D 05              LDA  (X)
10892  F17E FD C8           PSH  A
10893  F180             
10894  F180             BCMD_LOG_1: ; $F180
10895  F180 49 00           ANI  (X),$00
10896  F182 EF 7A 02 F0     ADI  (ARX + $02),$F0
10897  F186 E8              VEJ  (E8)
10898  F187 A5 7A 00        LDA  (ARX)
10899  F18A BD FF           EAI  $FF
10900  F18C DD              INC  A
10901  F18D 28              STA  UH
10902  F18E B5 01           LDI  A,$01
10903  F190 AE 7A 18        STA  (ARU)
10904  F193 BA F2 EC        JMP  EXPONENT_1 ; $F2EC
10905  F196             
10906  F196             BCMD_LOG_9: ; $F196
10907  F196 EF 7A 00 FF     ADI  (ARX),$FF
10908  F19A E8              VEJ  (E8)
10909  F19B E6              VEJ  (E6)
10910  F19C FD 8A           POP  A
10911  F19E 2A              STA  UL
10912  F19F B5 00           LDI  A,$00
10913  F1A1 28              STA  UH
10914  F1A2 83 04           BCS BCMD_LOG_5 ; $F1A8
10915  F1A4 CD 10           VMJ  ($10) \ ABYT($00)
10915  F1A6 00          
10916  F1A7 F0              VEJ  (F0)
10917  F1A8             
10918  F1A8             BCMD_LOG_5: ; $F1A8
10919  F1A8 FD 8A           POP  A
10920  F1AA 83 12           BCS BCMD_LOG_6 ; $F1BE
10921  F1AC D5              SHR
10922  F1AD 81 04           BCR BCMD_LOG_7 ; $F1B3
10923  F1AF EB 7A 01 80     ORI  (ARX + $01),$80
10924  F1B3             
10925  F1B3             BCMD_LOG_7: ; $F1B3
10926  F1B3 D5              SHR
10927  F1B4 81 7A           BCR EXPONENT_2 ; $F230
10928  F1B6 BE F8 7B        SJP  (ADD_ARU_ARX_7) ; $F87B
10929  F1B9 CD 58           VMJ  ($58) ; ($58)($2C)
10930  F1BB 83 01           BCS BCMD_LOG_6 ; $F1BE
10931  F1BD 9A              RTN
10932  F1BE             
10933  F1BE             BCMD_LOG_6: ; $F1BE
10934  F1BE 68 25           LDI  UH,$25
10935  F1C0             
10936  F1C0             BCMD_LOG_2: ; $F1C0
10937  F1C0 FB              SEC
10938  F1C1 9A              RTN
10939  F1C2             
10940  F1C2             BCMD_LOG_4: ; $F1C2
10941  F1C2 DD              INC  A
10942  F1C3 FD C8           PSH  A
10943  F1C5 CD 6E           VMJ  ($6E) ; ($6E)($37)
10944  F1C7 4A 00           LDI  XL,$00
10945  F1C9 9E 4E           BCH BCMD_LOG_8 ; $F17D
10946  F1CB             
10947  F1CB             
10948  F1CB             
10949  F1CB             ;------------------------------------------------------------------------------
10950  F1CB             ; $F1CB - Basic command EXP
10951  F1CB             ;------------------------------------------------------------------------------
10952  F1CB             BCMD_EXP: ; 
10953  F1CB CD 54           VMJ  ($54) ; ($54)($2A)
10954  F1CD BE F8 7B        SJP  (ADD_ARU_ARX_7) ; $F87B
10955  F1D0 CD 7E           VMJ  ($7E) ; ($7E)($3F)
10956  F1D2 93 16           BCS BCMD_LOG_6 ; $F1BE
10957  F1D4             
10958  F1D4             
10959  F1D4             
10960  F1D4             ;------------------------------------------------------------------------------
10961  F1D4             ; $F1D4 - AR-X = 10 to the power of AR-X
10962  F1D4             ;------------------------------------------------------------------------------
10963  F1D4             EXPONENT: ; 
10964  F1D4 CD 54           VMJ  ($54) ; ($54)($2A)
10965  F1D6 CD 6C           VMJ  ($6C) ; ($6C)($36)
10966  F1D8 FD C8           PSH  A
10967  F1DA 46              DEC  X
10968  F1DB 05              LDA  (X)
10969  F1DC 8B 48           BZS EXPONENT_3 ; $F226
10970  F1DE BF 80           BII  A,$80
10971  F1E0 89 40           BZR EXPONENT_4 ; $F222
10972  F1E2 B7 01           CPI  A,$01
10973  F1E4 89 43           BZR EXPONENT_5 ; $F229
10974  F1E6 4A 01           LDI  XL,$01
10975  F1E8 6A 05           LDI  UL,$05
10976  F1EA             
10977  F1EA             EXPONENT_6: ; $F1EA
10978  F1EA 44              INC  X
10979  F1EB 47              LDE  X
10980  F1EC 41              SIN  X
10981  F1ED 88 05           LOP  UL,EXPONENT_6 ; $F1EA
10982  F1EF 49 00           ANI  (X),$00
10983  F1F1             
10984  F1F1             EXPONENT_11: ; $F1F1
10985  F1F1 B5 00           LDI  A,$00
10986  F1F3             
10987  F1F3             EXPONENT_10: ; $F1F3
10988  F1F3 28              STA  UH
10989  F1F4 CD 6C           VMJ  ($6C) ; ($6C)($36)
10990  F1F6 FD C8           PSH  A
10991  F1F8 B5 01           LDI  A,$01
10992  F1FA AE 7A 18        STA  (ARU)
10993  F1FD 8E 34           BCH EXPONENT_7 ; $F233
10994  F1FF             
10995  F1FF             EXPONENT_26: ; $F1FF
10996  F1FF FD 8A           POP  A
10997  F201 4A 02           LDI  XL,$02
10998  F203 43              SDE  X
10999  F204 04              LDA  XL
11000  F205 46              DEC  X
11001  F206 0E              STA  (X)
11002  F207 E8              VEJ  (E8)
11003  F208 D0              VEJ  (D0) \ ABYT($08) \ ABRF(EXPONENT_8) ; $F220
11003  F209 08          
11003  F20A 15          
11004  F20B 48 7A           LDI  XH,$7A
11005  F20D 24              LDA  UL
11006  F20E AE 7A 00        STA  (ARX)
11007  F211 BE F7 1B        SJP  (XFER_SM_ARY2ARX)
11008  F214 CD 74           VMJ  ($74) ; ($74)($3A)
11009  F216 FD 8A           POP  A
11010  F218             
11011  F218             EXPONENT_12: ; $F218
11012  F218 D9              SHL
11013  F219 81 04           BCR EXPONENT_9 ; $F21F
11014  F21B CD 6E           VMJ  ($6E) ; ($6E)($37)
11015  F21D 93 61           BCS BCMD_LOG_6 ; $F1BE
11016  F21F             
11017  F21F             EXPONENT_9: ; $F21F
11018  F21F 9A              RTN
11019  F220             
11020  F220             EXPONENT_8: ; $F220
11021  F220 9E 64           BCH BCMD_LOG_6 ; $F1BE
11022  F222             
11023  F222             EXPONENT_4: ; $F222
11024  F222 BD FF           EAI  $FF
11025  F224 9E 33           BCH EXPONENT_10 ; $F1F3
11026  F226             
11027  F226             EXPONENT_3: ; $F226
11028  F226 EA              VEJ  (EA)
11029  F227 9E 38           BCH EXPONENT_11 ; $F1F1
11030  F229             
11031  F229             EXPONENT_5: ; $F229
11032  F229 EC              VEJ  (EC)
11033  F22A FD 8A           POP  A
11034  F22C BD 80           EAI  $80
11035  F22E 9E 18           BCH EXPONENT_12 ; $F218
11036  F230             
11037  F230             EXPONENT_2: ; $F230
11038  F230 BA F0 63        JMP  MULTIPLY_7 ; $F063
11039  F233             
11040  F233             EXPONENT_7: ; $F233
11041  F233 BE F7 4F        SJP  (CLR_SM_ARW)
11042  F236 CD 70           VMJ  ($70) ; ($70)($38)
11043  F238 B5 00           LDI  A,$00
11044  F23A FD C8           PSH  A
11045  F23C             
11046  F23C             EXPONENT_18: ; $F23C
11047  F23C A4              LDA  UH
11048  F23D ED 7A 18 01     BII  (ARU),$01
11049  F241 8B 08           BZS EXPONENT_13 ; $F24B
11050  F243 B7 0D           CPI  A,$0D
11051  F245 81 0D           BCR EXPONENT_14 ; $F254
11052  F247 B5 0C           LDI  A,$0C
11053  F249 8E 09           BCH EXPONENT_14 ; $F254
11054  F24B             
11055  F24B             EXPONENT_13: ; $F24B
11056  F24B F9              REC
11057  F24C B3 0D           ADI  A,$0D
11058  F24E B7 14           CPI  A,$14
11059  F250 81 02           BCR EXPONENT_14 ; $F254
11060  F252 B5 13           LDI  A,$13
11061  F254             
11062  F254             EXPONENT_14: ; $F254
11063  F254 D9              SHL
11064  F255 D9              SHL
11065  F256 D9              SHL
11066  F257 BB 07           ORI  A,$07
11067  F259 FD C8           PSH  A
11068  F25B 58 FC           LDI  YH,$FC
11069  F25D             
11070  F25D             EXPONENT_16: ; $F25D
11071  F25D FD 8A           POP  A
11072  F25F FD C8           PSH  A
11073  F261 1A              STA  YL
11074  F262 BE F7 DF        SJP  (ADD_ARU_ARX_8) ; $F7DF
11075  F265 81 06           BCR EXPONENT_15 ; $F26D
11076  F267 EF 7A 2F 01     ADI  (ARW + $07),$01
11077  F26B 9E 10           BCH EXPONENT_16 ; $F25D
11078  F26D             
11079  F26D             EXPONENT_15: ; $F26D
11080  F26D FD 8A           POP  A
11081  F26F 1A              STA  YL
11082  F270 CD 72           VMJ  ($72) ; ($72)($39)
11083  F272 FD 8A           POP  A
11084  F274 B7 0C           CPI  A,$0C
11085  F276 83 0B           BCS EXPONENT_17 ; $F283
11086  F278 DD              INC  A
11087  F279 FD C8           PSH  A
11088  F27B FD 60           INC  UH
11089  F27D BE F7 94        SJP  (ARW_SHL_4BITS)
11090  F280 EA              VEJ  (EA)
11091  F281 9E 47           BCH EXPONENT_18 ; $F23C
11092  F283             
11093  F283             EXPONENT_17: ; $F283
11094  F283 58 7A           LDI  YH,$7A
11095  F285 FD C8           PSH  A
11096  F287 CD 76           VMJ  ($76) ; ($76)($3B)
11097  F289 CD 70           VMJ  ($70) ; ($70)($38)
11098  F28B EB 7A 11 01     ORI  (ARY + $01),$01
11099  F28F             
11100  F28F             EXPONENT_25: ; $F28F
11101  F28F A4              LDA  UH
11102  F290 B7 07           CPI  A,$07
11103  F292 ED 7A 18 01     BII  (ARU),$01
11104  F296 8B 02           BZS EXPONENT_19 ; $F29A
11105  F298 B7 0D           CPI  A,$0D
11106  F29A             
11107  F29A             EXPONENT_19: ; $F29A
11108  F29A 81 02           BCR EXPONENT_20 ; $F29E
11109  F29C B5 FF           LDI  A,$FF
11110  F29E             
11111  F29E             EXPONENT_20: ; $F29E
11112  F29E DD              INC  A
11113  F29F AE 7A 08        STA  (ARZ)
11114  F2A2             
11115  F2A2             EXPONENT_23: ; $F2A2
11116  F2A2 4A 2F           LDI  XL,$2F
11117  F2A4 4D 0F           BII  (X),$0F
11118  F2A6 8B 27           BZS EXPONENT_21 ; $F2CF
11119  F2A8 4F FF           ADI  (X),$FF
11120  F2AA ED 7A 18 01     BII  (ARU),$01
11121  F2AE 8B 08           BZS EXPONENT_22 ; $F2B8
11122  F2B0 BE F7 25        SJP  (XFER_SM_ARY2ARZ)
11123  F2B3 BE F8 3C        SJP  (ADD_ARU_ARX_9) ; $F83C
11124  F2B6 9E 16           BCH EXPONENT_23 ; $F2A2
11125  F2B8             
11126  F2B8             EXPONENT_22: ; $F2B8
11127  F2B8 CD 78           VMJ  ($78) ; ($78)($3C)
11128  F2BA EE              VEJ  (EE)
11129  F2BB A5 7A 08        LDA  (ARZ)
11130  F2BE 9B 1E           BZS EXPONENT_23 ; $F2A2
11131  F2C0 DF              DEC  A
11132  F2C1 4A 0F           LDI  XL,$0F
11133  F2C3 BE F8 05        SJP  (ADD_ARU_ARX_10) ; $F805
11134  F2C6 4A 17           LDI  XL,$17
11135  F2C8 5A 0F           LDI  YL,$0F
11136  F2CA BE F7 E1        SJP  (ADD_ARU_ARX_11) ; $F7E1
11137  F2CD 9E 2D           BCH EXPONENT_23 ; $F2A2
11138  F2CF             
11139  F2CF             EXPONENT_21: ; $F2CF
11140  F2CF FD 8A           POP  A
11141  F2D1 DF              DEC  A
11142  F2D2 81 0F           BCR EXPONENT_24 ; $F2E3
11143  F2D4 FD 62           DEC  UH
11144  F2D6 FD C8           PSH  A
11145  F2D8 BE F7 69        SJP  (ARW_SHR_4BITS)
11146  F2DB ED 7A 18 01     BII  (ARU),$01
11147  F2DF CB 74           VZS  ($74) ; ($74)($3A)
11148  F2E1 9E 54           BCH EXPONENT_25 ; $F28F
11149  F2E3             
11150  F2E3             EXPONENT_24: ; $F2E3
11151  F2E3 ED 7A 18 01     BII  (ARU),$01
11152  F2E7 99 EA           BZR EXPONENT_26 ; $F1FF
11153  F2E9 BA F4 32        JMP  BCMD_SIN_2 ; $F432
11154  F2EC             
11155  F2EC             EXPONENT_1: ; $F2EC
11156  F2EC BE F7 4F        SJP  (CLR_SM_ARW)
11157  F2EF CD 6A           VMJ  ($6A) ; ($6A)($35)
11158  F2F1 B5 00           LDI  A,$00
11159  F2F3 FD C8           PSH  A
11160  F2F5             
11161  F2F5             EXPONENT_35: ; $F2F5
11162  F2F5 A4              LDA  UH
11163  F2F6 B7 07           CPI  A,$07
11164  F2F8 ED 7A 18 01     BII  (ARU),$01
11165  F2FC 8B 02           BZS EXPONENT_27 ; $F300
11166  F2FE B7 0D           CPI  A,$0D
11167  F300             
11168  F300             EXPONENT_27: ; $F300
11169  F300 81 02           BCR EXPONENT_28 ; $F304
11170  F302 B5 FF           LDI  A,$FF
11171  F304             
11172  F304             EXPONENT_28: ; $F304
11173  F304 DD              INC  A
11174  F305 AE 7A 08        STA  (ARZ)
11175  F308 ED 7A 18 01     BII  (ARU),$01
11176  F30C 8B 05           BZS EXPONENT_29 ; $F313
11177  F30E 8E 16           BCH EXPONENT_30 ; $F326
11178  F310             
11179  F310             EXPONENT_32: ; $F310
11180  F310 BE F8 4D        SJP  (ADD_ARU_ARX_12) ; $F84D
11181  F313             
11182  F313             EXPONENT_29: ; $F313
11183  F313 CD 78           VMJ  ($78) ; ($78)($3C)
11184  F315             
11185  F315             EXPONENT_33: ; $F315
11186  F315 CD 7A           VMJ  ($7A) ; ($7A)($3D)
11187  F317 81 12           BCR EXPONENT_31 ; $F32B
11188  F319 EF 7A 2F 01     ADI  (ARW + $07),$01
11189  F31D ED 7A 18 01     BII  (ARU),$01
11190  F321 9B 13           BZS EXPONENT_32 ; $F310
11191  F323 BE F8 3C        SJP  (ADD_ARU_ARX_9) ; $F83C
11192  F326             
11193  F326             EXPONENT_30: ; $F326
11194  F326 BE F7 25        SJP  (XFER_SM_ARY2ARZ)
11195  F329 9E 16           BCH EXPONENT_33 ; $F315
11196  F32B             
11197  F32B             EXPONENT_31: ; $F32B
11198  F32B EE              VEJ  (EE)
11199  F32C FD 8A           POP  A
11200  F32E B7 0C           CPI  A,$0C
11201  F330 83 0B           BCS EXPONENT_34 ; $F33D
11202  F332 DD              INC  A
11203  F333 FD C8           PSH  A
11204  F335 FD 60           INC  UH
11205  F337 BE F7 94        SJP  (ARW_SHL_4BITS)
11206  F33A EA              VEJ  (EA)
11207  F33B 9E 48           BCH EXPONENT_35 ; $F2F5
11208  F33D             
11209  F33D             EXPONENT_34: ; $F33D
11210  F33D FD C8           PSH  A
11211  F33F CD 76           VMJ  ($76) ; ($76)($3B)
11212  F341             
11213  F341             EXPONENT_41: ; $F341
11214  F341 A4              LDA  UH
11215  F342 ED 7A 18 01     BII  (ARU),$01
11216  F346 8B 08           BZS EXPONENT_36 ; $F350
11217  F348 B7 0D           CPI  A,$0D
11218  F34A 81 0D           BCR EXPONENT_37 ; $F359
11219  F34C B5 0C           LDI  A,$0C
11220  F34E 8E 09           BCH EXPONENT_37 ; $F359
11221  F350             
11222  F350             EXPONENT_36: ; $F350
11223  F350 F9              REC
11224  F351 B3 0D           ADI  A,$0D
11225  F353 B7 14           CPI  A,$14
11226  F355 81 02           BCR EXPONENT_37 ; $F359
11227  F357 B5 13           LDI  A,$13
11228  F359             
11229  F359             EXPONENT_37: ; $F359
11230  F359 D9              SHL
11231  F35A D9              SHL
11232  F35B D9              SHL
11233  F35C BB 07           ORI  A,$07
11234  F35E FD C8           PSH  A
11235  F360 58 FC           LDI  YH,$FC
11236  F362             
11237  F362             EXPONENT_39: ; $F362
11238  F362 4A 2F           LDI  XL,$2F
11239  F364 FD 8A           POP  A
11240  F366 4D 0F           BII  (X),$0F
11241  F368 8B 09           BZS EXPONENT_38 ; $F373
11242  F36A 4F FF           ADI  (X),$FF
11243  F36C FD C8           PSH  A
11244  F36E 1A              STA  YL
11245  F36F CD 72           VMJ  ($72) ; ($72)($39)
11246  F371 9E 11           BCH EXPONENT_39 ; $F362
11247  F373             
11248  F373             EXPONENT_38: ; $F373
11249  F373 FD 8A           POP  A
11250  F375 DF              DEC  A
11251  F376 81 0B           BCR EXPONENT_40 ; $F383
11252  F378 FD C8           PSH  A
11253  F37A FD 62           DEC  UH
11254  F37C BE F7 69        SJP  (ARW_SHR_4BITS)
11255  F37F CD 74           VMJ  ($74) ; ($74)($3A)
11256  F381 9E 42           BCH EXPONENT_41 ; $F341
11257  F383             
11258  F383             EXPONENT_40: ; $F383
11259  F383 58 7A           LDI  YH,$7A
11260  F385 ED 7A 18 01     BII  (ARU),$01
11261  F389 8B 03           BZS EXPONENT_42 ; $F38E
11262  F38B BA F1 96        JMP  BCMD_LOG_9 ; $F196
11263  F38E             
11264  F38E             EXPONENT_42: ; $F38E
11265  F38E BA F4 F7        JMP  BCMD_ASN_1 ; $F4F7
11266  F391             
11267  F391             
11268  F391             
11269  F391             ;------------------------------------------------------------------------------
11270  F391             ; $F391 - Basic command COS
11271  F391             ;------------------------------------------------------------------------------
11272  F391             BCMD_COS: ; 
11273  F391 E9 7A 01 00     ANI  (ARX + $01),$00
11274  F395 B5 00           LDI  A,$00
11275  F397 AE 7A 18        STA  (ARU)
11276  F39A B5 01           LDI  A,$01
11277  F39C 8E 0B           BCH BCMD_SIN_3 ; $F3A9
11278  F39E             
11279  F39E             
11280  F39E             
11281  F39E             ;------------------------------------------------------------------------------
11282  F39E             ; $F39E - Basic command TAN
11283  F39E             ;------------------------------------------------------------------------------
11284  F39E             BCMD_TAN: ; 
11285  F39E B5 40           LDI  A,$40
11286  F3A0 8E 02           BCH BCMD_SIN_4 ; $F3A4
11287  F3A2             
11288  F3A2             
11289  F3A2             
11290  F3A2             ;------------------------------------------------------------------------------
11291  F3A2             ; $F3A2 - Basic command SIN
11292  F3A2             ;------------------------------------------------------------------------------
11293  F3A2             BCMD_SIN: ; 
11294  F3A2 B5 00           LDI  A,$00
11295  F3A4             
11296  F3A4             BCMD_SIN_4: ; $F3A4
11297  F3A4 AE 7A 18        STA  (ARU)
11298  F3A7 B5 00           LDI  A,$00
11299  F3A9             
11300  F3A9             BCMD_SIN_3: ; $F3A9
11301  F3A9 AE 7A 20        STA  (ARV)
11302  F3AC CD 54           VMJ  ($54) ; ($54)($2A)
11303  F3AE BE F8 5A        SJP  (ADD_ARU_ARX_13) ; $F85A
11304  F3B1 81 16           BCR BCMD_SIN_5 ; $F3C9
11305  F3B3 CD 7E           VMJ  ($7E) ; ($7E)($3F)
11306  F3B5 83 D7           BCS BCMD_SIN_6 ; $F48E
11307  F3B7 BA EF 8A        JMP  OUTBUFCLR_8 ; $EF8A
11308  F3BA             
11309  F3BA             BCMD_SIN_1: ; $F3BA
11310  F3BA 9C              DCA  (Y)
11311  F3BB 53              SDE  Y
11312  F3BC B5 00           LDI  A,$00
11313  F3BE 93 06           BCS BCMD_SIN_1 ; $F3BA
11314  F3C0 E9 7A 07 F0     ANI  (ARX + $07),$F0
11315  F3C4 BE F6 5D        SJP  (ARX2BCD_ABS)
11316  F3C7 83 C5           BCS BCMD_SIN_6 ; $F48E
11317  F3C9             
11318  F3C9             BCMD_SIN_5: ; $F3C9
11319  F3C9 CD 6C           VMJ  ($6C) ; ($6C)($36)
11320  F3CB FD C8           PSH  A
11321  F3CD 46              DEC  X
11322  F3CE 05              LDA  (X)
11323  F3CF BF 80           BII  A,$80
11324  F3D1 89 56           BZR BCMD_SIN_7 ; $F429
11325  F3D3 B7 0A           CPI  A,$0A
11326  F3D5 83 B5           BCS BCMD_SIN_8 ; $F48C
11327  F3D7 CD 70           VMJ  ($70) ; ($70)($38)
11328  F3D9 EB 7A 11 36     ORI  (ARY + $01),$36
11329  F3DD CD 74           VMJ  ($74) ; ($74)($3A)
11330  F3DF BE F7 71        SJP  (ARY_SHR_4BITS)
11331  F3E2             
11332  F3E2             BCMD_SIN_9: ; $F3E2
11333  F3E2 FD 60           INC  UH
11334  F3E4             
11335  F3E4             BCMD_SIN_12: ; $F3E4
11336  F3E4 CD 7A           VMJ  ($7A) ; ($7A)($3D)
11337  F3E6 93 06           BCS BCMD_SIN_9 ; $F3E2
11338  F3E8 EE              VEJ  (EE)
11339  F3E9 ED 7A 11 0F     BII  (ARY + $01),$0F
11340  F3ED 8B 13           BZS BCMD_SIN_10 ; $F402
11341  F3EF EF 7A 00 FF     ADI  (ARX),$FF
11342  F3F3 81 03           BCR BCMD_SIN_11 ; $F3F8
11343  F3F5 EA              VEJ  (EA)
11344  F3F6 9E 16           BCH BCMD_SIN_9 ; $F3E2
11345  F3F8             
11346  F3F8             BCMD_SIN_11: ; $F3F8
11347  F3F8 CD 70           VMJ  ($70) ; ($70)($38)
11348  F3FA EB 7A 12 90     ORI  (ARY + $02),$90
11349  F3FE 68 00           LDI  UH,$00
11350  F400 9E 1E           BCH BCMD_SIN_12 ; $F3E4
11351  F402             
11352  F402             BCMD_SIN_10: ; $F402
11353  F402 EA              VEJ  (EA)
11354  F403 E9 7A 00 00     ANI  (ARX),$00
11355  F407 A4              LDA  UH
11356  F408 4A 20           LDI  XL,$20
11357  F40A F9              REC
11358  F40B 03              ADC  (X)
11359  F40C 0E              STA  (X)
11360  F40D F1              AEX
11361  F40E 0B              ORA  (X)
11362  F40F 0E              STA  (X)
11363  F410 CD 70           VMJ  ($70) ; ($70)($38)
11364  F412 4A 11           LDI  XL,$11
11365  F414 B5 04           LDI  A,$04
11366  F416 41              SIN  X
11367  F417 4B 50           ORI  (X),$50
11368  F419 CD 7A           VMJ  ($7A) ; ($7A)($3D)
11369  F41B 81 07           BCR BCMD_SIN_13 ; $F424
11370  F41D BE F7 EB        SJP  (ADD_ARU_ARX_3) ; $F7EB
11371  F420 EF 7A 20 01     ADI  (ARV),$01
11372  F424             
11373  F424             BCMD_SIN_13: ; $F424
11374  F424 EE              VEJ  (EE)
11375  F425 E8              VEJ  (E8)
11376  F426 4A 00           LDI  XL,$00
11377  F428 05              LDA  (X)
11378  F429             
11379  F429             BCMD_SIN_7: ; $F429
11380  F429 DF              DEC  A
11381  F42A 0E              STA  (X)
11382  F42B BD FF           EAI  $FF
11383  F42D DD              INC  A
11384  F42E 28              STA  UH
11385  F42F BA F2 33        JMP  EXPONENT_7 ; $F233
11386  F432             
11387  F432             BCMD_SIN_2: ; $F432
11388  F432 E9 7A 10 00     ANI  (ARY),$00
11389  F436 E8              VEJ  (E8)
11390  F437 CD 66           VMJ  ($66) ; ($66)($33)
11391  F439 E8              VEJ  (E8)
11392  F43A CD 66           VMJ  ($66) ; ($66)($33)
11393  F43C CD 58           VMJ  ($58) ; ($58)($2C)
11394  F43E FD 8A           POP  A
11395  F440 AE 7A 01        STA  (ARX + $01)
11396  F443 ED 7A 18 40     BII  (ARU),$40
11397  F447 89 37           BZR BCMD_SIN_14 ; $F480
11398  F449 CD 80           VMJ  ($80) ; ($80)($40)
11399  F44B BE F0 19        SJP  (SQUARE)
11400  F44E 83 DE           BCS BCMD_ASN_2 ; $F52E
11401  F450 CD 6A           VMJ  ($6A) ; ($6A)($35)
11402  F452 F0              VEJ  (F0)
11403  F453 83 D9           BCS BCMD_ASN_2 ; $F52E
11404  F455 BE F0 E9        SJP  (SQR_ROOT)
11405  F458 83 D4           BCS BCMD_ASN_2 ; $F52E
11406  F45A CD 68           VMJ  ($68) ; ($68)($34)
11407  F45C CD 7C           VMJ  ($7C) ; ($7C)($3E)
11408  F45E ED 7A 20 01     BII  (ARV),$01
11409  F462 8B 02           BZS $F466
11410  F464 CD 6A           VMJ  ($6A) ; ($6A)($35)
11411  F466 CD 66           VMJ  ($66) ; ($66)($33)
11412  F468 CD 58           VMJ  ($58) ; ($58)($2C)
11413  F46A FD 8A           POP  A
11414  F46C AE 7A 01        STA  (ARX + $01)
11415  F46F FD 8A           POP  A
11416  F471 ED 7A 20 20     BII  (ARV),$20
11417  F475             
11418  F475             BCMD_SIN_16: ; $F475
11419  F475 83 B7           BCS BCMD_ASN_2 ; $F52E
11420  F477 8B 04           BZS BCMD_SIN_15 ; $F47D
11421  F479 EF 7A 01 80     ADI  (ARX + $01),$80
11422  F47D             
11423  F47D             BCMD_SIN_15: ; $F47D
11424  F47D BA F6 5D        JMP  ARX2BCD_ABS ; $F65D
11425  F480             
11426  F480             BCMD_SIN_14: ; $F480
11427  F480 ED 7A 20 01     BII  (ARV),$01
11428  F484 C9 6E           VZR  ($6E) ; ($6E)($37)
11429  F486 ED 7A 20 10     BII  (ARV),$10
11430  F48A 9E 17           BCH BCMD_SIN_16 ; $F475
11431  F48C             
11432  F48C             BCMD_SIN_8: ; $F48C
11433  F48C FD 8A           POP  A
11434  F48E             
11435  F48E             BCMD_SIN_6: ; $F48E
11436  F48E 68 27           LDI  UH,$27
11437  F490 FB              SEC
11438  F491 9A              RTN
11439  F492             
11440  F492             
11441  F492             
11442  F492             ;------------------------------------------------------------------------------
11443  F492             ; $F492 - Basic command ACS
11444  F492             ;------------------------------------------------------------------------------
11445  F492             BCMD_ACS: ; 
11446  F492 B5 20           LDI  A,$20
11447  F494 8E 06           BCH BCMD_ASN_3 ; $F49C
11448  F496             
11449  F496             ;------------------------------------------------------------------------------
11450  F496             ; $F496 - Basic command ATN
11451  F496             ;------------------------------------------------------------------------------
11452  F496             BCMD_ATN: ; 
11453  F496 B5 40           LDI  A,$40
11454  F498 8E 02           BCH BCMD_ASN_3 ; $F49C
11455  F49A             
11456  F49A             ;------------------------------------------------------------------------------
11457  F49A             ; $F49A - Basic command ASN
11458  F49A             ;------------------------------------------------------------------------------
11459  F49A             BCMD_ASN: ; 
11460  F49A B5 00           LDI  A,$00
11461  F49C             
11462  F49C             BCMD_ASN_3: ; $F49C
11463  F49C AE 7A 18        STA  (ARU)
11464  F49F CD 54           VMJ  ($54) ; ($54)($2A)
11465  F4A1 CD 6C           VMJ  ($6C) ; ($6C)($36)
11466  F4A3 FD C8           PSH  A
11467  F4A5 ED 7A 18 40     BII  (ARU),$40
11468  F4A9 89 27           BZR BCMD_ASN_4 ; $F4D2
11469  F4AB CD 80           VMJ  ($80) ; ($80)($40)
11470  F4AD BE F0 19        SJP  (SQUARE)
11471  F4B0 93 26           BCS BCMD_SIN_8 ; $F48C
11472  F4B2 CD 6A           VMJ  ($6A) ; ($6A)($35)
11473  F4B4 EF 7A 01 80     ADI  (ARX + $01),$80
11474  F4B8 F0              VEJ  (F0)
11475  F4B9 93 2F           BCS BCMD_SIN_8 ; $F48C
11476  F4BB BE F0 E9        SJP  (SQR_ROOT)
11477  F4BE 93 34           BCS BCMD_SIN_8 ; $F48C
11478  F4C0 CD 68           VMJ  ($68) ; ($68)($34)
11479  F4C2 ED 7A 18 20     BII  (ARU),$20
11480  F4C6 89 02           BZR BCMD_ASN_5 ; $F4CA
11481  F4C8 CD 66           VMJ  ($66) ; ($66)($33)
11482  F4CA             
11483  F4CA             BCMD_ASN_5: ; $F4CA
11484  F4CA ED 7A 12 F0     BII  (ARY + $02),$F0
11485  F4CE 8B 20           BZS BCMD_ASN_6 ; $F4F0
11486  F4D0 CD 58           VMJ  ($58) ; ($58)($2C)
11487  F4D2             
11488  F4D2             BCMD_ASN_4: ; $F4D2
11489  F4D2 ED 7A 02 F0     BII  (ARX + $02),$F0
11490  F4D6 8B 36           BZS BCMD_ASN_7 ; $F50E
11491  F4D8 ED 7A 00 80     BII  (ARX),$80
11492  F4DC 89 06           BZR BCMD_ASN_8 ; $F4E4
11493  F4DE CD 6E           VMJ  ($6E) ; ($6E)($37)
11494  F4E0 EF 7A 18 80     ADI  (ARU),$80
11495  F4E4             
11496  F4E4             BCMD_ASN_8: ; $F4E4
11497  F4E4 93 5A           BCS BCMD_SIN_8 ; $F48C
11498  F4E6 A5 7A 00        LDA  (ARX)
11499  F4E9 BD FF           EAI  $FF
11500  F4EB DD              INC  A
11501  F4EC 28              STA  UH
11502  F4ED BA F2 EC        JMP EXPONENT_1 ; $F2EC
11503  F4F0             
11504  F4F0             BCMD_ASN_6: ; $F4F0
11505  F4F0 BE F8 83        SJP  (ADD_ARU_ARX_14) ; $F883
11506  F4F3 CD 56           VMJ  ($56) ; ($56)($2B)
11507  F4F5 8E 17           BCH BCMD_ASN_7 ; $F50E
11508  F4F7             
11509  F4F7             BCMD_ASN_1: ; $F4F7
11510  F4F7 EF 7A 00 01     ADI  (ARX),$01
11511  F4FB E8              VEJ  (E8)
11512  F4FC 83 2E           BCS BCMD_ASN_9 ; $F52C
11513  F4FE ED 7A 18 80     BII  (ARU),$80
11514  F502 8B 0A           BZS BCMD_ASN_7 ; $F50E
11515  F504 BE F8 83        SJP  (ADD_ARU_ARX_14) ; $F883
11516  F507 EF 7A 01 80     ADI  (ARX + $01),$80
11517  F50B F0              VEJ  (F0)
11518  F50C 83 1E           BCS BCMD_ASN_9 ; $F52C
11519  F50E             
11520  F50E             BCMD_ASN_7: ; $F50E
11521  F50E FD 8A           POP  A
11522  F510 AE 7A 01        STA  (ARX + $01)
11523  F513 D9              SHL
11524  F514 81 0C           BCR BCMD_ASN_10 ; $F522
11525  F516 ED 7A 18 20     BII  (ARU),$20
11526  F51A 8B 06           BZS BCMD_ASN_10 ; $F522
11527  F51C BE F8 87        SJP  (ADD_ARU_ARX_15) ; $F887
11528  F51F F0              VEJ  (F0)
11529  F520 83 0C           BCS BCMD_ASN_2 ; $F52E
11530  F522             
11531  F522             BCMD_ASN_10: ; $F522
11532  F522 BE F8 5A        SJP  (ADD_ARU_ARX_13) ; $F85A
11533  F525 81 95           BCR BCMD_PI_1 ; $F5BC
11534  F527 CD 58           VMJ  ($58) ; ($58)($2C)
11535  F529 83 03           BCS BCMD_ASN_2 ; $F52E
11536  F52B 9A              RTN
11537  F52C             
11538  F52C             BCMD_ASN_9: ; $F52C
11539  F52C FD 8A           POP  A
11540  F52E             
11541  F52E             BCMD_ASN_2: ; $F52E
11542  F52E BA F6 98        JMP  ARX2BCD2_1 ; $F698
11543  F531             
11544  F531             
11545  F531             
11546  F531             ;------------------------------------------------------------------------------
11547  F531             ; $F531 - Basic command DEG
11548  F531             ;------------------------------------------------------------------------------
11549  F531             BCMD_DEG: ; 
11550  F531 CD 54           VMJ  ($54) ; ($54)($2A)
11551  F533 CD 6C           VMJ  ($6C) ; ($6C)($36)
11552  F535 FD C8           PSH  A
11553  F537 BE F6 A9        SJP  (ARX2BCD2_2) ; $F6A9
11554  F53A CD 64           VMJ  ($64) ; ($64)($32)
11555  F53C CD 56           VMJ  ($56) ; ($56)($2B)
11556  F53E E8              VEJ  (E8)
11557  F53F CD 62           VMJ  ($62) ; ($62)($31)
11558  F541 CD 58           VMJ  ($58) ; ($58)($2C)
11559  F543 93 19           BCS BCMD_ASN_9 ; $F52C
11560  F545 CD 64           VMJ  ($64) ; ($64)($32)
11561  F547 E8              VEJ  (E8)
11562  F548 CD 60           VMJ  ($60) ; ($60)($30)
11563  F54A CD 64           VMJ  ($64) ; ($64)($32)
11564  F54C CD 66           VMJ  ($66) ; ($66)($33)
11565  F54E E8              VEJ  (E8)
11566  F54F F0              VEJ  (F0)
11567  F550 93 26           BCS BCMD_ASN_9 ; $F52C
11568  F552 CD 62           VMJ  ($62) ; ($62)($31)
11569  F554 CD 58           VMJ  ($58) ; ($58)($2C)
11570  F556 93 2C           BCS BCMD_ASN_9 ; $F52C
11571  F558 E6              VEJ  (E6)
11572  F559 CD 64           VMJ  ($64) ; ($64)($32)
11573  F55B E8              VEJ  (E8)
11574  F55C F0              VEJ  (F0)
11575  F55D 93 33           BCS BCMD_ASN_9 ; $F52C
11576  F55F FD 8A           POP  A
11577  F561 BA F6 63        JMP  ARX2BCD2 ; $F663
11578  F564             
11579  F564             
11580  F564             
11581  F564             ;------------------------------------------------------------------------------
11582  F564             ; $F564 - Basic command DMS
11583  F564             ;------------------------------------------------------------------------------
11584  F564             BCMD_DMS: ; 
11585  F564 CD 54           VMJ  ($54) ; ($54)($2A)
11586  F566 CD 6C           VMJ  ($6C) ; ($6C)($36)
11587  F568 FD C8           PSH  A
11588  F56A CD 60           VMJ  ($60) ; ($60)($30)
11589  F56C CD 64           VMJ  ($64) ; ($64)($32)
11590  F56E CD 56           VMJ  ($56) ; ($56)($2B)
11591  F570 E8              VEJ  (E8)
11592  F571 CD 62           VMJ  ($62) ; ($62)($31)
11593  F573 CD 7E           VMJ  ($7E) ; ($7E)($3F)
11594  F575 E6              VEJ  (E6)
11595  F576 CD 64           VMJ  ($64) ; ($64)($32)
11596  F578 E8              VEJ  (E8)
11597  F579 F0              VEJ  (F0)
11598  F57A BE F6 A9        SJP  (ARX2BCD2_2) ; $F6A9
11599  F57D CD 80           VMJ  ($80) ; ($80)($40)
11600  F57F CD 56           VMJ  ($56) ; ($56)($2B)
11601  F581 E8              VEJ  (E8)
11602  F582 CD 62           VMJ  ($62) ; ($62)($31)
11603  F584 CD 7E           VMJ  ($7E) ; ($7E)($3F)
11604  F586 BE F6 3C        SJP  (ARXX)
11605  F589 E6              VEJ  (E6)
11606  F58A CD 64           VMJ  ($64) ; ($64)($32)
11607  F58C E8              VEJ  (E8)
11608  F58D F0              VEJ  (F0)
11609  F58E 93 64           BCS BCMD_ASN_9 ; $F52C
11610  F590             
11611  F590             ;BCMD_SGN: $F590
11612  F590 FD 8A           POP  A
11613  F592 CD 52           VMJ  ($52) ; ($52)($29
11614  F594 BA F6 3C        JMP  ARXX ; $F63C
11615  F597             
11616  F597             
11617  F597             ;------------------------------------------------------------------------------
11618  F597             ; Basic command ABS
11619  F597             ;------------------------------------------------------------------------------
11620  F597             BCMD_ABS: ; $F597
11621  F597 E9 7A 01 00     ANI  (ARX + $01),$00
11622  F59B 8E 1F           BCH BCMD_PI_1 ; $F5BC
11623  F59D             
11624  F59D             ;------------------------------------------------------------------------------
11625  F59D             ; $F59D - Basic command SGN
11626  F59D             ;------------------------------------------------------------------------------
11627  F59D             BCMD_SGN:
11628  F59D 48 7A           LDI  XH,$7A
11629  F59F 4A 01           LDI  XL,$01
11630  F5A1 45              LIN  X
11631  F5A2 28              STA  UH
11632  F5A3 05              LDA  (X)
11633  F5A4 FD C8           PSH  A
11634  F5A6 EC              VEJ  (EC)
11635  F5A7 FD 8A           POP  A
11636  F5A9 BF F0           BII  A,$F0
11637  F5AB 9B 12           BZS $F59B
11638  F5AD A4              LDA  UH
11639  F5AE 4A 01           LDI  XL,$01
11640  F5B0 41              SIN  X
11641  F5B1 4B 10           ORI  (X),$10
11642  F5B3 9E 1A           BCH $F59B
11643  F5B5             
11644  F5B5             
11645  F5B5             
11646  F5B5             ;------------------------------------------------------------------------------
11647  F5B5             ; $F5B5 - Basic command PI, Loads PI to AR-Y.
11648  F5B5             ;------------------------------------------------------------------------------
11649  F5B5             BCMD_PI: ; 
11650  F5B5 CD 54           VMJ  ($54) ; ($54)($2A)
11651  F5B7 BE F8 75        SJP  ($F875)
11652  F5BA CD 56           VMJ  ($56) ; ($56)($2B)
11653  F5BC             
11654  F5BC             BCMD_PI_1: ; $F5BC
11655  F5BC 8E E7           BCH ARX2BCD2_9 ; $F6A5
11656  F5BE             
11657  F5BE             
11658  F5BE             
11659  F5BE             ;------------------------------------------------------------------------------
11660  F5BE             ; $F5BE - Basic command INT
11661  F5BE             ;------------------------------------------------------------------------------
11662  F5BE             BCMD_INT: ; 
11663  F5BE CD 54           VMJ  ($54) ; ($54)($2A)
11664  F5C0 CD 6C           VMJ  ($6C) ; ($6C)($36)
11665  F5C2 FD C8           PSH  A
11666  F5C4 CD 60           VMJ  ($60) ; ($60)($30)
11667  F5C6 FD 8A           POP  A
11668  F5C8 8B 0B           BZS BCMD_INT_1 ; $F5D5
11669  F5CA 4A 11           LDI  XL,$11
11670  F5CC 6A 06           LDI  UL,$06
11671  F5CE             
11672  F5CE             BCMD_INT_3: ; $F5CE
11673  F5CE 45              LIN  X
11674  F5CF 89 07           BZR BCMD_INT_2 ; $F5D8
11675  F5D1 88 05           LOP  UL,BCMD_INT_3 ; $F5CE
11676  F5D3             
11677  F5D3             BCMD_INT_4: ; $F5D3
11678  F5D3 B5 80           LDI  A,$80
11679  F5D5             
11680  F5D5             BCMD_INT_1: ; $F5D5
11681  F5D5 CD 52           VMJ  ($52) ; ($52)($29
11682  F5D7 9A              RTN
11683  F5D8             
11684  F5D8             BCMD_INT_2: ; $F5D8
11685  F5D8 CD 6A           VMJ  ($6A) ; ($6A)($35)
11686  F5DA F0              VEJ  (F0)
11687  F5DB 9E 0A           BCH BCMD_INT_4 ; $F5D3
11688  F5DD             
11689  F5DD             
11690  F5DD             
11691  F5DD             ;------------------------------------------------------------------------------
11692  F5DD             ; $F5DD - Basic command RND
11693  F5DD             ;------------------------------------------------------------------------------
11694  F5DD             BCMD_RND:
11695  F5DD CD 54           VMJ  ($54) ; ($54)($2A)
11696  F5DF ED 7A 01 80     BII  (ARX + $01),$80
11697  F5E3 89 10           BZR RANDGEN_1 ; $F5F5
11698  F5E5 ED 7A 00 80     BII  (ARX),$80
11699  F5E9 8B 10           BZS RANDGEN_2 ; $F5FB
11700  F5EB             
11701  F5EB             
11702  F5EB             
11703  F5EB             ;------------------------------------------------------------------------------
11704  F5EB             ; $F5EB - Determines random number in AR-X
11705  F5EB             ;------------------------------------------------------------------------------
11706  F5EB             RANDGEN: ; 
11707  F5EB CD 5E           VMJ  ($5E) ; ($5E)($2F)
11708  F5ED             
11709  F5ED             RANDGEN_3: ; $F5ED
11710  F5ED CD 5C           VMJ  ($5C) ; ($5C)($2E)
11711  F5EF EB 7A 00 FF     ORI  (ARX),$FF
11712  F5F3 E8              VEJ  (E8)
11713  F5F4 9A              RTN
11714  F5F5             
11715  F5F5             RANDGEN_1: ; $F5F5
11716  F5F5 E9 7A 01 00     ANI  (ARX + $01),$00
11717  F5F9 9E 0E           BCH RANDGEN_3 ; $F5ED
11718  F5FB             
11719  F5FB             RANDGEN_2: ; $F5FB
11720  F5FB ED 7A 02 F0     BII  (ARX + $02),$F0
11721  F5FF 9B 16           BZS RANDGEN
11722  F601 CD 80           VMJ  ($80) ; ($80)($40)
11723  F603 BE F5 EB        SJP  (RANDGEN)
11724  F606 CD 68           VMJ  ($68) ; ($68)($34)
11725  F608 A5 7A 10        LDA  (ARY)
11726  F60B B7 0A           CPI  A,$0A
11727  F60D 83 09           BCS RANDGEN_4 ; $F618
11728  F60F CD 7E           VMJ  ($7E) ; ($7E)($3F)
11729  F611 CD 60           VMJ  ($60) ; ($60)($30)
11730  F613 E8              VEJ  (E8)
11731  F614 CD 6A           VMJ  ($6A) ; ($6A)($35)
11732  F616 F0              VEJ  (F0)
11733  F617 9A              RTN
11734  F618             
11735  F618             RANDGEN_4: ; $F618
11736  F618 BA F1 5D        JMP  SQR_ROOT_1 ; $F15D
11737  F61B             
11738  F61B             
11739  F61B             
11740  F61B             ;------------------------------------------------------------------------------
11741  F61B             ; $F61B (5C) - Generates RANDOM number and updates RND pointer
11742  F61B             ;------------------------------------------------------------------------------
11743  F61B CD 82           VMJ  ($82) ; ($82)($41)
11744  F61D EE              VEJ  (EE)
11745  F61E EA              VEJ  (EA)
11746  F61F EE              VEJ  (EE)
11747  F620 EE              VEJ  (EE)
11748  F621 4A 07           LDI  XL,$07
11749  F623 5A 17           LDI  YL,$17
11750  F625 6A 05           LDI  UL,$05
11751  F627 FB              SEC
11752  F628             
11753  F628             RANDGEN_5: ; $F628
11754  F628 57              LDE  Y
11755  F629 8C              DCA  (X)
11756  F62A 43              SDE  X
11757  F62B 88 05           LOP  UL,RANDGEN_5 ; $F628
11758  F62D E9 7A 01 00     ANI  (ARX + $01),$00
11759  F631 58 7B           LDI  YH,$7B
11760  F633 5A 01           LDI  YL,$01
11761  F635 4A 01           LDI  XL,$01
11762  F637 BE F7 33        SJP  (XREG2YREG2) ; $F733
11763  F63A 58 7A           LDI  YH,$7A
11764  F63C             
11765  F63C             
11766  F63C             ; $F63C Sets the 11th and 12th digit of the result to 00
11767  F63C             ; Sets Byte 7 in the AR-X to 00.
11768  F63C             ARXX: ; 
11769  F63C E9 7A 07 00     ANI  (ARX + $07),$00
11770  F640 9A              RTN
11771  F641             
11772  F641             
11773  F641             
11774  F641             ;------------------------------------------------------------------------------
11775  F641             ; $F641 - Basic command RANDOM
11776  F641             ;------------------------------------------------------------------------------
11777  F641             BCMD_RANDOM: ; 
11778  F641 FD 98           PSH  Y
11779  F643 CD 54           VMJ  ($54) ; ($54)($2A)
11780  F645 BE F7 53        SJP  (CLR_SM_ARX)
11781  F648 BE E5 B4        SJP  (TIME2ARX)
11782  F64B A5 7A 06        LDA  (ARX + $06)
11783  F64E B9 77           ANI  A,$77
11784  F650 BB 20           ORI  A,$20
11785  F652 AE 7A 12        STA  (ARY + $02)
11786  F655 CD 5E           VMJ  ($5E) ; ($5E)($2F)
11787  F657 EE              VEJ  (EE)
11788  F658 CD 5C           VMJ  ($5C) ; ($5C)($2E)
11789  F65A FD 1A           POP  Y
11790  F65C E2              VEJ  (E2)
11791  F65D             
11792  F65D             
11793  F65D             
11794  F65D             ;------------------------------------------------------------------------------
11795  F65D             ; $F65D - Converts AR-X into BCD form. AR-X to A. (absolute value).
11796  F65D             ;------------------------------------------------------------------------------
11797  F65D             ARX2BCD_ABS: 
11798  F65D CD 6C           VMJ  ($6C) ; ($6C)($36)
11799  F65F 8E 02           BCH ARX2BCD2
11800  F661             
11801  F661             ;------------------------------------------------------------------------------
11802  F661             ; (E8) $F661 Converts AR-X to BCD form. Value already in A. (absolute value) 
11803  F661             ; Converts AR-X into BCD format, whereby the absolute value (positive number) is formed.  
11804  F661             ;------------------------------------------------------------------------------    
11805  F661 B5 00           LDI  A,$00
11806  F663             
11807  F663             ;------------------------------------------------------------------------------ 
11808  F663             ; (52) $F663 Converts AR-X to BCD form
11809  F663             ; Converts the result in the AR-X into the correct BCD format. With overflow 
11810  F663             ; C=1. AR-X is set to 0 if below the permissible value range.
11811  F663             ;------------------------------------------------------------------------------ 
11812  F663             ARX2BCD2: ; $F663
11813  F663 FD C8           PSH  A
11814  F665 4A 01           LDI  XL,$01
11815  F667 6A 06           LDI  UL,$06
11816  F669             
11817  F669             ARX2BCD2_4: ; $F669
11818  F669 45              LIN  X
11819  F66A 89 04           BZR ARX2BCD2_3 ; $F670
11820  F66C 88 05           LOP  UL,ARX2BCD2_4 ; F669
11821  F66E 8E 32           BCH ARX2BCD2_5 ; $F6A2
11822  F670             
11823  F670             ARX2BCD2_3: ; $F670
11824  F670 4A 01           LDI  XL,$01
11825  F672 47              LDE  X
11826  F673 8B 06           BZS ARX2BCD2_6 ; $F67B
11827  F675 4F 01           ADI  (X),$01
11828  F677 CD 74           VMJ  ($74) ; ($74)($3A)
11829  F679 9E 0B           BCH ARX2BCD2_3 ; $F670
11830  F67B             
11831  F67B             ARX2BCD2_6: ; $F67B
11832  F67B ED 7A 02 F0     BII  (ARX + $02),$F0
11833  F67F 89 07           BZR ARX2BCD2_7 ; $F688
11834  F681 EF 7A 00 FF     ADI  (ARX),$FF
11835  F685 EA              VEJ  (EA)
11836  F686 9E 0D           BCH ARX2BCD2_6 ; $F67B
11837  F688             
11838  F688             ARX2BCD2_7: ; $F688
11839  F688 A5 7A 00        LDA  (ARX)
11840  F68B BF 80           BII  A,$80
11841  F68D 89 0D           BZR ARX2BCD2_8 ; $F69C
11842  F68F B7 64           CPI  A,$64
11843  F691             
11844  F691             ARX2BCD2_10: ; $F691
11845  F691 FD 8A           POP  A
11846  F693 AE 7A 01        STA  (ARX + $01)
11847  F696 81 0D           BCR ARX2BCD2_9 ; $F6A5
11848  F698             
11849  F698             ARX2BCD2_1: ; $F698
11850  F698 68 25           LDI  UH,$25
11851  F69A FB              SEC
11852  F69B 9A              RTN
11853  F69C             
11854  F69C             ARX2BCD2_8: ; $F69C
11855  F69C BD FF           EAI  $FF
11856  F69E B7 63           CPI  A,$63
11857  F6A0 91 11           BCR ARX2BCD2_10 ; $F691
11858  F6A2             
11859  F6A2             ARX2BCD2_5: ; $F698
11860  F6A2 EC              VEJ  (EC)
11861  F6A3 FD 8A           POP  A
11862  F6A5             
11863  F6A5             ARX2BCD2_9: ; $F6A5
11864  F6A5 68 00           LDI  UH,$00
11865  F6A7 F9              REC
11866  F6A8 9A              RTN
11867  F6A9             
11868  F6A9             
11869  F6A9             
11870  F6A9             ;------------------------------------------------------------------------------ 
11871  F6A9             ; $F6A9 - Limit result to 2 decimal places
11872  F6A9             ;------------------------------------------------------------------------------ 
11873  F6A9             ARX2BCD2_2: ; 
11874  F6A9 BE F7 53        SJP  (CLR_SM_ARX)
11875  F6AC 4A 00           LDI  XL,$00
11876  F6AE 05              LDA  (X)
11877  F6AF F9              REC
11878  F6B0 B3 02           ADI  A,$02
11879  F6B2 8E 06           BCH XFER_DEC_ARX2ARY_1 ; $F6BA
11880  F6B4             
11881  F6B4             
11882  F6B4             
11883  F6B4             ;------------------------------------------------------------------------------ 
11884  F6B4             ; $F6B4 - Transfers decimal places from AR-X to AR-Y, whereby their position 
11885  F6B4             ; from AR-X is retained.
11886  F6B4             ;------------------------------------------------------------------------------ 
11887  F6B4             XFER_DEC_ARX2ARY: ; 
11888  F6B4 BE F7 53        SJP  (CLR_SM_ARX)
11889  F6B7 4A 00           LDI  XL,$00
11890  F6B9 05              LDA  (X)
11891  F6BA             
11892  F6BA             XFER_DEC_ARX2ARY_1: ; $F6BA
11893  F6BA BF 80           BII  A,$80
11894  F6BC 89 1D           BZR XFER_DEC_ARX2ARY_2 ; $F6DB
11895  F6BE B7 0B           CPI  A,$0B
11896  F6C0 83 18           BCS XFER_DEC_ARX2ARY_3 ; $F6DA
11897  F6C2 B3 05           ADI  A,$05
11898  F6C4             
11899  F6C4             XFER_DEC_ARX2ARY_6: ; $F6C4
11900  F6C4 D5              SHR
11901  F6C5 0A              STA  XL
11902  F6C6 BB 10           ORI  A,$10
11903  F6C8 1A              STA  YL
11904  F6C9 83 14           BCS XFER_DEC_ARX2ARY_4 ; $F6DF
11905  F6CB             
11906  F6CB             XFER_DEC_ARX2ARY_5: ; $F6CB
11907  F6CB 05              LDA  (X)
11908  F6CC 49 00           ANI  (X),$00
11909  F6CE             
11910  F6CE             XFER_DEC_ARX2ARY_7: ; $F6CE
11911  F6CE 51              SIN  Y
11912  F6CF 40              INC  XL
11913  F6D0 4E 08           CPI  XL,$08
11914  F6D2 91 09           BCR XFER_DEC_ARX2ARY_5 ; $F6CB
11915  F6D4 A5 7A 00        LDA  (ARX)
11916  F6D7 AE 7A 10        STA  (ARY)
11917  F6DA             
11918  F6DA             XFER_DEC_ARX2ARY_3: ; $F6DA
11919  F6DA 9A              RTN
11920  F6DB             
11921  F6DB             XFER_DEC_ARX2ARY_2: ; $F6DB
11922  F6DB B5 04           LDI  A,$04
11923  F6DD 9E 1B           BCH XFER_DEC_ARX2ARY_6 ; $F6C4
11924  F6DF             
11925  F6DF             XFER_DEC_ARX2ARY_4: ; $F6DF
11926  F6DF 05              LDA  (X)
11927  F6E0 49 F0           ANI  (X),$F0
11928  F6E2 B9 0F           ANI  A,$0F
11929  F6E4 9E 18           BCH XFER_DEC_ARX2ARY_7 ; $F6CE
11930  F6E6             
11931  F6E6             
11932  F6E6             
11933  F6E6             ;------------------------------------------------------------------------------
11934  F6E6             ; (7C) $F6E6 - Determines the sign of the result and puts it on the stack
11935  F6E6             ; Sign test. Put the result of a sign combination (AR-X and AR-Y) on the stack.
11936  F6E6             ; Ditto for sign of AR-Y. For further calculations set AR to 00.
11937  F6E6             ;------------------------------------------------------------------------------
11938  F6E6             SIGN_TEST: ; 
11939  F6E6 FD 2A           POP  U
11940  F6E8 4A 01           LDI  XL,$01
11941  F6EA 5A 11           LDI  YL,$11
11942  F6EC 15              LDA  (Y)
11943  F6ED 59 00           ANI  (Y),$00
11944  F6EF FD C8           PSH  A
11945  F6F1 0D              EOR  (X)
11946  F6F2 49 00           ANI  (X),$00
11947  F6F4 FD C8           PSH  A
11948  F6F6 46              DEC  X
11949  F6F7 56              DEC  Y
11950  F6F8 FD A8           PSH  U
11951  F6FA 9A              RTN
11952  F6FB             
11953  F6FB             
11954  F6FB             
11955  F6FB             ;------------------------------------------------------------------------------
11956  F6FB             ; (6C) $F6FB - Loads signs from AR-X into Accumulator and clears signs from AR-X.
11957  F6FB             ;------------------------------------------------------------------------------
11958  F6FB             LDA_SGN_ARX: ; 
11959  F6FB 4A 01           LDI  XL,$01
11960  F6FD 05              LDA  (X)
11961  F6FE 49 00           ANI  (X),$00
11962  F700 9A              RTN
11963  F701             
11964  F701             
11965  F701             
11966  F701             ;------------------------------------------------------------------------------
11967  F701             ; $F701 - Transfers AR-Y to AR-S
11968  F701             ;------------------------------------------------------------------------------
11969  F701             XFER_ARY2ARS:  ; 
11970  F701 4A 10           LDI  XL,$10
11971  F703 5A 30           LDI  YL,$30
11972  F705 8E 3A           BCH XFER_ARY2ARX2_1 ; $F741
11973  F707             
11974  F707             
11975  F707             
11976  F707             ;------------------------------------------------------------------------------
11977  F707             ; $F707 (80) - Transfers AR-X to AR-S
11978  F707             ;------------------------------------------------------------------------------
11979  F707             XFER_ARX2ARS:  ; 
11980  F707 CD 54           VMJ  ($54) ; ($54)($2A)
11981  F709 5A 30           LDI  YL,$30
11982  F70B 8E 04           BCH XFER_ARX2ARY_1 ; $F711
11983  F70D             
11984  F70D             
11985  F70D             
11986  F70D             ;------------------------------------------------------------------------------
11987  F70D             ; (E6) $F70D - Transfers AR-X to AR-Y
11988  F70D             ;------------------------------------------------------------------------------
11989  F70D             XFER_ARX2ARY: ; 
11990  F70D CD 54           VMJ  ($54) ; ($54)($2A)
11991  F70F 5A 10           LDI  YL,$10
11992  F711             
11993  F711             XFER_ARX2ARY_1: ; $F711
11994  F711 4A 00           LDI  XL,$00
11995  F713 8E 2C           BCH XFER_ARY2ARX2_1 ; $F741
11996  F715             
11997  F715             
11998  F715             
11999  F715             ;------------------------------------------------------------------------------
12000  F715             ; (68) $F715 - Transfers AR-S to AR-Y
12001  F715             ;------------------------------------------------------------------------------
12002  F715             XFER_ARS2ARY: ; 
12003  F715 4A 30           LDI  XL,$30
12004  F717 5A 10           LDI  YL,$10
12005  F719 8E 26           BCH XFER_ARY2ARX2_1 ; $F741
12006  F71B             
12007  F71B             
12008  F71B             
12009  F71B             ;------------------------------------------------------------------------------
12010  F71B             ; $F71B - Transfers sign and mantissa from AR-Y to AR-X
12011  F71B             ;------------------------------------------------------------------------------
12012  F71B             XFER_SM_ARY2ARX: ;
12013  F71B 4A 11           LDI  XL,$11
12014  F71D 8E 02           BCH XFER_SM_ARZ2ARX_1 ; $F721
12015  F71F             
12016  F71F             
12017  F71F             
12018  F71F             ;------------------------------------------------------------------------------
12019  F71F             ; $F71F - Transfers sign and mantissa from AR-Z to AR-X
12020  F71F             ;------------------------------------------------------------------------------
12021  F71F             XFER_SM_ARZ2ARX: ; 
12022  F71F 4A 09           LDI  XL,$09
12023  F721             
12024  F721             XFER_SM_ARZ2ARX_1: ; $F721
12025  F721 5A 01           LDI  YL,$01
12026  F723 8E 0E           BCH XREG2YREG2 ; XFER_SM_ARX2ARZ 
12027  F725             
12028  F725             
12029  F725             
12030  F725             ;------------------------------------------------------------------------------
12031  F725             ; $F725 - Transfers sign and mantissa from AR-Z to AR-X
12032  F725             ;------------------------------------------------------------------------------
12033  F725             XFER_SM_ARY2ARZ: ; 
12034  F725 4A 11           LDI  XL,$11
12035  F727 8E 08           BCH XFER_SM_ARX2ARZ_1 ; $F731
12036  F729             
12037  F729             
12038  F729             
12039  F729             ;------------------------------------------------------------------------------
12040  F729             ; (82) $F729 - The sign and mantissa of the BCD value in AR-X are transferred to AR-Y.
12041  F729             ;------------------------------------------------------------------------------
12042  F729             XFER_SM_ARX2ARY: ; 
12043  F729 4A 01           LDI  XL,$01
12044  F72B 5A 11           LDI  YL,$11
12045  F72D 8E 04           BCH XREG2YREG2
12046  F72F             
12047  F72F             
12048  F72F             
12049  F72F             ;------------------------------------------------------------------------------
12050  F72F             ; $F72F (78) - Transfers sign and mantissa from AR-X to AR-Z
12051  F72F             ;------------------------------------------------------------------------------
12052  F72F             XFER_SM_ARX2ARZ: ; 
12053  F72F 4A 01           LDI  XL,$01
12054  F731             
12055  F731             XFER_SM_ARX2ARZ_1: ; $F731
12056  F731 5A 09           LDI  YL,$09
12057  F733             
12058  F733             
12059  F733             
12060  F733             ;------------------------------------------------------------------------------
12061  F733             ; $F733 - Block shift: 7 bytes from (X-Reg) to (Y-Reg)
12062  F733             ;------------------------------------------------------------------------------
12063  F733             XREG2YREG2:
12064  F733 6A 06           LDI  UL,$06
12065  F735 8E 0C           BCH XFER_ARY2ARX2_2 ; $F743
12066  F737             
12067  F737             
12068  F737             
12069  F737             ;------------------------------------------------------------------------------
12070  F737             ; $F737 - Transfer AR-S to AR-X.
12071  F737             ;------------------------------------------------------------------------------
12072  F737             XFER_ARY2ARX:
12073  F737 CD 54           VMJ  ($54) ; ($54)($2A)
12074  F739 4A 30           LDI  XL,$30
12075  F73B 8E 02           BCH XFER_ARY2ARX2_3 ; $F73F
12076  F73D             
12077  F73D             
12078  F73D             
12079  F73D             ;------------------------------------------------------------------------------
12080  F73D             ; $F73D - Transfers AR-S to AR-X
12081  F73D             ;------------------------------------------------------------------------------
12082  F73D             XFER_ARY2ARX2: ; 
12083  F73D 4A 10           LDI  XL,$10
12084  F73F             
12085  F73F             XFER_ARY2ARX2_3: ; $F73F
12086  F73F 5A 00           LDI  YL,$00
12087  F741             
12088  F741             XFER_ARY2ARX2_1: ; $F741
12089  F741 6A 07           LDI  UL,$07
12090  F743             
12091  F743             XFER_ARY2ARX2_2: ; $F743
12092  F743 F5              TIN
12093  F744 88 03           LOP  UL,XFER_ARY2ARX2_2 ; $F743
12094  F746 9A              RTN
12095  F747             
12096  F747             
12097  F747             
12098  F747             ;------------------------------------------------------------------------------
12099  F747             ; Clear sign and mantissa of arithmetic registers
12100  F747             ;             Address: AR-Y: F747 (70)
12101  F747             ;                      AR-Z: F74B
12102  F747             ;                      AR-W: F74F
12103  F747             ;                      AR-X: F753 (76)
12104  F747             ;          Parameter:	XH must contain 7A
12105  F747             ;
12106  F747             ; Modified Registers:	X-Reg, Accumulator
12107  F747             ;   Error conditions:	None
12108  F747             ;------------------------------------------------------------------------------
12109  F747             ; (70) Clears the sign and mantissa of AR-Y
12110  F747             CLR_SM_ARY: ; $F747
12111  F747 4A 11           LDI  XL,$11
12112  F749 8E 16           BCH CLR_7_XREG
12113  F74B             
12114  F74B             ;  Clears the sign and mantissa of AR-Z
12115  F74B             CLR_SM_ARZ: ; $F74B
12116  F74B 4A 09           LDI  XL,$09
12117  F74D 8E 12           BCH CLR_7_XREG
12118  F74F             
12119  F74F             ; Clears sign and mantissa of AR-W
12120  F74F             CLR_SM_ARW: ; $F74F
12121  F74F 4A 29           LDI  XL,$29
12122  F751 8E 0E           BCH CLR_7_XREG
12123  F753             
12124  F753             ; (76) Clears arithmetic register AR-X
12125  F753             CLR_SM_ARX: ; $F753
12126  F753 4A 10           LDI  XL,$10
12127  F755 8E 04           BCH CLR_SM_ARX3
12128  F757             
12129  F757             
12130  F757             
12131  F757             ;------------------------------------------------------------------------------
12132  F757             ; Clears arithmetic registers
12133  F757             ;            Address: AR-X: F757 (EC)
12134  F757             ;               AR-Y: F753
12135  F757             ;          Parameter: XH must contain 7A
12136  F757             ;
12137  F757             ; Modified Registers: X-Reg, U-Reg, Accumulator
12138  F757             ;   Error conditions: None
12139  F757             ;------------------------------------------------------------------------------
12140  F757             CLR_ARITHMETIC_REGS: ; $F757
12141  F757 48 7A           LDI  XH,$7A
12142  F759 4A 00           LDI  XL,$00
12143  F75B             
12144  F75B             ; Clears 8 bytes from (X-Reg).
12145  F75B             CLR_SM_ARX3: ; $F75B
12146  F75B 6A 07           LDI  UL,$07
12147  F75D 8E 04           BCH CLR_N_XREG
12148  F75F             
12149  F75F             ; (76) Clears sign and mantissa in AR-X
12150  F75F             CLR_SM_XREG: ; $F75F
12151  F75F 4A 01           LDI  XL,$01
12152  F761             
12153  F761             ; Clear 7 bytes from (X-Reg).
12154  F761             CLR_7_XREG: ; $F761
12155  F761 6A 06           LDI  UL,$06
12156  F763             
12157  F763             
12158  F763             
12159  F763             ;------------------------------------------------------------------------------
12160  F763             ; (BA) Delete UL+1 bytes from (X-Reg)
12161  F763             ;            Address: AR-X: F763 (BA)
12162  F763             ;          Parameter: None
12163  F763             ; 
12164  F763             ; Modified Registers: X-Reg, U-Reg, Accumulator
12165  F763             ;   Error conditions: None
12166  F763             ;------------------------------------------------------------------------------
12167  F763             CLR_N_XREG: ; $F763
12168  F763 B5 00           LDI  A,$00
12169  F765             
12170  F765             CLR_N_XREG_1: ; $F765
12171  F765 41              SIN  X
12172  F766 88 03           LOP  UL,$F765
12173  F768 9A              RTN
12174  F769             
12175  F769             
12176  F769             
12177  F769             ;------------------------------------------------------------------------------
12178  F769             ; $F769 - AR-W shift one nibble to the right (/10)
12179  F769             ;------------------------------------------------------------------------------
12180  F769             ARW_SHR_4BITS: ; 
12181  F769 4A 28           LDI  XL,$28
12182  F76B 8E 0A           BCH X_REG_SHR_4BITS
12183  F76D             
12184  F76D             
12185  F76D             
12186  F76D             ;------------------------------------------------------------------------------
12187  F76D             ; $F76D - Push AR-Z right one nibble (/10)
12188  F76D             ;------------------------------------------------------------------------------
12189  F76D             ARZ_SHR_4BITS: ; 
12190  F76D 4A 08           LDI  XL,$08
12191  F76F 8E 06           BCH X_REG_SHR_4BITS
12192  F771             
12193  F771             
12194  F771             
12195  F771             ;------------------------------------------------------------------------------
12196  F771             ; Shift $F771 - AR-Y one nibble to the right (/10)
12197  F771             ;------------------------------------------------------------------------------
12198  F771             ARY_SHR_4BITS: ; 
12199  F771 4A 10           LDI  XL,$10
12200  F773 8E 02           BCH X_REG_SHR_4BITS
12201  F775             
12202  F775             
12203  F775             
12204  F775             ;------------------------------------------------------------------------------
12205  F775             ; (74) $F775 - Push AR-X one nibble to the right (/10)
12206  F775             ;------------------------------------------------------------------------------
12207  F775             ARX_SHR_4BITS: ; 
12208  F775 4A 00           LDI  XL,$00
12209  F777             
12210  F777             
12211  F777             
12212  F777             ;------------------------------------------------------------------------------
12213  F777             ; $F777 - Shift 7 bytes from (X-Reg) one nibble to the right (/10)
12214  F777             ;------------------------------------------------------------------------------
12215  F777             X_REG_SHR_4BITS: ; 
12216  F777 6A 06           LDI  UL,$06
12217  F779 B5 00           LDI  A,$00
12218  F77B             
12219  F77B             X_REG_SHR_4BITS_1: ; $F77B
12220  F77B 44              INC  X
12221  F77C D3              DRR  (X)
12222  F77D 88 04           LOP  UL,X_REG_SHR_4BITS_1 ; $F77B
12223  F77F 9A              RTN
12224  F780 4A 0F           LDI  XL,$0F
12225  F782 6A 05           LDI  UL,$05
12226  F784             
12227  F784             X_REG_SHR_4BITS_2: ; $F784
12228  F784 46              DEC  X
12229  F785 45              LIN  X
12230  F786 43              SDE  X
12231  F787 88 05           LOP  UL,X_REG_SHR_4BITS_2 ; $F784
12232  F789 49 00           ANI  (X),$00
12233  F78B 9A              RTN
12234  F78C             
12235  F78C             
12236  F78C             
12237  F78C             ;------------------------------------------------------------------------------
12238  F78C             ; $F78C - Push AR-S left one nibble (*10)
12239  F78C             ;------------------------------------------------------------------------------
12240  F78C             ARS_SHL_4BITS: ; 
12241  F78C 48 7A           LDI  XH,$7A
12242  F78E 4A 37           LDI  XL,$37
12243  F790 6A 04           LDI  UL,$04
12244  F792 8E 0C           BCH ARX_SHL_4BITS_1 ; $F7A0
12245  F794             
12246  F794             
12247  F794             
12248  F794             ;------------------------------------------------------------------------------
12249  F794             ; $F794 - Push AR-W one nibble to the left (*10)
12250  F794             ;------------------------------------------------------------------------------
12251  F794             ARW_SHL_4BITS: ; 
12252  F794 4A 30           LDI  XL,$30
12253  F796 8E 06           BCH ARX_SHL_4BITS_2 ; $F79E
12254  F798             
12255  F798             
12256  F798             
12257  F798             ;------------------------------------------------------------------------------
12258  F798             ; $F798 - Push AR-Z left one nibble (*10)
12259  F798             ;------------------------------------------------------------------------------
12260  F798             ARZ_SHL_4BITS: ; 
12261  F798 4A 10           LDI  XL,$10
12262  F79A 8E 02           BCH ARX_SHL_4BITS_2 ; $F79E
12263  F79C             
12264  F79C             
12265  F79C             
12266  F79C             ;------------------------------------------------------------------------------
12267  F79C             ; (EA) $F79C - Push AR-X left one nibble (*10)
12268  F79C             ;------------------------------------------------------------------------------
12269  F79C             ARX_SHL_4BITS: ; 
12270  F79C 4A 08           LDI  XL,$08
12271  F79E             
12272  F79E             ARX_SHL_4BITS_2: ; $F79E
12273  F79E 6A 06           LDI  UL,$06
12274  F7A0             
12275  F7A0             ARX_SHL_4BITS_1: ; $F7A0
12276  F7A0 B5 00           LDI  A,$00
12277  F7A2             
12278  F7A2             ARX_SHL_4BITS_3: ; $F7A2
12279  F7A2 46              DEC  X
12280  F7A3 D7              DRL  (X)
12281  F7A4 88 04           LOP  UL,ARX_SHL_4BITS_3 ; $F7A2
12282  F7A6 9A              RTN
12283  F7A7             
12284  F7A7             
12285  F7A7             
12286  F7A7             ;------------------------------------------------------------------------------
12287  F7A7             ; (5E) $F7A7 - Transfer random number from RND pointer to AR-X
12288  F7A7             ;------------------------------------------------------------------------------
12289  F7A7             RND2ARX: ; 
12290  F7A7 5A 01           LDI  YL,$01
12291  F7A9 48 7B           LDI  XH,$7B
12292  F7AB 4A 01           LDI  XL,$01
12293  F7AD BE F7 33        SJP  (XREG2YREG2) ; F8A5
12294  F7B0             
12295  F7B0             
12296  F7B0             
12297  F7B0             ;------------------------------------------------------------------------------
12298  F7B0             ; (5A) Make pointer to arithmetic register
12299  F7B0             ; Position high bytes in X-Reg and Y-Reg on arithmetic registers
12300  F7B0             ;            Address: F7B0 (54)
12301  F7B0             ;   Entry parameters: None
12302  F7B0             ;
12303  F7B0             ; Modified registers: XH and YH are set to 7A
12304  F7B0             ;   Error conditions: None
12305  F7B0             ;------------------------------------------------------------------------------
12306  F7B0             SET_HB_XYREGS: ; $F7B0
12307  F7B0 48 7A           LDI  XH,$7A
12308  F7B2 58 7A           LDI  YH,$7A
12309  F7B4 9A              RTN
12310  F7B5             
12311  F7B5             
12312  F7B5             
12313  F7B5             ;------------------------------------------------------------------------------
12314  F7B5             ; (64) $F7B5 - Swaps AR-X with AR-S
12315  F7B5             ;------------------------------------------------------------------------------
12316  F7B5             SWAP_AARX_ARY: ; 
12317  F7B5 5A 30           LDI  YL,$30
12318  F7B7 8E 02           BCH SWAP_ARX_ARY_1 ; $F7BB
12319  F7B9             
12320  F7B9             
12321  F7B9             
12322  F7B9             ;------------------------------------------------------------------------------
12323  F7B9             ; (66) $F7B9 - Swaps AR-X with AR-Y
12324  F7B9             ;------------------------------------------------------------------------------
12325  F7B9             SWAP_ARX_ARY: ; 
12326  F7B9 5A 10           LDI  YL,$10
12327  F7BB             
12328  F7BB             SWAP_ARX_ARY_1: ; $F7BB
12329  F7BB 4A 00           LDI  XL,$00
12330  F7BD 6A 07           LDI  UL,$07
12331  F7BF             
12332  F7BF             ;------------------------------------------------------------------------------
12333  F7BF             ; (UL+1) $F7BF - Swap Bytes
12334  F7BF             ;------------------------------------------------------------------------------
12335  F7BF             SWAP_BYTES: ; 
12336  F7BF 05              LDA  (X)
12337  F7C0 28              STA  UH
12338  F7C1 15              LDA  (Y)
12339  F7C2 41              SIN  X
12340  F7C3 A4              LDA  UH
12341  F7C4 51              SIN  Y
12342  F7C5 88 08           LOP  UL,SWAP_BYTES
12343  F7C7 9A              RTN
12344  F7C8             
12345  F7C8             
12346  F7C8             
12347  F7C8             ;------------------------------------------------------------------------------
12348  F7C8             ; $F7C8 - Add AR-U to AR-X
12349  F7C8             ;------------------------------------------------------------------------------
12350  F7C8             ADD_ARU_ARX: ; 
12351  F7C8 5A 1F           LDI  YL,$1F
12352  F7CA 8E 02           BCH ADD_ARU_ARX_16 ; $F7CE
12353  F7CC             
12354  F7CC             ;------------------------------------------------------------------------------
12355  F7CC             ; (EE) $F7CC - Add the sign and mantissa of AR-X and AR-Y and store them in AR-X.
12356  F7CC             ;------------------------------------------------------------------------------
12357  F7CC 5A 17           LDI  YL,$17
12358  F7CE             
12359  F7CE             ;------------------------------------------------------------------------------
12360  F7CE             ; (72) $F7CE - Adds the mantissa of the AR-Y to the AR-X.
12361  F7CE             ;------------------------------------------------------------------------------
12362  F7CE             ADD_ARU_ARX_16: ; 
12363  F7CE 4A 07           LDI  XL,$07
12364  F7D0             
12365  F7D0             ADD_ARU_ARX_26: ; $F7D0
12366  F7D0 F9              REC
12367  F7D1 6A 06           LDI  UL,$06
12368  F7D3             
12369  F7D3             ADD_ARU_ARX_17: ; $F7D3
12370  F7D3 57              LDE  Y
12371  F7D4 8C              DCA  (X)
12372  F7D5 43              SDE  X
12373  F7D6 88 05           LOP  UL,ADD_ARU_ARX_17 ; $F7D3
12374  F7D8 9A              RTN
12375  F7D9             
12376  F7D9             ;------------------------------------------------------------------------------
12377  F7D9             ; $F7D9 - AR-X=AR-X-AR-V.
12378  F7D9             ;------------------------------------------------------------------------------
12379  F7D9             ADD_ARU_ARX_6: ; 
12380  F7D9 5A 27           LDI  YL,$27
12381  F7DB 8E 02           BCH ADD_ARU_ARX_8 ; $F7DF
12382  F7DD             
12383  F7DD             ;------------------------------------------------------------------------------
12384  F7DD             ; (7A) $F7DD - AR-X=AR-X-AR-V.
12385  F7DD             ;------------------------------------------------------------------------------
12386  F7DD 5A 17           LDI  YL,$17
12387  F7DF             
12388  F7DF             ; $F7DF Subtract from AR-X the AR pointed to by Y-Reg on entry.
12389  F7DF             ADD_ARU_ARX_8: ; $F7DF
12390  F7DF 4A 07           LDI  XL,$07
12391  F7E1             
12392  F7E1             ; $F7E1 From the arithmetic register pointed to by X-Reg, subtract AR pointed to by Y-Reg.
12393  F7E1             ADD_ARU_ARX_11: ; 
12394  F7E1 FB              SEC
12395  F7E2 6A 06           LDI  UL,$06
12396  F7E4             
12397  F7E4             ADD_ARU_ARX_18: ; $F7E4
12398  F7E4 05              LDA  (X)
12399  F7E5 1C              DCS  (Y)
12400  F7E6 43              SDE  X
12401  F7E7 56              DEC  Y
12402  F7E8 88 06           LOP  UL,ADD_ARU_ARX_18 ; $F7E4
12403  F7EA 9A              RTN
12404  F7EB             
12405  F7EB             ; $F7EB Calculates the decimal to AR-X in AR-X.
12406  F7EB             ADD_ARU_ARX_3: ; 
12407  F7EB 4A 07           LDI  XL,$07
12408  F7ED FB              SEC
12409  F7EE 6A 06           LDI  UL,$06
12410  F7F0             
12411  F7F0             ADD_ARU_ARX_19: ; $F7F0
12412  F7F0 B5 00           LDI  A,$00
12413  F7F2 0C              DCS  (X)
12414  F7F3 43              SDE  X
12415  F7F4 88 06           LOP  UL,ADD_ARU_ARX_19 ; $F7F0
12416  F7F6 9A              RTN
12417  F7F7             
12418  F7F7             ADD_ARU_ARX_2: ; $F7F7
12419  F7F7 D5              SHR
12420  F7F8 81 0B           BCR ADD_ARU_ARX_10 ; $F805
12421  F7FA FD C8           PSH  A
12422  F7FC 04              LDA  XL
12423  F7FD B9 F8           ANI  A,$F8
12424  F7FF 0A              STA  XL
12425  F800 BE F7 77        SJP  (X_REG_SHR_4BITS)
12426  F803 FD 8A           POP  A
12427  F805             
12428  F805             ; $F805 Accumulator contains the number of places by which the AR pointed 
12429  F805             ; to by the X-Reg is shifted to the right
12430  F805             ADD_ARU_ARX_10: ; 
12431  F805 BF FF           BII  A,$FF
12432  F807 8B 32           BZS ADD_ARU_ARX_20 ; $F83B
12433  F809 FD 5A           STX  Y
12434  F80B BD FF           EAI  $FF
12435  F80D FB              SEC
12436  F80E 12              ADC  YL
12437  F80F 1A              STA  YL
12438  F810 6A 06           LDI  UL,$06
12439  F812             
12440  F812             ADD_ARU_ARX_22: ; $F812
12441  F812 14              LDA  YL
12442  F813 B9 07           ANI  A,$07
12443  F815 8B 01           BZS ADD_ARU_ARX_21 ; $F818
12444  F817 57              LDE  Y
12445  F818             
12446  F818             ADD_ARU_ARX_21: ; $F818
12447  F818 43              SDE  X
12448  F819 88 09           LOP  UL,ADD_ARU_ARX_22 ; $F812
12449  F81B 9A              RTN
12450  F81C             
12451  F81C             ADD_ARU_ARX_5: ; $F81C
12452  F81C 68 01           LDI  UH,$01
12453  F81E 8E 02           BCH ADD_ARU_ARX_23 ; $F822
12454  F820             
12455  F820             ADD_ARU_ARX_4: ; $F820
12456  F820 68 02           LDI  UH,$02
12457  F822             
12458  F822             ADD_ARU_ARX_23: ; $F822
12459  F822 4A 17           LDI  XL,$17
12460  F824 5A 1F           LDI  YL,$1F
12461  F826             
12462  F826             ADD_ARU_ARX_25: ; $F826
12463  F826 6A 06           LDI  UL,$06
12464  F828 F9              REC
12465  F829             
12466  F829             ADD_ARU_ARX_24: ; $F829
12467  F829 05              LDA  (X)
12468  F82A 8C              DCA  (X)
12469  F82B 53              SDE  Y
12470  F82C 46              DEC  X
12471  F82D 88 06           LOP  UL,ADD_ARU_ARX_24 ; $F829
12472  F82F FD 62           DEC  UH
12473  F831 81 08           BCR ADD_ARU_ARX_20 ; $F83B
12474  F833 B5 0F           LDI  A,$0F
12475  F835 FD CA           ADR  X
12476  F837 FD DA           ADR  Y
12477  F839 9E 15           BCH ADD_ARU_ARX_25 ; $F826
12478  F83B             
12479  F83B             ADD_ARU_ARX_20: ; $F83B
12480  F83B 9A              RTN
12481  F83C             
12482  F83C             ADD_ARU_ARX_9: ; $F83C
12483  F83C A5 7A 08        LDA  (ARZ)
12484  F83F 9B 06           BZS ADD_ARU_ARX_20 ; $F83B
12485  F841 DF              DEC  A
12486  F842 4A 0F           LDI  XL,$0F
12487  F844 BE F7 F7        SJP  (ADD_ARU_ARX_2) ; $F7F7
12488  F847             
12489  F847             ADD_ARU_ARX_27: ; $F847
12490  F847 4A 17           LDI  XL,$17
12491  F849 5A 0F           LDI  YL,$0F
12492  F84B 9E 7D           BCH ADD_ARU_ARX_26 ; $F7D0
12493  F84D             
12494  F84D             ADD_ARU_ARX_12: ; $F84D
12495  F84D A5 7A 08        LDA  (ARZ)
12496  F850 9B 17           BZS ADD_ARU_ARX_20 ; $F83B
12497  F852 DF              DEC  A
12498  F853 4A 0F           LDI  XL,$0F
12499  F855 BE F8 05        SJP  (ADD_ARU_ARX_10) ; $F805
12500  F858 9E 13           BCH ADD_ARU_ARX_27 ; $F847
12501  F85A             
12502  F85A             
12503  F85A             ; $F85A Loads auxiliary constants to AR-Y according to the evaluation of the
12504  F85A             ;  display according to 'RAD' or 'DEG'.
12505  F85A             ADD_ARU_ARX_13: ; 
12506  F85A A5 76 4F        LDA  (DISP_BUFF + $4F)
12507  F85D BF 04           BII  A,$04
12508  F85F F9              REC
12509  F860 9B 27           BZS ADD_ARU_ARX_20 ; $F83B
12510  F862 BF 02           BII  A,$02
12511  F864 89 19           BZR ADD_ARU_ARX_28 ; $F87F
12512  F866 4A 98           LDI  XL,$98
12513  F868             
12514  F868             ADD_ARU_ARX_31: ; $F868
12515  F868 6A 07           LDI  UL,$07
12516  F86A 48 FC           LDI  XH,$FC
12517  F86C             
12518  F86C             ADD_ARU_ARX_33: ; $F86C
12519  F86C 5A 10           LDI  YL,$10
12520  F86E             
12521  F86E             ADD_ARU_ARX_29: ; $F86E
12522  F86E F5              TIN
12523  F86F 88 03           LOP  UL,ADD_ARU_ARX_29 ; $F86E
12524  F871 48 7A           LDI  XH,$7A
12525  F873 FB              SEC
12526  F874             
12527  F874             ADD_ARU_ARX_42: ; $F874
12528  F874 9A              RTN
12529  F875             
12530  F875             ; $F875  Transfers PI to AR-Y.
12531  F875 4A F8           LDI  XL,$F8
12532  F877 6A 07           LDI  UL,$07
12533  F879 8E 1D           BCH ADD_ARU_ARX_30 ; $F898
12534  F87B             
12535  F87B             ; $F87B Transfers auxiliary constants to AR-Y.
12536  F87B             ADD_ARU_ARX_7: ; $F87B
12537  F87B 4A 60           LDI  XL,$60
12538  F87D 9E 17           BCH ADD_ARU_ARX_31 ; $F868
12539  F87F             
12540  F87F             ADD_ARU_ARX_28: ; $F87F
12541  F87F B5 E9           LDI  A,$E9
12542  F881 8E 0E           BCH ADD_ARU_ARX_32 ; $F891
12543  F883             
12544  F883             
12545  F883             ; $F883 Loads AR-Y with auxiliary constant.
12546  F883             ADD_ARU_ARX_14: ; $F883
12547  F883 B5 EF           LDI  A,$EF
12548  F885 8E 0A           BCH ADD_ARU_ARX_32 ; $F891
12549  F887             
12550  F887             ; $F887 Loads AR-Y with auxiliary constant.
12551  F887             ADD_ARU_ARX_15: ; $F887
12552  F887 B5 F2           LDI  A,$F2
12553  F889 8E 06           BCH ADD_ARU_ARX_32 ; $F891
12554  F88B             
12555  F88B             ;------------------------------------------------------------------------------
12556  F88B             ; (62) $F88B Transfers 0.6 to AR-V (FF 00 60 ...).
12557  F88B             ;------------------------------------------------------------------------------
12558  F88B B5 F5           LDI  A,$F5
12559  F88D 8E 02           BCH ADD_ARU_ARX_32 ; $F891
12560  F88F             
12561  F88F             ;------------------------------------------------------------------------------
12562  F88F             ; (6A) $F88F Transfers numerical value 1 to AR-Y.
12563  F88F             ;------------------------------------------------------------------------------
12564  F88F B5 EC           LDI  A,$EC
12565  F891             
12566  F891             ADD_ARU_ARX_32: ; $F891
12567  F891 1A              STA  YL
12568  F892 CD 70           VMJ  ($70) ; ($70)($38)
12569  F894 14              LDA  YL
12570  F895 0A              STA  XL
12571  F896 6A 02           LDI  UL,$02
12572  F898             
12573  F898             ADD_ARU_ARX_30: ; $F898
12574  F898 48 FB           LDI  XH,$FB
12575  F89A 9E 30           BCH ADD_ARU_ARX_33 ; $F86C
12576  F89C             
12577  F89C             ; $F89C AR-X=AR-X to the power of AR-Y.
12578  F89C CD 54           VMJ  ($54) ; ($54)($2A)
12579  F89E 4A 02           LDI  XL,$02
12580  F8A0 47              LDE  X
12581  F8A1 8B 7D           BZS ADD_ARU_ARX_34 ; $F920
12582  F8A3 4D 80           BII  (X),$80
12583  F8A5 89 39           BZR ADD_ARU_ARX_45 ; $F8E0
12584  F8A7 ED 7A 12 FF     BII  (ARY + $02),$FF
12585  F8AB 8B 2D           BZS ADD_ARU_ARX_35 ; $F8DA
12586  F8AD B5 00           LDI  A,$00
12587  F8AF FD C8           PSH  A
12588  F8B1             
12589  F8B1             ADD_ARU_ARX_41: ; $F8B1
12590  F8B1 BE F7 01        SJP  (XFER_ARY2ARS)
12591  F8B4 BE F1 65        SJP  (BCMD_LOG)
12592  F8B7 83 09           BCS ADD_ARU_ARX_36 ; $F8C2
12593  F8B9 CD 68           VMJ  ($68) ; ($68)($34)
12594  F8BB CD 7E           VMJ  ($7E) ; ($7E)($3F)
12595  F8BD 83 03           BCS ADD_ARU_ARX_36 ; $F8C2
12596  F8BF BE F1 D4        SJP  (EXPONENT)
12597  F8C2             
12598  F8C2             ADD_ARU_ARX_36: ; $F8C2
12599  F8C2 FD 8A           POP  A
12600  F8C4 83 0A           BCS ADD_ARU_ARX_37 ; $F8D0
12601  F8C6 BF F0           BII  A,$F0
12602  F8C8 8B 0D           BZS ADD_ARU_ARX_38 ; $F8D7
12603  F8CA D5              SHR
12604  F8CB 83 06           BCS $F8D3
12605  F8CD D9              SHL
12606  F8CE 81 07           BCR ADD_ARU_ARX_38 ; $F8D7
12607  F8D0             
12608  F8D0             ADD_ARU_ARX_37: ; $F8D0
12609  F8D0 BA F1 5D        JMP  SQR_ROOT_1 ; $F15D
12610  F8D3 EB 7A 01 80     ORI  (ARX + $01),$80
12611  F8D7             
12612  F8D7             ADD_ARU_ARX_38: ; $F8D7
12613  F8D7 BA F0 63        JMP  MULTIPLY_7 ; $F063
12614  F8DA             
12615  F8DA             ADD_ARU_ARX_35: ; $F8DA
12616  F8DA CD 6A           VMJ  ($6A) ; ($6A)($35)
12617  F8DC CD 56           VMJ  ($56) ; ($56)($2B)
12618  F8DE 9E 09           BCH ADD_ARU_ARX_38 ; $F8D7
12619  F8E0             
12620  F8E0             ADD_ARU_ARX_45: ; $F8E0
12621  F8E0 49 00           ANI  (X),$00
12622  F8E2 CD 80           VMJ  ($80) ; ($80)($40)
12623  F8E4 CD 56           VMJ  ($56) ; ($56)($2B)
12624  F8E6 A5 7A 00        LDA  (ARX)
12625  F8E9 BF 80           BII  A,$80
12626  F8EB 99 1D           BZR ADD_ARU_ARX_37 ; $F8D0
12627  F8ED B7 0B           CPI  A,$0B
12628  F8EF B5 00           LDI  A,$00
12629  F8F1 83 20           BCS ADD_ARU_ARX_39 ; $F913
12630  F8F3 CD 6C           VMJ  ($6C) ; ($6C)($36)
12631  F8F5 FD C8           PSH  A
12632  F8F7 CD 60           VMJ  ($60) ; ($60)($30)
12633  F8F9 FB              SEC
12634  F8FA 5A 11           LDI  YL,$11
12635  F8FC 6A 06           LDI  UL,$06
12636  F8FE 55              LIN  Y
12637  F8FF 99 3F           BZR ADD_ARU_ARX_36 ; $F8C2
12638  F901 88 05           LOP  UL,$F8FE
12639  F903 FD 8A           POP  A
12640  F905 AE 7A 01        STA  (ARX + $01)
12641  F908 A5 7A 00        LDA  (ARX)
12642  F90B B3 04           ADI  A,$04
12643  F90D D5              SHR
12644  F90E 0A              STA  XL
12645  F90F 83 0B           BCS ADD_ARU_ARX_40 ; $F91C
12646  F911 42              DEC  XL
12647  F912 05              LDA  (X)
12648  F913             
12649  F913             ADD_ARU_ARX_39: ; $F913
12650  F913 BB F0           ORI  A,$F0
12651  F915 FD C8           PSH  A
12652  F917 E6              VEJ  (E6)
12653  F918 CD 64           VMJ  ($64) ; ($64)($32)
12654  F91A 9E 6B           BCH ADD_ARU_ARX_41 ; $F8B1
12655  F91C             
12656  F91C             ADD_ARU_ARX_40: ; $F91C
12657  F91C 05              LDA  (X)
12658  F91D F1              AEX
12659  F91E 9E 0D           BCH ADD_ARU_ARX_39 ; $F913
12660  F920             
12661  F920             ADD_ARU_ARX_34: ; $F920
12662  F920 4A 12           LDI  XL,$12
12663  F922 47              LDE  X
12664  F923 9B 55           BZS ADD_ARU_ARX_37 ; $F8D0
12665  F925 4D 80           BII  (X),$80
12666  F927 9B 52           BZS ADD_ARU_ARX_38 ; $F8D7
12667  F929 9E 5B           BCH ADD_ARU_ARX_37 ; $F8D0
12668  F92B             
12669  F92B             
12670  F92B             ; $F92B Convert AR-X from integer to BCD format.
12671  F92B             ADD_ARU_ARX_1: ; $F92B
12672  F92B B5 A0           LDI  A,$A0
12673  F92D A7 7A 04        CPA  (ARX + $04)
12674  F930 91 BE           BCR ADD_ARU_ARX_42 ; $F874
12675  F932 48 7A           LDI  XH,$7A
12676  F934 A5 7A 07        LDA  (ARX + $07)
12677  F937 F9              REC
12678  F938 B3 B0           ADI  A,$B0
12679  F93A 81 12           BCR ADD_ARU_ARX_43 ; $F94E
12680  F93C CD 6C           VMJ  ($6C) ; ($6C)($36)
12681  F93E FD C8           PSH  A
12682  F940 4A 06           LDI  XL,$06
12683  F942 6A 05           LDI  UL,$05
12684  F944             
12685  F944             ADD_ARU_ARX_44: ; $F944
12686  F944 B5 00           LDI  A,$00
12687  F946 8C              DCA  (X)
12688  F947 43              SDE  X
12689  F948 88 06           LOP  UL,ADD_ARU_ARX_44 ; $F944
12690  F94A FD 8A           POP  A
12691  F94C CD 52           VMJ  ($52) ; ($52)($29
12692  F94E             
12693  F94E             ADD_ARU_ARX_43: ; $F94E
12694  F94E BA F6 3C        JMP  ARXX ; $F63C
12695  F951 E4              VEJ  (E4)
12696  F952 E4              VEJ  (E4)
12697  F953 E4              VEJ  (E4)
12698  F954 E4              VEJ  (E4)
12699  F955 E4              VEJ  (E4)
12700  F956 E4              VEJ  (E4)
12701  F957             
12702  F957             
12703  F957             
12704  F957             ;------------------------------------------------------------------------------
12705  F957             ;  Tokenizer program: Converts subsets of ASCII character strings into tokens, 
12706  F957             ;                     provided these could be fount in the token tables. 
12707  F957             ;                     The input buffer is compressed in the process. All Basic 
12708  F957             ;                     commands tokenized to 2 bytes, insert codes are deleted 
12709  F957             ;                     and spaces outside of strings as well.
12710  F957             ;            Address: F957
12711  F957             ; 
12712  F957             ;         Parameters: Y-Reg must point to the input buffer
12713  F957             ; Modified Registers: All
12714  F957             ;   Error conditions: Error 28 when strings contain tokens.
12715  F957             ;------------------------------------------------------------------------------
12716  F957             TOKENIZE_INBUF: ; $F957
12717  F957 68 00           LDI  UH,$00
12718  F959             
12719  F959             ; $F959 Tokenizer (string flag already in UH).
12720  F959             TOKENIZE_INBUF_4: ; $F959
12721  F959 A5 78 8B        LDA  (INBUFPTR_L)
12722  F95C 1A              STA  YL
12723  F95D 58 7B           LDI  YH,$7B
12724  F95F FD 18           LDX  Y
12725  F961             
12726  F961             TOKENIZE_INBUF_1: ; $F961
12727  F961 55              LIN  Y
12728  F962 B7 27           CPI  A,$27
12729  F964 9B 05           BZS TOKENIZE_INBUF_1 ; $F961
12730  F966 B7 0D           CPI  A,$0D
12731  F968 89 04           BZR TOKENIZE_INBUF_2 ; $F96E
12732  F96A 68 00           LDI  UH,$00
12733  F96C 8E AA           BCH VAR_TYPE_1 ; $FA18
12734  F96E             
12735  F96E             TOKENIZE_INBUF_2: ; $F96E
12736  F96E B7 22           CPI  A,$22
12737  F970 89 2F           BZR VAR_TYPE_2 ; $F9A1
12738  F972 FD 62           DEC  UH
12739  F974 8B 02           BZS TOKENIZE_INBUF_3 ; $F978
12740  F976 68 01           LDI  UH,$01
12741  F978             
12742  F978             TOKENIZE_INBUF_3: ; $F978
12743  F978 41              SIN  X
12744  F979 9E 1A           BCH TOKENIZE_INBUF_1 ; $F961
12745  F97B             
12746  F97B             
12747  F97B             
12748  F97B             ;------------------------------------------------------------------------------
12749  F97B             ; $F97B - Convert input line into tokens and use formula interpreter
12750  F97B             ;------------------------------------------------------------------------------
12751  F97B             VAR_TYPE: ; $F97B
12752  F97B 68 00           LDI  UH,$00
12753  F97D ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
12754  F981 89 02           BZR VAR_TYPE_3 ; $F985
12755  F983 68 01           LDI  UH,$01
12756  F985             
12757  F985             VAR_TYPE_3: ; $F985
12758  F985 BE F9 59        SJP  (TOKENIZE_INBUF_4) ; $F959
12759  F988 8B 15           BZS VAR_TYPE_4 ; $F99F
12760  F98A 06              CPA  XL
12761  F98B 83 0B           BCS VAR_TYPE_5 ; $F998
12762  F98D A5 78 85        LDA  (CURVARTYPE); $7885
12763  F990 DB              ROL
12764  F991 83 06           BCS VAR_TYPE_6 ; $F999
12765  F993 CD 0C           VMJ  ($0C)
12766  F995             
12767  F995             VAR_TYPE_8: ; $F995
12768  F995 C8              VEJ  (C8) \ ABRF(VAR_TYPE_7) ; $F99D
12768  F996 06          
12769  F997 62              DEC  UL
12770  F998             
12771  F998             VAR_TYPE_5: ; $F998
12772  F998 9A              RTN
12773  F999             
12774  F999             VAR_TYPE_6: ; $F999
12775  F999 DE              VEJ  (DE) \ ABRF(VAR_TYPE_4) ; $F99F
12775  F99A 04          
12776  F99B 9E 08           BCH VAR_TYPE_8 ; $F995
12777  F99D             
12778  F99D             VAR_TYPE_7: ; $F99D
12779  F99D 68 01           LDI  UH,$01
12780  F99F             
12781  F99F             VAR_TYPE_4: ; $F99F
12782  F99F F9              REC
12783  F9A0 9A              RTN
12784  F9A1             
12785  F9A1             VAR_TYPE_2: ; $F9A1
12786  F9A1 6C 00           CPI  UH,$00
12787  F9A3 8B 06           BZS VAR_TYPE_9 ; $F9AB
12788  F9A5 B7 E0           CPI  A,$E0
12789  F9A7 91 31           BCR TOKENIZE_INBUF_3 ; $F978
12790  F9A9 8E 6D           BCH VAR_TYPE_1 ; $FA18
12791  F9AB             
12792  F9AB             VAR_TYPE_9: ; $F9AB
12793  F9AB B7 20           CPI  A,$20
12794  F9AD 9B 4E           BZS TOKENIZE_INBUF_1 ; $F961
12795  F9AF B7 41           CPI  A,$41
12796  F9B1 91 3B           BCR TOKENIZE_INBUF_3 ; $F978
12797  F9B3 B7 5B           CPI  A,$5B
12798  F9B5 81 09           BCR $F9C0
12799  F9B7 B7 E0           CPI  A,$E0
12800  F9B9 91 43           BCR TOKENIZE_INBUF_3 ; $F978
12801  F9BB 28              STA  UH
12802  F9BC 55              LIN  Y
12803  F9BD 2A              STA  UL
12804  F9BE 8E 49           BCH VAR_TYPE_10 ; $FA09
12805  F9C0 FD 88           PSH  X
12806  F9C2 28              STA  UH
12807  F9C3 6A 60           LDI  UL,$60
12808  F9C5 48 C0           LDI  XH,$C0
12809  F9C7             
12810  F9C7             ; $F9C7 work off. Search Token Table
12811  F9C7 A5 79 D0        LDA  (PU_PV)
12812  F9CA             
12813  F9CA             VAR_TYPE_22: ; $F9CA
12814  F9CA FD C8           PSH  A
12815  F9CC 4A 1E           LDI  XL,$1E
12816  F9CE A4              LDA  UH
12817  F9CF B9 1F           ANI  A,$1F
12818  F9D1 D9              SHL
12819  F9D2 FD CA           ADR  X
12820  F9D4 45              LIN  X
12821  F9D5 8B 69           BZS VAR_TYPE_11 ; $FA40
12822  F9D7 FD C8           PSH  A
12823  F9D9 05              LDA  (X)
12824  F9DA 0A              STA  XL
12825  F9DB FD 8A           POP  A
12826  F9DD 08              STA  XH
12827  F9DE             
12828  F9DE             VAR_TYPE_20: ; $F9DE
12829  F9DE FD 98           PSH  Y
12830  F9E0             
12831  F9E0             VAR_TYPE_12: ; $F9E0
12832  F9E0 55              LIN  Y
12833  F9E1 B7 20           CPI  A,$20
12834  F9E3 9B 05           BZS VAR_TYPE_12 ; $F9E0
12835  F9E5 B7 27           CPI  A,$27
12836  F9E7 9B 09           BZS VAR_TYPE_12 ; $F9E0
12837  F9E9 B7 2E           CPI  A,$2E
12838  F9EB 89 08           BZR VAR_TYPE_13 ; $F9F5
12839  F9ED             
12840  F9ED             VAR_TYPE_14: ; $F9ED
12841  F9ED B5 E0           LDI  A,$E0
12842  F9EF F7              CIN
12843  F9F0 93 05           BCS VAR_TYPE_14 ; $F9ED
12844  F9F2 46              DEC  X
12845  F9F3 8E 08           BCH VAR_TYPE_15 ; $F9FD
12846  F9F5             
12847  F9F5             VAR_TYPE_13: ; $F9F5
12848  F9F5 F7              CIN
12849  F9F6 89 38           BZR VAR_TYPE_16 ; $FA30
12850  F9F8 05              LDA  (X)
12851  F9F9 B7 E0           CPI  A,$E0
12852  F9FB 91 1D           BCR VAR_TYPE_12 ; $F9E0
12853  F9FD             
12854  F9FD             VAR_TYPE_15: ; $F9FD
12855  F9FD 45              LIN  X
12856  F9FE 28              STA  UH
12857  F9FF 05              LDA  (X)
12858  FA00 2A              STA  UL
12859  FA01 FD 0A           POP  X
12860  FA03 FD 8A           POP  A
12861  FA05 CD 1E           VMJ  ($1E)
12862  FA07 FD 0A           POP  X
12863  FA09             
12864  FA09             VAR_TYPE_10: ; $FA09
12865  FA09 A4              LDA  UH
12866  FA0A 41              SIN  X
12867  FA0B 24              LDA  UL
12868  FA0C 41              SIN  X
12869  FA0D 6C F1           CPI  UH,$F1
12870  FA0F 68 00           LDI  UH,$00
12871  FA11 99 B2           BZR TOKENIZE_INBUF_1 ; $F961
12872  FA13 6E AB           CPI  UL,$AB
12873  FA15 99 B6           BZR TOKENIZE_INBUF_1 ; $F961
12874  FA17             
12875  FA17             VAR_TYPE_17: ; $FA17
12876  FA17 55              LIN  Y
12877  FA18             
12878  FA18             VAR_TYPE_1: ; $FA18
12879  FA18 41              SIN  X
12880  FA19 B7 0D           CPI  A,$0D
12881  FA1B 99 06           BZR VAR_TYPE_17 ; $FA17
12882  FA1D 56              DEC  Y
12883  FA1E 46              DEC  X
12884  FA1F FD 88           PSH  X
12885  FA21             
12886  FA21             VAR_TYPE_18: ; $FA21
12887  FA21 0E              STA  (X)
12888  FA22 40              INC  XL
12889  FA23 91 04           BCR VAR_TYPE_18 ; $FA21
12890  FA25 FD 0A           POP  X
12891  FA27 A5 78 8B        LDA  (INBUFPTR_L)
12892  FA2A 1A              STA  YL
12893  FA2B FD 62           DEC  UH
12894  FA2D 68 1C           LDI  UH,$1C
12895  FA2F 9A              RTN
12896  FA30             
12897  FA30             VAR_TYPE_16: ; $FA30
12898  FA30 B5 E0           LDI  A,$E0
12899  FA32             
12900  FA32             VAR_TYPE_19: ; $FA32
12901  FA32 F7              CIN
12902  FA33 93 03           BCS VAR_TYPE_19 ; $FA32
12903  FA35 44              INC  X
12904  FA36 44              INC  X
12905  FA37 44              INC  X
12906  FA38 45              LIN  X
12907  FA39 44              INC  X
12908  FA3A B9 10           ANI  A,$10
12909  FA3C FD 1A           POP  Y
12910  FA3E 9B 62           BZS VAR_TYPE_20 ; $F9DE
12911  FA40             
12912  FA40             VAR_TYPE_11: ; $FA40
12913  FA40 FD 8A           POP  A
12914  FA42 CD 1E           VMJ  ($1E)
12915  FA44             
12916  FA44             VAR_TYPE_23: ; $FA44
12917  FA44 24              LDA  UL
12918  FA45 BE FA 58        SJP  (DEC_OPN)
12919  FA48 2A              STA  UL
12920  FA49 83 06           BCS VAR_TYPE_21 ; $FA51
12921  FA4B CD 3C           VMJ  ($3C)
12922  FA4D 9B 85           BZS VAR_TYPE_22 ; $F9CA
12923  FA4F 9E 0D           BCH VAR_TYPE_23 ; $FA44
12924  FA51             
12925  FA51             VAR_TYPE_21: ; $FA51
12926  FA51 FD 0A           POP  X
12927  FA53 A4              LDA  UH
12928  FA54 68 00           LDI  UH,$00
12929  FA56 9E E0           BCH TOKENIZE_INBUF_3 ; $F978
12930  FA58             
12931  FA58             
12932  FA58             
12933  FA58             ;------------------------------------------------------------------------------
12934  FA58             ; $FA58 - Decrements accumulator (OPN byte) in 2K steps
12935  FA58             ;------------------------------------------------------------------------------
12936  FA58             DEC_OPN: ; 
12937  FA58 BF 3C           BII  A,$3C
12938  FA5A 8B 05           BZS DEC_OPN_1 ; $FA61
12939  FA5C FB              SEC
12940  FA5D B1 04           SBI  A,$04
12941  FA5F F9              REC
12942  FA60 9A              RTN
12943  FA61             
12944  FA61             DEC_OPN_1: ; $FA61
12945  FA61 DB              ROL
12946  FA62 B5 DC           LDI  A,$DC
12947  FA64 9A              RTN
12948  FA65             
12949  FA65             
12950  FA65             
12951  FA65             ;------------------------------------------------------------------------------
12952  FA65             ; $FA65 - Sets PV bit and PV byte according to Carry bit 0 or 1.
12953  FA65             ;------------------------------------------------------------------------------
12954  FA65             SET_PV: ; 
12955  FA65 B9 FE           ANI  A,$FE
12956  FA67 FD BE           RIE
12957  FA69 B8              RPV
12958  FA6A 81 02           BCR SET_PV_1 ; $FA6E
12959  FA6C A8              SPV
12960  FA6D DD              INC  A
12961  FA6E             
12962  FA6E             SET_PV_1: ; $FA6E
12963  FA6E AE 79 D0        STA  (PU_PV)
12964  FA71 FD 81           SIE
12965  FA73 9A              RTN
12966  FA74             
12967  FA74             
12968  FA74             
12969  FA74             ;------------------------------------------------------------------------------
12970  FA74             ; (3C) $FA74 - Checks whether a certain token table (whose right-shifted 
12971  FA74             ; high-byte address is in the accumulator, exists. If not, C=0.
12972  FA74             ;------------------------------------------------------------------------------
12973  FA74             TOKEN_CHECK: ; $FA74
12974  FA74 D9              SHL
12975  FA75             
12976  FA75             ; $FA75 Checks whether there is a corresponding token table for a token.
12977  FA75             TOKEN_CHECK_1: ; $FA75
12978  FA75 08              STA  XH
12979  FA76 A5 79 D0        LDA  (PU_PV)
12980  FA79 FD C8           PSH  A
12981  FA7B BE FA 65        SJP  (SET_PV)
12982  FA7E 4A 00           LDI  XL,$00
12983  FA80 05              LDA  (X)
12984  FA81 0A              STA  XL
12985  FA82 FD 8A           POP  A
12986  FA84 4E 55           CPI  XL,$55
12987  FA86 89 A2           BZR PVBANK2
12988  FA88 9A              RTN
12989  FA89             
12990  FA89             
12991  FA89             
12992  FA89             ;------------------------------------------------------------------------------
12993  FA89             ; (1C) $FA89 - Processes tokens corresponding to data bytes
12994  FA89             ;------------------------------------------------------------------------------
12995  FA89             TOKEN_PROCESS: ; $FA89
12996  FA89 FD 0A           POP  X
12997  FA8B 45              LIN  X
12998  FA8C FD 88           PSH  X
12999  FA8E 6C F2           CPI  UH,$F2
13000  FA90 83 50           BCS TOKEN_PROCESS_1 ; $FAE2
13001  FA92 FD C8           PSH  A
13002  FA94 E9 79 D1 FC     ANI  (OPN),$FC
13003  FA98 A5 79 D1        LDA  (OPN)
13004  FA9B 6C F0           CPI  UH,$F0
13005  FA9D 89 05           BZR TOKEN_PROCESS_2 ; $FAA4
13006  FA9F             
13007  FA9F             TOKEN_PROCESS_9: ; $FA9F
13008  FA9F FD C8           PSH  A
13009  FAA1             
13010  FAA1             TOKEN_PROCESS_4: ; $FAA1
13011  FAA1 D9              SHL
13012  FAA2 8E 0C           BCH TOKEN_PROCESS_3 ; $FAB0
13013  FAA4             
13014  FAA4             TOKEN_PROCESS_2: ; $FAA4
13015  FAA4 B5 60           LDI  A,$60
13016  FAA6 93 07           BCS TOKEN_PROCESS_4 ; $FAA1
13017  FAA8 FB              SEC
13018  FAA9 A4              LDA  UH
13019  FAAA B9 07           ANI  A,$07
13020  FAAC F1              AEX
13021  FAAD D1              ROR
13022  FAAE 6C E8           CPI  UH,$E8
13023  FAB0             
13024  FAB0             TOKEN_PROCESS_3: ; $FAB0
13025  FAB0 BE FA 75        SJP  (TOKEN_CHECK_1) ; $FA75
13026  FAB3 81 10           BCR TOKEN_PROCESS_5 ; $FAC5
13027  FAB5 FD C8           PSH  A
13028  FAB7 4A 51           LDI  XL,$51
13029  FAB9             
13030  FAB9             TOKEN_PROCESS_10: ; $FAB9
13031  FAB9 44              INC  X
13032  FABA             
13033  FABA             TOKEN_PROCESS_11: ; $FABA
13034  FABA 44              INC  X
13035  FABB 44              INC  X
13036  FABC 45              LIN  X
13037  FABD B9 0F           ANI  A,$0F
13038  FABF 89 26           BZR TOKEN_PROCESS_6 ; $FAE7
13039  FAC1 FD 8A           POP  A
13040  FAC3 CD 1E           VMJ  ($1E)
13041  FAC5             
13042  FAC5             TOKEN_PROCESS_5: ; $FAC5
13043  FAC5 FD 8A           POP  A
13044  FAC7 6C F0           CPI  UH,$F0
13045  FAC9 89 17           BZR TOKEN_PROCESS_1 ; $FAE2
13046  FACB A7 79 D1        CPA  (OPN)
13047  FACE 89 04           BZR TOKEN_PROCESS_7 ; $FAD4
13048  FAD0 B5 60           LDI  A,$60
13049  FAD2 8E 05           BCH TOKEN_PROCESS_8 ; $FAD9
13050  FAD4             
13051  FAD4             TOKEN_PROCESS_7: ; $FAD4
13052  FAD4 BE FA 58        SJP  (DEC_OPN)
13053  FAD7 83 07           BCS $FAE0
13054  FAD9             
13055  FAD9             TOKEN_PROCESS_8: ; $FAD9
13056  FAD9 A7 79 D1        CPA  (OPN)
13057  FADC 9B 0A           BZS TOKEN_PROCESS_7 ; $FAD4
13058  FADE 9E 41           BCH TOKEN_PROCESS_9 ; $FA9F
13059  FAE0 FD 8A           POP  A
13060  FAE2             
13061  FAE2             TOKEN_PROCESS_1: ; $FAE2
13062  FAE2 B5 00           LDI  A,$00
13063  FAE4 68 1B           LDI  UH,$1B
13064  FAE6 9A              RTN
13065  FAE7             
13066  FAE7             TOKEN_PROCESS_6: ; $FAE7
13067  FAE7 FD CA           ADR  X
13068  FAE9 45              LIN  X
13069  FAEA A6              CPA  UH
13070  FAEB 99 34           BZR TOKEN_PROCESS_10 ; $FAB9
13071  FAED 45              LIN  X
13072  FAEE 26              CPA  UL
13073  FAEF 99 37           BZR TOKEN_PROCESS_11 ; $FABA
13074  FAF1 6C F0           CPI  UH,$F0
13075  FAF3 89 06           BZR TOKEN_PROCESS_12 ; $FAFB
13076  FAF5 FD 8A           POP  A
13077  FAF7 FD 2A           POP  U
13078  FAF9 8E 03           BCH TOKEN_PROCESS_13 ; $FAFE
13079  FAFB             
13080  FAFB             TOKEN_PROCESS_12: ; $FAFB
13081  FAFB FD 2A           POP  U
13082  FAFD A4              LDA  UH
13083  FAFE             
13084  FAFE             TOKEN_PROCESS_13: ; $FAFE
13085  FAFE FD C8           PSH  A
13086  FB00 24              LDA  UL
13087  FB01 8B 77           BZS PVBANK2_1 ; $FB7A
13088  FB03 D5              SHR
13089  FB04 83 34           BCS PVBANK2_2 ; $FB3A
13090  FB06 FD C8           PSH  A
13091  FB08 46              DEC  X
13092  FB09 47              LDE  X
13093  FB0A 2A              STA  UL
13094  FB0B 47              LDE  X
13095  FB0C 28              STA  UH
13096  FB0D             
13097  FB0D             TOKEN_PROCESS_14: ; $FB0D
13098  FB0D 46              DEC  X
13099  FB0E 05              LDA  (X)
13100  FB0F B7 80           CPI  A,$80
13101  FB11 91 06           BCR TOKEN_PROCESS_14 ; $FB0D
13102  FB13 FD 8A           POP  A
13103  FB15 D1              ROR
13104  FB16 83 08           BCS TOKEN_PROCESS_15 ; $FB20
13105  FB18 FD 8A           POP  A
13106  FB1A D5              SHR
13107  FB1B 05              LDA  (X)
13108  FB1C B9 0F           ANI  A,$0F
13109  FB1E 8E 0D           BCH PVBANK2_3 ; $FB2D
13110  FB20             
13111  FB20             TOKEN_PROCESS_15: ; $FB20
13112  FB20 45              LIN  X
13113  FB21 B9 0F           ANI  A,$0F
13114  FB23 DF              DEC  A
13115  FB24 2A              STA  UL
13116  FB25             
13117  FB25             TOKEN_PROCESS_16: ; $FB25
13118  FB25 F5              TIN
13119  FB26 88 03           LOP  UL,TOKEN_PROCESS_16 ; $FB25
13120  FB28 FD 8A           POP  A
13121  FB2A             
13122  FB2A             
13123  FB2A             
13124  FB2A             ;------------------------------------------------------------------------------
13125  FB2A             ; (1E) $FB2A - Performs PV banking according to PV byte $79D0.
13126  FB2A             ;------------------------------------------------------------------------------
13127  FB2A             PVBANK2: ; $FB2A
13128  FB2A D1              ROR
13129  FB2B B5 EF           LDI  A,$EF
13130  FB2D             
13131  FB2D             PVBANK2_3: ; $FB2D
13132  FB2D FD C8           PSH  A
13133  FB2F A5 79 D0        LDA  (PU_PV)
13134  FB32 BE FA 65        SJP  (SET_PV)
13135  FB35 FD 8A           POP  A
13136  FB37 9A              RTN
13137  FB38             
13138  FB38             ; $FB38 Execution of functions and trace.
13139  FB38             PVBANK2_10: ; $FB38
13140  FB38 FD C8           PSH  A
13141  FB3A             
13142  FB3A             PVBANK2_2: ; $FB3A
13143  FB3A 6A 28           LDI  UL,$28
13144  FB3C 68 FB           LDI  UH,$FB
13145  FB3E FD A8           PSH  U
13146  FB40 FD 6A           STX  U
13147  FB42 65              LIN  U
13148  FB43 08              STA  XH
13149  FB44 65              LIN  U
13150  FB45 0A              STA  XL
13151  FB46 65              LIN  U
13152  FB47 D9              SHL
13153  FB48 D9              SHL
13154  FB49 83 2A           BCS PVBANK2_4 ; $FB75
13155  FB4B 2A              STA  UL
13156  FB4C 68 12           LDI  UH,$12
13157  FB4E A5 78 8C        LDA  (NUMARGS)
13158  FB51 DF              DEC  A
13159  FB52 89 25           BZR PVBANK2_5 ; $FB79
13160  FB54 B5 B2           LDI  A,$B2
13161  FB56 A7 7A 04        CPA  (ARX + $04)
13162  FB59 B5 00           LDI  A,$00
13163  FB5B D1              ROR
13164  FB5C 68 11           LDI  UH,$11
13165  FB5E 22              ADC  UL
13166  FB5F D9              SHL
13167  FB60 83 17           BCS PVBANK2_5 ; $FB79
13168  FB62 6E 80           CPI  UL,$80
13169  FB64 81 0F           BCR PVBANK2_4 ; $FB75
13170  FB66 84              LDA  XH
13171  FB67 B7 80           CPI  A,$80
13172  FB69 BB 80           ORI  A,$80
13173  FB6B 08              STA  XH
13174  FB6C 81 07           BCR PVBANK2_4 ; $FB75
13175  FB6E FD 88           PSH  X
13176  FB70 D2              VEJ  (D2) \ ABRF($FB77) \ ABYT($80)
13176  FB71 05          
13176  FB72 80          
13177  FB73 FD 0A           POP  X
13178  FB75             
13179  FB75             PVBANK2_4: ; $FB75
13180  FB75 FD 5E           STX  P
13181  FB77 FD 0A           POP  X
13182  FB79             
13183  FB79             PVBANK2_5: ; $FB79
13184  FB79 9A              RTN
13185  FB7A             
13186  FB7A             PVBANK2_1: ; $FB7A
13187  FB7A FD 6A           STX  U
13188  FB7C 65              LIN  U
13189  FB7D 08              STA  XH
13190  FB7E 65              LIN  U
13191  FB7F 0A              STA  XL
13192  FB80 D8              VEJ  (D8)
13193  FB81 89 10           BZR PVBANK2_6 ; $FB93
13194  FB83 B5 20           LDI  A,$20
13195  FB85 6D 60           BII  (U),$60
13196  FB87 89 0C           BZR PVBANK2_7 ; $FB95
13197  FB89 68 1A           LDI  UH,$1A
13198  FB8B 45              LIN  X
13199  FB8C A9 76 4F        AND  (DISP_BUFF + $4F)
13200  FB8F 8B 0B           BZS PVBANK2_8 ; $FB9C
13201  FB91             
13202  FB91             PVBANK2_9: ; $FB91
13203  FB91 FD 5E           STX  P
13204  FB93             
13205  FB93             PVBANK2_6: ; $FB93
13206  FB93 B5 00           LDI  A,$00
13207  FB95             
13208  FB95             PVBANK2_7: ; $FB95
13209  FB95 2D              EOR  (U)
13210  FB96 B9 60           ANI  A,$60
13211  FB98 99 09           BZR PVBANK2_9 ; $FB91
13212  FB9A 68 01           LDI  UH,$01
13213  FB9C             
13214  FB9C             PVBANK2_8: ; $FB9C
13215  FB9C E0              VEJ  (E0)
13216  FB9D             
13217  FB9D             
13218  FB9D             
13219  FB9D             ;------------------------------------------------------------------------------
13220  FB9D             ; (3E) $FB9D - Determine and run through the trace routine.
13221  FB9D             ;------------------------------------------------------------------------------
13222  FB9D             TRACE2: ; 
13223  FB9D AE 78 8E        STA  (TRACE)
13224  FBA0 B7 02           CPI  A,$02
13225  FBA2 A5 78 8D        LDA  (TRACE_ON)
13226  FBA5 8B 21           BZS TRACE2_1 ; $FBC8
13227  FBA7 81 12           BCR TRACE2_2 ; $FBBB
13228  FBA9 B7 58           CPI  A,$58
13229  FBAB 8B 0E           BZS TRACE2_2 ; $FBBB
13230  FBAD CD 3C           VMJ  ($3C)
13231  FBAF 89 08           BZR TRACE2_3 ; $FBB9
13232  FBB1 4A 1D           LDI  XL,$1D
13233  FBB3 BE FB 38        SJP  (PVBANK2_10) ; $FB38
13234  FBB6 A4              LDA  UH
13235  FBB7 89 0E           BZR TRACE2_4 ; $FBC7
13236  FBB9             
13237  FBB9             TRACE2_3: ; $FBB9
13238  FBB9 B5 58           LDI  A,$58
13239  FBBB             
13240  FBBB             TRACE2_2: ; $FBBB
13241  FBBB 68 00           LDI  UH,$00
13242  FBBD CD 3C           VMJ  ($3C)
13243  FBBF 4A 1D           LDI  XL,$1D
13244  FBC1 89 03           BZR TRACE2_5 ; $FBC6
13245  FBC3 BE FB 38        SJP  (PVBANK2_10) ; $FB38
13246  FBC6             
13247  FBC6             TRACE2_5: ; $FBC6
13248  FBC6 A4              LDA  UH
13249  FBC7             
13250  FBC7             TRACE2_4: ; $FBC7
13251  FBC7 9A              RTN
13252  FBC8             
13253  FBC8             TRACE2_1: ; $FBC8
13254  FBC8 93 11           BCS TRACE2_3 ; $FBB9
13255  FBCA 9A              RTN
13256  FBCB             
13257  FBCB             
13258  FBCB             
13259  FBCB             ;------------------------------------------------------------------------------
13260  FBCB             ; $FBCB - Transfer string to output buffer or output to string buffer
13261  FBCB             ;------------------------------------------------------------------------------
13262  FBCB             STRXFR: ; $FBCB
13263  FBCB FD 98           PSH  Y
13264  FBCD 48 7B           LDI  XH,$7B
13265  FBCF 58 7B           LDI  YH,$7B
13266  FBD1 4A 10           LDI  XL,$10
13267  FBD3 5A 60           LDI  YL,$60
13268  FBD5 81 04           BCR STRXFR_1 ;$FBDB
13269  FBD7 4A 60           LDI  XL,$60
13270  FBD9 5A 10           LDI  YL,$10
13271  FBDB             
13272  FBDB             STRXFR_1: ; $FBDB
13273  FBDB 6A 4F           LDI  UL,$4F
13274  FBDD BA DC 28        JMP  ISARXBCD_13 ; $DC28
13275  FBE0 E4              VEJ  (E4)
13276  FBE1 E4              VEJ  (E4)
13277  FBE2 E4              VEJ  (E4)
13278  FBE3 E4              VEJ  (E4)
13279  FBE4 E4              VEJ  (E4)
13280  FBE5 E4              VEJ  (E4)
13281  FBE6 E4              VEJ  (E4)
13282  FBE7 E4              VEJ  (E4)
13283  FBE8 E4              VEJ  (E4)
13284  FBE9             
13285  FBE9             
13286  FBE9             
13287  FBE9             ;------------------------------------------------------------------------------
13288  FBE9             ; $FBE9 - Auxiliary constants for arithmetic routines
13289  FBE9             ;------------------------------------------------------------------------------
13290  FBE9             AUX_CONST: ; 
13291  FBE9 FF 00 90        .BYTE  $FF,$00,$90                      ; 0.9
13292  FBEC 00 00 10        .BYTE  $00,$00,$10                      ; 1
13293  FBEF 01 00 90        .BYTE  $01,$00,$90                      ; 90
13294  FBF2 02 00 18        .BYTE  $02,$00,$18                      ; 180
13295  FBF5 FF 00 60        .BYTE  $FF,$00,$60                      ; 0.6
13296  FBF8 00 00 31 41     .BYTE  $00,$00,$31,$41,$59,$26,$53,$59  ; PI= 3.14159265359
13296  FBFC 59 26 53 59 
13297  FC00 00 00 30 10     .BYTE  $00,$00,$30,$10,$29,$99,$56,$64  ; 3.01029995664
13297  FC04 29 99 56 64 
13298  FC08 00 00 41 39     .BYTE  $00,$00,$41,$39,$26,$85,$15,$82  ; 4.13926851582
13298  FC0C 26 85 15 82 
13299  FC10 00 00 43 21     .BYTE  $00,$00,$43,$21,$37,$37,$82,$64  ; 4.32137378264
13299  FC14 37 37 82 64 
13300  FC18 00 00 43 40     .BYTE  $00,$00,$43,$40,$77,$47,$93,$19  ; 4.34077479319
13300  FC1C 77 47 93 19 
13301  FC20 00 00 43 42     .BYTE  $00,$00,$43,$42,$72,$76,$86,$27  ; 4.34272768627
13301  FC24 72 76 86 27 
13302  FC28 00 00 43 42     .BYTE  $00,$00,$43,$42,$92,$31,$04,$45  ; 4.34292310445
13302  FC2C 92 31 04 45 
13303  FC30 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$26,$47,$56  ; 4.34294264756
13303  FC34 94 26 47 56 
13304  FC38 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$46,$01,$89  ; 4.34294460189
13304  FC3C 94 46 01 89 
13305  FC40 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$47,$97,$32  ; 4.34294479732
13305  FC44 94 47 97 32 
13306  FC48 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$16,$86  ; 4.34294481686
13306  FC4C 94 48 16 86 
13307  FC50 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$18,$82  ; 4.34294481882
13307  FC54 94 48 18 82 
13308  FC58 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$19,$01  ; 4.34294481901
13308  FC5C 94 48 19 01 
13309  FC60 FF 00 43 42     .BYTE  $FF,$00,$43,$42,$94,$48,$19,$03  ; 0.434294481903
13309  FC64 94 48 19 03 
13310  FC68 00 00 45 00     .BYTE  $00,$00,$45,$00,$00,$00,$00,$00  ; 4.5
13310  FC6C 00 00 00 00 
13311  FC70 00 00 57 10     .BYTE  $00,$00,$57,$10,$59,$31,$37,$50  ; 5.7105931375
13311  FC74 59 31 37 50 
13312  FC78 00 00 57 29     .BYTE  $00,$00,$57,$29,$38,$69,$76,$83  ; 5.72938697683
13312  FC7C 38 69 76 83 
13313  FC80 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$60,$41,$45  ; 5.72957604145
13313  FC84 57 60 41 45 
13314  FC88 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$79,$32,$21  ; 5.72957793221
13314  FC8C 57 79 32 21 
13315  FC90 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$79,$51,$11  ; 5.72957795111
13315  FC94 57 79 51 11 
13316  FC98 01 00 57 29     .BYTE  $01,$00,$57,$29,$57,$79,$51,$31  ; 57.2957595131
13316  FC9C 57 79 51 31 
13317  FCA0             
13318  FCA0             
13319  FCA0             
13320  FCA0             ;------------------------------------------------------------------------------
13321  FCA0             ; $FCA0 - Character set table
13322  FCA0             ;------------------------------------------------------------------------------
13323  FCA0             CHARSET: ; $FCA0
13324  FCA0 00 00 00 00     .BYTE  $00,$00,$00,$00,$00  ; Space
13324  FCA4 00 
13325  FCA5 00 00 5F 00     .BYTE  $00,$00,$5F,$00,$00  ; !
13325  FCA9 00 
13326  FCAA 00 03 04 03     .BYTE  $00,$03,$04,$03,$00  ; "
13326  FCAE 00 
13327  FCAF 22 7F 22 7F     .BYTE  $22,$7F,$22,$7F,$22  ; #
13327  FCB3 22 
13328  FCB4 24 2A 7F 2A     .BYTE  $24,$2A,$7F,$2A,$12  ; $
13328  FCB8 12 
13329  FCB9 23 13 08 64     .BYTE  $23,$13,$08,$64,$62  ; %
13329  FCBD 62 
13330  FCBE 36 49 55 22     .BYTE  $36,$49,$55,$22,$50  ; &
13330  FCC2 50 
13331  FCC3 63 41 41 41     .BYTE  $63,$41,$41,$41,$63  ; Insert
13331  FCC7 63 
13332  FCC8 00 1C 22 41     .BYTE  $00,$1C,$22,$41,$00  ; (
13332  FCCC 00 
13333  FCCD 00 41 22 1C     .BYTE  $00,$41,$22,$1C,$00  ; )
13333  FCD1 00 
13334  FCD2 14 08 3E 08     .BYTE  $14,$08,$3E,$08,$14  ; *
13334  FCD6 14 
13335  FCD7 08 08 3E 08     .BYTE  $08,$08,$3E,$08,$08  ; +
13335  FCDB 08 
13336  FCDC 00 58 38 00     .BYTE  $00,$58,$38,$00,$00  ; '
13336  FCE0 00 
13337  FCE1 08 08 08 08     .BYTE  $08,$08,$08,$08,$08  ; -
13337  FCE5 08 
13338  FCE6 00 60 60 00     .BYTE  $00,$60,$60,$00,$00  ; .
13338  FCEA 00 
13339  FCEB 20 10 08 04     .BYTE  $20,$10,$08,$04,$02  ; /
13339  FCEF 02 
13340  FCF0 3E 51 49 45     .BYTE  $3E,$51,$49,$45,$3E  ; 0
13340  FCF4 3E 
13341  FCF5 00 42 7F 40     .BYTE  $00,$42,$7F,$40,$00  ; 1
13341  FCF9 00 
13342  FCFA 42 61 51 49     .BYTE  $42,$61,$51,$49,$46  ; 2
13342  FCFE 46 
13343  FCFF 41 49 4D 4B     .BYTE  $41,$49,$4D,$4B,$31  ; 3
13343  FD03 31 
13344  FD04 18 14 12 7F     .BYTE  $18,$14,$12,$7F,$10  ; 4
13344  FD08 10 
13345  FD09 27 45 45 45     .BYTE  $27,$45,$45,$45,$39  ; 5
13345  FD0D 39 
13346  FD0E 3C 4A 49 49     .BYTE  $3C,$4A,$49,$49,$30  ; 6
13346  FD12 30 
13347  FD13 01 01 79 05     .BYTE  $01,$01,$79,$05,$03  ; 7
13347  FD17 03 
13348  FD18 36 49 49 49     .BYTE  $36,$49,$49,$49,$36  ; 8
13348  FD1C 36 
13349  FD1D 06 49 49 29     .BYTE  $06,$49,$49,$29,$1E  ; 9
13349  FD21 1E 
13350  FD22 00 36 36 00     .BYTE  $00,$36,$36,$00,$00  ; :
13350  FD26 00 
13351  FD27 00 5B 3B 00     .BYTE  $00,$5B,$3B,$00,$00  ; 
13351  FD2B 00 
13352  FD2C 08 14 22 41     .BYTE  $08,$14,$22,$41,$00  ; 
13352  FD30 00 
13353  FD31 14 14 14 14     .BYTE  $14,$14,$14,$14,$14  ; =
13353  FD35 14 
13354  FD36 00 41 22 14     .BYTE  $00,$41,$22,$14,$08  ; 
13354  FD3A 08 
13355  FD3B 02 01 51 09     .BYTE  $02,$01,$51,$09,$06  ; ?
13355  FD3F 06 
13356  FD40 32 49 79 41     .BYTE  $32,$49,$79,$41,$3E  ; 
13356  FD44 3E 
13357  FD45 7C 12 11 12     .BYTE  $7C,$12,$11,$12,$7C  ; A
13357  FD49 7C 
13358  FD4A 41 7F 49 49     .BYTE  $41,$7F,$49,$49,$36  ; B
13358  FD4E 36 
13359  FD4F 3E 41 41 41     .BYTE  $3E,$41,$41,$41,$22  ; C
13359  FD53 22 
13360  FD54 41 7F 41 41     .BYTE  $41,$7F,$41,$41,$3E  ; D
13360  FD58 3E 
13361  FD59 7F 49 49 49     .BYTE  $7F,$49,$49,$49,$41  ; E
13361  FD5D 41 
13362  FD5E 7F 09 09 09     .BYTE  $7F,$09,$09,$09,$01  ; F
13362  FD62 01 
13363  FD63 3E 41 41 49     .BYTE  $3E,$41,$41,$49,$39  ; G
13363  FD67 39 
13364  FD68 7F 08 08 08     .BYTE  $7F,$08,$08,$08,$7F  ; H
13364  FD6C 7F 
13365  FD6D 00 41 7F 41     .BYTE  $00,$41,$7F,$41,$00  ; I
13365  FD71 00 
13366  FD72 20 40 41 3F     .BYTE  $20,$40,$41,$3F,$01  ; J
13366  FD76 01 
13367  FD77 7F 08 14 22     .BYTE  $7F,$08,$14,$22,$41  ; K
13367  FD7B 41 
13368  FD7C 7F 40 40 40     .BYTE  $7F,$40,$40,$40,$40  ; L
13368  FD80 40 
13369  FD81 7F 02 0C 02     .BYTE  $7F,$02,$0C,$02,$7F  ; M
13369  FD85 7F 
13370  FD86 7F 04 08 10     .BYTE  $7F,$04,$08,$10,$7F  ; N
13370  FD8A 7F 
13371  FD8B 3E 41 41 41     .BYTE  $3E,$41,$41,$41,$3E  ; O
13371  FD8F 3E 
13372  FD90 7F 09 09 09     .BYTE  $7F,$09,$09,$09,$06  ; P
13372  FD94 06 
13373  FD95 3E 41 51 21     .BYTE  $3E,$41,$51,$21,$5E  ; Q
13373  FD99 5E 
13374  FD9A 7F 09 19 29     .BYTE  $7F,$09,$19,$29,$46  ; R
13374  FD9E 46 
13375  FD9F 26 49 49 49     .BYTE  $26,$49,$49,$49,$32  ; S
13375  FDA3 32 
13376  FDA4 01 01 7F 01     .BYTE  $01,$01,$7F,$01,$01  ; T
13376  FDA8 01 
13377  FDA9 3F 40 40 40     .BYTE  $3F,$40,$40,$40,$3F  ; U
13377  FDAD 3F 
13378  FDAE 07 18 60 18     .BYTE  $07,$18,$60,$18,$07  ; V
13378  FDB2 07 
13379  FDB3 7F 20 18 20     .BYTE  $7F,$20,$18,$20,$7F  ; W
13379  FDB7 7F 
13380  FDB8 63 14 08 14     .BYTE  $63,$14,$08,$14,$63  ; X
13380  FDBC 63 
13381  FDBD 03 04 78 04     .BYTE  $03,$04,$78,$04,$03  ; Y
13381  FDC1 03 
13382  FDC2 61 51 49 45     .BYTE  $61,$51,$49,$45,$43  ; Z
13382  FDC6 43 
13383  FDC7 10 20 7F 01     .BYTE  $10,$20,$7F,$01,$01  ; 
13383  FDCB 01 
13384  FDCC 15 16 7C 16     .BYTE  $15,$16,$7C,$16,$15  ; 
13384  FDD0 15 
13385  FDD1 41 3F 01 3F     .BYTE  $41,$3F,$01,$3F,$41  ; 
13385  FDD5 41 
13386  FDD6 18 04 02 04     .BYTE  $18,$04,$02,$04,$18  ;
13386  FDDA 18 
13387  FDDB 40 40 40 40     .BYTE  $40,$40,$40,$40,$40  ; 
13387  FDDF 40 
13388  FDE0 00 00 00 00     .BYTE  $00,$00,$00,$00,$00  ; 
13388  FDE4 00 
13389  FDE5 38 44 44 3C     .BYTE  $38,$44,$44,$3C,$40  ; a
13389  FDE9 40 
13390  FDEA 7F 48 44 44     .BYTE  $7F,$48,$44,$44,$38  ; b
13390  FDEE 38 
13391  FDEF 38 44 44 44     .BYTE  $38,$44,$44,$44,$20  ; c
13391  FDF3 20 
13392  FDF4 38 44 44 48     .BYTE  $38,$44,$44,$48,$7F  ; d
13392  FDF8 7F 
13393  FDF9 38 54 54 54     .BYTE  $38,$54,$54,$54,$18  ; e
13393  FDFD 18 
13394  FDFE 00 08 7E 09     .BYTE  $00,$08,$7E,$09,$02  ; f
13394  FE02 02 
13395  FE03 08 54 54 3C     .BYTE  $08,$54,$54,$3C,$00  ; g
13395  FE07 00 
13396  FE08 7F 04 04 78     .BYTE  $7F,$04,$04,$78,$00  ; h
13396  FE0C 00 
13397  FE0D 00 00 7D 00     .BYTE  $00,$00,$7D,$00,$00  ; i
13397  FE11 00 
13398  FE12 20 40 44 3D     .BYTE  $20,$40,$44,$3D,$00  ; j
13398  FE16 00 
13399  FE17 7F 10 28 44     .BYTE  $7F,$10,$28,$44,$00  ; k
13399  FE1B 00 
13400  FE1C 00 00 7F 00     .BYTE  $00,$00,$7F,$00,$00  ; l
13400  FE20 00 
13401  FE21 78 04 78 04     .BYTE  $78,$04,$78,$04,$78  ; m
13401  FE25 78 
13402  FE26 7C 08 04 04     .BYTE  $7C,$08,$04,$04,$78  ; n
13402  FE2A 78 
13403  FE2B 38 44 44 44     .BYTE  $38,$44,$44,$44,$38  ; o
13403  FE2F 38 
13404  FE30 7C 14 14 14     .BYTE  $7C,$14,$14,$14,$08  ; p
13404  FE34 08 
13405  FE35 18 24 14 7C     .BYTE  $18,$24,$14,$7C,$40  ; q
13405  FE39 40 
13406  FE3A 7C 08 04 04     .BYTE  $7C,$08,$04,$04,$00  ; r
13406  FE3E 00 
13407  FE3F 48 54 54 54     .BYTE  $48,$54,$54,$54,$20  ; s
13407  FE43 20 
13408  FE44 04 3E 44 20     .BYTE  $04,$3E,$44,$20,$00  ; t
13408  FE48 00 
13409  FE49 3C 40 40 20     .BYTE  $3C,$40,$40,$20,$7C  ; u
13409  FE4D 7C 
13410  FE4E 1C 20 40 20     .BYTE  $1C,$20,$40,$20,$1C  ; v
13410  FE52 1C 
13411  FE53 3C 40 30 40     .BYTE  $3C,$40,$30,$40,$3C  ; w
13411  FE57 3C 
13412  FE58 44 24 7C 48     .BYTE  $44,$24,$7C,$48,$44  ; x
13412  FE5C 44 
13413  FE5D 0C 50 50 3C     .BYTE  $0C,$50,$50,$3C,$00  ; y
13413  FE61 00 
13414  FE62 44 64 54 4C     .BYTE  $44,$64,$54,$4C,$44  ; z
13414  FE66 44 
13415  FE67 00 08 77 41     .BYTE  $00,$08,$77,$41,$00  ; 
13415  FE6B 00 
13416  FE6C 00 00 77 00     .BYTE  $00,$00,$77,$00,$00  ; 
13416  FE70 00 
13417  FE71 00 41 77 08     .BYTE  $00,$41,$77,$08,$00  ; 
13417  FE75 00 
13418  FE76 08 04 08 10     .BYTE  $08,$04,$08,$10,$08  ; 
13418  FE7A 08 
13419  FE7B FF FF FF FF     .BYTE  $FF,$FF,$FF,$FF,$FF  ; Cursor block
13419  FE7F FF 
13420  FE80             
13421  FE80             
13422  FE80             
13423  FE80             ;------------------------------------------------------------------------------
13424  FE80             ; $FE80 - Keyboard layout (basic function)
13425  FE80             ;------------------------------------------------------------------------------
13426  FE80             KB_LAYOUT_NORM: ; 
13427  FE80 0B 4E 59 01     .BYTE  $0B,$4E,$59,$01,$48,$38,$35,$32
13427  FE84 48 38 35 32 
13428  FE88 09 58 57 11     .BYTE  $09,$58,$57,$11,$53,$0F,$2D,$2E
13428  FE8C 53 0F 2D 2E 
13429  FE90 30 4D 55 15     .BYTE  $30,$4D,$55,$15,$4A,$37,$34,$31
13429  FE94 4A 37 34 31 
13430  FE98 0D 28 49 16     .BYTE  $0D,$28,$49,$16,$4B,$4F,$4C,$29
13430  FE9C 4B 4F 4C 29 
13431  FEA0 19 43 45 12     .BYTE  $19,$43,$45,$12,$44,$2F,$2A,$2B
13431  FEA4 44 2F 2A 2B 
13432  FEA8 20 56 52 13     .BYTE  $20,$56,$52,$13,$46,$50,$08,$3D
13432  FEAC 46 50 08 3D 
13433  FEB0 02 5A 51 1B     .BYTE  $02,$5A,$51,$1B,$41,$18,$1F,$0C
13433  FEB4 41 18 1F 0C 
13434  FEB8 0A 42 54 14     .BYTE  $0A,$42,$54,$14,$47,$39,$36,$33
13434  FEBC 47 39 36 33 
13435  FEC0             
13436  FEC0             
13437  FEC0             
13438  FEC0             ;------------------------------------------------------------------------------
13439  FEC0             ; $FEC0 - Keyboard layout (shift function)
13440  FEC0             ;------------------------------------------------------------------------------
13441  FEC0             KB_LAYOUT_SH: ; 
13442  FEC0 5B 6E 79 01     .BYTE  $5B,$6E,$79,$01,$68,$38,$35,$32
13442  FEC4 68 38 35 32 
13443  FEC8 09 78 77 21     .BYTE  $09,$78,$77,$21,$73,$0F,$2C,$2E
13443  FECC 73 0F 2C 2E 
13444  FED0 30 6D 75 25     .BYTE  $30,$6D,$75,$25,$6A,$37,$34,$31
13444  FED4 6A 37 34 31 
13445  FED8 0D 3C 69 26     .BYTE  $0D,$3C,$69,$26,$6B,$6F,$6C,$3E
13445  FEDC 6B 6F 6C 3E 
13446  FEE0 19 63 65 22     .BYTE  $19,$63,$65,$22,$64,$3F,$3A,$3B
13446  FEE4 64 3F 3A 3B 
13447  FEE8 5E 76 72 23     .BYTE  $5E,$76,$72,$23,$66,$70,$1D,$40
13447  FEEC 66 70 1D 40 
13448  FEF0 02 7A 71 1B     .BYTE  $02,$7A,$71,$1B,$61,$1A,$1E,$1C
13448  FEF4 61 1A 1E 1C 
13449  FEF8 5D 62 74 24     .BYTE  $5D,$62,$74,$24,$67,$39,$36,$33
13449  FEFC 67 39 36 33 
13450  FF00             
13451  FF00             
13452  FF00             
13453  FF00             ;------------------------------------------------------------------------------
13454  FF00             ; $FF00 - Table for CALL vectors
13455  FF00             ;------------------------------------------------------------------------------
13456  FF00             CALL_VECTORS: ; $FF00                        Vector>Target, Vector>Target, Vector>Target, Vector>Target
13457  FF00 DC B7 DC B6     .BYTE  $DC,$B7,$DC,$B6,$DC,$C6,$D0,$65 ; $FF(00)>$DCB7, $FF(02)>$DCB6, $FF(04)>$DCC6, $FF(06)>$D065
13457  FF04 DC C6 D0 65 
13458  FF08 DD D9 DE 5E     .BYTE  $DD,$D9,$DE,$5E,$DE,$97,$D4,$61 ; $FF(08)>$DDD9, $FF(0A)>$DE5E, $FF(0C)>$DE97, $FF(0E)>$D461
13458  FF0C DE 97 D4 61 
13459  FF10 DD 2D DF 93     .BYTE  $DD,$2D,$DF,$93,$DF,$FA,$DF,$F5 ; $FF(10)>$DD2D, $FF(12)>$DF93, $FF(14)>$DFFA, $FF(16)>$DFF5
13459  FF14 DF FA DF F5 
13460  FF18 DF 80 D2 E6     .BYTE  $DF,$80,$D2,$E6,$FA,$89,$FB,$2A ; $FF(18)>$DF80, $FF(1A)>$D2E6, $FF(1C)>$FA89, $FF(1E)>$FB2A
13460  FF1C FA 89 FB 2A 
13461  FF20 DF 72 DF 63     .BYTE  $DF,$72,$DF,$63,$DE,$AF,$DB,$87 ; $FF(20)>$DF72, $FF(22)>$DF63, $FF(24)>$DEAF, $FF(26)>$DB87
13461  FF24 DE AF DB 87 
13462  FF28 DB B1 D0 3E     .BYTE  $DB,$B1,$D0,$3E,$DC,$A6,$D6,$C0 ; $FF(28)>$DBB1, $FF(2A)>$D03E, $FF(2C)>$DCA6, $FF(2E)>$D6C0
13462  FF2C DC A6 D6 C0 
13463  FF30 DC 16 D0 71     .BYTE  $DC,$16,$D0,$71,$DF,$23,$DF,$0F ; $FF(30)>$DC16, $FF(32)>$D071, $FF(34)>$DF23, $FF(36)>$DF0F
13463  FF34 DF 23 DF 0F 
13464  FF38 CE 9F CF FB     .BYTE  $CE,$9F,$CF,$FB,$FA,$74,$FB,$9D ; $FF(38)>$CE9F, $FF(3A)>$CFFB, $FF(3C)>$FA74, $FF(3E)>$FB9D
13464  FF3C FA 74 FB 9D 
13465  FF40 C4 01 CA 58     .BYTE  $C4,$01,$CA,$58,$CA,$7A,$CA,$80 ; $FF(40)>$C401, $FF(42)>$CA58, $FF(44)>$CA7A, $FF(46)>$CA80
13465  FF44 CA 7A CA 80 
13466  FF48 DC F9 DC FD     .BYTE  $DC,$F9,$DC,$FD,$DC,$E9,$DC,$ED ; $FF(48)>$DCF9, $FF(4A)>$DCFD, $FF(4C)>$DCE9, $FF(4E)>$DCED
13466  FF4C DC E9 DC ED 
13467  FF50 DA 71 F6 63     .BYTE  $DA,$71,$F6,$63,$F7,$B0,$F7,$3D ; $FF(50)>$DA71, $FF(52)>$F663, $FF(54)>$F7B0, $FF(56)>$F73D
13467  FF54 F7 B0 F7 3D 
13468  FF58 F0 84 E5 73     .BYTE  $F0,$84,$E5,$73,$F6,$1B,$F7,$A7 ; $FF(58)>$F084, $FF(5A)>$E573, $FF(5C)>$F61B, $FF(5E)>$F7A7
13468  FF5C F6 1B F7 A7 
13469  FF60 F6 B4 F8 8B     .BYTE  $F6,$B4,$F8,$8B,$F7,$B5,$F7,$B9 ; $FF(60)>$F6B4, $FF(62)>$F88B, $FF(64)>$F7B5, $FF(66)>$F7B9
13469  FF64 F7 B5 F7 B9 
13470  FF68 F7 15 F8 8F     .BYTE  $F7,$15,$F8,$8F,$F6,$FB,$F0,$80 ; $FF(68)>$F715, $FF(6A)>$F88F, $FF(6C)>$F6FB, $FF(6E)>$F080
13470  FF6C F6 FB F0 80 
13471  FF70 F7 47 F7 CE     .BYTE  $F7,$47,$F7,$CE,$F7,$75,$F7,$5F ; $FF(70)>$F747, $FF(72)>$F7CE, $FF(74)>$F775, $FF(76)>$F75F
13471  FF74 F7 75 F7 5F 
13472  FF78 F7 2F F7 DD     .BYTE  $F7,$2F,$F7,$DD,$F6,$E6,$F0,$1A ; $FF(78)>$F72F, $FF(7A)>$F7DD, $FF(7C)>$F6E6, $FF(7E)>$F01A
13472  FF7C F6 E6 F0 1A 
13473  FF80 F7 07 F7 29     .BYTE  $F7,$07,$F7,$29,$EF,$00,$EB,$40 ; $FF(80)>$F707, $FF(82)>$F729, $FF(84)>$EF00, $FF(86)>$EB40
13473  FF84 EF 00 EB 40 
13474  FF88 ED F6 ED 5B     .BYTE  $ED,$F6,$ED,$5B,$EE,$1F,$ED,$B1 ; $FF(88)>$EDF6, $FF(8A)>$ED5B, $FF(8C)>$EE1F, $FF(8E)>$EDB1
13474  FF8C EE 1F ED B1 
13475  FF90 ED AB ED 00     .BYTE  $ED,$AB,$ED,$00,$EC,$5C,$EA,$78 ; $FF(90)>$EDAB, $FF(92)>$ED00, $FF(94)>$EC5C, $FF(96)>$EA78
13475  FF94 EC 5C EA 78 
13476  FF98 EC 74 EC EB     .BYTE  $EC,$74,$EC,$EB,$EC,$B7,$E4,$A0 ; $FF(98)>$EC74, $FF(9A)>$ECEB, $FF(9C)>$ECB7, $FF(9E)>$E4A0
13476  FF9C EC B7 E4 A0 
13477  FFA0 E2 34 E6 55     .BYTE  $E2,$34,$E6,$55,$B8,$88,$E4,$51 ; $FF(A0)>$E234, $FF(A2)>$E655, $FF(A4)>$B888, $FF(A6)>$E451
13477  FFA4 B8 88 E4 51 
13478  FFA8 B8 8B B8 8E     .BYTE  $B8,$8B,$B8,$8E,$E8,$8C,$B8,$91 ; $FF(A8)>$B88B, $FF(AA)>$B88E, $FF(AC)>$E88C, $FF(AE)>$B891
13478  FFAC E8 8C B8 91 
13479  FFB0 B8 94 B8 97     .BYTE  $B8,$94,$B8,$97,$B8,$9A,$B8,$9D ; $FF(B0)>$B894, $FF(B2)>$B897, $FF(B4)>$B89A, $FF(B6)>$B89D
13479  FFB4 B8 9A B8 9D 
13480  FFB8 B8 A0 F7 63     .BYTE  $B8,$A0,$F7,$63,$E4,$B7,$E4,$A8 ; $FF(B8)>$B8A0, $FF(BA)>$F763, $FF(BC)>$E4B7, $FF(BE)>$E4A8
13480  FFBC E4 B7 E4 A8 
13481  FFC0 DD 08 DC D4     .BYTE  $DD,$08,$DC,$D4,$DC,$D5,$DD,$13 ; $FF(C0)>$DD08, $FF(C2)>$DCD4, $FF(C4)>$DCD5, $FF(C6)>$DD13
13481  FFC4 DC D5 DD 13 
13482  FFC8 DC C5 C0 01     .BYTE  $DC,$C5,$C0,$01,$DD,$C8,$D4,$5D ; $FF(C8)>$DCC5, $FF(CA)>$C001, $FF(CC)>$DDC8, $FF(CE)>$D45D
13482  FFCC DD C8 D4 5D 
13483  FFD0 D5 F9 DD 1A     .BYTE  $D5,$F9,$DD,$1A,$DE,$E3,$DE,$D1 ; $FF(D0)>$D5F9, $FF(D2)>$DD1A, $FF(D4)>$DEE3, $FF(D6)>$DED1
13483  FFD4 DE E3 DE D1 
13484  FFD8 DF 3B C0 0E     .BYTE  $DF,$3B,$C0,$0E,$DE,$BC,$D6,$DF ; $FF(D8)>$DF3B, $FF(DA)>$C00E, $FF(DC)>$DEBC, $FF(DE)>$D6DF
13484  FFDC DE BC D6 DF 
13485  FFE0 CD 8B C4 00     .BYTE  $CD,$8B,$C4,$00,$CD,$89,$F7,$0D ; $FF(E0)>$CD8B, $FF(E2)>$C400, $FF(E4)>$DEBC, $FF(E6)>$F70D
13485  FFE4 CD 89 F7 0D 
13486  FFE8 F6 61 F7 9C     .BYTE  $F6,$61,$F7,$9C,$F7,$57,$F7,$CC ; $FF(E8)>$F661, $FF(EA)>$F79C, $FF(EC)>$F757, $FF(EE)>$F7CC
13486  FFEC F7 57 F7 CC 
13487  FFF0 EF BA EE 71     .BYTE  $EF,$BA,$EE,$71,$DB,$BC,$DD,$B5 ; $FF(F0)>$EFBA, $FF(F2)>$EE71, $FF(F4)>$D8BC, $FF(F6)>$DDB5
13487  FFF4 DB BC DD B5 
13488  FFF8 E1 71 E2 2C     .BYTE  $E1,$71,$E2,$2C,$E2,$2B,$E0,$00 ; $FF(F8)>$E171, $FF(FA)>$E22C, $FF(FC)>$E22B, $FF(FE)>$E000
13488  FFFC E2 2B E0 00 
13489  10000             
13490  10000             .END
tasm: Number of errors = 0
