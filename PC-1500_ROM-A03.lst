0001   0000             ; PC-1500_ROM-A03.lh5801.asm
0002   0000             ; PEEK &C443=59 (&3B). PEEK &C5BD=129 (&81). 
0003   0000             ; Disassembly of ROM version 
0004   0000             ; To fold: Hightlight Ctrl+K Ctrl+,
0005   0000             ;
0006   0000             
0007   0000             ; PC-1500 versions via CGH
0008   0000             ; Checksum  Peeks     : Version    - Notes
0009   0000             ; &B1D9     {56, 129} : A01 = ROM0 - PC1500 (early-mid 1982) -> PEEK &E2B9 <> 56, which makes the keyboard driver unusable.
0010   0000             ; &NNNN     {xx, yy}  : A02 = ROM? - No information or to be specified.
0011   0000             ; &AE48     {59, 129} : A03 = ROM1 - PC1500 (12/1982) = PC2
0012   0000             ; &AA1E     {59, 74}  : A04 = ROM2 - PC1500 = PC1500A = PC2
0013   0000             ; &7CCD     {xx, yy}  : A0x = ROM(3) ? PC1600 (A priori the ROM1500 in the PC1600 is different)
0014   0000             ; (NB: the values in curly brackets are the results of PEEK &C443 and PEEK &C5BD respectively).
0015   0000             
0016   0000             ; The code to calculate the ROM checksum:
0017   0000             ; POKE &78C0,&34,&08,&0A,&2A,&68,&C0,&65,&FD,&CA,&6C,&00,&99,&07,&FB,&9A
0018   0000             ; Then do CALL &78C0,X as an output, the checksum is in X. If X is negative, press 65536-X
0019   0000             
0020   0000             #INCLUDE    "lib/PC-1500.lib"
0001+  0000              ; PC-1500 library file
0002+  0000             RAM_ST            = $4000 ; Start of RAM w/o RAM expansion
0003+  0000             RESMEM_ST         = $4008 ; Reserve memroy area area w/o RAM expansion (4008-40C4)
0004+  0000             PRGMEM_ST         = $40C5 ; Start of program memory w/o RAM expansion
0005+  0000             RAM_END           = $47FF ; End of RAM for stock, CE-151, CE-159
0006+  0000             SHADOW_RAM        = $7000 ; Shadow RAM. 7600-77FF mirrored at 7000-71FF, 7200-73FF, 7400-75FF
0007+  0000             SHADOW_RAM_SIZE   = $0600 ; 
0008+  0000             DISP_BUFF         = $7600 ; Display Buffer (7600-774F)
0009+  0000             DISP_BUFF_SIZE    = $0150 ; 
0010+  0000             STRING_VARS       = $7650 ; Fixed String variables (7650-77AF)
0011+  0000             STRING_VARS_SIZE  = $01AF ; 
0012+  0000             CPU_STACK         = $7800 ; CPU stack (7800-784F)
0013+  0000             CPU_STACK_SIZE    = $50   ; 
0014+  0000             KATAFLAGS         = $785D ; Katakana displayed flags
0015+  0000             KATACHAR          = $785E ; Address of Katakana character codes (H)
0016+  0000             ST_ROM_MOD        = $7860 ; 
0017+  0000             ROM_ST_H          = $7861 ; Start of Basic program in ROM module (H)
0018+  0000             ROM_ST_L          = $7862 ; Start of Basic program in ROM module (L)
0019+  0000             RAM_ST_H          = $7863 ; Start of RAM pointer (H)
0020+  0000             RAM_END_H         = $7864 ; End of RAM pointer (H)
0021+  0000             BASPRG_ST_H       = $7865 ; Start of Basic program in RAM (H)
0022+  0000             BASPRG_ST_L       = $7866 ; Start of Basic program in RAM (L)
0023+  0000             BASPRG_END_H      = $7867 ; End of Basic program in RAM (H)
0024+  0000             BASPRG_END_L      = $7868 ; End of Basic program in RAM (L)
0025+  0000             BASPRG_EDT_H      = $7869 ; Start of Basic program edit (H)
0026+  0000             BASPRG_EDT_L      = $786A ; Start of Basic program edit (L)
0027+  0000             BEEP_PTR          = $786B ; BEEP and RMT flags
0028+  0000             RCLTEMPBUFF       = $786C ; RCL Temp buffer (786C-7870)
0029+  0000             RCLTEMPBUFF_SIZE  = $05   ; 
0030+  0000             WAIT_CFG          = $7871 ; WAIT setting
0031+  0000             WAIT_CTR_H        = $7872 ; WAIT time counter (H)
0032+  0000             WAIT_CTR_L        = $7873 ; WAIT time counter (L)
0033+  0000             CURSOR_ENA        = $7874 ; Flags: 01=Cursor enabled, 80=display currently saved 7B10-7BAB
0034+  0000             CURSOR_PTR        = $7875 ; CURSOR POINTER (current display column number)
0035+  0000             CHARPOS_LCD       = $7876 ; Character position number in display, with INPUT statement
0036+  0000             BEEP_FREQ         = $7878 ; BEEP frequency
0037+  0000             CASS_FLAG         = $7879 ; Cassette Operation Parameter (tape interface flag)
0038+  0000             CURSOR_BLNK       = $787C ; Flags: 01=blink cursor enabled, 80=a character is now blinked
0039+  0000             BLNKD_CHAR_CODE   = $787D ; Code of character blinked
0040+  0000             CURS_POS_NBUF_H   = $787E ; Position of blink cursor in buffer (H)
0041+  0000             CURS_POS_NBUF_L   = $787F ; Position of blink cursor in buffer (L)
0042+  0000             DISPARAM          = $7880 ; Display Parameter: determines display at READY
0043+  0000             STK_PTR_GSB_FOR   = $7882 ; Stack pointer for GOSUB and FOR
0044+  0000             CURVARADD_H       = $7883 ; Current variable address (H)
0045+  0000             CURVARADD_L       = $7884 ; Current variable address (L)
0046+  0000             CURVARTYPE        = $7885 ; Current variable type
0047+  0000             LASTVARADD_H      = $7886 ; Last variable address (H)
0048+  0000             LASTVARADD_L      = $7887 ; Last variable address (L)
0049+  0000             LASTVARTYPE       = $7888 ; Last variable type
0050+  0000             BREAKPARAM        = $788A ; BREAK flag parameter
0051+  0000             INBUFPTR_L        = $788B ; Input Buffer pointer (L)
0052+  0000             NUMARGS           = $788C ; Number of function input arguments, array dim 1/2
0053+  0000             TRACE_ON          = $788D ; TRACE ON/OFF pointer: 00=OFF, >0=ON 
0054+  0000             TRACE             = $788E ; TRACE Parameter
0055+  0000             FORNXT_STK_PTR    = $7890 ; FOR/NEXT stack pointer (L)
0056+  0000             GOSB_STK_PTR_L    = $7891 ; GOSUB stack pointer (L)
0057+  0000             BAS_DATA_STK_L    = $7892 ; BASIC DATA STACK pointer (L)
0058+  0000             BAS_PENOP_STK_L   = $7893 ; BASIC PENDING OP STACK pointer (L)
0059+  0000             STR_BUF_PTR_L     = $7894 ; String Buffer Pointer (L)
0060+  0000             USINGF            = $7895 ; USING F/F (format, decimal, comma, etc.)
0061+  0000             USINGM            = $7896 ; USING M integer part
0062+  0000             USING_CHR         = $7897 ; USING & character string
0063+  0000             USINGMD           = $7898 ; USING m decimal part
0064+  0000             VAR_START_H       = $7899 ; START OF VARIABLES in main memory (H)
0065+  0000             VAR_START_L       = $789A ; START OF VARIABLES in main memory (L)
0066+  0000             ERL               = $789B ; ERL, Error code
0067+  0000             CURR_LINE_H       = $789C ; Current line number (H)
0068+  0000             CURR_LINE_L       = $789D ; Current line number (L)
0069+  0000             CURR_TOP_H        = $789E ; Beginning address of current program (H)
0070+  0000             CURR_TOP_L        = $789F ; Beginning address of current program (L)
0071+  0000             PREV_ADD_H        = $78A0 ; Previous address (of preceeding line) (H)
0072+  0000             PREV_ADD_L        = $78A1 ; Previous address (of preceeding line) (L)
0073+  0000             PREV_LINE_H       = $78A2 ; Previous line number (H)
0074+  0000             PREV_LINE_L       = $78A3 ; Previous line number (L)
0075+  0000             PREV_TOP_H        = $78A4 ; Begginning of program containing previous line (H)
0076+  0000             PREV_TOP_L        = $78A5 ; Begginning of program containing previous line (L)
0077+  0000             SRCH_ADD_H        = $78A6 ; Address of linefound during search (H)
0078+  0000             SRCH_ADD_L        = $78A7 ; Address of linefound during search (L)
0079+  0000             SRCH_LINE_H       = $78A8 ; Line number found after search (H)
0080+  0000             SRCH_LINE_L       = $78A9 ; Line number found after search (L)
0081+  0000             SRCH_TOP_H        = $78AA ; Beginning of program containing SEARCH line (H)
0082+  0000             SRCH_TOP_L        = $78AB ; Beginning of program containing SEARCH line (L)
0083+  0000             BRK_ADD_H         = $78AC ; Break address (H)
0084+  0000             BRK_ADD_L         = $78AD ; Break address (L)
0085+  0000             BRK_LINE_H        = $78AE ; Break line number (H)
0086+  0000             BRK_LINE_L        = $78AF ; Break line number (L)
0087+  0000             BRK_TOP_H         = $78B0 ; Beginning of program containing BREAK line
0088+  0000             BRK_TOP_L         = $78B1 ; Beginning of program containing BREAK line
0089+  0000             ERR_ADD_H         = $78B2 ; Error address (H)
0090+  0000             ERR_ADD_L         = $78B3 ; Error address (L)
0091+  0000             ERR_LINE_H        = $78B4 ; Error line number (H)
0092+  0000             ERR_LINE_L        = $78B5 ; Error line number (L)
0093+  0000             ERR_TOP_H         = $78B6 ; Beginning address of program containing ERROR line (H)
0094+  0000             ERR_TOP_L         = $78B7 ; Beginning address of program containing ERROR line (L)
0095+  0000             ON_ERR_ADD_H      = $78B8 ; Address jumped to when error occures (H)
0096+  0000             ON_ERR_ADD_L      = $78B9 ; Address jumped to when error occures (L)
0097+  0000             ON_ERR_LINE_H     = $78BA ; Line number jumped to when error occures (H)
0098+  0000             ON_ERR_LINE_L     = $78BB ; Line number jumped to when error occures (L)
0099+  0000             ON_ERR_TOP_H      = $78BC ; Beginning of program containing ON ERROR line (H)
0100+  0000             ON_ERR_TOP_L      = $78BD ; Beginning of program containing ON ERROR line (L)
0101+  0000             DATA_PTR_H        = $78BE ; Pointer for data statement (H)
0102+  0000             DATA_PTR_L        = $78BF ; Pointer for data statement (H)
0103+  0000             FIXED_VARS        = $78C0 ; Fixed Variables (78C0-79CF)
0104+  0000             FIXED_VARS_SIZE   = $0110 ; 
0105+  0000             PU_PV             = $79D0 ; PU/PV flag, ROM Bank: 00=ROM 1, 01=ROM 2
0106+  0000             OPN               = $79D1 ; OPN device code: 60=LCD, 5C=CMT, 58=MGP. C4=LPRT, C0=COM
0107+  0000             UNDEF_REG_79FF    = $79FF ; LOCK mode: 00=LOCK, FF=UNLOCK
0108+  0000             ARX               = $7A00 ; Floating-Point accumulator
0109+  0000             ARX_SIZE          = $08   ; 
0110+  0000             ARZ               = $7A08 ; Scratch register (7A00-7A07)
0111+  0000             ARZ_SIZE          = $08   ; 
0112+  0000             ARY               = $7A10 ; Second operand (7A10-7A17)
0113+  0000             ARY_SIZE          = $08   ; 
0114+  0000             ARU               = $7A18 ; Scratch register (7A18-7A1F)
0115+  0000             ARU_SIZE          = $08   ; 
0116+  0000             ARV               = $7A20 ; Scratch register (7A2-7A27)
0117+  0000             ARV_SIZE          = $08   ; 
0118+  0000             ARW               = $7A28 ; Scratch register (7A28-7A2F)
0119+  0000             ARW_SIZE          = $08   ; 
0120+  0000             ARS               = $7A30 ; Temporary storage register (7A30-7A37)
0121+  0000             ARS_SIZE          = $08   ; 
0122+  0000             B_STACK           = $7A38 ; Basic Stack (7838-7AFF)
0123+  0000             B_STACK_SIZE      = $C8   ; 
0124+  0000             RND_VAL           = $7B00 ; Contain Random number value (7B00-7B07)
0125+  0000             RND_VAL_SIZE      =       ; S
0126+  0000             KEY_REPEAT        = $7B09 ; Key repeat speed
0127+  0000             APOW_CTR_H        = $7B0A ; Auto power down counter (H)
0128+  0000             APOW_CTR_M        = $7B0B ; Auto power down counter (M)
0129+  0000             APOW_CTR_L        = $7B0C ; Auto power down counter (L)
0130+  0000             CURS_BLNK_CTR     = $7B0D ; Cursor blink counter
0131+  0000             CURS_CTRL         = $7B0E ; Cursor Control Parameter
0132+  0000             KEY_LAST          = $7B0F ; Last pressed key code
0133+  0000             STR_BUF           = $7B10 ; String Buffer (7B10-7B5F)
0134+  0000             STR_BUF_SIZE      = $50   ; 
0135+  0000             OUT_BUF           = $7B60 ; Output Buffer (7B60-7BAF)
0136+  0000             OUT_BUF_SIZE      = $50   ; 
0137+  0000             IN_BUF            = $7BB0 ; Input Buffer (7BB0-7BFF)
0138+  0000             IN_BUF_SIZE       = $80   ; 
0139+  0000             
0140+  0000             PC1500_DIV_RESET  = $F004 ; PC1500_DIVIDER_RESET (CE1)
0141+  0000             PC1500_UREG_OUTP  = $F005 ; PC1500_U_REG_OUTPUT (CE1)
0142+  0000             PC1500_SER_XFR    = $F006 ; PC1500_SERIAL_XFR (CE1)
0143+  0000             PC1500_F_REG      = $F007 ; PC1500_F_REG_LD/DIV (CE1)
0144+  0000             PC1500_PRT_C      = $F008 ; PC1500_PRT_C (CE1)
0145+  0000             PC1500_G_REG      = $F009 ; PC1500_G_REG (CE1)
0146+  0000             PC1500_MSK_REG    = $F00A ; PC1500_MSK_REG (CE1)
0147+  0000             PC1500_IF_REG     = $F00B ; PC1500_IF_REG (CE1)
0148+  0000             PC1500_PRT_A_DIR  = $F00C ; PC1500_PRT_A_DIR (CE1)
0149+  0000             PC1500_PRT_B_DIR  = $F00D ; PC1500_PRT_B_DIR (CE1)
0150+  0000             PC1500_PRT_A      = $F00E ; PC1500_PRT_A (CE1)
0151+  0000             PC1500_PRT_B      = $F00F ; PC1500_PRT_B (CE1)0021   0000             ; #INCLUDE    "lib/CE-150.lib"
0022   0000             ; #INCLUDE    "lib/CE-158.lib"
0023   0000             ; #INCLUDE    "lib/CE-158N.lib"
0024   0000             #INCLUDE    "lib/PC-1500_Macros.lib"
0001+  0000             ; PC-1500 Macros
0002+  0000             ;------------------------------------------------------------------------------------------------------------
0003+  0000             ; Assembly macros used to encode arguments for lh5801 'macros' that take arguments inline after CALL
0004+  0000             
0005+  0000             #define EQU .EQU
0006+  0000             .MSFIRST
0007+  0000             
0008+  0000             COMMA:      EQU $2C                         ; ',' used for macros
0009+  0000             CR:         EQU $0D                         ; '/CR' used for macros
0010+  0000             DASH:       EQU $2D                         ; '-' used for macros
0011+  0000             EQUALS:     EQU $3D                         ; '-' used for macros
0012+  0000             HASH:       EQU $23                         ; '#' used for macros
0013+  0000             SEMI:       EQU $3B                         ; ';' used for macros
0014+  0000             QUOTE:      EQU $22                         ; '-' used for macros
0015+  0000             DOLLAR:     EQU $24                         ; '#' used for macros
0016+  0000             PERCENT:    EQU $25                         ; ';' used for macros
0017+  0000             
0018+  0000             
0019+  0000             TOK_OFF:    EQU $F19E                       ; OFF   command token
0020+  0000             TOK_ON:     EQU $F19C                       ; ON    command token
0021+  0000             TOK_TAB:    EQU $F0BB                       ; TAB   command token
0022+  0000             TOK_USING:  EQU $F085                       ; USING command token
0023+  0000             
0024+  0000             
0025+  0000             #define ABRF(n8)        .BYTE n8 - $ - 1    ; calculate forward branch
0026+  0000             #define ABYT(n8)        .BYTE n8            ; use byte verbatium
0027+  0000             #define ABYTL(n16)      .BYTE n16 & $FF     ; use byte verbatium
0028+  0000             #define ACHR(ch)        .BYTE ch            ; character
0029+  0000             #define AWRD(n16)       .WORD n16           ; use word value verbatum
0030+  0000             #define CNIB(n81,n82)   .BYTE ((n81 & $F0) | (n82 & $0F))   ; calculates control nibble
0031+  0000             #define HB(n16)         (n16 >> 8)          ; Return HB of 16bit value
0032+  0000             #define LB(n16)         (n16 & $FF)         ; Return HB of 16bit value
0033+  0000             #define HBO(n16,n8)     ((n16 + n8) >> 8)   ; Return HB of 16bit value
0034+  0000             #define LBO(n16,n8)     ((n16 + n8) & $FF)  ; Return HB of 16bit value
0035+  0000             
0036+  0000             ; CE-158 related
0037+  0000             #define HIGH_BANK       SPU \ SPV           ; Switch to High Bank
0038+  0000             #define LOW_BANK        RPU \ SPV           ; Switch to High Bank
0039+  0000             #define SETCOM_M        LDI A,$F9 \ STA (SETCOM_REG)    ; SETDEV to 2400,8,N,1
0040+  0000             #define SETDEV_M(n8)    LDI A,n8 \ STA (SETDEV_REG)     ; SETCOM to device passed
0041+  0000             #define SETOPN_M(n8)    LDI A,n8 \ STA (OPN)            ; Set OPN to n8 table
0042+  0000             
0043+  0000             KI:                 EQU $01                     ;
0044+  0000             DO:                 EQU $02                     ;
0045+  0000             PO:                 EQU $04                     ;
0046+  0000             CI:                 EQU $08                     ;
0047+  0000             CO:                 EQU $10                     ;
0048+  0000             U1:                 EQU $20                     ; U1, use UART 1 (Bit5=0=UART0, Bit5=1=UART1)
0049+  0000             PN:                 EQU $40                     ; PN, LPT port to input
0050+  0000             BP:                 EQU $80                     ; BP, enable BDP mode with U0
0051+  0000             
0052+  0000             #define ADDRCHK(add,location)        #if ($ > add)    ; check address
0053+  0000             #DEFCONT                     \!over_run
0054+  0000             #DEFCONT                     \.ECHO location
0055+  0000             #DEFCONT                     \.ECHO " address over run by "
0056+  0000             #DEFCONT                     \.ECHO ($ - add)
0057+  0000             #DEFCONT                     \.ECHO " bytes\r\n"
0058+  0000             #DEFCONT                     \#endif
0025   0000             
0026   0000             ; Modifications enabled by uncommenting #DEFINEs.
0027   0000             ; DEFINE  - Description
0028   0000             ; DEFINE  - Description
0029   0000             
0030   C000             .org $C000
0031   C000             
0032   C000             ; Marking for token table from C020
0033   C000             ST_MAIN_ROM: ; $C000
0034   C000 55              .BYTE  $55
0035   C001             
0036   C001             
0037   C001             
0038   C001             ;------------------------------------------------------------------------------
0039   C001             ; (CA) Transfer 16-bit value from X-Reg to memory page 7BXX
0040   C001             ;            Address: C001 (CA)
0041   C001             ;                     D1: sets low byte in memory page 78XX
0042   C001             ;   Entry parameters: None
0043   C001             ;
0044   C001             ; Modified registers: X-Reg was saved after (7801 f.). U-Reg points to the 
0045   C001             ;                     next address of 7801. Accumulator= XL
0046   C001             ;   Error conditions: None
0047   C001             ;------------------------------------------------------------------------------
0048   C001             SA_XREG_2RAM: ; $C001
0049   C001 FD 2A           POP  U
0050   C003 65              LIN  U
0051   C004 FD A8           PSH  U
0052   C006 2A              STA  UL
0053   C007 68 78           LDI  UH,$78
0054   C009 84              LDA  XH
0055   C00A 61              SIN  U
0056   C00B 04              LDA  XL
0057   C00C 2E              STA  (U)
0058   C00D 9A              RTN
0059   C00E             
0060   C00E             
0061   C00E             ; (DA) Variable address from U-Reg, length from AR-X to variable pointer
0062   C00E             SAVEVARPTR_ARX_SRC: ; $C00E
0063   C00E A5 7A 07        LDA  (ARX + $07)
0064   C011             
0065   C011             ; Store address from U-Reg and Accumulator.
0066   C011             SAVEVARPTR_A: ; $C011
0067   C011 AE 78 85        STA  (CURVARTYPE)   ; CURVARTYPE = $7885
0068   C014 24              LDA  UL
0069   C015 AE 78 84        STA  (CURVARADD_L)
0070   C018 A4              LDA  UH
0071   C019 AE 78 83        STA  (CURVARADD_H)
0072   C01C 9A              RTN
0073   C01D             
0074   C01D             
0075   C01D             ; Trace vector of this token table
0076   C01D             TRACE_VEC: ; $C01D
0077   C01D C4 AF           .BYTE  $C4,$AF
0078   C01F FF              .BYTE  $FF
0079   C020             
0080   C020             
0081   C020             
0082   C020             ; Auxiliary table for detecting Basic commands. The following addresses point to the 2nd letter of the Basic command, where the 1st letter of the commands in the token table has changed.
0083   C020             ST_BAS_TBL: ; $C020
0084   C020 C0 56 C0 99     .BYTE  $C0,$56,$C0,$99,$C0,$A2,$C0,$E2
0084   C024 C0 A2 C0 E2 
0085   C028 C1 0E C1 28     .BYTE  $C1,$0E,$C1,$28,$C1,$30,$00,$00
0085   C02C C1 30 00 00 
0086   C030 C1 63 00 00     .BYTE  $C1,$63,$00,$00,$00,$00,$C1,$87
0086   C034 00 00 C1 87 
0087   C038 C1 C2 C1 D3     .BYTE  $C1,$C2,$C1,$D3,$C1,$EC,$C2,$0A
0087   C03C C1 EC C2 0A 
0088   C040 00 00 C2 5F     .BYTE  $00,$00,$C2,$5F,$C2,$B8,$C2,$F6
0088   C044 C2 B8 C2 F6 
0089   C048 C3 2A C3 3F     .BYTE  $C3,$2A,$C3,$3F,$C3,$47,$00,$00
0089   C04C C3 47 00 00 
0090   C050 00 00 00 00     .BYTE  $00,$00,$00,$00
0091   C054             
0092   C054             
0093   C054             
0094   C054             ; TOKEN TABLE
0095   C054             TOKEN_TBL: ; $C054
0096   C054 B5 41 52 45     .BYTE  $B5,$41,$52,$45,$41,$44,$F1,$80
0096   C058 41 44 F1 80 
0097   C05C C6 84 A3 41     .BYTE  $C6,$84,$A3,$41,$4E,$44,$F1,$50
0097   C060 4E 44 F1 50 
0098   C064 CD 89 A3 41     .BYTE  $CD,$89,$A3,$41,$42,$53,$F1,$70
0098   C068 42 53 F1 70 
0099   C06C F5 97 A3 41     .BYTE  $F5,$97,$A3,$41,$54,$4E,$F1,$75
0099   C070 54 4E F1 75 
0100   C074 F4 96 A3 41     .BYTE  $F4,$96,$A3,$41,$53,$4E,$F1,$73
0100   C078 53 4E F1 73 
0101   C07C F4 9A A3 41     .BYTE  $F4,$9A,$A3,$41,$43,$53,$F1,$74
0101   C080 43 53 F1 74 
0102   C084 F4 92 A3 41     .BYTE  $F4,$92,$A3,$41,$53,$43,$F1,$60
0102   C088 53 43 F1 60 
0103   C08C D9 DD 84 41     .BYTE  $D9,$DD,$84,$41,$52,$55,$4E,$F1
0103   C090 52 55 4E F1 
0104   C094 81 C6 84 B4     .BYTE  $81,$C6,$84,$B4,$42,$45,$45,$50
0104   C098 42 45 45 50 
0105   C09C F1 82 E5 C1     .BYTE  $F1,$82,$E5,$C1,$D4,$43,$4F,$4E
0105   C0A0 D4 43 4F 4E 
0106   C0A4 54 F1 83 C8     .BYTE  $54,$F1,$83,$C8,$C7,$86,$43,$55
0106   C0A8 C7 86 43 55 
0107   C0AC 52 53 4F 52     .BYTE  $52,$53,$4F,$52,$F0,$84,$E8,$46
0107   C0B0 F0 84 E8 46 
0108   C0B4 C5 43 4C 45     .BYTE  $C5,$43,$4C,$45,$41,$52,$F1,$87
0108   C0B8 41 52 F1 87 
0109   C0BC C8 5F C3 43     .BYTE  $C8,$5F,$C3,$43,$4C,$53,$F0,$88
0109   C0C0 4C 53 F0 88 
0110   C0C4 E8 65 C3 43     .BYTE  $E8,$65,$C3,$43,$4F,$53,$F1,$7E
0110   C0C8 4F 53 F1 7E 
0111   C0CC F3 91 A4 43     .BYTE  $F3,$91,$A4,$43,$48,$52,$24,$F1
0111   C0D0 48 52 24 F1 
0112   C0D4 63 D9 B1 A4     .BYTE  $63,$D9,$B1,$A4,$43,$41,$4C,$4C
0112   C0D8 43 41 4C 4C 
0113   C0DC F1 8A C8 63     .BYTE  $F1,$8A,$C8,$63,$D3,$44,$49,$4D
0113   C0E0 D3 44 49 4D 
0114   C0E4 F1 8B C9 88     .BYTE  $F1,$8B,$C9,$88,$C6,$44,$45,$47
0114   C0E8 C6 44 45 47 
0115   C0EC 52 45 45 F1     .BYTE  $52,$45,$45,$F1,$8C,$C6,$97,$C3
0115   C0F0 8C C6 97 C3 
0116   C0F4 44 45 47 F1     .BYTE  $44,$45,$47,$F1,$65,$F5,$31,$A3
0116   C0F8 65 F5 31 A3 
0117   C0FC 44 4D 53 F1     .BYTE  $44,$4D,$53,$F1,$66,$F5,$64,$A4
0117   C100 66 F5 64 A4 
0118   C104 44 41 54 41     .BYTE  $44,$41,$54,$41,$F1,$8D,$C6,$84
0118   C108 F1 8D C6 84 
0119   C10C B3 45 4E 44     .BYTE  $B3,$45,$4E,$44,$F1,$8E,$C5,$0D
0119   C110 F1 8E C5 0D 
0120   C114 A3 45 58 50     .BYTE  $A3,$45,$58,$50,$F1,$78,$F1,$CB
0120   C118 F1 78 F1 CB 
0121   C11C A5 45 52 52     .BYTE  $A5,$45,$52,$52,$4F,$52,$F1,$B4
0121   C120 4F 52 F1 B4 
0122   C124 CD 89 B3 46     .BYTE  $CD,$89,$B3,$46,$4F,$52,$F1,$A5
0122   C128 4F 52 F1 A5 
0123   C12C C7 11 B4 47     .BYTE  $C7,$11,$B4,$47,$4F,$54,$4F,$F1
0123   C130 4F 54 4F F1 
0124   C134 92 C5 15 C5     .BYTE  $92,$C5,$15,$C5,$47,$4F,$53,$55
0124   C138 47 4F 53 55 
0125   C13C 42 F1 94 C6     .BYTE  $42,$F1,$94,$C6,$4E,$A6,$47,$50
0125   C140 4E A6 47 50 
0126   C144 52 49 4E 54     .BYTE  $52,$49,$4E,$54,$F0,$9F,$E7,$AC
0126   C148 F0 9F E7 AC 
0127   C14C C7 47 43 55     .BYTE  $C7,$47,$43,$55,$52,$53,$4F,$52
0127   C150 52 53 4F 52 
0128   C154 F0 93 E8 3E     .BYTE  $F0,$93,$E8,$3E,$C4,$47,$52,$41
0128   C158 C4 47 52 41 
0129   C15C 44 F1 86 C6     .BYTE  $44,$F1,$86,$C6,$A8,$D5,$49,$4E
0129   C160 A8 D5 49 4E 
0130   C164 50 55 54 F0     .BYTE  $50,$55,$54,$F0,$91,$C8,$FA,$C2
0130   C168 91 C8 FA C2 
0131   C16C 49 46 F1 96     .BYTE  $49,$46,$F1,$96,$C5,$B4,$A3,$49
0131   C170 C5 B4 A3 49 
0132   C174 4E 54 F1 71     .BYTE  $4E,$54,$F1,$71,$F5,$BE,$A6,$49
0132   C178 F5 BE A6 49 
0133   C17C 4E 4B 45 59     .BYTE  $4E,$4B,$45,$59,$24,$F1,$5C,$D9
0133   C180 24 F1 5C D9 
0134   C184 AA D4 4C 49     .BYTE  $AA,$D4,$4C,$49,$53,$54,$F0,$90
0134   C188 53 54 F0 90 
0135   C18C C9 6E 83 4C     .BYTE  $C9,$6E,$83,$4C,$4F,$47,$F1,$77
0135   C190 4F 47 F1 77 
0136   C194 F1 65 A2 4C     .BYTE  $F1,$65,$A2,$4C,$4E,$F1,$76,$F1
0136   C198 4E F1 76 F1 
0137   C19C 61 A3 4C 45     .BYTE  $61,$A3,$4C,$45,$54,$F1,$98,$C4
0137   C1A0 54 F1 98 C4 
0138   C1A4 58 A3 4C 45     .BYTE  $58,$A3,$4C,$45,$4E,$F1,$64,$D9
0138   C1A8 4E F1 64 D9 
0139   C1AC DD 85 4C 45     .BYTE  $DD,$85,$4C,$45,$46,$54,$24,$F1
0139   C1B0 46 54 24 F1 
0140   C1B4 7A D9 F3 C4     .BYTE  $7A,$D9,$F3,$C4,$4C,$4F,$43,$4B
0140   C1B8 4C 4F 43 4B 
0141   C1BC F1 B5 C9 68     .BYTE  $F1,$B5,$C9,$68,$D3,$4D,$45,$4D
0141   C1C0 D3 4D 45 4D 
0142   C1C4 F1 58 DA 5D     .BYTE  $F1,$58,$DA,$5D,$C4,$4D,$49,$44
0142   C1C8 C4 4D 49 44 
0143   C1CC 24 F1 7B D9     .BYTE  $24,$F1,$7B,$D9,$F3,$D4,$4E,$45
0143   C1D0 F3 D4 4E 45 
0144   C1D4 58 54 F1 9A     .BYTE  $58,$54,$F1,$9A,$C7,$05,$A3,$4E
0144   C1D8 C7 05 A3 4E 
0145   C1DC 4F 54 F1 6D     .BYTE  $4F,$54,$F1,$6D,$59,$9E,$A3,$4E
0145   C1E0 59 9E A3 4E 
0146   C1E4 45 57 F1 9B     .BYTE  $45,$57,$F1,$9B,$C8,$0A,$92,$4F
0146   C1E8 C8 0A 92 4F 
0147   C1EC 4E F1 9C C5     .BYTE  $4E,$F1,$9C,$C5,$E0,$A2,$4F,$52
0147   C1F0 E0 A2 4F 52 
0148   C1F4 F1 51 CD 89     .BYTE  $F1,$51,$CD,$89,$A3,$4F,$50,$4E
0148   C1F8 A3 4F 50 4E 
0149   C1FC F1 9D E4 57     .BYTE  $F1,$9D,$E4,$57,$C3,$4F,$46,$46
0149   C200 C3 4F 46 46 
0150   C204 F1 9E CD 89     .BYTE  $F1,$9E,$CD,$89,$B5,$50,$52,$49
0150   C208 B5 50 52 49 
0151   C20C 4E 54 F0 97     .BYTE  $4E,$54,$F0,$97,$E4,$EB,$C2,$50
0151   C210 E4 EB C2 50 
0152   C214 49 F1 5D F5     .BYTE  $49,$F1,$5D,$F5,$B5,$C5,$50,$45
0152   C218 B5 C5 50 45 
0153   C21C 45 4B 23 F1     .BYTE  $45,$4B,$23,$F1,$6E,$D9,$93,$A4
0153   C220 6E D9 93 A4 
0154   C224 50 45 45 4B     .BYTE  $50,$45,$45,$4B,$F1,$6F,$D9,$93
0154   C228 F1 6F D9 93 
0155   C22C A5 50 4F 4B     .BYTE  $A5,$50,$4F,$4B,$45,$23,$F1,$A0
0155   C230 45 23 F1 A0 
0156   C234 C7 78 C4 50     .BYTE  $C7,$78,$C4,$50,$4F,$4B,$45,$F1
0156   C238 4F 4B 45 F1 
0157   C23C A1 C7 77 C5     .BYTE  $A1,$C7,$77,$C5,$50,$4F,$49,$4E
0157   C240 50 4F 49 4E 
0158   C244 54 F1 68 EE     .BYTE  $54,$F1,$68,$EE,$CB,$A5,$50,$41
0158   C248 CB A5 50 41 
0159   C24C 55 53 45 F1     .BYTE  $55,$53,$45,$F1,$A2,$E6,$A5,$A5
0159   C250 A2 E6 A5 A5 
0160   C254 50 20 20 20     .BYTE  $50,$20,$20,$20,$20,$F1,$A3,$CD
0160   C258 20 F1 A3 CD 
0161   C25C 89 B3 52 55     .BYTE  $89,$B3,$52,$55,$4E,$F1,$A4,$C8
0161   C260 4E F1 A4 C8 
0162   C264 B4 86 52 45     .BYTE  $B4,$86,$52,$45,$54,$55,$52,$4E
0162   C268 54 55 52 4E 
0163   C26C F1 99 C6 AC     .BYTE  $F1,$99,$C6,$AC,$A4,$52,$45,$41
0163   C270 A4 52 45 41 
0164   C274 44 F1 A6 C7     .BYTE  $44,$F1,$A6,$C7,$B8,$A7,$52,$45
0164   C278 B8 A7 52 45 
0165   C27C 53 54 4F 52     .BYTE  $53,$54,$4F,$52,$45,$F1,$A7,$C7
0165   C280 45 F1 A7 C7 
0166   C284 A2 A3 52 4E     .BYTE  $A2,$A3,$52,$4E,$44,$F1,$7C,$F5
0166   C288 44 F1 7C F5 
0167   C28C DD A6 52 41     .BYTE  $DD,$A6,$52,$41,$4E,$44,$4F,$4D
0167   C290 4E 44 4F 4D 
0168   C294 F1 A8 F6 41     .BYTE  $F1,$A8,$F6,$41,$C6,$52,$49,$47
0168   C298 C6 52 49 47 
0169   C29C 48 54 24 F1     .BYTE  $48,$54,$24,$F1,$72,$D9,$F3,$C6
0169   C2A0 72 D9 F3 C6 
0170   C2A4 52 41 44 49     .BYTE  $52,$41,$44,$49,$41,$4E,$F1,$AA
0170   C2A8 41 4E F1 AA 
0171   C2AC C6 A4 C3 52     .BYTE  $C6,$A4,$C3,$52,$45,$4D,$F1,$AB
0171   C2B0 45 4D F1 AB 
0172   C2B4 C6 76 B4 53     .BYTE  $C6,$76,$B4,$53,$54,$4F,$50,$F1
0172   C2B8 54 4F 50 F1 
0173   C2BC AC C4 B6 A3     .BYTE  $AC,$C4,$B6,$A3,$53,$51,$52,$F1
0173   C2C0 53 51 52 F1 
0174   C2C4 6B F0 E9 A3     .BYTE  $6B,$F0,$E9,$A3,$53,$49,$4E,$F1
0174   C2C8 53 49 4E F1 
0175   C2CC 7D F3 A2 A3     .BYTE  $7D,$F3,$A2,$A3,$53,$47,$4E,$F1
0175   C2D0 53 47 4E F1 
0176   C2D4 79 F5 9D A4     .BYTE  $79,$F5,$9D,$A4,$53,$54,$52,$24
0176   C2D8 53 54 52 24 
0177   C2DC F1 61 D9 CE     .BYTE  $F1,$61,$D9,$CE,$A6,$53,$54,$41
0177   C2E0 A6 53 54 41 
0178   C2E4 54 55 53 F1     .BYTE  $54,$55,$53,$F1,$67,$5A,$44,$A4
0178   C2E8 67 5A 44 A4 
0179   C2EC 53 54 45 50     .BYTE  $53,$54,$45,$50,$F1,$AD,$CD,$89
0179   C2F0 F1 AD CD 89 
0180   C2F4 B4 54 48 45     .BYTE  $B4,$54,$48,$45,$4E,$F1,$AE,$CD
0180   C2F8 4E F1 AE CD 
0181   C2FC 89 A3 54 41     .BYTE  $89,$A3,$54,$41,$4E,$F1,$7F,$F3
0181   C300 4E F1 7F F3 
0182   C304 9E A4 54 49     .BYTE  $9E,$A4,$54,$49,$4D,$45,$F1,$5B
0182   C308 4D 45 F1 5B 
0183   C30C DE 82 C4 54     .BYTE  $DE,$82,$C4,$54,$52,$4F,$4E,$F1
0183   C310 52 4F 4E F1 
0184   C314 AF C6 8C C5     .BYTE  $AF,$C6,$8C,$C5,$54,$52,$4F,$46
0184   C318 54 52 4F 46 
0185   C31C 46 F1 B0 C6     .BYTE  $46,$F1,$B0,$C6,$93,$C2,$54,$4F
0185   C320 93 C2 54 4F 
0186   C324 F1 B1 CD 89     .BYTE  $F1,$B1,$CD,$89,$B5,$55,$53,$49
0186   C328 B5 55 53 49 
0187   C32C 4E 47 F0 85     .BYTE  $4E,$47,$F0,$85,$C6,$7C,$C6,$55
0187   C330 C6 7C C6 55 
0188   C334 4E 4C 4F 43     .BYTE  $4E,$4C,$4F,$43,$4B,$F1,$B6,$C9
0188   C338 4B F1 B6 C9 
0189   C33C 6A D3 56 41     .BYTE  $6A,$D3,$56,$41,$4C,$F1,$62,$D9
0189   C340 4C F1 62 D9 
0190   C344 D7 94 57 41     .BYTE  $D7,$94,$57,$41,$49,$54,$F1,$B3
0190   C348 49 54 F1 B3 
0191   C34C E8 6A D0        .BYTE  $E8,$6A,$D0
0192   C34F             
0193   C34F             
0194   C34F             
0195   C34F             ; Messages
0196   C34F             SM_NEW0: ; $C34F 
0197   C34F 4E 45 57 30     .BYTE  $4E,$45,$57,$30,$3F,$20,$3A,$43
0197   C353 3F 20 3A 43 
0198   C357 48 45 43 4B     .BYTE  $48,$45,$43,$4B,$20              ; NEW0? :CHECK
0198   C35B 20 
0199   C35C             
0200   C35C             SM_BREAK: ; $C35C
0201   C35C 42 52 45 41     .BYTE  $42,$52,$45,$41,$4B,$20          ; BREAK
0201   C360 4B 20 
0202   C362             
0203   C362             SM_IN: ; $C362
0204   C362 49 4E 20        .BYTE  $49,$4E,$20                      ; IN
0205   C365             
0206   C365             SM_ERROR: ; $C36B
0207   C365 45 52 52 4F     .BYTE  $45,$52,$52,$4F,$52,$20          ; Error
0207   C369 52 20 
0208   C36B             
0209   C36B             
0210   C36B             
0211   C36B             ; Table for occupied DEF keys
0212   C36B             DEFKEY_TBL: ; $C36B
0213   C36B 20 41 42 43     .BYTE  $20,$41,$42,$43,$44,$F0,$46,$47
0213   C36F 44 F0 46 47 
0214   C373 48 F0 4A 4B     .BYTE  $48,$F0,$4A,$4B,$4C,$4D,$4E,$F0
0214   C377 4C 4D 4E F0 
0215   C37B F0 F0 F1 53     .BYTE  $F0,$F0,$F1,$53,$F1,$F0,$56,$F0
0215   C37F F1 F0 56 F0 
0216   C383 58 F1 5A 20     .BYTE  $58,$F1,$5A,$20,$20,$3D,$20,$20
0216   C387 20 3D 20 20 
0217   C38B             
0218   C38B             
0219   C38B             
0220   C38B             ; Address table for editor control characters
0221   C38B             EDCTRL_TBL: ; $C38B
0222   C38B CA 64 CB 61     .BYTE  $CA,$64,$CB,$61,$CA,$55,$CA,$80
0222   C38F CA 55 CA 80 
0223   C393 CB C7 CB CF     .BYTE  $CB,$C7,$CB,$CF,$CB,$9C,$CB,$A0
0223   C397 CB 9C CB A0 
0224   C39B CC 22 CB 69     .BYTE  $CC,$22,$CB,$69,$CC,$48,$CC,$38
0224   C39F CC 48 CC 38 
0225   C3A3 CB E4 CC C1     .BYTE  $CB,$E4,$CC,$C1,$C4
0225   C3A7 C4 
0226   C3A8             
0227   C3A8             
0228   C3A8             
0229   C3A8             ; Operator table for formula evaluation of the subroutines (DE), (D6DF)
0230   C3A8             FVAL_TBLE: ; $C3A8
0231   C3A8 C6 CD 71 2B     .BYTE  $C6,$CD,$71,$2B,$81,$3F,$08,$00
0231   C3AC 81 3F 08 00 
0232   C3B0 2D 81 3F 08     .BYTE  $2D,$81,$3F,$08,$00,$2A,$82,$22
0232   C3B4 00 2A 82 22 
0233   C3B8 04 E2 2F 82     .BYTE  $04,$E2,$2F,$82,$22,$04,$E2,$5E
0233   C3BC 22 04 E2 5E 
0234   C3C0 84 22 04 E2     .BYTE  $84,$22,$04,$E2,$3D,$80,$22,$04
0234   C3C4 3D 80 22 04 
0235   C3C8 32 3C 80 22     .BYTE  $32,$3C,$80,$22,$3D,$15,$3E,$80
0235   C3CC 3D 15 3E 80 
0236   C3D0 22 3D 29 0D     .BYTE  $22,$3D,$29,$0D,$00,$22,$01,$E1
0236   C3D4 00 22 01 E1 
0237   C3D8 2C 60 22 01     .BYTE  $2C,$60,$22,$01,$E2,$28,$20,$1D
0237   C3DC E2 28 20 1D 
0238   C3E0 01 0A 29 10     .BYTE  $01,$0A,$29,$10,$22,$20,$E2,$2E
0238   C3E4 22 20 E2 2E 
0239   C3E8 00 1D 00 58     .BYTE  $00,$1D,$00,$58,$22,$00,$1D,$00
0239   C3EC 22 00 1D 00 
0240   C3F0 35 5D F1 1D     .BYTE  $35,$5D,$F1,$1D,$00,$5A,$5B,$F1
0240   C3F4 00 5A 5B F1 
0241   C3F8 1D 10 64 26     .BYTE  $1D,$10,$64,$26,$00,$1D,$00,$39
0241   C3FC 00 1D 00 39 
0242   C400             
0243   C400             
0244   C400             ; (E2) - BASIC interpreter: Y-Reg points to command or line end
0245   C400             BASIC_INT: ; $ C400
0246   C400 C0              VEJ  (C0)
0247   C401             
0248   C401             ; (40) - Process command in U-Reg  
0249   C401 D8              VEJ  (D8)
0250   C402 89 05           BZR  BASIC_INT_1 ; $C409
0251   C404 6E 0D           CPI  UL,$0D
0252   C406 CB 42           VZS  ($42) ; *** orig VZS  ($42)($21) second argument wrong?
0253   C408 E4              VEJ  (E4)
0254   C409             
0255   C409             BASIC_INT_1: ; $C409
0256   C409 CD 04           VMJ  ($04) \ ABRF(BCMD_STOP_1) ; $C4C5
0256   C40B B9          
0257   C40C             
0258   C40C             BASIC_INT_7: ; $C40C
0259   C40C CD 18           VMJ  ($18)
0260   C40E             
0261   C40E             BASIC_INT_9: ; $C40E
0262   C40E AA 78 4F        LDI  S,(CPU_STACK + $4F)
0263   C411 83 17           BCS  BASIC_INT_2 ; $C42A
0264   C413             
0265   C413             BASIC_INT_8: ; $C413
0266   C413 B5 00           LDI  A,$00
0267   C415 CD 3E           VMJ  ($3E)
0268   C417 89 AC           BZR  BCMD_STOP_1 ; $C4C5
0269   C419 A5 7B 0E        LDA  (CURS_CTRL)
0270   C41C D9              SHL
0271   C41D 81 0B           BCR  BASIC_INT_2 ; $C42A
0272   C41F B7 C0           CPI  A,$C0       ; B7 C0
0273   C421 81 82           BCR  BCMD_LET_4  ; 81 82 $C4A5
0274   C423 BE E4 2C        SJP  (KEY2ASCII)
0275   C426 B7 0A           CPI  A,$0A
0276   C428 89 7B           BZR BCMD_LET_4  ; $C4A5
0277   C42A             
0278   C42A             BASIC_INT_2: ; $C42A
0279   C42A CD A6           VMJ  ($A6) ; *** orig VMJ  ($A6) ; ($A6)($53) second argument is bogus
0280   C42C 89 8C           BZR  BCMD_STOP_2 ; $C4BA
0281   C42E             
0282   C42E             BASIC_INT_11: ; $C42E
0283   C42E A5 78 9C        LDA  (CURR_LINE_H)
0284   C431 DD              INC  A
0285   C432 8B DC           BZS  BCMD_END_1  ; $C510
0286   C434 94              LDA  YH
0287   C435 D9              SHL
0288   C436 83 0C           BCS  BASIC_INT_3 ; $C444 $83 0A $C442
0289   C438             
0290   C438             BASIC_INT_10: ; $C438
0291   C438 B5 01           LDI  A,$01
0292   C43A CD 3E           VMJ  ($3E)
0293   C43C C9 00           VZR  ($00) \ ABYT($CD) \ ABYT($22) \ ABRF(BCMD_STOP_3) ; $C4C2
0293   C43E CD          
0293   C43F 22          
0293   C440 81          
0294   C441 05              LDA  (X)
0295   C442 9E 3B           BCH  BASIC_INT_1; $C409 
0296   C444             
0297   C444             BASIC_INT_3: ; $C442
0298   C444 D5              SHR
0299   C445 18              STA  YH
0300   C446             
0301   C446             BASIC_INT_12: ; $C446
0302   C446 C0              VEJ  (C0)
0303   C447             
0304   C447             BASIC_INT_6: ; $C447
0305   C447 AA 78 4F        LDI  S,(CPU_STACK + $4F)
0306   C44A 6C E0           CPI  UH,$E0
0307   C44C 81 09           BCR  BASIC_INT_4 ; $C457
0308   C44E 6E 80           CPI  UL,$80
0309   C450 81 04           BCR  BASIC_INT_5 ; $C456
0310   C452 CD 1C           VMJ  ($1C) \ ABYT($00)
0310   C454 00          
0311   C455 E0              VEJ  (E0)
0312   C456             
0313   C456             BASIC_INT_5: ; $C456
0314   C456 56              DEC  Y
0315   C457             
0316   C457             BASIC_INT_4: ; $C457
0317   C457 56              DEC  Y 
0318   C458             
0319   C458             
0320   C458             
0321   C458             ; BASIC command LET
0322   C458             BCMD_LET: ; $C458
0323   C458 D8              VEJ  (D8)
0324   C459 89 06           BZR  BCMD_LET_1 ; $C461
0325   C45B B5 02           LDI  A,$02
0326   C45D CD 3E           VMJ  ($3E)
0327   C45F 89 63           BZR  BCMD_STOP_4 ; $C4C4
0328   C461             
0329   C461             BCMD_LET_1: ; $C461
0330   C461 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_LET_2); $C489
0330   C462 58          
0330   C463 25          
0331   C464 DA              VEJ  (DA)
0332   C465 C2              VEJ  (C2) \ ACHR($3D) \ ABRF(BCMD_LET_3); $C499
0332   C466 3D          
0332   C467 31          
0333   C468 DE              VEJ  (DE) \ ABRF(BCMD_STOP_4) ; $C4C4
0333   C469 5A          
0334   C46A CD 08           VMJ  ($08) \ ABRF(BCMD_STOP_4) ; $C4C4
0334   C46C 57          
0335   C46D D8              VEJ  (D8)
0336   C46E 89 06           BZR  BCMD_LET_5 ; $C476
0337   C470                 
0338   C470             BCMD_LET_8: ; $C470  
0339   C470 B5 04           LDI  A,$04
0340   C472 CD 3E           VMJ  ($3E)
0341   C474 89 4E           BZR  BCMD_STOP_4 ; $C4C4
0342   C476             
0343   C476             BCMD_LET_5: ; $C476
0344   C476 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_LET_6) ; $C47B
0344   C477 2C          
0344   C478 02          
0345   C479 9E 1A           BCH BCMD_LET_1 ; $C461
0346   C47B             
0347   C47B             BCMD_LET_6: ; $C47B
0348   C47B B5 20           LDI  A,$20
0349   C47D AE 78 80        STA  (DISPARAM)
0350   C480 CD 04           VMJ  ($04) \ ABRF(BCMD_STOP_1) ; $C4C5
0350   C482 42          
0351   C483 D8              VEJ  (D8)
0352   C484 C9 40           VZR  ($40) ; orig ($40)($20) $20 is bogus
0353   C486 BA CA 7D        JMP  BUTTON_CL_4 ; $CA7D
0354   C489             
0355   C489             BCMD_LET_2: ; $C489
0356   C489 6C 15           CPI  UH,$15
0357   C48B 89 37           BZR BCMD_STOP_4 ; $C4C4
0358   C48D D8              VEJ  (D8)
0359   C48E 89 34           BZR BCMD_STOP_4 ; $C4C4
0360   C490 56              DEC  Y
0361   C491 24              LDA  UL
0362   C492 8B 01           BZS BCMD_LET_7 ; $C495
0363   C494 56              DEC  Y
0364   C495             
0365   C495             BCMD_LET_7: ; $C495
0366   C495 DE              VEJ  (DE) \ ABRF(BCMD_STOP_4); $C4C4
0366   C496 2D          
0367   C497 9E 29           BCH BCMD_LET_8 ; $C470
0368   C499             
0369   C499             BCMD_LET_3: ; $C499
0370   C499 D8              VEJ  (D8)
0371   C49A 89 29           BZR BCMD_STOP_1 ; $C4C5
0372   C49C C6              VEJ  (C6)
0373   C49D CD 0A           VMJ  ($0A)
0374   C49F BE D6 D9        SJP  (DEC2HEX_1) ; $D6D9
0375   C4A2 21              SBC  (U)
0376   C4A3 9E 35           BCH BCMD_LET_8 ; $C470
0377   C4A5             
0378   C4A5             BCMD_LET_4: ; $C4A5
0379   C4A5 6A 01           LDI  UL,$01 
0380   C4A7 CC              VEJ  (CC) \ ABYTL(TRACE_ON); $788D
0380   C4A8 8D          
0381   C4A9 8B 02           BZS BCMD_LET_9 ; BCMD_STOP_6 ; $C4AD
0382   C4AB 6A 00           LDI  UL,$00
0383   C4AD             
0384   C4AD             BCMD_LET_9: ; $????
0385   C4AD 8E 0D           BCH BCMD_STOP_5 ; $C4BC
0386   C4AF             
0387   C4AF             
0388   C4AF             
0389   C4AF             ; Trace routine
0390   C4AF             TRCROUTINE: ; $C4AF
0391   C4AF CC              VEJ  (CC) \ ABYTL($788E)
0391   C4B0 8E          
0392   C4B1 9B 08           BZS $C4AB
0393   C4B3 68 00           LDI  UH,$00
0394   C4B5 9A              RTN
0395   C4B6             
0396   C4B6             
0397   C4B6             
0398   C4B6             ; BASIC command STOP
0399   C4B6             BCMD_STOP: ; $C4B6
0400   C4B6 C8              VEJ  (C8) \ ABRF(BCMD_STOP_1) ; $C4C5
0400   C4B7 0D          
0401   C4B8 CD 18           VMJ  ($18)
0402   C4BA             
0403   C4BA             BCMD_STOP_2: ; $C4BA
0404   C4BA 6A 02           LDI  UL,$02 
0405   C4BC             
0406   C4BC             BCMD_STOP_5: ; $C4BC
0407   C4BC FD A8           PSH  U
0408   C4BE D4              VEJ  (D4) \ ABYT($AC)
0408   C4BF AC          
0409   C4C0 FD 2A           POP  U
0410   C4C2             
0411   C4C2             BCMD_STOP_3: ; $C4C2
0412   C4C2 8E 15           BCH BCMD_STOP_7 ; $C4D9 
0413   C4C4             
0414   C4C4             BCMD_STOP_4: ; $C4C4
0415   C4C4 E0              VEJ  (E0) 
0416   C4C5             
0417   C4C5             BCMD_STOP_1: ; $C4C5
0418   C4C5 E4              VEJ  (E4)  
0419   C4C6             
0420   C4C6             BCMD_STOP_9: ; $C4C6   
0421   C4C6 FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FD
0421   C4CA FD 
0422   C4CB ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
0423   C4CF CB 42           VZS  ($42) ; orig ($42)($21) ; 21 is bogus
0424   C4D1 ED 78 8A 60     BII  (BREAKPARAM),$60
0425   C4D5 CB 42           VZS  ($42) ; orig ($42)($21) ; 21 is bogus
0426   C4D7 6A 02           LDI  UL,$02
0427   C4D9             
0428   C4D9             BCMD_STOP_7: ; $C4D9
0429   C4D9 EB 78 8A 80     ORI  (BREAKPARAM),$80
0430   C4DD E9 78 8A EF     ANI  (BREAKPARAM),$EF
0431   C4E1 FD A8           PSH  U
0432   C4E3 BE EE 80        SJP  (SAVELCD2BUF)
0433   C4E6 FD 2A           POP  U
0434   C4E8 B5 01           LDI  A,$01
0435   C4EA AE 78 80        STA  (DISPARAM)
0436   C4ED FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FD
0436   C4F1 FD 
0437   C4F2 62              DEC  UL
0438   C4F3 CB 46           VZS  ($46) ; orig ($46)($23) 23 is bogus
0439   C4F5 5A 10           LDI  YL,$10 
0440   C4F7 58 7A           LDI  YH,$7A
0441   C4F9 FD 98           PSH  Y
0442   C4FB B5 3A           LDI  A,$3A
0443   C4FD 81 06           BCR BCMD_STOP_8 ; $C505
0444   C4FF CD 2A           VMJ  ($2A) \ ABYT($5B) \ ABYT($09) ; C504
0444   C501 5B          
0444   C502 09          
0445   C503 B5 20           LDI  A,$20
0446   C505             
0447   C505             BCMD_STOP_8: ; $C505
0448   C505 FD C8           PSH  A
0449   C507 CC              VEJ  (CC) \ ABYTL(PREV_LINE_H) ; $78A2
0449   C508 A2          
0450   C509 BA CD D4        JMP  ERRN_5 ; $CDD4
0451   C50C             
0452   C50C             BCMD_STOP_6: ; $C4AD
0453   C50C 38              NOP
0454   C50D             
0455   C50D             
0456   C50D             
0457   C50D             ; Basic Command END
0458   C50D             BCMD_END: ; $C50D
0459   C50D C2              VEJ  (C2) \ ACHR($0D) \ ABRF(BCMD_ON_1) ; $C5F9
0459   C50E 0D          
0459   C50F E9          
0460   C510             
0461   C510             BCMD_END_1:; $C510
0462   C510 BE CF F7        SJP  (PRGLINE_TDI_1) ; $CFF7
0463   C513 CD 42           VMJ  ($42) ; orig ($42)($21) 21 is bogus
0464   C515             
0465   C515             
0466   C515             
0467   C515             ; Basic Command GOTO
0468   C515             BCMD_GOTO: ; $C515
0469   C515 D8              VEJ  (D8)
0470   C516 89 8A           BZR DEFKEY_EVAL_1 ; $C5A2
0471   C518 68 1A           LDI  UH,$1A
0472   C51A ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
0473   C51E CB E0           VZS  ($E0)
0474   C520 BE CC 86        SJP  (BTN_DOWN_1) ; $CC86
0475   C523 7D C1           BII  (V),$C1
0476   C525 42              DEC  XL
0477   C526 F2              VEJ  (F2)
0478   C527 8E 4F           BCH DEFKEY_EVAL_2 ; $C578
0479   C529             
0480   C529             
0481   C529             
0482   C529             ; Evaluation of def keys (label addressing)
0483   C529             DEFKEY_EVAL: ; $C529
0484   C529 0A              STA  XL
0485   C52A AE 78 92        STA  (BAS_DATA_STK_L)
0486   C52D BE DB F5        SJP  (ISARXBCD_1) ; $DBF5
0487   C530 EF 78 90 04     ADI  (FORNXT_STK_PTR),$04
0488   C534 F9              REC
0489   C535 BE FB CB        SJP  (STRXFR)
0490   C538 BE CC DE        SJP  (BTN_ENTER_1) ; $CCDE
0491   C53B A4              LDA  UH
0492   C53C 4A 82           LDI  XL,$82
0493   C53E 48 78           LDI  XH,$78
0494   C540 0E              STA  (X)
0495   C541 B5 01           LDI  A,$01
0496   C543 CD 24           VMJ  ($24)
0497   C545 68 FF           LDI  UH,$FF
0498   C547 BE D2 EA        SJP  (LINESEARCH) \ ABRF(DEFKEY_EVAL_3); $C589
0498   C54A 3E          
0499   C54B D6              VEJ  (D6) \ ABYT($A6)
0499   C54C A6          
0500   C54D CD 22           VMJ  ($22)
0501   C54F 83 27           BCS DEFKEY_EVAL_2 ; $C578
0502   C551 C4              VEJ  (C4) \ AWRD($F180) \ ABRF(DEFKEY_EVAL_2) ; $C578
0502   C552 F1 80       
0502   C554 23          
0503   C555 CE              VEJ  (CE) \ ABYT($58) \ ABRF(DEFKEY_EVAL_4) ; $C59F
0503   C556 58          
0503   C557 47          
0504   C558 DA              VEJ  (DA)
0505   C559 CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880
0505   C55A 80          
0506   C55B BF 40           BII  A,$40
0507   C55D 8B 1E           BZS DEFKEY_EVAL_5 ; $C57D
0508   C55F FD 98           PSH  Y
0509   C561 BE F9 7B        SJP  (VAR_TYPE)
0510   C564 81 31           BCR DEFKEY_EVAL_6 ; $C597
0511   C566 FD 1A           POP  Y
0512   C568 89 0B           BZR DEFKEY_EVAL_7 ; $C575
0513   C56A             
0514   C56A             DEFKEY_EVAL_8: ; $C56A
0515   C56A EC              VEJ  (EC)
0516   C56B CC              VEJ  (CC) \ ABYTL(CURVARTYPE) ; $7885
0516   C56C 85          
0517   C56D D9              SHL
0518   C56E B5 D0           LDI  A,$D0
0519   C570 83 03           BCS DEFKEY_EVAL_7 ;  $C575
0520   C572 AE 7A 04        STA  (ARX + $04)
0521   C575             
0522   C575             DEFKEY_EVAL_7: ; $C575
0523   C575 CD 08           VMJ  ($08) \ ABRF(DEFKEY_EVAL_4) ; $C59F
0523   C577 27          
0524   C578             
0525   C578             DEFKEY_EVAL_2: ; $C578
0526   C578 CD 3A           VMJ  ($3A)
0527   C57A BA C8 C2        JMP  BCMD_READ_1 ; $C8C2
0528   C57D             
0529   C57D             DEFKEY_EVAL_5: ; $C57D
0530   C57D BF 22           BII  A,$22
0531   C57F 9B 17           BZS DEFKEY_EVAL_8 ; $C56A
0532   C581 FB              SEC
0533   C582 BE FB CB        SJP  (STRXFR)
0534   C585 CD 30           VMJ  ($30)
0535   C587 9E 14           BCH DEFKEY_EVAL_7 ; $C575
0536   C589             
0537   C589             DEFKEY_EVAL_3: ; $C589
0538   C589 ED 78 80 40     BII  (DISPARAM),$40
0539   C58D 89 03           BZR DEFKEY_EVAL_9 ; $C592
0540   C58F BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
0541   C592             
0542   C592             DEFKEY_EVAL_9: ; $C592
0543   C592 38              NOP
0544   C593 38              NOP
0545   C594 C0              VEJ  (C0)
0546   C595 68 0B           LDI  UH,$0B
0547   C597             
0548   C597             DEFKEY_EVAL_6: ; $C597
0549   C597 E9 78 9D 00     ANI  (CURR_LINE_L),$00
0550   C59B E9 78 9C 00     ANI  (CURR_LINE_H),$00
0551   C59F             
0552   C59F             DEFKEY_EVAL_4: ; $C59F
0553   C59F CD 3A           VMJ  ($3A)
0554   C5A1 E0              VEJ  (E0)
0555   C5A2             
0556   C5A2             DEFKEY_EVAL_1: ; $C5A2
0557   C5A2 CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0557   C5A4 D0          
0558   C5A5 D0              VEJ  (D0) \ ABYT($83) \ ABRF(BCMD_GOSUB_1) ; $C675
0558   C5A6 83          
0558   C5A7 CD          
0559   C5A8 CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0559   C5AA CA          
0560   C5AB             
0561   C5AB             DEFKEY_EVAL_10: ; $C5AB
0562   C5AB C2              VEJ  (C2) \ ACHR($0D) \ ABRF(BCMD_ON_1) ; $C5F9
0562   C5AC 0D          
0562   C5AD 4B          
0563   C5AE D4              VEJ  (D4) \ ABYT($A0)
0563   C5AF A0          
0564   C5B0 D6              VEJ  (D6) \ ABYT($A6)
0564   C5B1 A6          
0565   C5B2 8E BD           BCH $C671
0566   C5B4             
0567   C5B4             
0568   C5B4             
0569   C5B4             ; Basic Command IF
0570   C5B4             BCMD_IF: ; $C5B4
0571   C5B4 DE              VEJ  (DE) \ ABRF(BCMD_GOSUB_1) ; $C675
0571   C5B5 BF          
0572   C5B6 4A 04           LDI  XL,$04
0573   C5B8 48 7A           LDI  XH,$7A
0574   C5BA 45              LIN  X
0575   C5BB B7 B2           CPI  A,$B2
0576   C5BD 81 06           BCR BCMD_IF_1 ; $C5C5
0577   C5BF 8B 06           BZS BCMD_IF_2 ; $C5C7
0578   C5C1 4A 07           LDI  XL,$07
0579   C5C3 8E 06           BCH BCMD_IF_3 ; $C5CB
0580   C5C5             
0581   C5C5             BCMD_IF_1: ; $C5C5
0582   C5C5 4A 01           LDI  XL,$01
0583   C5C7             
0584   C5C7             BCMD_IF_2: ; $C5C7
0585   C5C7 45              LIN  X
0586   C5C8 D9              SHL
0587   C5C9 83 AB           BCS BCMD_REM
0588   C5CB             
0589   C5CB             BCMD_IF_3: ; $C5CB
0590   C5CB 05              LDA  (X)
0591   C5CC 8B A8           BZS BCMD_REM
0592   C5CE C2              VEJ  (C2) \ AWRD($F1AE) \ ABRF(BCMD_IF_4) ; $C5D9 , $F1AE = THEN token
0592   C5CF F1 AE       
0592   C5D1 07          
0593   C5D2 C0              VEJ  (C0)
0594   C5D3 81 08           BCR BCMD_IF_5 ; $C5DD
0595   C5D5 6E 80           CPI  UL,$80
0596   C5D7 81 03           BCR BCMD_IF_6 ; $C5DC
0597   C5D9             
0598   C5D9             BCMD_IF_4: ; $C5D9
0599   C5D9 BA C4 47        JMP  BASIC_INT_6 ; $C447
0600   C5DC                 
0601   C5DC             BCMD_IF_6: ; $C5DC    
0602   C5DC 56              DEC  Y
0603   C5DD             
0604   C5DD             BCMD_IF_5: ; $C5DD
0605   C5DD 56              DEC  Y
0606   C5DE 9E 3E           BCH DEFKEY_EVAL_1 ; $C5A2
0607   C5E0             
0608   C5E0             
0609   C5E0             
0610   C5E0             ; Basic-Command ON
0611   C5E0             BCMD_ON: ; $C5E0
0612   C5E0 C2              VEJ  (C2) \ AWRD($F1B4) \ ABRF(BCMD_ON_2) ; $C605
0612   C5E1 F1 B4       
0612   C5E3 21          
0613   C5E4 C2              VEJ  (C2) \ AWRD($F192) \ ABRF(BCMD_ON_1) ; $C5F9
0613   C5E5 F1 92       
0613   C5E7 11          
0614   C5E8 CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0614   C5EA 8A          
0615   C5EB D0              VEJ  (D0) \ ABYT($82) \ ABRF(BCMD_GOSUB_1) ; $C675
0615   C5EC 82          
0615   C5ED 87          
0616   C5EE 24              LDA  UL
0617   C5EF 89 09           BZR BCMD_ON_3 ; $C5FA
0618   C5F1 A4              LDA  UH
0619   C5F2 89 06           BZR BCMD_ON_3 ; $C5FA
0620   C5F4 EB 78 B8 80     ORI  (ON_ERR_ADD_H),$80
0621   C5F8 E2              VEJ  (E2)
0622   C5F9             
0623   C5F9             BCMD_ON_1: ; $C5F9
0624   C5F9 E4              VEJ  (E4)
0625   C5FA             
0626   C5FA             BCMD_ON_3: ; $C5FA
0627   C5FA CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0627   C5FC 78          
0628   C5FD 6A A6           LDI  UL,$A6
0629   C5FF 4A B8           LDI  XL,$B8
0630   C601 BE DF 06        SJP  (BCMD_TIME_1) ; $DF06
0631   C604 E2              VEJ  (E2)
0632   C605             
0633   C605             BCMD_ON_2: ; $C605
0634   C605 C6              VEJ  (C6)
0635   C606 DE              VEJ  (DE) \ ABRF(BCMD_GOSUB_1) ; $C675
0635   C607 6D          
0636   C608 CD 26           VMJ  ($26)
0637   C60A 6A D0           LDI  UL,$D0
0638   C60C 0D              EOR  (X)
0639   C60D 02              ADC  XL
0640   C60E 8E 02           BCH BCMD_ON_4 ; $C612
0641   C610 B5 50           LDI  A,$50
0642   C612             
0643   C612             BCMD_ON_4: ; $C612
0644   C612 FD C8           PSH  A
0645   C614 C2              VEJ  (C2) \ AWRD($F192) \ ABRF(BCMD_ON_5) ; $C61A
0645   C615 F1 92       
0645   C617 02          
0646   C618 8E 04           BCH BCMD_ON_9 ; $C61E
0647   C61A             
0648   C61A             BCMD_ON_5: ; $C61A
0649   C61A C4              VEJ  (C4) \ AWRD($F194) \ ABRF(BCMD_ON_6) ; $C64D
0649   C61B F1 94       
0649   C61D 2F          
0650   C61E             
0651   C61E             BCMD_ON_9: ; $C61E
0652   C61E FD C8           PSH  A
0653   C620 FD 2A           POP  U
0654   C622 FD A8           PSH  U
0655   C624 62              DEC  UL
0656   C625 8B 06           BZS BCMD_ON_7 ; $C62D
0657   C627 BE DF 44        SJP  (BCMD_TIME_2) ; $DF44
0658   C62A 60              INC  UL
0659   C62B 89 15           BZR BCMD_ON_8 ; $C642
0660   C62D             
0661   C62D             BCMD_ON_7: ; $C62D
0662   C62D CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0662   C62F 45          
0663   C630 D0              VEJ  (D0) \ ABYT($83) \ ABRF(BCMD_GOSUB_1) ; $C675
0663   C631 83          
0663   C632 42          
0664   C633 CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0664   C635 3F          
0665   C636 BE DF 42        SJP  (BCMD_TIME_3) ; $DF42
0666   C639 FD 2A           POP  U
0667   C63B A4              LDA  UH
0668   C63C D5              SHR
0669   C63D D5              SHR
0670   C63E 81 1A           BCR BCMD_GOSUB_2 ; $C65A
0671   C640 9E 97           BCH DEFKEY_EVAL_10 ; $C5AB
0672   C642             
0673   C642             BCMD_ON_8: ; $C642
0674   C642 B5 0D           LDI  A,$0D
0675   C644 17              CPA  (Y)
0676   C645 FD 2A           POP  U
0677   C647 C3 E2           VCS  ($E2)
0678   C649 FD 62           DEC  UH
0679   C64B C7 E2           VHS  ($E2)
0680   C64D             
0681   C64D             BCMD_ON_6: ; $C64D
0682   C64D E4              VEJ  (E4)
0683   C64E             
0684   C64E             
0685   C64E             
0686   C64E             ; Basic Command GOSUB
0687   C64E             BCMD_GOSUB: ; $C64E
0688   C64E CD 2E           VMJ  ($2E) \ ABRF(BCMD_GOSUB_1) ; $C675
0688   C650 24          
0689   C651 D0              VEJ  (D0) \ ABYT($83) \ ABRF(BCMD_GOSUB_1) ; $C675
0689   C652 83          
0689   C653 21          
0690   C654 CD 1A           VMJ  ($1A) \ ABRF(BCMD_GOSUB_1) ; $C675
0690   C656 1E          
0691   C657 C8              VEJ  (C8) \ ABRF(BCMD_NEXT_3) ; $C710
0691   C658 B7          
0692   C659 56              DEC  Y
0693   C65A             
0694   C65A             BCMD_GOSUB_2: ; $C65A
0695   C65A A5 78 91        LDA  (GOSB_STK_PTR_L)
0696   C65D FB              SEC
0697   C65E B1 05           SBI  A,$05
0698   C660 A7 78 90        CPA  (FORNXT_STK_PTR)
0699   C663 81 0E           BCR BCMD_GOSUB_3 ; $C673
0700   C665 AE 78 82        STA  (STK_PTR_GSB_FOR)
0701   C668 DF              DEC  A
0702   C669 AE 78 91        STA  (GOSB_STK_PTR_L)
0703   C66C BE DE FC        SJP  (BCMD_TIME_5) ; $DEFC
0704   C66F D6              VEJ  (D6) \ ABYT($A6)
0704   C670 A6          
0705   C671 8E 4C           BCH BCMD_RETURN_1 ; $C6BF
0706   C673             
0707   C673             BCMD_GOSUB_3: ; $C673
0708   C673 68 0F           LDI  UH,$0F
0709   C675             
0710   C675             BCMD_GOSUB_1: ; $C675
0711   C675 E0              VEJ  (E0)
0712   C676             
0713   C676             
0714   C676             
0715   C676             ; Basic Command REM
0716   C676             BCMD_REM: ; $C676
0717   C676 CD 20           VMJ  ($20)
0718   C678 F9              REC
0719   C679 BA C4 0C        JMP  BASIC_INT_7 ; $C40C
0720   C67C             
0721   C67C             
0722   C67C             
0723   C67C             ; Basic Command USING
0724   C67C             BCMD_USING: ; $C67C
0725   C67C B5 01           LDI  A,$01
0726   C67E BE DA B4        SJP  (EVAL_USING_1) ; $DAB4
0727   C681 DE              VEJ  (DE) \ ABYT($56) ; $C760 ***wrong original calc c6da
0727   C682 56          
0728   C683 E2              VEJ  (E2)
0729   C684             
0730   C684             
0731   C684             
0732   C684             ; Basic Command DATA / ARUN / AREAD
0733   C684             BCMD_DATA: ; $C684
0734   C684 56              DEC  Y
0735   C685 AA 78 4F        LDI  S,(CPU_STACK + $4F)
0736   C688 BE DF 42        SJP  (BCMD_TIME_3) ; $DF42
0737   C68B E2              VEJ  (E2)
0738   C68C             
0739   C68C             
0740   C68C             
0741   C68C             ; Basic Command TRON
0742   C68C             BCMD_TRON: ; $C68C
0743   C68C A5 79 D1        LDA  (OPN)
0744   C68F             
0745   C68F             BCMD_TRON_1: ; $C68F
0746   C68F AE 78 8D        STA  (TRACE_ON)
0747   C692 E2              VEJ  (E2)
0748   C693             
0749   C693             
0750   C693             
0751   C693             ; Basic Command TROFF
0752   C693             BCMD_TROFF: ; $C693
0753   C693 B5 00           LDI  A,$00
0754   C695 9E 08           BCH BCMD_TRON_1 ; $C68F
0755   C697             
0756   C697             
0757   C697             
0758   C697             ; Basic Command DEGREE
0759   C697             BCMD_DEGREE: ; $C697
0760   C697 6A 03           LDI  UL,$03
0761   C699             
0762   C699             BCMD_DEGREE_1: ; $C699
0763   C699 A5 76 4F        LDA  (DISP_BUFF + $4F)
0764   C69C B9 F8           ANI  A,$F8
0765   C69E F9              REC
0766   C69F 22              ADC  UL
0767   C6A0 AE 76 4F        STA  (DISP_BUFF + $4F)
0768   C6A3 E2              VEJ  (E2)
0769   C6A4             
0770   C6A4             
0771   C6A4             
0772   C6A4             ; Basic Command RADIAN
0773   C6A4             BCMD_RADIAN: ; $C6A4
0774   C6A4 6A 04           LDI  UL,$04
0775   C6A6 9E 0F           BCH BCMD_DEGREE_1 ; $C699
0776   C6A8             
0777   C6A8             
0778   C6A8             
0779   C6A8             ; Basic Command GRAD
0780   C6A8             BCMD_GRAD: ; $C6A8
0781   C6A8 6A 06           LDI  UL,$06
0782   C6AA 9E 13           BCH BCMD_DEGREE_1 ; $C699
0783   C6AC             
0784   C6AC             
0785   C6AC             
0786   C6AC             ; Basic Command RETURN
0787   C6AC             BCMD_RETURN: ; $C6AC
0788   C6AC C2              VEJ  (C2) \ ACHR($0D) \ ABRF($10) ; $C710
0788   C6AD 0D          
0788   C6AE 61          
0789   C6AF A5 78 91        LDA  (GOSB_STK_PTR_L)
0790   C6B2 DD              INC  A
0791   C6B3 83 58           BCS BCMD_NEXT_2 ; $C70D
0792   C6B5 AE 78 82        STA  (STK_PTR_GSB_FOR)
0793   C6B8 EF 78 91 06     ADI  (GOSB_STK_PTR_L),$06
0794   C6BC             
0795   C6BC             BCMD_RETURN_5: ; $C6BC
0796   C6BC BE DE C7        SJP  (BCMD_TIME_4) ; $DEC7
0797   C6BF             
0798   C6BF             BCMD_RETURN_1: ; $C6BF
0799   C6BF BA C4 13        JMP  BASIC_INT_8 ; $C413
0800   C6C2             
0801   C6C2             BCMD_RETURN_6: ; $C6C2
0802   C6C2 FD 98           PSH  Y
0803   C6C4 B3 09           ADI  A,$09
0804   C6C6 AE 78 90        STA  (FORNXT_STK_PTR)
0805   C6C9 DA              VEJ  (DA)
0806   C6CA FD 28           LDX  U
0807   C6CC BE DC 20        SJP  (ISARXBCD_2) ; $DC20
0808   C6CF D2              VEJ  (D2) \ ABRF(BCMD_NEXT_1) \ ABYT($80) ; $C710
0808   C6D0 3E          
0808   C6D1 80          
0809   C6D2 CD 08           VMJ  ($08) \ ABRF(BCMD_RETURN_2) ; $C6D5
0809   C6D4 00          
0810   C6D5                 
0811   C6D5             BCMD_RETURN_2: ; $C6D5  
0812   C6D5 E6              VEJ  (E6)
0813   C6D6 CD 06           VMJ  ($06)
0814   C6D8 CD 10           VMJ  ($10) \ ABYT($80)
0814   C6DA 80          
0815   C6DB BE EF B6        SJP  (SUBTR)
0816   C6DE CD 06           VMJ  ($06)
0817   C6E0 5A 02           LDI  YL,$02
0818   C6E2 57              LDE  Y
0819   C6E3 8B 18           BZS BCMD_RETURN_3 ; $C6FD
0820   C6E5 A4              LDA  UH
0821   C6E6 1D              EOR  (Y)
0822   C6E7 DB              ROL
0823   C6E8 83 13           BCS BCMD_RETURN_3 ; $C6FD
0824   C6EA CD 10           VMJ  ($10) \ ABYT($80)
0824   C6EC 80          
0825   C6ED E6              VEJ  (E6)
0826   C6EE CC              VEJ  (CC) \ ABYTL(CURVARADD_H) ; $7883
0826   C6EF 83          
0827   C6F0 BE DC 20        SJP  (ISARXBCD_2) ; $DC20
0828   C6F3 F0              VEJ  (F0)
0829   C6F4 CD 08           VMJ  ($08) \ ABRF(BCMD_RETURN_4) ; $C6F7
0829   C6F6 00          
0830   C6F7                 
0831   C6F7             BCMD_RETURN_4: ; $C6F7
0832   C6F7 FD 1A           POP  Y
0833   C6F9 C8              VEJ  (C8) \ ABRF(BCMD_NEXT_3) ; $C710
0833   C6FA 15          
0834   C6FB 9E 41           BCH BCMD_RETURN_5 ; $C6BC
0835   C6FD             
0836   C6FD             BCMD_RETURN_3: ; $C6FD
0837   C6FD FD 1A           POP  Y
0838   C6FF EF 78 90 F4     ADI  (FORNXT_STK_PTR),$F4
0839   C703 E2              VEJ  (E2)
0840   C704             
0841   C704             
0842   C704             
0843   C704             ; Basic Command NEXT
0844   C704             BCMD_NEXT: ; $C704
0845   C704 C6              VEJ  (C6)
0846   C705 CE              VEJ  (CE) \ ABYT($68) \ ABRF($C70F)
0846   C706 68          
0846   C707 07          
0847   C708 BE D0 4C        SJP  (VARONBSTK)
0848   C70B 93 4B           BCS BCMD_RETURN_6 ; $C6C2
0849   C70D             
0850   C70D             BCMD_NEXT_2: ; $C70D
0851   C70D 68 02           LDI  UH,$02
0852   C70F             
0853   C70F             BCMD_NEXT_1: ; $C710
0854   C70F E0              VEJ  (E0)
0855   C710             
0856   C710             BCMD_NEXT_3: ; $C710
0857   C710 E4              VEJ  (E4)
0858   C711             
0859   C711             
0860   C711             
0861   C711             ; Basic Command FOR
0862   C711             BCMD_FOR: ; $C711
0863   C711 CE              VEJ  (CE) \ ABYT($68) \ ABRF(BCMD_FOR_2) ; $C776
0863   C712 68          
0863   C713 62          
0864   C714 DA              VEJ  (DA)
0865   C715 BE D0 4C        SJP  (VARONBSTK)
0866   C718 83 23           BCS BCMD_FOR_3 ; $C73D
0867   C71A A5 78 90        LDA  (FORNXT_STK_PTR)
0868   C71D AE 78 82        STA  (STK_PTR_GSB_FOR)
0869   C720 DF              DEC  A
0870   C721 B3 0A           ADI  A,$0A
0871   C723 83 4F           BCS BCMD_FOR_4 ; $C774
0872   C725 A7 78 91        CPA  (GOSB_STK_PTR_L)
0873   C728 83 4A           BCS BCMD_FOR_4 ; $C774
0874   C72A 6C 80           CPI  UH,$80
0875   C72C 81 0D           BCR BCMD_FOR_5 ; $C73B
0876   C72E 6C DB           CPI  UH,$DB
0877   C730 8B 09           BZS BCMD_FOR_5 ; $C73B
0878   C732 F4              VEJ  (F4) \ AWRD(VAR_START_H)
0878   C733 78 99       
0879   C735 B5 F8           LDI  A,$F8
0880   C737 FD EA           ADR  U
0881   C739 FD 62           DEC  UH
0882   C73B             
0883   C73B             BCMD_FOR_5: ; $C73B
0884   C73B CD 32           VMJ  ($32)
0885   C73D             
0886   C73D             BCMD_FOR_3: ; $C73D
0887   C73D C2              VEJ  (C2) \ ACHR($3D) \ ABRF(BCMD_POKE_1) ; $C7A1
0887   C73E 3D          
0887   C73F 61          
0888   C740 DE              VEJ  (DE) \ ABRF(BCMD_FOR_2) ; $C776
0888   C741 34          
0889   C742 CD 08           VMJ  ($08) \ ABRF(BCMD_FOR_2) ; $C776
0889   C744 31          
0890   C745 C2              VEJ  (C2) \ AWRD($F1B1) \ ABRF(BCMD_POKE_1) ; $C7A1
0890   C746 F1 B1       
0890   C748 58          
0891   C749 DE              VEJ  (DE) \ ABRF(BCMD_FOR_2) ; $C776
0891   C74A 2B          
0892   C74B D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_FOR_2) ; $C776
0892   C74C 04          
0892   C74D 28          
0893   C74E CD 32           VMJ  ($32)
0894   C750 C2              VEJ  (C2) \ AWRD($F1AD) \ ABRF(BCMD_FOR_6) ; $C761
0894   C751 F1 AD       
0894   C753 0D          
0895   C754 DE              VEJ  (DE) \ ABRF(BCMD_FOR_2) ; $C776
0895   C755 20          
0896   C756 D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_FOR_2) ; $C776
0896   C757 04          
0896   C758 1D          
0897   C759 AB 7A 05        ORA  (ARX + $05) 
0898   C75C 89 08           BZR BCMD_FOR_7 ; $C766
0899   C75E 68 13           LDI  UH,$13
0900   C760             
0901   C760             BCMD_FOR_1: ; $C760
0902   C760 E0              VEJ  (E0)
0903   C761             
0904   C761             BCMD_FOR_6: ; $C761
0905   C761 C6              VEJ  (C6)
0906   C762 6A 01           LDI  UL,$01
0907   C764 68 00           LDI  UH,$00
0908   C766             
0909   C766             BCMD_FOR_7: ; $C766
0910   C766 CD 32           VMJ  ($32)
0911   C768 C8              VEJ  (C8) \ ABRF(BCMD_POKE_1) ; $C7A1)
0911   C769 37          
0912   C76A BE DE FE        SJP  (BCMD_TIME_6) ; $DEFE
0913   C76D 04              LDA  XL
0914   C76E AE 78 90        STA  (FORNXT_STK_PTR)
0915   C771 BA C4 0E        JMP  BASIC_INT_9 ; $C40E
0916   C774             
0917   C774             BCMD_FOR_4: ; $C774
0918   C774 68 0E           LDI  UH,$0E
0919   C776             
0920   C776             BCMD_FOR_2: ; $C776
0921   C776 E0              VEJ  (E0)   
0922   C777             
0923   C777             
0924   C777             
0925   C777             ; Basic Command POKE
0926   C777             BCMD_POKE: ; $C777
0927   C777 F9              REC
0928   C778             
0929   C778             ; Basic Command POKE# $C778
0930   C778 04              LDA  XL
0931   C779 FD C8           PSH  A
0932   C77B DE              VEJ  (DE) \ ABRF(BCMD_READ_2) ; $C7F1
0932   C77C 74          
0933   C77D D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_READ_2) ; $C7F1
0933   C77E 00          
0933   C77F 71          
0934   C780 FD A8           PSH  U
0935   C782 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_POKE_1) ; $C7A1
0935   C783 2C          
0935   C784 1C          
0936   C785             
0937   C785             BCMD_POKE_3: ; $C785
0938   C785 DE              VEJ  (DE) \ ABRF(BCMD_READ_2) ; $C7F1
0938   C786 6A          
0939   C787 D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_READ_2) ; $C7F1
0939   C788 08          
0939   C789 67          
0940   C78A FD 0A           POP  X
0941   C78C FD 8A           POP  A
0942   C78E FD C8           PSH  A
0943   C790 D1              ROR
0944   C791 24              LDA  UL
0945   C792 81 03           BCR BCMD_POKE_2 ; $C797
0946   C794 41              SIN  X
0947   C795 8E 03           BCH BCMD_POKE_4 ; $C79A
0948   C797             
0949   C797             BCMD_POKE_2: ; $C797
0950   C797 FD 0E           STA  #(X)
0951   C799 44              INC  X
0952   C79A             
0953   C79A             BCMD_POKE_4: ; $C79A
0954   C79A FD 88           PSH  X
0955   C79C C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_READ_7) ; $C7E4
0955   C79D 2C          
0955   C79E 45          
0956   C79F 9E 1C           BCH BCMD_POKE_3 ; $C785
0957   C7A1             
0958   C7A1             BCMD_POKE_1: ; $C7A1
0959   C7A1 E4              VEJ  (E4)
0960   C7A2             
0961   C7A2             
0962   C7A2             ; Basic Command RESTORE
0963   C7A2             BCMD_RESTORE: ; $C7A2
0964   C7A2 BE CC 8B        SJP  (BTN_DOWN_2) ; $CC8B
0965   C7A5 4B 62           ORI  (X),$62
0966   C7A7 CC              VEJ  (CC) \ ABYTL(CURR_TOP_H) ; $789E
0966   C7A8 9E          
0967   C7A9 44              INC  X
0968   C7AA 44              INC  X
0969   C7AB 44              INC  X
0970   C7AC 84              LDA  XH
0971   C7AD 81 02           BCR $C7B1
0972   C7AF CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
0972   C7B0 A6          
0973   C7B1 BB 80           ORI  A,$80
0974   C7B3 08              STA  XH
0975   C7B4 CA              VEJ  (CA) \ ABYTL(DATA_PTR_H) ; $78BE
0975   C7B5 BE          
0976   C7B6 56              DEC  Y
0977   C7B7 E2              VEJ  (E2)
0978   C7B8             
0979   C7B8             
0980   C7B8             
0981   C7B8             ; Basic Command READ
0982   C7B8             BCMD_READ: ; $C7B8
0983   C7B8 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_READ_2) ; $C7F1
0983   C7B9 58          
0983   C7BA 36          
0984   C7BB DA              VEJ  (DA)
0985   C7BC FD 98           PSH  Y
0986   C7BE CC              VEJ  (CC) \ ABYTL(DATA_PTR_H) ; $78BE
0986   C7BF BE          
0987   C7C0 FD 5A           STX  Y
0988   C7C2 DB              ROL
0989   C7C3 81 04           BCR BCMD_READ_3 ; $C7C9
0990   C7C5 D5              SHR
0991   C7C6 18              STA  YH
0992   C7C7 8E 2B           BCH BCMD_READ_4 ; $C7F4
0993   C7C9             
0994   C7C9             BCMD_READ_3: ; $C7C9
0995   C7C9 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_READ_5) ; $C7E6
0995   C7CA 2C          
0995   C7CB 1A          
0996   C7CC             
0997   C7CC             BCMD_READ_10: ; $C7CC
0998   C7CC DE              VEJ  (DE) \ ABRF(BCMD_READ_6) ; $C7EF
0998   C7CD 21          
0999   C7CE C8              VEJ  (C8) \ ABRF($C7D2)
0999   C7CF 02          
1000   C7D0 8E 03           BCH $C7D5
1001   C7D2 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_READ_6) ; $C7EF
1001   C7D3 2C          
1001   C7D4 1A          
1002   C7D5 56              DEC  Y
1003   C7D6 FD 18           LDX  Y
1004   C7D8 CA              VEJ  (CA) \ ABYTL(DATA_PTR_H) ; $78BE
1004   C7D9 BE          
1005   C7DA FD 1A           POP  Y
1006   C7DC CD 08           VMJ  ($08) \ ABRF(BCMD_READ_2) ; $C7F1
1006   C7DE 12          
1007   C7DF C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_READ_7) ; $C7E4
1007   C7E0 2C          
1007   C7E1 02          
1008   C7E2 9E 2C           BCH BCMD_READ ; $C7B8
1009   C7E4             
1010   C7E4             BCMD_READ_7: ; $C7E4
1011   C7E4 CD 40           VMJ  ($40) ; orig ($40)($20) 20 bogus
1012   C7E6             
1013   C7E6             BCMD_READ_5: ; $C7E6
1014   C7E6 56              DEC  Y
1015   C7E7 CD 20           VMJ  ($20)
1016   C7E9             
1017   C7E9             BCMD_READ_11: ; $C7E9
1018   C7E9 55              LIN  Y
1019   C7EA DD              INC  A
1020   C7EB 89 05           BZR BCMD_READ_8 ; $C7F2
1021   C7ED 68 04           LDI  UH,$04
1022   C7EF             
1023   C7EF             BCMD_READ_6: ; $C7EF
1024   C7EF FD 1A           POP  Y
1025   C7F1             
1026   C7F1             BCMD_READ_2: ; $C7F1 
1027   C7F1 E0              VEJ  (E0)
1028   C7F2             
1029   C7F2             BCMD_READ_8: ; $C7F2
1030   C7F2 54              INC  Y
1031   C7F3 54              INC  Y
1032   C7F4             
1033   C7F4             BCMD_READ_4: ; $C7F4
1034   C7F4 FD 98           PSH  Y
1035   C7F6 CD 22           VMJ  ($22)
1036   C7F8 83 08           BCS BCMD_READ_9 ; $C802
1037   C7FA C4              VEJ  (C4) \ AWRD($F18D) \ ABRF(BCMD_READ_9) ; $C802
1037   C7FB F1 8D       
1037   C7FD 04          
1038   C7FE FD 0A           POP  X
1039   C800 9E 36           BCH BCMD_READ_10 ; $C7CC
1040   C802             
1041   C802             BCMD_READ_9: ; $C802
1042   C802 FD 1A           POP  Y
1043   C804 56              DEC  Y
1044   C805 55              LIN  Y
1045   C806 FD DA           ADR  Y
1046   C808 9E 21           BCH BCMD_READ_11 ; $C7E9
1047   C80A             
1048   C80A             ; Basic Command NEW
1049   C80A 30              SBC  VL ; $C80A
1050   C80B D5              SHR
1051   C80C 85 0D           BHR BCMD_READ_12 ; $C81B
1052   C80E C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1052   C80F E0          
1053   C810 CD 38           VMJ  ($38)
1054   C812 C1 E0           VCR  ($E0)
1055   C814 6A BC           LDI  UL,$BC
1056   C816 BE D0 AE        SJP  (DEL_DIM_VARS_18) ; $D0AE
1057   C819 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
1058   C81B             
1059   C81B             BCMD_READ_12: ; $C81B
1060   C81B C8              VEJ  (C8) \ ABRF(BCMD_READ_13) ; $C821
1060   C81C 04          
1061   C81D CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
1061   C81E 65          
1062   C81F 8E 34           BCH BCMD_READ_14 ; $C855
1063   C821             
1064   C821             BCMD_READ_13: ; $C821
1065   C821 C6              VEJ  (C6)
1066   C822 DE              VEJ  (DE) \ ABRF(BCMD_CONT_2) ; $C8F1
1066   C823 CD          
1067   C824 D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_CONT_2) ; $C8F1
1067   C825 00          
1067   C826 CA          
1068   C827 C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1068   C828 C7          
1069   C829 DC              VEJ  (DC)
1070   C82A A5 78 60        LDA  (ST_ROM_MOD) ; $7860
1071   C82D D9              SHL
1072   C82E 04              LDA  XL
1073   C82F 89 0F           BZR BCMD_READ_15 ; $C840
1074   C831 84              LDA  XH
1075   C832 89 0C           BZR BCMD_READ_15 ; $C840
1076   C834 81 02           BCR BCMD_READ_16 ; $C838
1077   C836 4A C5           LDI  XL,$C5
1078   C838             
1079   C838             BCMD_READ_16: ; $C838
1080   C838 A5 78 63        LDA  (RAM_ST_H)
1081   C83B BE CD 6A        SJP  (UNLOCK)
1082   C83E 8E 13           BCH BCMD_READ_17 ; $C853
1083   C840             
1084   C840             BCMD_READ_15: ; $C840
1085   C840 68 19           LDI  UH,$19
1086   C842 C1 E0           VCR  ($E0)
1087   C844 04              LDA  XL
1088   C845 B1 C5           SBI  A,$C5
1089   C847 84              LDA  XH
1090   C848 A1 78 63        SBC  (RAM_ST_H)
1091   C84B C1 E0           VCR  ($E0)
1092   C84D 84              LDA  XH
1093   C84E A7 78 64        CPA  (RAM_END_H)
1094   C851 C3 E0           VCS  ($E0)
1095   C853             
1096   C853             BCMD_READ_17: ; $C853
1097   C853 CA              VEJ  (CA) \ ABYTL(BASPRG_ST_H) ; $7865
1097   C854 65          
1098   C855             
1099   C855             BCMD_READ_14: ; $C855
1100   C855 CA              VEJ  (CA) \ ABYTL(BASPRG_EDT_H) ; $7869
1100   C856 69          
1101   C857             
1102   C857             BCMD_READ_20: ; $C857
1103   C857 4B FF           ORI  (X),$FF
1104   C859 CA              VEJ  (CA) \ ABYTL(BASPRG_END_H) ; $7867
1104   C85A 67          
1105   C85B 56              DEC  Y
1106   C85C BE D0 0D        SJP  (PRGLINE_TDI_2) ; $D00D
1107   C85F             
1108   C85F             ; Basic Command CLEAR  
1109   C85F BE D0 80        SJP  (DELSVARS) ; $C85F
1110   C862 E2              VEJ (E2)
1111   C863             
1112   C863             ; Basic Command CALL ; C863
1113   C863 DE              VEJ  (DE) \ ABRF(BCMD_CONT_2) ; $C8F1
1113   C864 8C          
1114   C865 D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_CONT_2) ; $C8F1
1114   C866 00          
1114   C867 89          
1115   C868 FD A8           PSH  U
1116   C86A C8              VEJ  (C8) \ ABRF(BCMD_READ_18) ; $C871
1116   C86B 05          
1117   C86C 68 80           LDI  UH,$80
1118   C86E DA              VEJ  (DA)
1119   C86F 8E 18           BCH BCMD_READ_19 ; $C889
1120   C871             
1121   C871             BCMD_READ_18: ; $C871
1122   C871 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_CONT_1) ; $C8F0
1122   C872 2C          
1122   C873 7C          
1123   C874 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_CONT_2) ; $C8F1
1123   C875 58          
1123   C876 7A          
1124   C877 6C 80           CPI  UH,$80
1125   C879 83 EA           BCS BCMD_INPUT_1 ; $C965
1126   C87B DA              VEJ  (DA)
1127   C87C C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1127   C87D 72          
1128   C87E DC              VEJ  (DC)
1129   C87F B7 80           CPI  A,$80
1130   C881 81 06           BCR BCMD_READ_19 ; $C889
1131   C883 CD 0A           VMJ  ($0A)
1132   C885 D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_CONT_2) ; $C8F1
1132   C886 04          
1132   C887 69          
1133   C888 DC              VEJ  (DC)
1134   C889             
1135   C889             BCMD_READ_19: ; $C889    
1136   C889 56              DEC  Y
1137   C88A FD 2A           POP  U
1138   C88C FD 98           PSH  Y
1139   C88E 5A 97           LDI  YL,$97
1140   C890 58 C8           LDI  YH,$C8
1141   C892 FD 98           PSH  Y
1142   C894 FD A8           PSH  U
1143   C896 9A              RTN
1144   C897 FD 1A           POP  Y
1145   C899 C1 E2           VCR  ($E2)
1146   C89B ED 78 83 80     BII  (CURVARADD_H),$80
1147   C89F C9 E2           VZR  ($E2)
1148   C8A1 ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
1149   C8A5 8B 09           BZS BCMD_READ_22 ; $C8B0
1150   C8A7 FD 6A           STX  U
1151   C8A9 BE D9 E7        SJP  (ARUINT2ARX)
1152   C8AC             
1153   C8AC             BCMD_READ_21: ; $C8AC
1154   C8AC CD 08           VMJ  ($08) \ ABRF(BCMD_CONT_2) ; $C8F1
1154   C8AE 42          
1155   C8AF E2              VEJ  (E2)
1156   C8B0             
1157   C8B0             BCMD_READ_22: ; $C8B0
1158   C8B0 CD 24           VMJ  ($24)
1159   C8B2 9E 08           BCH BCMD_READ_21 ; $C8AC
1160   C8B4             
1161   C8B4             ; Basic Command RUN
1162   C8B4 40              INC  XL ; $C8B4
1163   C8B5 BE CC 86        SJP  (BTN_DOWN_1) ; $CC86
1164   C8B8 38              NOP
1165   C8B9 C1 42           VCR  ($42) ; orig ($42)($21) 21 bogus
1166   C8BB BE D0 91        SJP  (DELDVARS)
1167   C8BE BE D0 0D        SJP  (PRGLINE_TDI_2) ; $D00D
1168   C8C1             
1169   C8C1             BCMD_READ_23: ; $C8C1
1170   C8C1 F2              VEJ  (F2)
1171   C8C2             
1172   C8C2             BCMD_READ_1: ; $C8C2
1173   C8C2 D6              VEJ  (D6) \ ABYT($A6)
1173   C8C3 A6          
1174   C8C4 BA C4 38        JMP  BASIC_INT_10 ; $C438
1175   C8C7             
1176   C8C7             
1177   C8C7             
1178   C8C7             ; Basic Command CONT
1179   C8C7             BCMD_CONT: ; $C8C7
1180   C8C7 40              INC  XL
1181   C8C8 C8              VEJ  (C8) \ ABRF(BCMD_CONT_1) ; $C8F0
1181   C8C9 26          
1182   C8CA ED 78 8A E0     BII  (BREAKPARAM),$E0
1183   C8CE CB E4           VZS  ($E4)
1184   C8D0 E9 7B 0E 7F     ANI  (CURS_CTRL),$7F
1185   C8D4 F2              VEJ  (F2)
1186   C8D5             
1187   C8D5             BCMD_CONT_3: ; $C8D5
1188   C8D5 EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1189   C8D9 D6              VEJ  (D6) \ ABYT($AC)
1189   C8DA AC          
1190   C8DB A5 78 8A        LDA  (BREAKPARAM)
1191   C8DE E9 78 8A 0F     ANI  (BREAKPARAM),$0F
1192   C8E2 DB              ROL
1193   C8E3 DB              ROL
1194   C8E4 81 0C           BCR $C8F2
1195   C8E6 BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
1196   C8E9 EB 78 8A 50     ORI  (BREAKPARAM),$50
1197   C8ED BA CA 75        JMP  BUTTON_CL_2 ; $CA75
1198   C8F0             
1199   C8F0             BCMD_CONT_1: ; $C8F0
1200   C8F0 E4              VEJ  (E4)
1201   C8F1             
1202   C8F1             BCMD_CONT_2: ; $C8F1
1203   C8F1 E0              VEJ  (E0)
1204   C8F2 DB              ROL
1205   C8F3 81 02           BCR BCMD_CONT_4 ; BCMD_CLEAR_1 ; BCMD_READ_20 ; $C8F7
1206   C8F5 56              DEC  Y
1207   C8F6 E2              VEJ  (E2)
1208   C8F7             
1209   C8F7             BCMD_CONT_4: ; $C42E
1210   C8F7 BA C4 2E        JMP  BASIC_INT_11 ; 
1211   C8FA             
1212   C8FA             
1213   C8FA             
1214   C8FA             ; Basic Command INPUT
1215   C8FA             BCMD_INPUT: ; $C8FA
1216   C8FA C2              VEJ  (C2) \ ACHR($23) \ ABRF(BCMD_INPUT_2) ; $C900
1216   C8FB 23          
1216   C8FC 03          
1217   C8FD BA E4 E7        JMP  $E4E7
1218   C900             
1219   C900             BCMD_INPUT_2: ; $C900
1220   C900 D8              VEJ  (D8)
1221   C901 89 03           BZR BCMD_INPUT_3 ; $C906
1222   C903 68 1A           LDI  UH,$1A
1223   C905 E0              VEJ  (E0)
1224   C906             
1225   C906             BCMD_INPUT_3: ; $C906
1226   C906 C6              VEJ  (C6)
1227   C907             
1228   C907             BCMD_INPUT_9: ; $C907
1229   C907 BE D0 34        SJP  (INBUF_CLR)
1230   C90A C2              VEJ  (C2) \ ACHR($22) \ ABRF(BCMD_INPUT_4) ; $C95D
1230   C90B 22          
1230   C90C 50          
1231   C90D CD 0C           VMJ  ($0C)
1232   C90F FD 98           PSH  Y
1233   C911 5A B0           LDI  YL,$B0
1234   C913 58 7B           LDI  YH,$7B
1235   C915 A5 7A 07        LDA  (ARX + $07)
1236   C918 2A              STA  UL
1237   C919 BE D0 49        SJP  (XREG2YREG)
1238   C91C 14              LDA  YL
1239   C91D AE 78 8B        STA  (INBUFPTR_L)
1240   C920 FD 1A           POP  Y
1241   C922 C2              VEJ  (C2) \ ACHR($3B) \ ABRF(BCMD_INPUT_5) ; $C929
1241   C923 3B          
1241   C924 04          
1242   C925 B5 40           LDI  A,$40
1243   C927 8E 0A           BCH BCMD_INPUT_6 ; $C933
1244   C929             
1245   C929             BCMD_INPUT_5: ; $C929
1246   C929 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_DIM_6) ; $C9E3
1246   C92A 2C          
1246   C92B B7          
1247   C92C                
1248   C92C             BCMD_INPUT_8: ; $C92C  
1249   C92C B5 B0           LDI  A,$B0
1250   C92E AE 78 8B        STA  (INBUFPTR_L)
1251   C931 B5 00           LDI  A,$00
1252   C933             
1253   C933             BCMD_INPUT_6: ; $C933
1254   C933 AE 78 80        STA  (DISPARAM)
1255   C936 CE              VEJ  (CE) \ ABYT($58) \ ABRF(BCMD_INPUT_7) ; $C967
1255   C937 58          
1255   C938 2E          
1256   C939 F6              VEJ  (F6) \ AWRD(LASTVARADD_H)
1256   C93A 78 86       
1257   C93C 44              INC  X
1258   C93D A5 7A 07        LDA  (ARX + $07)
1259   C940 0E              STA  (X)
1260   C941 EB 78 8A 50     ORI  (BREAKPARAM),$50
1261   C945 D4              VEJ  (D4) \ ABYT($A0)
1261   C946 A0          
1262   C947 D4              VEJ  (D4) \ ABYT($AC)
1262   C948 AC          
1263   C949 A5 78 8B        LDA  (INBUFPTR_L)
1264   C94C 1A              STA  YL
1265   C94D 58 7B           LDI  YH,$7B
1266   C94F E9 7B 0E 9F     ANI  (CURS_CTRL),$9F
1267   C953 BE EF 67        SJP  (PREPLCDOUT)
1268   C956 68 20           LDI  UH,$20
1269   C958 C3 E0           VCS  ($E0)
1270   C95A BA CA 7D        JMP  BUTTON_CL_4 ; $CA7D
1271   C95D             
1272   C95D             BCMD_INPUT_4: ; $C95D
1273   C95D C6              VEJ  (C6)
1274   C95E B5 3F           LDI  A,$3F
1275   C960 AE 7B B0        STA  (IN_BUF)
1276   C963 9E 39           BCH BCMD_INPUT_8 ; $C92C
1277   C965             
1278   C965             BCMD_INPUT_1: ; $C965
1279   C965 68 07           LDI  UH,$07
1280   C967             
1281   C967             BCMD_INPUT_7: ; $C967
1282   C967 E0              VEJ  (E0)
1283   C968             
1284   C968             
1285   C968             
1286   C968             ; Basic Command LOCK
1287   C968             BCMD_LOCK: ; $C968
1288   C968 B5 00           LDI  A,$00
1289   C96A             
1290   C96A             
1291   C96A             
1292   C96A             ; Basic Command UNLOCK
1293   C96A             BCMD_UNLOCK: ; $C96A
1294   C96A AE 79 FF        STA  (UNDEF_REG_79FF)
1295   C96D E2              VEJ  (E2)
1296   C96E             
1297   C96E             
1298   C96E             
1299   C96E             ; Basic Command LIST
1300   C96E             BCMD_LIST: ; $C96E
1301   C96E 20              SBC  UL
1302   C96F BE CC 86        SJP  (BTN_DOWN_1); $CC86
1303   C972 04              LDA  XL
1304   C973 83 08           BCS BCMD_LIST_1 ; $C97D
1305   C975 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
1306   C977 C1 E0           VCR  ($E0)
1307   C979 6C 0B           CPI  UH,$0B
1308   C97B C9 E0           VZR  ($E0)
1309   C97D             
1310   C97D             BCMD_LIST_1: ; $C97D
1311   C97D CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
1311   C97E A6          
1312   C97F 46              DEC  X
1313   C980 46              DEC  X
1314   C981 BE D2 D0        SJP  (BCD_Y2ARX_1) ; $D2D0
1315   C984 B5 14           LDI  A,$14
1316   C986 CD 44           VMJ  ($44) ;orig ($44)($22) 22 bogus
1317   C988             
1318   C988             
1319   C988             
1320   C988             ; Basic Command DIM
1321   C988             BCMD_DIM: ; $C988
1322   C988 CE              VEJ  (CE) \ ABYT($14) \ ABRF(BCMD_DIM_1) ; $C9D4
1322   C989 14          
1322   C98A 49          
1323   C98B DA              VEJ  (DA)
1324   C98C CD 2C           VMJ  ($2C) \ ABRF(BCMD_DIM_1) ; $C9D4
1324   C98E 45          
1325   C98F FD A8           PSH  U
1326   C991 B5 88           LDI  A,$88
1327   C993 ED 78 84 20     BII  (CURVARADD_L),$20
1328   C997 8B 08           BZS BCMD_DIM_2 ; $C9A1
1329   C999 C2              VEJ  (C2) \ ACHR($2A) \ ABRF(BCMD_DIM_9) ; $C9D5
1329   C99A 2A          
1329   C99B 39          
1330   C99C DE              VEJ  (DE) \ ABRF(BCMD_DIM_1) ; $C9D4
1330   C99D 36          
1331   C99E D0              VEJ  (D0) \ ABYT($0D) \ ABRF(BCMD_DIM_1) ; $C9D4
1331   C99F 0D          
1331   C9A0 33          
1332   C9A1                 
1333   C9A1             BCMD_DIM_2: ; $C9A1    
1334   C9A1 AE 78 85        STA  (CURVARTYPE) ; $7885
1335   C9A4 FD 2A           POP  U
1336   C9A6 FD 98           PSH  Y
1337   C9A8 FD A8           PSH  U
1338   C9AA A4              LDA  UH
1339   C9AB 1A              STA  YL
1340   C9AC 68 00           LDI  UH,$00
1341   C9AE 58 00           LDI  YH,$00
1342   C9B0 64              INC  U
1343   C9B1 54              INC  Y
1344   C9B2 CD 50           VMJ  ($50) ; orig ($50)($28) 28 us bogus
1345   C9B4 83 18           BCS BCMD_DIM_8 ; $C9CE
1346   C9B6 A5 78 85        LDA  (CURVARTYPE) ; $7885
1347   C9B9 B9 7F           ANI  A,$7F
1348   C9BB 2A              STA  UL
1349   C9BC CD 50           VMJ  ($50) ; orig ($50)($28) 28 us bogus
1350   C9BE 83 0E           BCS BCMD_DIM_8 ; $C9CE
1351   C9C0 FD 2A           POP  U
1352   C9C2 BE D3 86        SJP  (SRCHPRGLINE_1) ; $D386
1353   C9C5 83 0B           BCS BCMD_DIM_3 ; $C9D2
1354   C9C7 FD 1A           POP  Y
1355   C9C9 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_DIM_4) ; $C9DC
1355   C9CA 2C          
1355   C9CB 10          
1356   C9CC 9E 46           BCH BCMD_DIM
1357   C9CE             
1358   C9CE             BCMD_DIM_8: ; $C9CE
1359   C9CE 68 0A           LDI  UH,$0A
1360   C9D0 FD 0A           POP  X
1361   C9D2             
1362   C9D2             BCMD_DIM_3: ; $C9D2
1363   C9D2 FD 1A           POP  Y
1364   C9D4             
1365   C9D4             BCMD_DIM_1: ; $C9D4
1366   C9D4 E0              VEJ  (E0)
1367   C9D5             
1368   C9D5             BCMD_DIM_9: ; $C9D5  
1369   C9D5 C6              VEJ  (C6)
1370   C9D6 B5 10           LDI  A,$10
1371   C9D8 9E 39           BCH BCMD_DIM_2 ; $C9A1
1372   C9DA             
1373   C9DA             BCMD_DIM_7: ; $C9DA
1374   C9DA C8              VEJ  (C8) \ ABRF(BCMD_DIM_5) ; $C9DE
1374   C9DB 02          
1375   C9DC                 
1376   C9DC             BCMD_DIM_4: ; $C9DC   
1377   C9DC CD 40           VMJ  ($40) ; orig ($40)($20) 20 bogus
1378   C9DE             
1379   C9DE             BCMD_DIM_5: ; $C9DE
1380   C9DE C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_DIM_6) ; $C9E3
1380   C9DF 2C          
1380   C9E0 02          
1381   C9E1 9E DC           BCH BCMD_INPUT_9 ; $C907
1382   C9E3             
1383   C9E3             BCMD_DIM_6: ; $C9E3
1384   C9E3 E4              VEJ  (E4)
1385   C9E4             
1386   C9E4             
1387   C9E4             
1388   C9E4             ; Editor Cold Start
1389   C9E4             COLD_START: ; $C9E4
1390   C9E4 BE CF CC        SJP  (PRGLINE_TDI_3) ; $CFCC
1391   C9E7 BE D0 30        SJP  (INBUF_INIT)
1392   C9EA 6A 0C           LDI  UL,$0C
1393   C9EC A5 7A 21        LDA  (ARV + $01)
1394   C9EF 28              STA  UH
1395   C9F0 4A 4F           LDI  XL,$4F
1396   C9F2 A5 7A 20        LDA  (ARV)
1397   C9F5 89 2D           BZR COLD_START_1 ; $CA24
1398   C9F7 4A 55           LDI  XL,$55
1399   C9F9 6A 06           LDI  UL,$06
1400   C9FB A4              LDA  UH
1401   C9FC AB 7A 22        ORA  (ARV + $02)
1402   C9FF 89 28           BZR COLD_START_2 ; $CA29
1403   CA01 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
1404   CA05 8B 4E           BZS BTN_SHCL
1405   CA07 BE DF F3        SJP  (PRGST2XREG)
1406   CA0A B5 00           LDI  A,$00
1407   CA0C             
1408   CA0C             COLD_START_7: ; $CA0C
1409   CA0C 81 47           BCR BTN_SHCL
1410   CA0E FD C8           PSH  A
1411   CA10 BE D0 B4        SJP  (DEL_DIM_VARS_2) ; $D0B4
1412   CA13 FD 5A           STX  Y
1413   CA15 CD 22           VMJ  ($22)
1414   CA17 83 31           BCS COLD_START_3 ; $CA4A
1415   CA19 C4              VEJ  (C4) \ AWRD($F181) \ ABRF(COLD_START_3); $CA4A
1415   CA1A F1 81       
1415   CA1C 2D          
1416   CA1D EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1417   CA21 BA C8 C1        JMP  BCMD_READ_23 ; $C8C1
1418   CA24             
1419   CA24             COLD_START_1: ; $CA24
1420   CA24 B5 23           LDI  A,$23
1421   CA26 AE 76 4F        STA  (DISP_BUFF + $4F)
1422   CA29             
1423   CA29             COLD_START_2: ; $CA29
1424   CA29 BE D0 46        SJP  (SYSMSG)
1425   CA2C 4A 30           LDI  XL,$30
1426   CA2E A5 7A 22        LDA  (ARV + $02)
1427   CA31             
1428   CA31             COLD_START_6: ; $CA32
1429   CA31 08              STA  XH
1430   CA32             
1431   CA32             COLD_START_8: ; $    
1432   CA32 84              LDA  XH
1433   CA33 D5              SHR
1434   CA34 08              STA  XH
1435   CA35 A4              LDA  UH
1436   CA36 D1              ROR
1437   CA37 28              STA  UH
1438   CA38 81 02           BCR COLD_START_4 ; $CA3C
1439   CA3A 04              LDA  XL
1440   CA3B 51              SIN  Y
1441   CA3C             
1442   CA3C             COLD_START_4: ; $CA3C
1443   CA3C 40              INC  XL
1444   CA3D 4E 3A           CPI  XL,$3A
1445   CA3F 89 02           BZR COLD_START_5 ; $CA43
1446   CA41 4A 41           LDI  XL,$41
1447   CA43             
1448   CA43             COLD_START_5: ; $CA43
1449   CA43 62              DEC  UL
1450   CA44 97 14           BHS COLD_START_8 ; $CA32
1451   CA46 B5 80           LDI  A,$80
1452   CA48 CD 44           VMJ  ($44) ; orig ($44)($22) 22 bogus
1453   CA4A             
1454   CA4A             COLD_START_3: ; $CA4A
1455   CA4A FD 8A           POP  A
1456   CA4C DF              DEC  A
1457   CA4D 83 06           BCS BTN_SHCL
1458   CA4F CD 14           VMJ  ($14)
1459   CA51 B5 FF           LDI  A,$FF
1460   CA53 9E 49           BCH COLD_START_7 ; $CA0C
1461   CA55             
1462   CA55             
1463   CA55             
1464   CA55             ; SHIFT CL button (Clear All)
1465   CA55             BTN_SHCL: ; $CA55
1466   CA55 BE CF CC        SJP  (PRGLINE_TDI_3) ; $CFCC
1467   CA58             
1468   CA58             
1469   CA58             
1470   CA58             ; (42) Editor Warm Boot
1471   CA58             WARM_START: ; $CA58
1472   CA58 BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
1473   CA5B B5 3E           LDI  A,$3E
1474   CA5D 1E              STA  (Y)
1475   CA5E E9 78 8A EF     ANI  (BREAKPARAM),$EF
1476   CA62 8E 14           BCH BUTTON_CL_3 ; $CA78
1477   CA64             
1478   CA64             
1479   CA64             
1480   CA64             ; CL Button
1481   CA64             BUTTON_CL: ; CA64
1482   CA64 81 01           BCR BUTTON_CL_1 ; $CA67
1483   CA66 F2              VEJ  (F2)
1484   CA67             
1485   CA67             BUTTON_CL_1: ; $CA67
1486   CA67 BE D0 11        SJP  (PRGLINE_TDI_4) ; $D011
1487   CA6A 91 14           BCR WARM_START
1488   CA6C BE D0 21        SJP  (INBUF_CLRRST)
1489   CA6F B5 40           LDI  A,$40
1490   CA71 5E B0           CPI  YL,$B0
1491   CA73 89 05           BZR BUTTON_CL_5 ; $CA7A
1492   CA75             
1493   CA75             BUTTON_CL_2: ; $CA75
1494   CA75 B5 3F           LDI  A,$3F
1495   CA77 1E              STA  (Y)
1496   CA78             
1497   CA78             BUTTON_CL_3: ; $CA78
1498   CA78 B5 00           LDI  A,$00
1499   CA7A             
1500   CA7A             ; (44) Editor (display is retained)
1501   CA7A             BUTTON_CL_5: ; $CA7A
1502   CA7A AE 78 80        STA  (DISPARAM)
1503   CA7D             
1504   CA7D             ; (46) Editor Jump
1505   CA7D             BUTTON_CL_4: ; $CA7D
1506   CA7D BE E8 CA        SJP  (PRGMDISP)
1507   CA80 E9 78 9D 00     ANI  (CURR_LINE_L),$00
1508   CA84 E9 78 9C 00     ANI  (CURR_LINE_H),$00
1509   CA88 E9 76 4E FE     ANI  (DISP_BUFF + $4E),$FE
1510   CA8C AA 78 4F        LDI  S,(CPU_STACK + $4F)
1511   CA8F BE E2 43        SJP  (WAIT4KB)
1512   CA92 2A              STA  UL
1513   CA93 CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880
1513   CA94 80          
1514   CA95 6E 19           CPI  UL,$19
1515   CA97 8B C8           BZS BTN_RCL
1516   CA99 6E 09           CPI  UL,$09
1517   CA9B 8B CC           BZS RSV_CHNG
1518   CA9D 28              STA  UH
1519   CA9E D1              ROR
1520   CA9F 81 0D           BCR BUTTON_CL_7 ; $CAAE
1521   CAA1 FD 62           DEC  UH
1522   CAA3 FD A8           PSH  U
1523   CAA5 BE EE 99        SJP  (BUF2LCD)
1524   CAA8 FD 2A           POP  U
1525   CAAA E9 78 80 FE     ANI  (DISPARAM),$FE
1526   CAAE             
1527   CAAE             BUTTON_CL_7: ; $CAAE
1528   CAAE 24              LDA  UL
1529   CAAF B7 20           CPI  A,$20
1530   CAB1 81 2C           BCR BUTTON_CL_6 ; $CADF
1531   CAB3 6C 80           CPI  UH,$80
1532   CAB5 C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
1533   CAB7 BF 60           BII  A,$60
1534   CAB9 68 00           LDI  UH,$00
1535   CABB 89 1D           BZR BUTTON_CL_16 ; $CADA
1536   CABD 4A EB           LDI  XL,$EB
1537   CABF 48 C2           LDI  XH,$C2
1538   CAC1 FD CA           ADR  X
1539   CAC3 05              LDA  (X)
1540   CAC4 B7 E0           CPI  A,$E0
1541   CAC6 83 11           BCS $CAD9
1542   CAC8 2A              STA  UL
1543   CAC9 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
1544   CACD 8B 0B           BZS BUTTON_CL_16 ; $CADA
1545   CACF EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1546   CAD3 28              STA  UH
1547   CAD4 CD 3A           VMJ  ($3A)
1548   CAD6 BA C5 29        JMP  DEFKEY_EVAL ; $C529
1549   CAD9 28              STA  UH
1550   CADA             
1551   CADA             BUTTON_CL_16: ; $CADA
1552   CADA BE CE 4A        SJP  (DEFEVAL)
1553   CADD 9E 62           BCH BUTTON_CL_4 ; $CA7D
1554   CADF             
1555   CADF             BUTTON_CL_6: ; $CADF
1556   CADF D9              SHL
1557   CAE0 85 16           BHR BUTTON_CL_8 ; $CAF8
1558   CAE2 BF 20           BII  A,$20
1559   CAE4 8B 02           BZS BUTTON_CL_9 ; $CAE8
1560   CAE6 B9 0E           ANI  A,$0E
1561   CAE8             
1562   CAE8             BUTTON_CL_9: ; $CAE8
1563   CAE8 6A 8B           LDI  UL,$8B
1564   CAEA 68 C3           LDI  UH,$C3
1565   CAEC FD EA           ADR  U
1566   CAEE 65              LIN  U
1567   CAEF 08              STA  XH
1568   CAF0 25              LDA  (U)
1569   CAF1 0A              STA  XL
1570   CAF2 A5 78 80        LDA  (DISPARAM)
1571   CAF5 D9              SHL
1572   CAF6 FD 5E           STX  P
1573   CAF8             
1574   CAF8             BUTTON_CL_8: ; $CAF8
1575   CAF8 6C 80           CPI  UH,$80
1576   CAFA C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
1577   CAFC             
1578   CAFC             BUTTON_CL_15: ; $CAFC
1579   CAFC BE CE 87        SJP  (DEFEVAL_1) ; $CE87
1580   CAFF ED 76 4F 10     BII  (DISP_BUFF + $4F),$10
1581   CB03 8B 28           BZS BUTTON_CL_10 ; $CB2D
1582   CB05 BE D0 30        SJP  (INBUF_INIT)
1583   CB08 B5 46           LDI  A,$46
1584   CB0A 51              SIN  Y
1585   CB0B A4              LDA  UH
1586   CB0C BB 30           ORI  A,$30
1587   CB0E 51              SIN  Y
1588   CB0F B5 3A           LDI  A,$3A
1589   CB11 51              SIN  Y
1590   CB12 14              LDA  YL
1591   CB13 AE 78 8B        STA  (INBUFPTR_L)
1592   CB16 CD 38           VMJ  ($38)
1593   CB18 BE CE C4        SJP  (RESKEY_SRCH)
1594   CB1B B5 48           LDI  A,$48
1595   CB1D 81 0C           BCR BUTTON_CL_11 ; $CB2B
1596   CB1F 45              LIN  X
1597   CB20 BF E0           BII  A,$E0
1598   CB22 8B 03           BZS BUTTON_CL_12 ; $CB27
1599   CB24 51              SIN  Y
1600   CB25 9E 08           BCH $CB1F
1601   CB27             
1602   CB27             BUTTON_CL_12: ; $CB27
1603   CB27 5A B3           LDI  YL,$B3
1604   CB29 B5 08           LDI  A,$08
1605   CB2B             
1606   CB2B             BUTTON_CL_11: ; $CB2B
1607   CB2B CD 44           VMJ  ($44) ; orig ($44)($22) 22 bogus
1608   CB2D             
1609   CB2D             BUTTON_CL_10: ; $CB2D
1610   CB2D CD 38           VMJ  ($38)
1611   CB2F 68 00           LDI  UH,$00
1612   CB31 BE CE C4        SJP  (RESKEY_SRCH)
1613   CB34 91 5C           BCR BUTTON_CL_16 ; $CADA
1614   CB36 45              LIN  X
1615   CB37 B7 40           CPI  A,$40
1616   CB39 8B E2           BZS PRG_ENTER
1617   CB3B 2A              STA  UL
1618   CB3C             
1619   CB3C             BUTTON_CL_14: ; $CB3C
1620   CB3C 24              LDA  UL
1621   CB3D 68 00           LDI  UH,$00
1622   CB3F B7 E0           CPI  A,$E0
1623   CB41 81 03           BCR BUTTON_CL_13 ; $CB46
1624   CB43 28              STA  UH
1625   CB44 45              LIN  X
1626   CB45 2A              STA  UL
1627   CB46             
1628   CB46             BUTTON_CL_13: ; $CB46
1629   CB46 BE CE 4A        SJP  (DEFEVAL)
1630   CB49 45              LIN  X
1631   CB4A 2A              STA  UL
1632   CB4B B7 20           CPI  A,$20
1633   CB4D 91 D2           BCR BUTTON_CL_4 ; $CA7D
1634   CB4F B7 40           CPI  A,$40
1635   CB51 8B CA           BZS PRG_ENTER
1636   CB53 15              LDA  (Y)
1637   CB54 B7 0D           CPI  A,$0D
1638   CB56 9B 1C           BZS BUTTON_CL_14 ; $CB3C
1639   CB58 B7 27           CPI  A,$27
1640   CB5A 9B 20           BZS BUTTON_CL_14 ; $CB3C
1641   CB5C BE CD E6        SJP  (INS2INBUF)
1642   CB5F 9E 25           BCH BUTTON_CL_14 ; $CB3C
1643   CB61             
1644   CB61             
1645   CB61             
1646   CB61             ; RCL button
1647   CB61             BTN_RCL: ; $CB61
1648   CB61 D1              ROR
1649   CB62 83 2F           BCS RSV_CHNG_1 ; $CB93
1650   CB64             
1651   CB64             BTN_RCL_1: ; $CB64
1652   CB64 BE EE 80        SJP  (SAVELCD2BUF)
1653   CB67 8E 1E           BCH RSV_CHNG_2 ; $CB87
1654   CB69             
1655   CB69             
1656   CB69             
1657   CB69             ; Switching the RESERVE layers
1658   CB69             RSV_CHNG: ; $CB69
1659   CB69 4A 4E           LDI  XL,$4E
1660   CB6B 48 76           LDI  XH,$76
1661   CB6D 05              LDA  (X)
1662   CB6E 49 8F           ANI  (X),$8F
1663   CB70 B9 70           ANI  A,$70
1664   CB72 D5              SHR
1665   CB73 85 02           BHR RSV_CHNG_3 ; $CB77
1666   CB75 B5 40           LDI  A,$40
1667   CB77             
1668   CB77             RSV_CHNG_3: ; $CB77
1669   CB77 0B              ORA  (X)
1670   CB78 0E              STA  (X)
1671   CB79 A5 78 80        LDA  (DISPARAM)
1672   CB7C BF 09           BII  A,$09
1673   CB7E 9B 1C           BZS BTN_RCL_1 ; $CB64
1674   CB80 D1              ROR
1675   CB81 A5 78 84        LDA  (CURVARADD_L)
1676   CB84 91 8A           BCR BUTTON_CL_15 ; $CAFC
1677   CB86 38              NOP
1678   CB87             
1679   CB87             RSV_CHNG_2: ; $CB87
1680   CB87 EB 78 80 01     ORI  (DISPARAM),$01
1681   CB8B BE CE AF        SJP  (DEFEVAL_2) ; $CEAF
1682   CB8E BE EF 44        SJP  (TXT2LCD)
1683   CB91 CD 46           VMJ  ($46) ; orig ($46)($23) 23 bogus
1684   CB93             
1685   CB93             RSV_CHNG_1: ; $CB93
1686   CB93 E9 78 80 FE     ANI  (DISPARAM),$FE
1687   CB97 BE EE 99        SJP  (BUF2LCD)
1688   CB9A CD 46           VMJ  ($46) ; orig ($46)($23) 23 bogus
1689   CB9C             
1690   CB9C             
1691   CB9C             
1692   CB9C             ; SHIFT MODE button
1693   CB9C             BTN_SHMODE: ; $CB9C
1694   CB9C 6A 10           LDI  UL,$10
1695   CB9E 8E 02           BCH $CBA2
1696   CBA0             
1697   CBA0             
1698   CBA0             
1699   CBA0             ; MODE button
1700   CBA0             BTN_MODE: ; $CBA0
1701   CBA0 6A 40           LDI  UL,$40
1702   CBA2 C3 46           VCS  ($46) ; orig ($46)($23) 23 bogus
1703   CBA4 4A 4F           LDI  XL,$4F
1704   CBA6 48 76           LDI  XH,$76
1705   CBA8 A5 79 FF        LDA  (UNDEF_REG_79FF)
1706   CBAB CB 46           VZS  ($46) ; orig ($46)($23) 23 bogus
1707   CBAD 24              LDA  UL
1708   CBAE 09              AND  (X)
1709   CBAF 8B 06           BZS BTN_MODE_1 ; $CBB7
1710   CBB1 D5              SHR
1711   CBB2 85 02           BHR BTN_MODE_2 ; $CBB6
1712   CBB4 B5 40           LDI  A,$40
1713   CBB6             
1714   CBB6             BTN_MODE_2: ; $CBB6
1715   CBB6 2A              STA  UL
1716   CBB7             
1717   CBB7             BTN_MODE_1: ; CBB7
1718   CBB7 49 0F           ANI  (X),$0F
1719   CBB9 24              LDA  UL
1720   CBBA 0B              ORA  (X)
1721   CBBB 0E              STA  (X)
1722   CBBC BE D0 17        SJP  ($D017)
1723   CBBF 81 04           BCR BTN_MODE_3 ; $CBC5
1724   CBC1 EB 78 8A 80     ORI  (BREAKPARAM),$80
1725   CBC5             
1726   CBC5             BTN_MODE_3: ; $CBC5
1727   CBC5 CD 42           VMJ  ($42) ; orig ($42)($21) 21 bogus
1728   CBC7             
1729   CBC7             
1730   CBC7             
1731   CBC7             ; INS Button
1732   CBC7             BTN_INS: ; $CBC7
1733   CBC7 D9              SHL
1734   CBC8 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
1735   CBCA BE CD E6        SJP  (INS2INBUF)
1736   CBCD 8E 12           BCH BTN_DEL_2 ; $CBE1
1737   CBCF             
1738   CBCF             
1739   CBCF             
1740   CBCF             ; DEL Button
1741   CBCF             BTN_DEL: ; $CBCF
1742   CBCF D9              SHL
1743   CBD0 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
1744   CBD2 15              LDA  (Y)
1745   CBD3 B7 0D           CPI  A,$0D
1746   CBD5 CB 46           VZS  ($46) ; orig ($46)($23) 23 bogus
1747   CBD7 B7 E0           CPI  A,$E0
1748   CBD9 81 03           BCR BTN_DEL_1 ; $CBDE
1749   CBDB BE CE 38        SJP  (DELFRMINBUF)
1750   CBDE             
1751   CBDE             BTN_DEL_1: ; $CBDE
1752   CBDE BE CE 38        SJP  (DELFRMINBUF)
1753   CBE1             
1754   CBE1             BTN_DEL_2: ; $CBE1
1755   CBE1 BA CA 7D        JMP  BUTTON_CL_4 ; $CA7D
1756   CBE4             
1757   CBE4             
1758   CBE4             
1759   CBE4             ; Cursor Right Button
1760   CBE4             BTN_RIGHT: ; $CBE4
1761   CBE4 DB              ROL
1762   CBE5 83 18           BCS BTN_RIGHT_1 ; $CBFF
1763   CBE7 DB              ROL
1764   CBE8 81 2B           BCR BTN_RIGHT_2 ; $CC15
1765   CBEA D1              ROR
1766   CBEB D1              ROR
1767   CBEC 83 3A           BCS BTN_LEFT_1 ; $CC28
1768   CBEE 56              DEC  Y
1769   CBEF 5A B0           LDI  YL,$B0
1770   CBF1             
1771   CBF1             BTN_RIGHT_3: ; $CBF1
1772   CBF1 E9 78 80 5B     ANI  (DISPARAM),$5B
1773   CBF5 EB 78 80 40     ORI  (DISPARAM),$40
1774   CBF9 EB 7B 0E 40     ORI  (CURS_CTRL),$40
1775   CBFD 9E 1E           BCH BTN_DEL_2 ; $CBE1
1776   CBFF             
1777   CBFF             BTN_RIGHT_1: ; $CBFF
1778   CBFF 15              LDA  (Y)
1779   CC00 B7 0D           CPI  A,$0D
1780   CC02 9B 13           BZS BTN_RIGHT_3 ; $CBF1
1781   CC04 B7 E0           CPI  A,$E0
1782   CC06 81 08           BCR  BTN_RIGHT_4 ; $CC10
1783   CC08 50              INC  YL
1784   CC09 50              INC  YL
1785   CC0A 91 1B           BCR BTN_RIGHT_3 ; $CBF1
1786   CC0C 52              DEC  YL
1787   CC0D             
1788   CC0D             BTN_RIGHT_5: ; $CC0D
1789   CC0D 52              DEC  YL
1790   CC0E 9E 1F           BCH BTN_RIGHT_3 ; $CBF1
1791   CC10             
1792   CC10             BTN_RIGHT_4: ; $CC10
1793   CC10 50              INC  YL
1794   CC11             
1795   CC11             BTN_RIGHT_6: ; $CC11
1796   CC11 91 22           BCR BTN_RIGHT_3 ; $CBF1
1797   CC13 9E 08           BCH BTN_RIGHT_5 ; $CC0D
1798   CC15             
1799   CC15             BTN_RIGHT_2: ; $CC15
1800   CC15 DB              ROL
1801   CC16 93 27           BCS BTN_RIGHT_3 ; $CBF1
1802   CC18 DB              ROL
1803   CC19 C1 46           VCR  ($46) ; orig ($46)($23) 23 bogus
1804   CC1B 9E 2C           BCH BTN_RIGHT_3 ; $CBF1
1805   CC1D             
1806   CC1D             
1807   CC1D             
1808   CC1D             ; Programmatic "ENTER" by "@"
1809   CC1D             PRG_ENTER: ; $CC1D
1810   CC1D CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880
1810   CC1E 80          
1811   CC1F DB              ROL
1812   CC20 8E A1           BCH BTN_ENTER_2 ; $CCC3
1813   CC22             
1814   CC22             
1815   CC22             
1816   CC22             ; Cursor Left Button
1817   CC22             BTN_LEFT: ; CC22
1818   CC22 DB              ROL
1819   CC23 83 04           BCS BTN_LEFT_2 ; $CC29
1820   CC25 DB              ROL
1821   CC26 91 13           BCR BTN_RIGHT_2 ; $CC15
1822   CC28             
1823   CC28             BTN_LEFT_1: ; $CC28
1824   CC28 F2              VEJ  (F2)
1825   CC29             
1826   CC29             BTN_LEFT_2: ; $CC29
1827   CC29 14              LDA  YL
1828   CC2A BE DC AE        SJP  (ISARXBCD_3) ; $DCAE
1829   CC2D 91 3E           BCR BTN_RIGHT_3 ; $CBF1
1830   CC2F 56              DEC  Y
1831   CC30 9B 41           BZS BTN_RIGHT_3 ; $CBF1
1832   CC32 56              DEC  Y
1833   CC33 55              LIN  Y
1834   CC34 B7 E0           CPI  A,$E0
1835   CC36 9E 27           BCH BTN_RIGHT_6 ; $CC11
1836   CC38             
1837   CC38             
1838   CC38             
1839   CC38             ; Cursor Up Button
1840   CC38             BTN_UP: ; $CC38
1841   CC38 EB 7B 0E 40     ORI  (CURS_CTRL),$40
1842   CC3C A5 76 4F        LDA  (DISP_BUFF + $4F)
1843   CC3F DB              ROL
1844   CC40 B9 C0           ANI  A,$C0
1845   CC42 CB 46           VZS  ($46) ; ($46)($23)
1846   CC44 D9              SHL
1847   CC45 2A              STA  UL
1848   CC46 8E 34           BCH BTN_DOWN_3 ; $CC7C
1849   CC48             
1850   CC48             
1851   CC48             
1852   CC48              ; Cursor Down Button
1853   CC48             BTN_DOWN: ; $CC48
1854   CC48 C3 46           VCS  ($46) ; ($46)($23)
1855   CC4A A5 76 4F        LDA  (DISP_BUFF + $4F)
1856   CC4D DB              ROL
1857   CC4E DB              ROL
1858   CC4F 81 22           BCR BTN_DOWN_4 ; $CC73
1859   CC51 ED 78 8A E0     BII  (BREAKPARAM),$E0
1860   CC55 CB 46           VZS  ($46) ; ($46)($23)
1861   CC57 BE D0 11        SJP  (PRGLINE_TDI_4) ; $D011
1862   CC5A 81 06           BCR BTN_DOWN_5 ; $CC62
1863   CC5C EB 7B 0E C0     ORI  (CURS_CTRL),$C0
1864   CC60 9E 45           BCH PRG_ENTER
1865   CC62             
1866   CC62             BTN_DOWN_5: ; $CC62
1867   CC62 A5 7B 0E        LDA  (CURS_CTRL)
1868   CC65 BF 40           BII  A,$40
1869   CC67 8B 02           BZS BTN_DOWN_6 ; $CC6B
1870   CC69 BB 20           ORI  A,$20
1871   CC6B             
1872   CC6B             BTN_DOWN_6: ; $CC6B
1873   CC6B BB C0           ORI  A,$C0
1874   CC6D AE 7B 0E        STA  (CURS_CTRL)
1875   CC70 BA C8 D5        JMP  BCMD_CONT_3 ; $C8D5
1876   CC73             
1877   CC73             BTN_DOWN_4: ; $CC73
1878   CC73 EB 7B 0E 40     ORI  (CURS_CTRL),$40
1879   CC77 DB              ROL
1880   CC78 C1 46           VCR  ($46) ; ($46)($23)
1881   CC7A 6A 01           LDI  UL,$01
1882   CC7C             
1883   CC7C             BTN_DOWN_3: ; $CC7C
1884   CC7C FD A8           PSH  U
1885   CC7E BE DF F3        SJP  (PRGST2XREG)
1886   CC81 C1 46           VCR  ($46) ; ($46)($23)
1887   CC83 BA DC 32        JMP  ISARXBCD_4 ; $DC32
1888   CC86             
1889   CC86             
1890   CC86             
1891   CC86             ;------------------------------------------------------------------------------
1892   CC86             ; Finds address of the 1st program byte of a line number
1893   CC86             ;            Address: CC86
1894   CC86             ;                     D1
1895   CC86             ;         Parameters: Y-Reg points to parameters in input buffer or main memory
1896   CC86             ;                     from which the searched line number or a label is located.
1897   CC86             ; Modified Registers: It is continued after D1 (Carry=1) if the line is found. 
1898   CC86             ;                     If no program in memory: carry flag=0. A branch is made to
1899   CC86             ;                     offset address D1 if the line was not found (Carry=0)
1900   CC86             ;   Error conditions: None
1901   CC86             ;------------------------------------------------------------------------------
1902   CC86             BTN_DOWN_1: ; $CC86
1903   CC86 BE DF F3        SJP  (PRGST2XREG)
1904   CC89 C1 4C           VCR  ($4C) ; ($4C)($26)
1905   CC8B             
1906   CC8B             ; Searches for line number.
1907   CC8B             BTN_DOWN_2: ; $CC8B
1908   CC8B C8              VEJ  (C8) \ ABRF(BTN_DOWN_7) ; $CC96
1908   CC8C 09          
1909   CC8D             
1910   CC8D             BTN_DOWN_12: ; $CC8D
1911   CC8D CD 12           VMJ  ($12)
1912   CC8F BE D0 B4        SJP  (DEL_DIM_VARS_2) ; $D0B4
1913   CC92 6A 00           LDI  UL,$00
1914   CC94 8E 24           BCH BTN_DOWN_8 ; $CCBA
1915   CC96             
1916   CC96             BTN_DOWN_7: ; $CC96
1917   CC96 C6              VEJ  (C6)
1918   CC97 CD 2E           VMJ  ($2E) \ ABRF(BTN_DOWN_9) ; $CCBF
1918   CC99 25          
1919   CC9A C8              VEJ  (C8) \ ABRF(BTN_DOWN_10) ; $CCBD
1919   CC9B 21          
1920   CC9C D0              VEJ  (D0) \ ABYT($82) \ ABRF(BTN_DOWN_9) ; $CCBF
1920   CC9D 82          
1920   CC9E 20          
1921   CC9F 24              LDA  UL
1922   CCA0 89 03           BZR BTN_DOWN_11 ; $CCA5
1923   CCA2 A4              LDA  UH
1924   CCA3 9B 18           BZS BTN_DOWN_12 ; $CC8D
1925   CCA5             
1926   CCA5             BTN_DOWN_11: ; $CCA5
1927   CCA5 D8              VEJ  (D8)
1928   CCA6 89 0D           BZR BTN_DOWN_13 ; $CCB5
1929   CCA8 CD 12           VMJ  ($12)
1930   CCAA 94              LDA  YH
1931   CCAB 89 02           BZR BTN_DOWN_14 ; $CCAF
1932   CCAD CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
1932   CCAE 65          
1933   CCAF             
1934   CCAF             BTN_DOWN_14: ; $CCAF
1935   CCAF BE D2 EC        SJP  (SRCHPRGLINE) \ ABRF(BTN_DOWN_9) ; $CCBF
1935   CCB2 0C          
1936   CCB3 8E 03           BCH BTN_DOWN_15 ; $CCB8
1937   CCB5             
1938   CCB5             BTN_DOWN_13: ; $CCB5
1939   CCB5 CD 1A           VMJ  ($1A) \ ABRF(BTN_DOWN_9) ; $CCBF
1939   CCB7 07          
1940   CCB8             
1941   CCB8             BTN_DOWN_15: ; $CCB8
1942   CCB8 6A 01           LDI  UL,$01
1943   CCBA             
1944   CCBA             BTN_DOWN_8: ; $CCBA
1945   CCBA FB              SEC
1946   CCBB CD 4C           VMJ  ($4C) ; ($4C)($26)
1947   CCBD             
1948   CCBD             BTN_DOWN_10: ; $CCBD
1949   CCBD 68 01           LDI  UH,$01
1950   CCBF             
1951   CCBF             BTN_DOWN_9: ; $CCBF
1952   CCBF CD 48           VMJ  ($48) ; ($48)($24)
1953   CCC1             
1954   CCC1             
1955   CCC1             
1956   CCC1             ; Enter Button
1957   CCC1             BTN_ENTER: ; $CCC1
1958   CCC1 C3 46           VCS  ($46) ; ($46)($23)
1959   CCC3             
1960   CCC3             BTN_ENTER_2: ; $CCC3
1961   CCC3 EB 76 4E 01     ORI  (DISP_BUFF + $4E),$01
1962   CCC7 DB              ROL
1963   CCC8 83 22           BCS BTN_ENTER_3 ; $CCEC
1964   CCCA ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
1965   CCCE CB 42           VZS  ($42) ; ($42)($21)
1966   CCD0 CC              VEJ  (CC) \ ABYTL(BREAKPARAM) ; $788A
1966   CCD1 8A          
1967   CCD2 D9              SHL
1968   CCD3 C3 42           VCS  ($42) ; ($42)($21)
1969   CCD5 D9              SHL
1970   CCD6 83 38           BCS BTN_ENTER_4 ; $CD10
1971   CCD8 D9              SHL
1972   CCD9 C1 42           VCR  ($42) ; ($42)($21) 
1973   CCDB BA C8 D5        JMP  BCMD_CONT_3 ; $C8D5
1974   CCDE             
1975   CCDE             
1976   CCDE             
1977   CCDE             ;------------------------------------------------------------------------------
1978   CCDE             ; Initializes "right boundary" of the input buffer with CR (0D) 
1979   CCDE             ;            Address: CCDE
1980   CCDE             ;         Parameters: None
1981   CCDE             ; 
1982   CCDE             ; Modified Registers: X-Reg points to 7BFF. Accumulator contains 00. If last 
1983   CCDE             ;                     entry in input buffer was a token, (7BFE and 7BFF) are 
1984   CCDE             ;                     deleted, with a character only (7BFF).
1985   CCDE             ;   Error conditions: None
1986   CCDE             ;------------------------------------------------------------------------------
1987   CCDE             BTN_ENTER_1: ; $CCDE
1988   CCDE 4A FE           LDI  XL,$FE
1989   CCE0 48 7B           LDI  XH,$7B
1990   CCE2 05              LDA  (X)
1991   CCE3 B7 E0           CPI  A,$E0
1992   CCE5 B5 0D           LDI  A,$0D
1993   CCE7 83 01           BCS BTN_ENTER_5 ; $CCEA
1994   CCE9 44              INC  X
1995   CCEA             
1996   CCEA             BTN_ENTER_5: ; $CCEA
1997   CCEA 0E              STA  (X)
1998   CCEB 9A              RTN
1999   CCEC             
2000   CCEC             BTN_ENTER_3: ; $CCEC
2001   CCEC BE CC DE        SJP  (BTN_ENTER_1) ; $CCDE
2002   CCEF BE D0 11        SJP  (PRGLINE_TDI_4) ; $D011
2003   CCF2 81 25           BCR BTN_ENTER_6 ; $CD19
2004   CCF4 F4              VEJ  (F4) \ AWRD(LASTVARADD_H)
2004   CCF5 78 86       
2005   CCF7 CC              VEJ  (CC) \ ABYTL($7888)
2005   CCF8 88          
2006   CCF9 BE C0 11        SJP  (SAVEVARPTR_A)
2007   CCFC BE F9 7B        SJP  (VAR_TYPE)
2008   CCFF 81 8A           BCR ERRN
2009   CD01 06              CPA  XL
2010   CD02 8B 0C           BZS BTN_ENTER_4 ; $CD10
2011   CD04 CD 08           VMJ  ($08) \ ABRF(ERRN)
2011   CD06 84          
2012   CD07 E9 78 8A 0F     ANI  (BREAKPARAM),$0F
2013   CD0B D6              VEJ  (D6) \ ABYT($AC)
2013   CD0C AC          
2014   CD0D BA C9 DA        JMP  BCMD_DIM_7 ; $C9DA
2015   CD10             
2016   CD10             BTN_ENTER_4: ; $CD10
2017   CD10 E9 78 8A 0F     ANI  (BREAKPARAM),$0F
2018   CD14 D6              VEJ  (D6) \ ABYT($AC)
2018   CD15 AC          
2019   CD16 BA C6 76        JMP  BCMD_REM ; $C676
2020   CD19             
2021   CD19             BTN_ENTER_6: ; $CD19
2022   CD19 BE F9 57        SJP  (TOKENIZE_INBUF)
2023   CD1C 8B 6D           BZS ERRN
2024   CD1E 4E B0           CPI  XL,$B0
2025   CD20 CB 42           VZS  ($42) ; ($42)($21)
2026   CD22 A5 76 4F        LDA  (DISP_BUFF + $4F)
2027   CD25 D9              SHL
2028   CD26 DB              ROL
2029   CD27 83 3C           BCS BTN_ENTER_7 ; $CD65
2030   CD29 8D 13           BVR BTN_ENTER_8 ; $CD3E
2031   CD2B BE CF 27        SJP  (PRGLINE_TDI)
2032   CD2E 0D              EOR  (X)
2033   CD2F 5B 34           ORI  (Y),$34
2034   CD31 00              SBC  XL
2035   CD32 A4              LDA  UH
2036   CD33 1A              STA  YL
2037   CD34 B5 14           LDI  A,$14
2038   CD36             
2039   CD36             BTN_ENTER_10: ; $CD36
2040   CD36 58 7B           LDI  YH,$7B
2041   CD38 C3 E0           VCS  ($E0)
2042   CD3A CD 44           VMJ  ($44) ; ($44)($22)
2043   CD3C CD 42           VMJ  ($42) ; ($42)($21)
2044   CD3E             
2045   CD3E             BTN_ENTER_8: ; $CD3E
2046   CD3E ED 78 80 08     BII  (DISPARAM),$08
2047   CD42 8B 11           BZS BTN_ENTER_9 ; $CD55
2048   CD44 14              LDA  YL
2049   CD45 00              SBC  XL
2050   CD46 BD FF           EAI  $FF
2051   CD48 FD 18           LDX  Y
2052   CD4A CD 24           VMJ  ($24)
2053   CD4C BE CE D0        SJP  (TXFR_RSV_KEY)
2054   CD4F 5A B3           LDI  YL,$B3
2055   CD51 B5 08           LDI  A,$08
2056   CD53 9E 1F           BCH BTN_ENTER_10 ; $CD36
2057   CD55             
2058   CD55             BTN_ENTER_9: ; $CD55
2059   CD55 C2              VEJ  (C2) \ ACHR($22) \ ABRF(BTN_ENTER_7) ; $CD65
2059   CD56 22          
2059   CD57 0D          
2060   CD58 CD 0C           VMJ  ($0C)
2061   CD5A C8              VEJ  (C8) \ ABRF(ERR1)
2061   CD5B 2D          
2062   CD5C BE CF 0B        SJP  (TXFR_RSV_KEY_1) ; $CF0B
2063   CD5F 5A B0           LDI  YL,$B0
2064   CD61 B5 20           LDI  A,$20
2065   CD63 9E 2F           BCH BTN_ENTER_10 ; $CD36
2066   CD65             
2067   CD65             BTN_ENTER_7: ; $CD65
2068   CD65 5A B0           LDI  YL,$B0
2069   CD67 BA C4 46        JMP  BASIC_INT_12 ; $C446
2070   CD6A             
2071   CD6A             
2072   CD6A             
2073   CD6A             ;------------------------------------------------------------------------------
2074   CD6A             ; Unlock, cancles LOCK
2075   CD6A             ;            Address: CD6A
2076   CD6A             ;         Parameters: None
2077   CD6A             ; 
2078   CD6A             ; Modified Registers: (79FF) is overwritten with FF.
2079   CD6A             ;                     Accumulator, XH
2080   CD6A             ;   Error conditions: None
2081   CD6A             ;------------------------------------------------------------------------------
2082   CD6A             UNLOCK: ; $CD6A
2083   CD6A 08              STA  XH
2084   CD6B B5 FF           LDI  A,$FF
2085   CD6D AE 79 FF        STA  (UNDEF_REG_79FF)
2086   CD70 9A              RTN
2087   CD71             
2088   CD71             
2089   CD71             
2090   CD71             ;------------------------------------------------------------------------------
2091   CD71             ; Switch off the computer with the OFF button
2092   CD71             ;            Address: CD71
2093   CD71             ;         Parameters: None
2094   CD71             ;
2095   CD71             ; Modified Registers: For the RESET routine recognizes switching off by OFF, 
2096   CD71             ;                     the bytes: 50, 51, 52,...,5F are stored at 7A10 ff. 
2097   CD71             ;                     When switched on again, the computer performs an editor 
2098   CD71             ;                     cold start after running through the RESET routine.
2099   CD71             ;   Error conditions: None
2100   CD71             ;------------------------------------------------------------------------------
2101   CD71             BTN_OFF: ; $CD71
2102   CD71 4A 10           LDI  XL,$10
2103   CD73 48 7A           LDI  XH,$7A
2104   CD75 B5 50           LDI  A,$50
2105   CD77 6A 0F           LDI  UL,$0F
2106   CD79             
2107   CD79             BTN_OFF_1: ; $CD79
2108   CD79 41              SIN  X
2109   CD7A DD              INC  A
2110   CD7B 88 04           LOP  UL,BTN_OFF_1 ; $CD79
2111   CD7D CD A6           VMJ  ($A6) ; ($A6)($53)
2112   CD7F 89 02           BZR BTN_OFF_2 ; $CD83
2113   CD81 FD 4C           .BYTE $FD, $4C ;    OFF ; *** add OFF opcode to syntax highlighting
2114   CD83             
2115   CD83             BTN_OFF_2: ; $CD83
2116   CD83 D8              VEJ  (D8)
2117   CD84 CB 46           VZS  ($46) ; ($46)($23)
2118   CD86 BA C4 C6        JMP  BCMD_STOP_9 ; $C4C6
2119   CD89             
2120   CD89             
2121   CD89             
2122   CD89             ; (E4) Output Error 1 and return to the editor
2123   CD89             ERR1: ; $CD89
2124   CD89 68 01           LDI  UH,$01
2125   CD8B             
2126   CD8B             
2127   CD8B             
2128   CD8B             ; (E0) Output error from UH
2129   CD8B             ERRN: ; $CD8B
2130   CD8B A4              LDA  UH
2131   CD8C AE 78 9B        STA  (ERL)
2132   CD8F AA 78 4F        LDI  S,(CPU_STACK + $4F)
2133   CD92 D8              VEJ  (D8)
2134   CD93 8B 14           BZS ERRN_1 ; $CDA9
2135   CD95 D4              VEJ  (D4) \ ABYT($B2)
2135   CD96 B2          
2136   CD97 CC              VEJ  (CC) \ ABYTL(ERL) ; $789B
2136   CD98 9B          
2137   CD99 DF              DEC  A
2138   CD9A 8B 13           BZS ERRN_2 ; $CDAF
2139   CD9C ED 78 B8 80     BII  (ON_ERR_ADD_H),$80
2140   CDA0 89 0D           BZR ERRN_2 ; $CDAF
2141   CDA2 D4              VEJ  (D4) \ ABYT($A0)
2141   CDA3 A0          
2142   CDA4 D6              VEJ  (D6) \ ABYT($B8)
2142   CDA5 B8          
2143   CDA6 BA C4 13        JMP  BASIC_INT_8 ; $C413
2144   CDA9             
2145   CDA9             ERRN_1: ; $CD8B
2146   CDA9 B5 A0           LDI  A,$A0
2147   CDAB 5C 00           CPI  YH,$00
2148   CDAD 89 02           BZR ERRN_3 ; $CDB1
2149   CDAF             
2150   CDAF             ERRN_2: ; $CDAF
2151   CDAF B5 80           LDI  A,$80
2152   CDB1             
2153   CDB1             ERRN_3: ; $CDB1
2154   CDB1 AE 78 80        STA  (DISPARAM)
2155   CDB4 FD 98           PSH  Y
2156   CDB6 5A 10           LDI  YL,$10
2157   CDB8 58 7A           LDI  YH,$7A
2158   CDBA CD 2A           VMJ  ($2A) \ ABYT($64) \ ABYT($06)
2158   CDBC 64          
2158   CDBD 06          
2159   CDBE A5 78 9B        LDA  (ERL)
2160   CDC1 2A              STA  UL
2161   CDC2 68 00           LDI  UH,$00
2162   CDC4 CD 10           VMJ  ($10) \ ABYT($40)
2162   CDC6 40          
2163   CDC7 D8              VEJ  (D8)
2164   CDC8 8B 11           BZS ERRN_4 ; $CDDB
2165   CDCA CD 2A           VMJ  ($2A) \ ABYT($61) \ ABYT($03)
2165   CDCC 61          
2165   CDCD 03          
2166   CDCE B5 20           LDI  A,$20
2167   CDD0 FD C8           PSH  A
2168   CDD2 CC              VEJ  (CC) \ ABYTL(ERR_LINE_H) ; $78B4
2168   CDD3 B4          
2169   CDD4             
2170   CDD4             ERRN_5: ; $CDD4
2171   CDD4 BE DD 2F        SJP  (LOAD_NEXT_1) ; $DD2F
2172   CDD7 40              INC  XL
2173   CDD8 FD 8A           POP  A
2174   CDDA 51              SIN  Y
2175   CDDB             
2176   CDDB             ERRN_4: ; $CDDB
2177   CDDB 59 00           ANI  (Y),$00
2178   CDDD FD 18           LDX  Y
2179   CDDF FD 1A           POP  Y
2180   CDE1 BE EF 5B        SJP  (TXT2LCD_ARY)
2181   CDE4 CD 46           VMJ  ($46) ; ($46)($23)
2182   CDE6             
2183   CDE6             
2184   CDE6             
2185   CDE6             ;------------------------------------------------------------------------------
2186   CDE6             ; INSERT - Pass characters/tokens from U-Reg to input buffer
2187   CDE6             ;            Address: CDE6
2188   CDE6             ;         Parameters: U-Reg contains tokens or characters (UH must contain 00). 
2189   CDE6             ;                     Y-Reg must contain address being edited.
2190   CDE6             ;
2191   CDE6             ; Modified Registers: Y-Reg points to next cursor position.
2192   CDE6             ;   Error conditions: None
2193   CDE6             ;------------------------------------------------------------------------------
2194   CDE6             INS2INBUF: ; $CDE6
2195   CDE6 15              LDA  (Y)
2196   CDE7 B7 0D           CPI  A,$0D
2197   CDE9 8B 24           BZS INS2INBUF_1 ; $CE0F
2198   CDEB F9              REC
2199   CDEC B5 FF           LDI  A,$FF
2200   CDEE 10              SBC  YL
2201   CDEF 81 1B           BCR INS2INBUF_2 ; $CE0C
2202   CDF1 FD A8           PSH  U
2203   CDF3 FD 88           PSH  X
2204   CDF5 2A              STA  UL
2205   CDF6 5A FF           LDI  YL,$FF
2206   CDF8 FD 18           LDX  Y
2207   CDFA 46              DEC  X
2208   CDFB 05              LDA  (X)
2209   CDFC B7 E0           CPI  A,$E0
2210   CDFE 81 02           BCR INS2INBUF_3 ; $CE02
2211   CE00 B5 0D           LDI  A,$0D
2212   CE02             
2213   CE02             INS2INBUF_3: ; $CE02
2214   CE02 0E              STA  (X)
2215   CE03             
2216   CE03             INS2INBUF_4: ; $CE03
2217   CE03 47              LDE  X
2218   CE04 53              SDE  Y
2219   CE05 88 04           LOP  UL,INS2INBUF_4 ; $CE03
2220   CE07 FB              SEC
2221   CE08 FD 0A           POP  X
2222   CE0A FD 2A           POP  U
2223   CE0C             
2224   CE0C             INS2INBUF_2: ; $CE0C
2225   CE0C B5 27           LDI  A,$27
2226   CE0E 1E              STA  (Y)
2227   CE0F             
2228   CE0F             INS2INBUF_1: ; $CE0F
2229   CE0F 9A              RTN
2230   CE10             
2231   CE10             ;
2232   CE10             
2233   CE10             ; Character input in Input Buffer
2234   CE10             CHAR2INBUF: ; $CE10
2235   CE10 A4              LDA  UH
2236   CE11 8B 1A           BZS CHAR2INBUF_1 ; $CE2D
2237   CE13 5E FF           CPI  YL,$FF
2238   CE15 83 15           BCS CHAR2INBUF_2 ; $CE2C
2239   CE17 15              LDA  (Y)
2240   CE18 B7 0D           CPI  A,$0D
2241   CE1A 8B 07           BZS CHAR2INBUF_3 ; $CE23
2242   CE1C B7 E0           CPI  A,$E0
2243   CE1E 83 03           BCS CHAR2INBUF_3 ; $CE23
2244   CE20 BE CD E6        SJP  (INS2INBUF)
2245   CE23             
2246   CE23             CHAR2INBUF_3: ; $CE23
2247   CE23 A4              LDA  UH
2248   CE24 51              SIN  Y
2249   CE25 24              LDA  UL
2250   CE26 51              SIN  Y
2251   CE27 14              LDA  YL
2252   CE28 89 02           BZR CHAR2INBUF_2 ; $CE2C
2253   CE2A 56              DEC  Y
2254   CE2B             
2255   CE2B             CHAR2INBUF_4: ; $CE2B
2256   CE2B 56              DEC  Y
2257   CE2C             
2258   CE2C             CHAR2INBUF_2: ; $CE2C
2259   CE2C 9A              RTN
2260   CE2D             
2261   CE2D             CHAR2INBUF_1: ; $CE2D
2262   CE2D 15              LDA  (Y)
2263   CE2E B7 E0           CPI  A,$E0
2264   CE30 24              LDA  UL
2265   CE31 51              SIN  Y
2266   CE32 83 04           BCS DELFRMINBUF
2267   CE34 14              LDA  YL
2268   CE35 9B 0C           BZS CHAR2INBUF_4 ; $CE2B
2269   CE37 9A              RTN
2270   CE38             
2271   CE38             
2272   CE38             
2273   CE38             ;------------------------------------------------------------------------------
2274   CE38             ; DELETE (a character in the input buffer)
2275   CE38             ;            Address: CE38
2276   CE38             ;         Parameters: Y-Reg must point to memory cell to be erased
2277   CE38             ; 
2278   CE38             ; Modified Registers: Contents from next address pointed to by Y-Reg
2279   CE38             ;                     shifted one byte to left to end of the memory page. 
2280   CE38             ;                     (Y-Reg) will be deleted. The last address in memory page 
2281   CE38             ;                     is written with 0D.
2282   CE38             ;                     X Reg, U Reg, Accumulator=0D
2283   CE38             ;   Error conditions:	None
2284   CE38             ;------------------------------------------------------------------------------
2285   CE38             DELFRMINBUF: ; $CE38
2286   CE38 FD 98           PSH  Y
2287   CE3A FD 18           LDX  Y
2288   CE3C 14              LDA  YL
2289   CE3D BD FF           EAI  $FF
2290   CE3F 2A              STA  UL
2291   CE40 44              INC  X
2292   CE41 BE D0 49        SJP  (XREG2YREG)
2293   CE44 B5 0D           LDI  A,$0D
2294   CE46 1E              STA  (Y)
2295   CE47 FD 1A           POP  Y
2296   CE49 9A              RTN
2297   CE4A             
2298   CE4A             
2299   CE4A             
2300   CE4A             ; Evaluate programmed button; Clears input buffer.
2301   CE4A             DEFEVAL: ; $CE4A
2302   CE4A FD 88           PSH  X
2303   CE4C ED 78 80 40     BII  (DISPARAM),$40
2304   CE50 89 2F           BZR DEFEVAL_3 ; $CE81
2305   CE52 FD A8           PSH  U
2306   CE54 BE D0 2B        SJP  (INBUF_CLRRST_1) ; $D02B
2307   CE57 ED 78 80 20     BII  (DISPARAM),$20
2308   CE5B 8B 1D           BZS DEFEVAL_4 ; $CE7A
2309   CE5D FD 2A           POP  U
2310   CE5F FD A8           PSH  U
2311   CE61 A4              LDA  UH
2312   CE62 89 16           BZR DEFEVAL_4 ; $CE7A
2313   CE64 24              LDA  UL
2314   CE65 6A 07           LDI  UL,$07
2315   CE67 BE DA 98        SJP  (MULT16B_1) ; $DA98
2316   CE6A 89 0E           BZR DEFEVAL_4 ; $CE7A
2317   CE6C D2              VEJ  (D2) \ ABRF($CE7A) \ ABYT($80)
2317   CE6D 0C          
2317   CE6E 80          
2318   CE6F BE EF 1B        SJP  (ARX2STRNG)
2319   CE72 DC              VEJ  (DC)
2320   CE73 5A B0           LDI  YL,$B0
2321   CE75 58 7B           LDI  YH,$7B
2322   CE77 BE D0 49        SJP  (XREG2YREG)
2323   CE7A             
2324   CE7A             DEFEVAL_4: ; $CE7A
2325   CE7A FD 2A           POP  U
2326   CE7C B5 40           LDI  A,$40
2327   CE7E AE 78 80        STA  (DISPARAM)
2328   CE81             
2329   CE81             DEFEVAL_3: ; $CE81
2330   CE81 BE CE 10        SJP  (CHAR2INBUF)
2331   CE84 FD 0A           POP  X
2332   CE86 9A              RTN
2333   CE87             
2334   CE87             
2335   CE87             
2336   CE87             ;------------------------------------------------------------------------------
2337   CE87             ; Determines the associated reserve key code for the function key
2338   CE87             ;            Address: CE87
2339   CE87             ;   Entry parameters: UL must contain the ASCII code of the spare key sought. 
2340   CE87             ;                     The symbol for the corresponding reserve level must be 
2341   CE87             ;                     visible in the display, otherwise level I is preset.
2342   CE87             ;
2343   CE87             ; Modified registers: (7884) & accumulator contain reserve key code. 
2344   CE87             ;                     U reg changed.
2345   CE87             ;   Error conditions: none
2346   CE87             ;--------------------------------------------------------------------------------------------------
2347   CE87             DEFEVAL_1: ; $CE87
2348   CE87 B5 10           LDI  A,$10
2349   CE89 22              ADC  UL
2350   CE8A 2A              STA  UL
2351   CE8B B9 07           ANI  A,$07
2352   CE8D 28              STA  UH
2353   CE8E A5 76 4E        LDA  (DISP_BUFF + $4E)
2354   CE91 B9 30           ANI  A,$30
2355   CE93 B7 30           CPI  A,$30
2356   CE95 81 02           BCR DEFEVAL_5 ; $CE99
2357   CE97 B5 20           LDI  A,$20
2358   CE99             
2359   CE99             DEFEVAL_5: ; $CE99
2360   CE99 D5              SHR
2361   CE9A A2              ADC  UH
2362   CE9B AE 78 84        STA  (CURVARADD_L)
2363   CE9E 9A              RTN
2364   CE9F             
2365   CE9F             
2366   CE9F             
2367   CE9F             ;------------------------------------------------------------------------------
2368   CE9F             ; (38) Determines reserve memory start address +8
2369   CE9F             ; If there is a module in the memory, the reserve memory start for module is 
2370   CE9F             ; entered in (7860). This value is then recognized as high byte of the address.
2371   CE9F             ;            Address: CE9F (38) 
2372   CE9F             ;   Entry parameters: none
2373   CE9F             ;
2374   CE9F             ; Modified registers: X-Reg shows reserve level I (e.g. 3808) at the beginning 
2375   CE9F             ;                     of the text. Accumulator contains the value from (7860) 
2376   CE9F             ;                     or (7863). UH contains error code 24 if module was 
2377   CE9F             ;                     recognized. Carry flag=0 if in (7860) the default value 
2378   CE9F             ;                     FF is not found, i.e., no module was found in the memory.
2379   CE9F             ;   Error conditions: none
2380   CE9F             ;------------------------------------------------------------------------------
2381   CE9F             RSRV_MEM_START: ; $CE9F
2382   CE9F A5 78 60        LDA  (ST_ROM_MOD) ; $7860
2383   CEA2 08              STA  XH
2384   CEA3 DB              ROL
2385   CEA4 68 18           LDI  UH,$18
2386   CEA6 81 04           BCR DEFEVAL_6 ; $CEAC
2387   CEA8 A5 78 63        LDA  (RAM_ST_H)
2388   CEAB 08              STA  XH
2389   CEAC             
2390   CEAC             DEFEVAL_6: ; $CEAC
2391   CEAC 4A 08           LDI  XL,$08
2392   CEAE 9A              RTN
2393   CEAF             
2394   CEAF             
2395   CEAF             ;------------------------------------------------------------------------------
2396   CEAF             ; Determines the start address of the text that explains the reserve assignment 
2397   CEAF             ; for the set reserve key level I, II, or III.
2398   CEAF             ;            Address: CEAF
2399   CEAF             ;   Entry parameters: none
2400   CEAF             ; 
2401   CEAF             ; Modified registers: X-Reg contains the address of the beginning of the text of the visible (activated) reserve level in the display. U-Reg, accumulator, Carry=0 if ROM module is used.
2402   CEAF             ;   Error conditions: none
2403   CEAF             ;------------------------------------------------------------------------------
2404   CEAF             DEFEVAL_2: ; $CEAF
2405   CEAF A5 76 4E        LDA  (DISP_BUFF + $4E)
2406   CEB2 6A 08           LDI  UL,$08
2407   CEB4 DB              ROL
2408   CEB5 DB              ROL
2409   CEB6 83 07           BCS DEFEVAL_7 ; $CEBF
2410   CEB8 6A 22           LDI  UL,$22
2411   CEBA DB              ROL
2412   CEBB 83 02           BCS DEFEVAL_7 ; $CEBF
2413   CEBD 6A 3C           LDI  UL,$3C
2414   CEBF             
2415   CEBF             DEFEVAL_7: ; $CEBF
2416   CEBF CD 38           VMJ  ($38)
2417   CEC1 24              LDA  UL
2418   CEC2 0A              STA  XL
2419   CEC3 9A              RTN
2420   CEC4             
2421   CEC4             
2422   CEC4             ;------------------------------------------------------------------------------
2423   CEC4             ; Searches reserve key code in reserve memory (from XH56)
2424   CEC4             ;           Address: CEC4
2425   CEC4             ;  Entry parameters: XH must point to reserve memory start. (7884) must contain 
2426   CEC4             ;                    the required reserve key code (01H-16H). If this code was 
2427   CEC4             ;                    not found from (XH56), carry and zero flag are 0, else 1.
2428   CEC4             ; 
2429   CEC4             ; Reserve-Key-Codes:
2430   CEC4             ;                        I II III
2431   CEC4             ;                    F1 01 11 09
2432   CEC4             ;                    F2 02 12 0A
2433   CEC4             ;                    F3 03 13 0B
2434   CEC4             ;                    F4 04 14 0C
2435   CEC4             ;                    F5 05 15 0D
2436   CEC4             ;                    F6 06 16 0E
2437   CEC4             ;
2438   CEC4             ; Modified registers: X-Reg points to the address of the instruction assigned to the key. Accumulator contains found key or 00.
2439   CEC4             ;   Error conditions: none
2440   CEC4             ;------------------------------------------------------------------------------
2441   CEC4             RESKEY_SRCH: ; $CEC4
2442   CEC4 4A 56           LDI  XL,$56
2443   CEC6             
2444   CEC6             RESKEY_SRCH_2: ; $CEC6
2445   CEC6 F9              REC
2446   CEC7 45              LIN  X
2447   CEC8 8B 05           BZS RESKEY_SRCH_1 ; $CECF
2448   CECA A7 78 84        CPA  (CURVARADD_L)
2449   CECD 99 09           BZR RESKEY_SRCH_2 $CEC6
2450   CECF             
2451   CECF             RESKEY_SRCH_1: ; $CECF
2452   CECF 9A              RTN
2453   CED0             
2454   CED0             
2455   CED0             
2456   CED0             ;------------------------------------------------------------------------------
2457   CED0             ; Change reserve key assignment
2458   CED0             ; Address:	CED0
2459   CED0             ;   Entry parameters: (7884) must contain key code of the key to be redefined. 
2460   CED0             ;                     AR-X must contain CSI of the new text.
2461   CED0             ; 
2462   CED0             ; Modified registers: The original key assignment is deleted, and the assignment 
2463   CED0             ;                     of the remaining keys is moved to bottom. New allocation
2464   CED0             ;                     is appended to first free address of reserve memory.
2465   CED0             ;                     X-Reg points to address behind transferred text.
2466   CED0             ;                     Y-Reg points to the next free address of reserve memory. 
2467   CED0             ;                     Accumulator contains reserve key code. U reg.
2468   CED0             ;   Error conditions: If there is not enough free space in the reserve memory, 
2469   CED0             ;                     Carry=1 and UH contains error code 13. The original 
2470   CED0             ;                     assignment is deleted. If (7860) is not assigned FF, 
2471   CED0             ;                     carry is also set, and error code 24 is placed after UH.
2472   CED0             ;------------------------------------------------------------------------------
2473   CED0             TXFR_RSV_KEY: ; $CED0
2474   CED0 CD 38           VMJ  ($38)
2475   CED2 81 51           BCR TXFR_RSV_KEY_2 ; $CF25
2476   CED4 BE CE C4        SJP  (RESKEY_SRCH)
2477   CED7 FD 5A           STX  Y
2478   CED9 81 17           BCR TXFR_RSV_KEY_3 ; $CEF2
2479   CEDB B5 1F           LDI  A,$1F
2480   CEDD             
2481   CEDD             TXFR_RSV_KEY_4: ; $CEDD
2482   CEDD F7              CIN
2483   CEDE 91 03           BCR TXFR_RSV_KEY_4 ; $CEDD
2484   CEE0 46              DEC  X
2485   CEE1 56              DEC  Y
2486   CEE2 B5 C5           LDI  A,$C5
2487   CEE4 00              SBC  XL
2488   CEE5 2A              STA  UL
2489   CEE6             
2490   CEE6             TXFR_RSV_KEY_5: ; $CEE6
2491   CEE6 F5              TIN
2492   CEE7 88 03           LOP  UL,TXFR_RSV_KEY_5 ; $CEE6
2493   CEE9 6A 6F           LDI  UL,$6F
2494   CEEB 5A 56           LDI  YL,$56
2495   CEED             
2496   CEED             TXFR_RSV_KEY_6: ; $CEED
2497   CEED 55              LIN  Y
2498   CEEE 8B 02           BZS TXFR_RSV_KEY_3 ; $CEF2
2499   CEF0 88 05           LOP  UL,TXFR_RSV_KEY_6 ; $CEED
2500   CEF2             
2501   CEF2             TXFR_RSV_KEY_3: ; $CEF2
2502   CEF2 52              DEC  YL
2503   CEF3 DC              VEJ  (DC)
2504   CEF4 68 0D           LDI  UH,$0D
2505   CEF6 62              DEC  UL
2506   CEF7 81 11           BCR TXFR_RSV_KEY_7 ; $CF0A
2507   CEF9 14              LDA  YL
2508   CEFA 22              ADC  UL
2509   CEFB 83 0D           BCS TXFR_RSV_KEY_7 ; $CF0A
2510   CEFD B7 C4           CPI  A,$C4
2511   CEFF 83 09           BCS TXFR_RSV_KEY_7 ; $CF0A
2512   CF01 A5 78 84        LDA  (CURVARADD_L)
2513   CF04 51              SIN  Y
2514   CF05             
2515   CF05             TXFR_RSV_KEY_8: ; $CF05
2516   CF05 F5              TIN
2517   CF06 88 03           LOP  UL,TXFR_RSV_KEY_8 ; $CF05
2518   CF08 59 00           ANI  (Y),$00
2519   CF0A             
2520   CF0A             TXFR_RSV_KEY_7: ; $CF0A
2521   CF0A 9A              RTN
2522   CF0B             
2523   CF0B             
2524   CF0B             
2525   CF0B             ;------------------------------------------------------------------------------
2526   CF0B             ; Transfers text declaring reserve button level to reserve memory area
2527   CF0B             ;            Address: CF0B
2528   CF0B             ;   Entry parameters: AR-X must contain CSI for text to be transmitted. The 
2529   CF0B             ;                     symbol of the level to be changed must be visible in the 
2530   CF0B             ;                     display. If (7860) does not contain FF, the assignment is 
2531   CF0B             ;                     protected from being overwritten.
2532   CF0B             ; 
2533   CF0B             ; Modified registers: All registers changed.
2534   CF0B             ;   Error conditions: If text was transferred, Carry=0. If the value in (7860) was not FF, Carry=1
2535   CF0B             ;------------------------------------------------------------------------------
2536   CF0B             TXFR_RSV_KEY_1: ; $CF0B
2537   CF0B BE CE AF        SJP  (DEFEVAL_2) ; $CEAF
2538   CF0E 81 15           BCR $TXFR_RSV_KEY_2 ; CF25
2539   CF10 FD 5A           STX  Y
2540   CF12 DC              VEJ  (DC)
2541   CF13 68 00           LDI  UH,$00
2542   CF15 B7 1A           CPI  A,$1A
2543   CF17 81 03           BCR TXFR_RSV_KEY_9 ; $CF1C
2544   CF19 6A 1A           LDI  UL,$1A
2545   CF1B 28              STA  UH
2546   CF1C             
2547   CF1C             TXFR_RSV_KEY_9: ; $CF1C
2548   CF1C BE D0 49        SJP  (XREG2YREG)
2549   CF1F A4              LDA  UH
2550   CF20 89 01           BZR TXFR_RSV_KEY_10 ; $CF23
2551   CF22 1E              STA  (Y)
2552   CF23             
2553   CF23             TXFR_RSV_KEY_10: ; $CF23
2554   CF23 F9               REC
2555   CF24 9A               RTN
2556   CF25             
2557   CF25             TXFR_RSV_KEY_2: ; $CF25
2558   CF25 FB              SEC
2559   CF26 9A              RTN
2560   CF27             
2561   CF27             
2562   CF27             
2563   CF27             ;------------------------------------------------------------------------------
2564   CF27             ; Transfer, delete, insert line from Input buffer
2565   CF27             ;            Address: CF27
2566   CF27             ;                     4 data bytes
2567   CF27             ;                     D1= if line number not found
2568   CF27             ;                     D2= if line number not allowed
2569   CF27             ;                     D3= if n beginning of buffer does not contain line number
2570   CF27             ;                     D4=if line was transferred correctly
2571   CF27             ;         Parameters: Y-Reg must point to arbitrary buffer ranges (XXBO-XXFF). 
2572   CF27             ;                     The character that X-Reg then points to must be a "0D". 
2573   CF27             ;                     YH must also point to this memory page.
2574   CF27             ; 
2575   CF27             ; Modified Registers: All CPU registers. The program pointers in the memory map 
2576   CF27             ;                     are also changed and adapted to new scope of the program.
2577   CF27             ;   Error conditions: UH may contain Error message. Error 13, if program line 
2578   CF27             ;                     no longer fits in memory; Error 1 if line number not 
2579   CF27             ;                     allowed. If variables and program memory overlap, an 
2580   CF27             ;                     error code is also stored in UH.
2581   CF27             ;------------------------------------------------------------------------------
2582   CF27             PRGLINE_TDI: ; $CF27
2583   CF27 FD 88           PSH  X
2584   CF29 5A B0           LDI  YL,$B0
2585   CF2B BE D3 D5        SJP  (DEC2HEX)
2586   CF2E 89 04           BZR PRGLINE_TDI_5 ; $CF34
2587   CF30 B5 02           LDI  A,$02
2588   CF32 8E 94           BCH PRGLINE_TDI_6 ; $CFC8
2589   CF34             
2590   CF34             PRGLINE_TDI_5: ; $CF34
2591   CF34 B5 01           LDI  A,$01
2592   CF36 83 90           BCS PRGLINE_TDI_6 ; $CFC8
2593   CF38 FD 0A           POP  X
2594   CF3A 04              LDA  XL
2595   CF3B 10              SBC  YL
2596   CF3C FD 98           PSH  Y
2597   CF3E FD C8           PSH  A
2598   CF40 FD A8           PSH  U
2599   CF42 BE CF D0        SJP  (PRGLINE_TDI_7) ; $CFD0
2600   CF45 FD 2A           POP  U
2601   CF47 FD A8           PSH  U
2602   CF49 BE D2 E0        SJP  (BCD_Y2ARX_2) ; $D2E0
2603   CF4C 1E              STA  (Y)
2604   CF4D FD 0A           POP  X
2605   CF4F CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
2605   CF50 A6          
2606   CF51 46              DEC  X
2607   CF52 FD 5A           STX  Y
2608   CF54 45              LIN  X
2609   CF55 FD CA           ADR  X
2610   CF57 56              DEC  Y
2611   CF58 56              DEC  Y
2612   CF59 46              DEC  X
2613   CF5A CD 16           VMJ  ($16)
2614   CF5C 44              INC  X
2615   CF5D             
2616   CF5D             PRGLINE_TDI_8: ; $CF5D
2617   CF5D F5              TIN
2618   CF5E 88 03           LOP  UL,PRGLINE_TDI_8 ; $CF5D
2619   CF60 FD 62           DEC  UH
2620   CF62 93 07           BCS PRGLINE_TDI_8 ; $CF5D
2621   CF64 FD 18           LDX  Y
2622   CF66 46              DEC  X
2623   CF67 CA              VEJ  (CA) \ ABYTL(BASPRG_END_H) ; $7867
2623   CF68 67          
2624   CF69 8E 06           BCH $CF71
2625   CF6B FD 0A           POP  X
2626   CF6D CA              VEJ  (CA) \ ABYTL(SRCH_LINE_H) ; $78A8
2626   CF6E A8          
2627   CF6F CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
2627   CF70 67          
2628   CF71 FD 8A           POP  A
2629   CF73 DD              INC  A
2630   CF74 8B 52           BZS PRGLINE_TDI_6 ; $CFC8
2631   CF76 FD C8           PSH  A
2632   CF78 B3 04           ADI  A,$04
2633   CF7A FD 5A           STX  Y
2634   CF7C FD DA           ADR  Y
2635   CF7E 94              LDA  YH
2636   CF7F A7 78 64        CPA  (RAM_END_H)
2637   CF82 83 3E           BCS PRGLINE_TDI_9 ; $CFC2
2638   CF84 FD 98           PSH  Y
2639   CF86 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
2639   CF87 A6          
2640   CF88 46              DEC  X
2641   CF89 46              DEC  X
2642   CF8A 46              DEC  X
2643   CF8B CA              VEJ  (CA) \ ABYTL(SRCH_ADD_H) ; $78A6
2643   CF8C A6          
2644   CF8D 46              DEC  X
2645   CF8E CD 16           VMJ  ($16)
2646   CF90 44              INC  X
2647   CF91 CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
2647   CF92 67          
2648   CF93             
2649   CF93             PRGLINE_TDI_10: ; $CF93
2650   CF93 47              LDE  X
2651   CF94 53              SDE  Y
2652   CF95 88 04           LOP  UL,PRGLINE_TDI_10 ; $CF93
2653   CF97 FD 62           DEC  UH
2654   CF99 93 08           BCS PRGLINE_TDI_10 ; $CF93
2655   CF9B FD 0A           POP  X
2656   CF9D CA              VEJ  (CA) \ ABYTL(BASPRG_END_H) ; $7867
2656   CF9E 67          
2657   CF9F CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
2657   CFA0 A6          
2658   CFA1 FD 5A           STX  Y
2659   CFA3 CC              VEJ  (CC) \ ABYTL(SRCH_LINE_H) ; $78A8
2659   CFA4 A8          
2660   CFA5 51              SIN  Y
2661   CFA6 04              LDA  XL
2662   CFA7 51              SIN  Y
2663   CFA8 FD 8A           POP  A
2664   CFAA 2A              STA  UL
2665   CFAB DD              INC  A
2666   CFAC 51              SIN  Y
2667   CFAD FD 0A           POP  X
2668   CFAF 04              LDA  XL
2669   CFB0 28              STA  UH
2670   CFB1             
2671   CFB1             PRGLINE_TDI_11: ; $CFB1
2672   CFB1 F5              TIN
2673   CFB2 88 03           LOP  UL,PRGLINE_TDI_11 ; $CFB1
2674   CFB4 BE D0 9C        SJP  (DEL_DIM_VARS)
2675   CFB7 B5 03           LDI  A,$03
2676   CFB9             
2677   CFB9             PRGLINE_TDI_12: ; $CFB9
2678   CFB9 FD 0A           POP  X
2679   CFBB FD CA           ADR  X
2680   CFBD 45              LIN  X
2681   CFBE FD CA           ADR  X
2682   CFC0 FD 5E           STX  P
2683   CFC2             
2684   CFC2             PRGLINE_TDI_9: ; $CFC2
2685   CFC2 FD 8A           POP  A
2686   CFC4 68 0D           LDI  UH,$0D
2687   CFC6 B5 01           LDI  A,$01
2688   CFC8             
2689   CFC8             PRGLINE_TDI_6: ; $CFC8
2690   CFC8 FD 1A           POP  Y
2691   CFCA 9E 13           BCH PRGLINE_TDI_12 ; $CFB9
2692   CFCC             
2693   CFCC             
2694   CFCC             ; Initializes system addresses??
2695   CFCC             PRGLINE_TDI_3: ; $CFCC
2696   CFCC E9 78 8D 00     ANI  (TRACE_ON),$00
2697   CFD0             
2698   CFD0             ; Initialization of system addresses.
2699   CFD0             PRGLINE_TDI_7: ; $CFD0
2700   CFD0 CD 12           VMJ  ($12)
2701   CFD2             
2702   CFD2             PRGLINE_TDI_14: ; $CFD2
2703   CFD2 44              INC  X
2704   CFD3 44              INC  X
2705   CFD4 44              INC  X
2706   CFD5 84              LDA  XH
2707   CFD6 BB 80           ORI  A,$80
2708   CFD8 08              STA  XH
2709   CFD9 CA              VEJ  (CA) \ ABYTL(DATA_PTR_H) ; $78BE
2709   CFDA BE          
2710   CFDB B5 00           LDI  A,$00
2711   CFDD 6A A2           LDI  UL,$A2
2712   CFDF 61              SIN  U
2713   CFE0 61              SIN  U
2714   CFE1 6A B4           LDI  UL,$B4
2715   CFE3 61              SIN  U
2716   CFE4 61              SIN  U
2717   CFE5 AE 78 9B        STA  (ERL)
2718   CFE8 48 78           LDI  XH,$78
2719   CFEA 4A 71           LDI  XL,$71
2720   CFEC 6A 0D           LDI  UL,$0D
2721   CFEE             
2722   CFEE             PRGLINE_TDI_13: ; $CFEE
2723   CFEE 41              SIN  X
2724   CFEF 88 03           LOP  UL,PRGLINE_TDI_13 ; $CFEE
2725   CFF1 4A 95           LDI  XL,$95
2726   CFF3 41              SIN  X
2727   CFF4 41              SIN  X
2728   CFF5 41              SIN  X
2729   CFF6 41              SIN  X
2730   CFF7             
2731   CFF7             ; Initializes FOR / GOSUB pointers. Sets the error flag.
2732   CFF7             PRGLINE_TDI_1: ; $CFF7
2733   CFF7 EB 78 B8 80     ORI  (ON_ERR_ADD_H),$80
2734   CFFB             
2735   CFFB             ; (3A) basic-stack keyboard and input status    
2736   CFFB E9 7B 0E 1F     ANI  (CURS_CTRL),$1F
2737   CFFF E9 78 8A 00     ANI  (BREAKPARAM),$00
2738   D003 EB 78 91 FF     ORI  (GOSB_STK_PTR_L),$FF
2739   D007 B5 38           LDI  A,$38
2740   D009 AE 78 90        STA  (FORNXT_STK_PTR)
2741   D00C 9A              RTN
2742   D00D             
2743   D00D             ; Initialization of the program pointers.
2744   D00D             PRGLINE_TDI_2: ; $D00D
2745   D00D CC              VEJ  (CC) \ ABYTL(SRCH_TOP_H) ; $78AA
2745   D00E AA          
2746   D00F 9E 3F           BCH PRGLINE_TDI_14 ; $CFD2
2747   D011             
2748   D011             
2749   D011             
2750   D011             ;------------------------------------------------------------------------------
2751   D011             ; Checks whether the inputs for an INPUT command are edited
2752   D011             ;            Address: D011
2753   D011             ;         Parameters: None
2754   D011             ;
2755   D011             ; Modified Registers: Accumulator, carry flag=1 when editing with INPUT command
2756   D011             ;   Error conditions: None
2757   D011             ;------------------------------------------------------------------------------
2758   D011             PRGLINE_TDI_4: ; $D011
2759   D011 ED 76 4F 40     BII  (DISP_BUFF + $4F),$40
2760   D015 8B 08           BZS PRGLINE_TDI_15 ; $D01F
2761   D017                 
2762   D017             ; Tests input status. If input is required C=1. $D017   
2763   D017 A5 78 8A        LDA  (BREAKPARAM)
2764   D01A D9              SHL
2765   D01B 83 02           BCS PRGLINE_TDI_15 ; $D01F
2766   D01D DB              ROL
2767   D01E 9A              RTN
2768   D01F             
2769   D01F             PRGLINE_TDI_15: ; $D01F
2770   D01F F9              REC
2771   D020 9A              RTN
2772   D021             
2773   D021             
2774   D021             
2775   D021             ; 	Clears the rest of the input buffer with "0D"
2776   D021             INBUF_CLRRST: ; $D021
2777   D021 A5 78 8B        LDA  (INBUFPTR_L)
2778   D024 0A              STA  XL
2779   D025 1A              STA  YL
2780   D026 BD FF           EAI  $FF
2781   D028 2A              STA  UL
2782   D029 8E 0D           BCH INBUF_CLR_1 ; $D038
2783   D02B             
2784   D02B             
2785   D02B             
2786   D02B             ;------------------------------------------------------------------------------
2787   D02B             ; Clear input buffers with "0D" and initializes Input buffer pointers
2788   D02B             ;            Address:	D02B
2789   D02B             ;          Parameter:	None
2790   D02B             ;
2791   D02B             ; Modified Registers:	Input buffer is filled with "0D"
2792   D02B             ;   Error conditions:	None
2793   D02B             ;------------------------------------------------------------------------------
2794   D02B             INBUF_CLRRST_1: ; $D02B
2795   D02B B5 B0           LDI  A,$B0
2796   D02D AE 78 8B        STA  (INBUFPTR_L)
2797   D030             
2798   D030             
2799   D030             ; Clears the input buffer and sets V-Reg to the beginning of the input buffer.
2800   D030             INBUF_INIT: ; $D030
2801   D030 5A B0           LDI  YL,$B0
2802   D032 58 7B           LDI  YH,$7B
2803   D034             
2804   D034             
2805   D034             ; Clears input buffer.
2806   D034             INBUF_CLR: ; $D034
2807   D034 4A B0           LDI  XL,$B0
2808   D036 6A 50           LDI  UL,$50
2809   D038             
2810   D038             INBUF_CLR_1: ; $D038
2811   D038 48 7B           LDI  XH,$7B
2812   D03A B5 0D           LDI  A,$0D
2813   D03C 8E 72           BCH DEL_DIM_VARS_3 ; $D0B0
2814   D03E             
2815   D03E             
2816   D03E             
2817   D03E             ;------------------------------------------------------------------------------
2818   D03E             ; (2A) Transfer system messages from memory page C3xx
2819   D03E             ;            Address: D03E (2A)
2820   D03E             ;          Parameter: D1 defines low byte of memory page C3xx from which 
2821   D03E             ;                     message transfer begins. D2 = length of system message.
2822   D03E             ;                     (5B 09) BREAK IN
2823   D03E             ;                     (64 06) ERROR
2824   D03E             ;                     (61 03) IN
2825   D03E             ;                     Y-Reg points to target address of system message
2826   D03E             ;
2827   D03E             ; Modified Registers: X-Reg, Y-Reg, U-Reg, Accumulator
2828   D03E             ;   Error conditions: None
2829   D03E             ;------------------------------------------------------------------------------ 
2830   D03E FD 2A           POP  U
2831   D040 65              LIN  U
2832   D041 0A              STA  XL
2833   D042 65              LIN  U
2834   D043 FD A8           PSH  U
2835   D045 2A              STA  UL
2836   D046             
2837   D046             
2838   D046             ; Transfers system messages.
2839   D046             SYSMSG: ; $D046
2840   D046 48 C3           LDI  XH,$C3
2841   D048             
2842   D048             SYSMSG_1: ; $D048
2843   D048 F5              TIN
2844   D049             
2845   D049             
2846   D049             ; Transfers UL bytes from X-Reg to Y-Reg
2847   D049             XREG2YREG: ; $D049
2848   D049 88 03           LOP  UL,SYSMSG_1 ; $D048
2849   D04B 9A              RTN
2850   D04C             
2851   D04C             
2852   D04C             ; Searches for variable on Basic stack, if not found C=0.
2853   D04C             VARONBSTK: ; $D04C
2854   D04C A5 78 90        LDA  (FORNXT_STK_PTR)
2855   D04F 48 7A           LDI  XH,$7A
2856   D051 B7 39           CPI  A,$39
2857   D053 81 27           BCR PSHBSTK_3 ; $D07C
2858   D055 B1 0C           SBI  A,$0C
2859   D057 0A              STA  XL
2860   D058 45              LIN  X
2861   D059 A6              CPA  UH
2862   D05A 89 05           BZR VARONBSTK_1 ; $D061
2863   D05C 45              LIN  X
2864   D05D 26              CPA  UL
2865   D05E 8B 1B           BZS PSHBSTK_2 ; $D07B
2866   D060 46              DEC  X
2867   D061             
2868   D061             VARONBSTK_1: ; $D061
2869   D061 46              DEC  X
2870   D062 04              LDA  XL
2871   D063 9E 14           BCH $D051
2872   D065             
2873   D065             
2874   D065             
2875   D065             ;------------------------------------------------------------------------------
2876   D065             ; (06) Gets address from Basic-Stack to U-Reg
2877   D065             ;            Address: D065 (06)
2878   D065             ;          Parameter: None
2879   D065             ; 
2880   D065             ; Modified Registers: X-Reg points to the next free address on the stack
2881   D065             ;                     Accumulator holds new basic stack pointer. 
2882   D065             ;                     ($7882) is updated
2883   D065             ;   Error conditions: None
2884   D065             ;------------------------------------------------------------------------------
2885   D065             POPBSTK: ; $D065
2886   D065 A5 78 82        LDA  (STK_PTR_GSB_FOR)
2887   D068 0A              STA  XL
2888   D069 48 7A           LDI  XH,$7A
2889   D06B 45              LIN  X
2890   D06C 28              STA  UH
2891   D06D 45              LIN  X
2892   D06E 2A              STA  UL
2893   D06F 8E 0A           BCH PSHBSTK_2 ; $D07B
2894   D071             
2895   D071             
2896   D071             ; (32) Save U-Reg on Basic Stack
2897   D071             PSHBSTK: ; $D071
2898   D071 A5 78 82        LDA  (STK_PTR_GSB_FOR)
2899   D074 0A              STA  XL
2900   D075 48 7A           LDI  XH,$7A
2901   D077 A4              LDA  UH
2902   D078 41              SIN  X
2903   D079 24              LDA  UL
2904   D07A 41              SIN  X
2905   D07B             
2906   D07B             PSHBSTK_2: ; $D07B
2907   D07B 04              LDA  XL
2908   D07C             
2909   D07C             PSHBSTK_3: ; $D07C
2910   D07C AE 78 82        STA  (STK_PTR_GSB_FOR)
2911   D07F 9A              RTN
2912   D080             
2913   D080             
2914   D080             
2915   D080             ;------------------------------------------------------------------------------
2916   D080             ; Delete variable (standard and dimensioned variable)
2917   D080             ;            Address: D080
2918   D080             ;          Parameter: None
2919   D080             ; 
2920   D080             ; Modified Registers: X-Reg, U-Reg, Accumulator
2921   D080             ;   Error conditions: None
2922   D080             ;------------------------------------------------------------------------------
2923   D080             DELSVARS: ; $D080
2924   D080 48 76           LDI  XH,$76
2925   D082 BE D0 AA        SJP  (DEL_DIM_VARS_1) ; $D0AA
2926   D085 BE D0 AA        SJP  (DEL_DIM_VARS_1) ; $D0AA
2927   D088 4A C0           LDI  XL,$C0
2928   D08A 6A 0F           LDI  UL,$0F
2929   D08C 68 01           LDI  UH,$01
2930   D08E BE D3 C7        SJP  (DELU_FROMX_1) ; $D3C7
2931   D091             
2932   D091             
2933   D091             
2934   D091             ;------------------------------------------------------------------------------
2935   D091             ; Delete dimensioned variables
2936   D091             ;            Address: D091
2937   D091             ;          Parameter: None
2938   D091             ; 
2939   D091             ; Modified Registers: Variable pointer
2940   D091             ;   Error conditions: None
2941   D091             ;------------------------------------------------------------------------------
2942   D091             DELDVARS: ; $D091
2943   D091 A5 78 64        LDA  (RAM_END_H)
2944   D094 AE 78 99        STA  (VAR_START_H)
2945   D097 E9 78 9A 00     ANI  (VAR_START_L),$00
2946   D09B 9A              RTN
2947   D09C             
2948   D09C             
2949   D09C             ;------------------------------------------------------------------------------
2950   D09C             ; Delete dimensioned variable if program and variable memory overlap
2951   D09C             ;            Address: D09C
2952   D09C             ;          Parameter: None
2953   D09C             ;
2954   D09C             ; Modified Registers: X-Reg, Accumulator
2955   D09C             ;   Error conditions: None
2956   D09C             ;------------------------------------------------------------------------------
2957   D09C             DEL_DIM_VARS: ; $D09C
2958   D09C CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
2958   D09D 67          
2959   D09E FB              SEC
2960   D09F 04              LDA  XL
2961   D0A0 A1 78 9A        SBC  (VAR_START_L)
2962   D0A3 84              LDA  XH
2963   D0A4 A1 78 99        SBC  (VAR_START_H)
2964   D0A7 93 18           BCS DELDVARS
2965   D0A9 9A              RTN
2966   D0AA             
2967   D0AA             ; Delete standard variables (176 bytes) from XH 50.
2968   D0AA             DEL_DIM_VARS_1: ; $D0AA
2969   D0AA 4A 50           LDI  XL,$50
2970   D0AC 6A AF           LDI  UL,$AF
2971   D0AE             
2972   D0AE             
2973   D0AE             ;------------------------------------------------------------------------------
2974   D0AE             ; Delete UL+1 bytes from X-Reg
2975   D0AE             ;            Address: D0AE
2976   D0AE             ;          Parameter: X-Reg points to the start address of the area to be deleted. 
2977   D0AE             ;                     UL contains the number of bytes to be deleted +1
2978   D0AE             ;
2979   D0AE             ; Modified Registers: X-Reg, Y-Reg
2980   D0AE             ;   Error conditions: None
2981   D0AE             ;------------------------------------------------------------------------------
2982   D0AE             DEL_DIM_VARS_18: ; $D0AE
2983   D0AE B5 00           LDI  A,$00
2984   D0B0             
2985   D0B0             DEL_DIM_VARS_3: ; $D0B0
2986   D0B0 41              SIN  X
2987   D0B1 88 03           LOP  UL,DEL_DIM_VARS_3 ; $D0B0
2988   D0B3 9A              RTN
2989   D0B4             
2990   D0B4             ; Initializes pointer for search program
2991   D0B4             DEL_DIM_VARS_2: ; $D0B4
2992   D0B4 84              LDA  XH
2993   D0B5 AE 78 AA        STA  (SRCH_TOP_H)
2994   D0B8 04              LDA  XL
2995   D0B9 AE 78 AB        STA  (SRCH_TOP_L)
2996   D0BC             
2997   D0BC             ; Loads address pointed to by X-Reg 2-bytes (line number) after search pointer 
2998   D0BC             ; & start address from 78A6 f ..
2999   D0BC             DEL_DIM_VARS_14: ; $D0BC
3000   D0BC 45              LIN  X
3001   D0BD AE 78 A8        STA  (SRCH_LINE_H)
3002   D0C0 45              LIN  X
3003   D0C1 AE 78 A9        STA  (SRCH_LINE_L)
3004   D0C4 44              INC  X
3005   D0C5 84              LDA  XH
3006   D0C6 AE 78 A6        STA  (SRCH_ADD_H)
3007   D0C9 04              LDA  XL
3008   D0CA AE 78 A7        STA  (SRCH_ADD_L)
3009   D0CD 9A              RTN
3010   D0CE 08              STA  XH
3011   D0CF BA C8 53        JMP  BCMD_READ_17 ; $C853
3012   D0D2             
3013   D0D2             ; Compare BCD numbers in AR-X & AR-Y according to operand in Accumulator Set 
3014   D0D2             ; AR-X according to result 0 or 1.
3015   D0D2             DEL_DIM_VARS_16: ; $D0D2
3016   D0D2 FD C8           PSH  A
3017   D0D4 A5 7A 01        LDA  (ARX + $01)
3018   D0D7 AD 7A 11        EOR  (ARY + $01)
3019   D0DA 89 08           BZR DEL_DIM_VARS_4 ; $D0E4
3020   D0DC BE EF B6        SJP  (SUBTR)
3021   D0DF A5 7A 02        LDA  (ARX + $02)
3022   D0E2 8B 5E           BZS $D142
3023   D0E4             
3024   D0E4             DEL_DIM_VARS_4: ; $D0E4
3025   D0E4 A5 7A 01        LDA  (ARX + $01)
3026   D0E7 D9              SHL
3027   D0E8             
3028   D0E8             DEL_DIM_VARS_13: ; $D0E8
3029   D0E8 FD 8A           POP  A
3030   D0EA 8B 4C           BZS DEL_DIM_VARS_5 ; $D138
3031   D0EC BD 04           EAI  $04
3032   D0EE 8B 07           BZS DEL_DIM_VARS_6 ; $D0F7
3033   D0F0 83 02           BCS DEL_DIM_VARS_7 ; $D0F4
3034   D0F2 BD 03           EAI  $03
3035   D0F4             
3036   D0F4             DEL_DIM_VARS_7: ; $D0F4
3037   D0F4 D5              SHR
3038   D0F5 83 41           BCS DEL_DIM_VARS_5 ; $D138
3039   D0F7             
3040   D0F7             DEL_DIM_VARS_6: ; $D0F7
3041   D0F7 EC              VEJ  (EC)
3042   D0F8 9A              RTN
3043   D0F9             
3044   D0F9             ; Comparison of two strings according to operator in the accumulator
3045   D0F9             ; Comparison of two strings according to the operand in the accumulator whose 
3046   D0F9             ; CSI is in AR-X and AR-Y. AR-X is set to 1=true or 0=false, depending on the result.
3047   D0F9             DEL_DIM_VARS_15: ; $D0F9
3048   D0F9 FD C8           PSH  A
3049   D0FB 6A 15           LDI  UL,$15
3050   D0FD BE DE BE        SJP  (BCMD_TIME_7) ; $DEBE
3051   D100 FD 5A           STX  Y
3052   D102 FD C8           PSH  A
3053   D104 DC              VEJ  (DC)
3054   D105 FD 8A           POP  A
3055   D107 68 01           LDI  UH,$01
3056   D109 26              CPA  UL
3057   D10A 8B 0F           BZS DEL_DIM_VARS_8 ; $D11B
3058   D10C 68 02           LDI  UH,$02
3059   D10E 83 03           BCS DEL_DIM_VARS_9 ; $D113
3060   D110 68 00           LDI  UH,$00
3061   D112 2A              STA  UL
3062   D113             
3063   D113             DEL_DIM_VARS_9: ; $D113
3064   D113 FD 8A           POP  A
3065   D115 B7 04           CPI  A,$04
3066   D117 9B 22           BZS DEL_DIM_VARS_6 ; $D0F7
3067   D119 FD C8           PSH  A
3068   D11B             
3069   D11B             DEL_DIM_VARS_8: ; $D11B
3070   D11B 62              DEC  UL
3071   D11C 81 20           BCR DEL_DIM_VARS_10 ; $D13E
3072   D11E 55              LIN  Y
3073   D11F F7              CIN
3074   D120 9B 07           BZS DEL_DIM_VARS_8 ; $D11B
3075   D122 FD 8A           POP  A
3076   D124 8B 12           BZS DEL_DIM_VARS_5 ; $D138
3077   D126 FD C8           PSH  A
3078   D128 BF 03           BII  A,$03
3079   D12A 8B 1C           BZS DEL_DIM_VARS_11 ; $D148
3080   D12C 81 02           BCR DEL_DIM_VARS_12 ; $D130
3081   D12E BD 03           EAI  $03
3082   D130             
3083   D130             DEL_DIM_VARS_12: ; $D130
3084   D130 D5              SHR
3085   D131 83 15           BCS DEL_DIM_VARS_11 ; $D148
3086   D133 38              NOP
3087   D134 38              NOP
3088   D135 38              NOP
3089   D136 FD 8A           POP  A
3090   D138             
3091   D138             DEL_DIM_VARS_5: ; $D138
3092   D138 EC              VEJ  (EC)
3093   D139 EB 7A 02 10     ORI  (ARX + $02),$10
3094   D13D 9A              RTN
3095   D13E             
3096   D13E             DEL_DIM_VARS_10: ; $D13E
3097   D13E 6C 01           CPI  UH,$01
3098   D140 99 5A           BZR DEL_DIM_VARS_13 ; $D0E8
3099   D142 FD 8A           POP  A
3100   D144 D5              SHR
3101   D145 D5              SHR
3102   D146 9E 54           BCH DEL_DIM_VARS_7 ; $D0F4
3103   D148             
3104   D148             DEL_DIM_VARS_11: ; $D148
3105   D148 FD 8A           POP  A
3106   D14A 9E 55           BCH DEL_DIM_VARS_6 ; $D0F7
3107   D14C             
3108   D14C             ; Passes number pointed to by Y-Reg to AR-X.
3109   D14C             DEL_DIM_VARS_17: ; $D14C
3110   D14C DC              VEJ  (DC)
3111   D14D FD 5A           STX  Y
3112   D14F             
3113   D14F             
3114   D14F             ; BCD value pointed to by Y-Reg points passed to AR-X
3115   D14F             ; Decimal number pointed to by Y-Reg, passed to AR-X. Jump if there is an error.
3116   D14F             BCD_Y2ARX: ; $D14F
3117   D14F FD A8           PSH  U
3118   D151 EC              VEJ  (EC)
3119   D152 46              DEC  X
3120   D153 24              LDA  UL
3121   D154 0E              STA  (X)
3122   D155 FD 2A           POP  U
3123   D157 68 00           LDI  UH,$00
3124   D159 4A 02           LDI  XL,$02
3125   D15B             
3126   D15B             BCD_Y2ARX_13: ; $D15B
3127   D15B 62              DEC  UL
3128   D15C 81 5E           BCR BCD_Y2ARX_3 ; $D1BC
3129   D15E 15              LDA  (Y)
3130   D15F B7 30           CPI  A,$30
3131   D161 89 10           BZR BCD_Y2ARX_4 ; $D173
3132   D163 A4              LDA  UH
3133   D164 D5              SHR
3134   D165 83 37           BCS BCD_Y2ARX_5 ; $D19E
3135   D167 D5              SHR
3136   D168 83 14           BCS BCD_Y2ARX_6 ; $D17E
3137   D16A D5              SHR
3138   D16B 81 37           BCR BCD_Y2ARX_7 ; $D1A4
3139   D16D EF 7A 07 FF     ADI  (ARX + $07),$FF
3140   D171 8E 31           BCH BCD_Y2ARX_7 ; $D1A4
3141   D173             
3142   D173             BCD_Y2ARX_4: ; $D173
3143   D173 81 36           BCR BCD_Y2ARX_8 ; $D1AB
3144   D175 B7 3A           CPI  A,$3A
3145   D177 83 32           BCS BCD_Y2ARX_8 ; $D1AB
3146   D179 A4              LDA  UH
3147   D17A D5              SHR
3148   D17B 83 21           BCS BCD_Y2ARX_5 ; $D19E
3149   D17D D5              SHR
3150   D17E             
3151   D17E             BCD_Y2ARX_6: ; $D17E
3152   D17E D5              SHR
3153   D17F 83 04           BCS BCD_Y2ARX_9 ; $D185
3154   D181 EF 7A 07 01     ADI  (ARX + $07),$01
3155   D185             
3156   D185             BCD_Y2ARX_9: ; $D185
3157   D185 4E 07           CPI  XL,$07
3158   D187 83 10           BCS BCD_Y2ARX_10 ; $D199
3159   D189 4C 7A           CPI  XH,$7A
3160   D18B 48 7A           LDI  XH,$7A
3161   D18D 15              LDA  (Y)
3162   D18E B9 0F           ANI  A,$0F
3163   D190 81 05           BCR BCD_Y2ARX_11 ; $D197
3164   D192 D3              DRR  (X) 
3165   D193 48 00           LDI  XH,$00
3166   D195 8E 02           BCH BCD_Y2ARX_10 ; $D199
3167   D197             
3168   D197             BCD_Y2ARX_11: ; $D197
3169   D197 03              ADC  (X)
3170   D198 41              SIN  X
3171   D199             
3172   D199             BCD_Y2ARX_10: ; $D199
3173   D199 A4              LDA  UH
3174   D19A BB 02           ORI  A,$02
3175   D19C 8E 07           BCH BCD_Y2ARX_12 ; $D1A5
3176   D19E             
3177   D19E             BCD_Y2ARX_5: ; $D19E
3178   D19E 4A 00           LDI  XL,$00
3179   D1A0 48 7A           LDI  XH,$7A
3180   D1A2 15              LDA  (Y)
3181   D1A3 D3              DRR  (X)
3182   D1A4             
3183   D1A4             BCD_Y2ARX_7: ; $D1A4
3184   D1A4 A4              LDA  UH
3185   D1A5             
3186   D1A5             BCD_Y2ARX_12: ; $D1A5
3187   D1A5 BB 80           ORI  A,$80
3188   D1A7 28              STA  UH
3189   D1A8             
3190   D1A8             BCD_Y2ARX_27: ; $D1A8
3191   D1A8 54              INC  Y
3192   D1A9 9E 50           BCH BCD_Y2ARX_13 ; $D15B
3193   D1AB             
3194   D1AB             BCD_Y2ARX_8: ; $D1AB
3195   D1AB FD 88           PSH  X
3196   D1AD CD 34           VMJ  ($34) \ ABYT($04) \ ABYT($20) \ 
3196   D1AF 04          
3196   D1B0 20          
3196   D1B1             
3197   D1B1 63                   ABRF(BCD_Y2ARX_14) \ ABYT($2E) \ ABRF(BCD_Y2ARX_15) \ 
3197   D1B2 2E          
3197   D1B3 47          
3197   D1B4             
3198   D1B4 2D                   ABYT($2D) \ ABRF(BCD_Y2ARX_16) \ ABYT($2B) \ 
3198   D1B5 4F          
3198   D1B6 2B          
3198   D1B7             
3199   D1B7 61                   ABRF(BCD_Y2ARX_17) \ ABYT($45) \ ABRF(BCD_Y2ARX_18)
3199   D1B8 45          
3199   D1B9 64          
3200   D1BA             
3201   D1BA             BCD_Y2ARX_25: ; $D1BA
3202   D1BA FD 0A           POP  X
3203   D1BC             
3204   D1BC             BCD_Y2ARX_3: ; $D1BC
3205   D1BC 4A 02           LDI  XL,$02
3206   D1BE 48 7A           LDI  XH,$7A
3207   D1C0 47              LDE  X
3208   D1C1 8B 25           BZS BCD_Y2ARX_19 ; $D1E8
3209   D1C3 46              DEC  X
3210   D1C4 B5 00           LDI  A,$00
3211   D1C6 D3              DRR  (X)
3212   D1C7 B9 0F           ANI  A,$0F
3213   D1C9 2A              STA  UL
3214   D1CA 05              LDA  (X)
3215   D1CB             
3216   D1CB             BCD_Y2ARX_21: ; $D1CB
3217   D1CB 62              DEC  UL
3218   D1CC 81 04           BCR BCD_Y2ARX_20
3219   D1CE B3 09           ADI  A,$09
3220   D1D0 9E 07           BCH BCD_Y2ARX_21 ; $D1CB
3221   D1D2             
3222   D1D2             BCD_Y2ARX_20: ; $D1D2
3223   D1D2 41              SIN  X
3224   D1D3 05              LDA  (X)
3225   D1D4 D9              SHL
3226   D1D5 43              SDE  X
3227   D1D6 A5 7A 07        LDA  (ARX + $07)
3228   D1D9 E9 7A 07 00     ANI  (ARX + $07),$00
3229   D1DD 81 0C           BCR BCD_Y2ARX_22 ; $D1EB
3230   D1DF 01              SBC  (X)
3231   D1E0 B7 64           CPI  A,$64
3232   D1E2 81 14           BCR BCD_Y2ARX_23 ; $D1F8
3233   D1E4 B7 9D           CPI  A,$9D
3234   D1E6 83 10           BCS BCD_Y2ARX_23 ; $D1F8
3235   D1E8             
3236   D1E8             BCD_Y2ARX_19: ; $D1E8
3237   D1E8 EC              VEJ  (EC)
3238   D1E9 CD 4C           VMJ  ($4C) ; ($4C)($26)
3239   D1EB             
3240   D1EB             BCD_Y2ARX_22: ; $D1EB
3241   D1EB 03              ADC  (X)
3242   D1EC B7 9D           CPI  A,$9D
3243   D1EE 83 08           BCS BCD_Y2ARX_23 ; $D1F8
3244   D1F0 B7 64           CPI  A,$64
3245   D1F2 81 04           BCR BCD_Y2ARX_23 ; $D1F8
3246   D1F4 68 10           LDI  UH,$10
3247   D1F6 CD 48           VMJ  ($48) ; ($48)($24)
3248   D1F8             
3249   D1F8             BCD_Y2ARX_23: ; $D1F8
3250   D1F8 0E              STA  (X)
3251   D1F9 CD 4C           VMJ  ($4C) ; ($4C)($26)
3252   D1FB             
3253   D1FB             BCD_Y2ARX_15: ; $D1FB
3254   D1FB D5              SHR
3255   D1FC 83 02           BCS BCD_Y2ARX_24 ; $D200
3256   D1FE BB 02           ORI  A,$02
3257   D200             
3258   D200             BCD_Y2ARX_24: ; $D200
3259   D200 DB              ROL
3260   D201 FD 0A           POP  X
3261   D203 9E 60           BCH BCD_Y2ARX_12 ; $D1A5
3262   D205             
3263   D205             BCD_Y2ARX_16: ; $D205
3264   D205 D9              SHL
3265   D206 93 4E           BCS BCD_Y2ARX_25 ; $D1BA
3266   D208 D1              ROR
3267   D209 D1              ROR
3268   D20A B5 40           LDI  A,$40
3269   D20C 81 01           BCR BCD_Y2ARX_26 ; $D20F
3270   D20E D9              SHL
3271   D20F             
3272   D20F             BCD_Y2ARX_26: ; $D20F
3273   D20F AD 7A 01        EOR  (ARX + $01)
3274   D212 AE 7A 01        STA  (ARX + $01)
3275   D215             
3276   D215             BCD_Y2ARX_14: ; $D215
3277   D215 FD 0A           POP  X
3278   D217 9E 71           BCH BCD_Y2ARX_27 ; $D1A8
3279   D219             
3280   D219             BCD_Y2ARX_17: ; $D219
3281   D219 D9              SHL
3282   D21A 93 62           BCS BCD_Y2ARX_25 ; $D1BA
3283   D21C 9E 09           BCH BCD_Y2ARX_14 ; $D215
3284   D21E             
3285   D21E             BCD_Y2ARX_18: ; $D21E
3286   D21E D5              SHR
3287   D21F 93 0C           BCS BCD_Y2ARX_14 ; $D215
3288   D221 68 01           LDI  UH,$01
3289   D223 9E 10           BCH BCD_Y2ARX_14 ; $D215
3290   D225             
3291   D225             
3292   D225             
3293   D225             ;------------------------------------------------------------------------------
3294   D225             ; Finds address ofline number which contains address to which X-Reg points and 
3295   D225             ; transfers this value to search pointers (78A6 f.).
3296   D225             ;            Address: D225
3297   D225             ;         Parameters: X-Reg contains an address from the program memory for 
3298   D225             ;                     which the line start address is to be determined.
3299   D225             ; 
3300   D225             ; Modified Registers: X-Reg, Y-Reg and search pointers (78A6 f.) contain the 
3301   D225             ;                     start address found. U-Reg=78A7. Accumulator contains the 
3302   D225             ;                     low byte of the address found.
3303   D225             ;   Error conditions: Basically, the search starts from the start of the 
3304   D225             ;                     program memory. An error check as to whether the address 
3305   D225             ;                     sought is outside of the program memory is not carried 
3306   D225             ;                     out and is also not indicated by the flags when exiting.
3307   D225             ;------------------------------------------------------------------------------
3308   D225             BCD_Y2ARX_33: ; $D225
3309   D225 FD 5A           STX  Y
3310   D227 CD 12           VMJ  ($12)
3311   D229             
3312   D229             
3313   D229             
3314   D229             ;------------------------------------------------------------------------------
3315   D229             ; Finds the address of the program line pointed to by Y-Reg from the address 
3316   D229             ; pointed to by X-Reg. (like D225)
3317   D229             ;            Address: D229
3318   D229             ;         Parameters: X-Reg must point to the high byte of a line number in 
3319   D229             ;                     program memory from which to search.
3320   D229             ; 
3321   D229             ; Modified Registers: like D225
3322   D229             ;   Error conditions: like D225
3323   D229             ;------------------------------------------------------------------------------
3324   D229             BCD_Y2ARX_31: ; $D229
3325   D229 FD 6A           STX  U
3326   D22B 56              DEC  Y
3327   D22C 64              INC  U
3328   D22D             
3329   D22D             BCD_Y2ARX_30: ; $D22D
3330   D22D 64              INC  U
3331   D22E 65              LIN  U
3332   D22F FD EA           ADR  U
3333   D231 FB              SEC
3334   D232 24              LDA  UL
3335   D233 10              SBC  YL
3336   D234 A4              LDA  UH
3337   D235 90              SBC  YH
3338   D236 83 09           BCS BCD_Y2ARX_28 ; $D241
3339   D238             
3340   D238             BCD_Y2ARX_29: ; $D238
3341   D238 65              LIN  U
3342   D239 DD              INC  A
3343   D23A 93 04           BCS BCD_Y2ARX_29 ; $D238
3344   D23C FD 28           LDX  U
3345   D23E 46              DEC  X
3346   D23F 9E 14           BCH BCD_Y2ARX_30 ; $D22D
3347   D241             
3348   D241             BCD_Y2ARX_28: ; $D241
3349   D241 FD 5A           STX  Y
3350   D243 CA              VEJ  (CA) \ ABYTL(SRCH_ADD_H) ; $78A6
3350   D244 A6          
3351   D245 9A              RTN
3352   D246             
3353   D246             
3354   D246             
3355   D246             ;------------------------------------------------------------------------------
3356   D246             ; Transfer program line to input buffer
3357   D246             ;            Address: D246: Line where error occurred
3358   D246             ;                     D24E: Program line that was processed last
3359   D246             ;                     D26F: 1st program line
3360   D246             ;                     D277: transfer last program line
3361   D246             ;         Parameters: Corresponding search pointers must be set in memory map.
3362   D246             ; 
3363   D246             ; Modified Registers: X-Reg points to the high byte of the next line number. 
3364   D246             ;                     Y-Reg points to the cursor position within input buffer. 
3365   D246             ;                     U-Reg and Accumulator overwritten.
3366   D246             ;   Error conditions: None
3367   D246             ;------------------------------------------------------------------------------
3368   D246             ; Transfer line where error occurred to input buffer
3369   D246             BCD_Y2ARX_45: ; $D246
3370   D246 CC              VEJ  (CC) \ ABYTL(ERR_ADD_H) ; $78B2
3370   D247 B2          
3371   D248 FD 5A           STX  Y
3372   D24A CC              VEJ  (CC) \ ABYTL(ERR_TOP_H) ; $78B6
3372   D24B B6          
3373   D24C 8E 06           BCH BCD_Y2ARX_48 ; $D254
3374   D24E             
3375   D24E             
3376   D24E             ; Transfer line of the instruction to be processed to input buffer
3377   D24E             BCD_Y2ARX_44: ; $D24E
3378   D24E CC              VEJ  (CC) \ ABYTL(PREV_ADD_H) ; $78A0
3378   D24F A0          
3379   D250 FD 5A           STX  Y
3380   D252 CC              VEJ  (CC) \ ABYTL(PREV_TOP_H) ; $78A4
3380   D253 A4          
3381   D254                 
3382   D254             BCD_Y2ARX_48: ; $D254
3383   D254 FD 98           PSH  Y
3384   D256 BE D2 29        SJP  (BCD_Y2ARX_31) ; $D229
3385   D259 FD 0A           POP  X
3386   D25B F9              REC
3387   D25C 04              LDA  XL
3388   D25D 10              SBC  YL
3389   D25E DF              DEC  A
3390   D25F DF              DEC  A
3391   D260 DF              DEC  A
3392   D261 8B 1B           BZS BCD_Y2ARX_32 ; $D27E
3393   D263 2A              STA  UL
3394   D264 46              DEC  X
3395   D265 46              DEC  X
3396   D266 05              LDA  (X)
3397   D267 B7 E0           CPI  A,$E0
3398   D269 24              LDA  UL
3399   D26A 81 12           BCR BCD_Y2ARX_32 ; $D27E
3400   D26C DF              DEC  A
3401   D26D 8E 0F           BCH BCD_Y2ARX_32 ; $D27E
3402   D26F             
3403   D26F             
3404   D26F             ; Transfers 1st line of program to input buffer
3405   D26F             BCD_Y2ARX_47: ; $D26F
3406   D26F CD 12           VMJ  ($12)
3407   D271             
3408   D271             BCD_Y2ARX_38: ; $D271
3409   D271 CA              VEJ  (CA) \ ABYTL(SRCH_ADD_H) ; $78A6
3409   D272 A6          
3410   D273 FD 5A           STX  Y
3411   D275 8E 05           BCH $D27C
3412   D277             
3413   D277             
3414   D277             ; Transfers last line of program to input buffer
3415   D277             ; Lists line in which BREAK occurred on the LCD.
3416   D277             BCD_Y2ARX_46: ; $D277
3417   D277 CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
3417   D278 67          
3418   D279             
3419   D279             BCD_Y2ARX_42: ; $D279
3420   D279 BE D2 25        SJP  (BCD_Y2ARX_33) ; $D225
3421   D27C B5 00           LDI  A,$00
3422   D27E             
3423   D27E             BCD_Y2ARX_32: ; $D27E
3424   D27E FD C8           PSH  A
3425   D280 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
3425   D281 65          
3426   D282 94              LDA  YH
3427   D283 86              CPA  XH
3428   D284 83 08           BCS BCD_Y2ARX_34 ; $D28E
3429   D286 CC              VEJ  (CC) \ ABYTL(ST_ROM_MOD) ; $7860
3429   D287 60          
3430   D288 4A 07           LDI  XL,$07
3431   D28A 05              LDA  (X)
3432   D28B DB              ROL
3433   D28C 81 21           BCR BCD_Y2ARX_35 ; $D2AF
3434   D28E             
3435   D28E             BCD_Y2ARX_34: ; $D28E
3436   D28E BE D0 30        SJP  (INBUF_INIT)
3437   D291 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
3437   D292 A6          
3438   D293 45              LIN  X
3439   D294 28              STA  UH
3440   D295 45              LIN  X
3441   D296 2A              STA  UL
3442   D297 FD 88           PSH  X
3443   D299 CD 10           VMJ  ($10) \ ABYT($40)
3443   D29B 40          
3444   D29C FD 0A           POP  X
3445   D29E 45              LIN  X
3446   D29F DF              DEC  A
3447   D2A0 B9 7F           ANI  A,$7F
3448   D2A2 2A              STA  UL
3449   D2A3 FD 98           PSH  Y
3450   D2A5             
3451   D2A5             BCD_Y2ARX_36: ; $D2A5
3452   D2A5 F5              TIN
3453   D2A6 88 03           LOP  UL,BCD_Y2ARX_36 ; $D2A5
3454   D2A8 FD 1A           POP  Y
3455   D2AA             
3456   D2AA             BCD_Y2ARX_37: ; $D2AA
3457   D2AA FD 8A           POP  A
3458   D2AC FD DA           ADR  Y
3459   D2AE 9A              RTN
3460   D2AF             
3461   D2AF             BCD_Y2ARX_35: ; $D2AF
3462   D2AF 68 1F           LDI  UH,$1F
3463   D2B1 9E 09           BCH BCD_Y2ARX_37 ; $D2AA
3464   D2B3             
3465   D2B3             ; Transfers next line to Input buffer
3466   D2B3             ; Finds the last line number $D2B3
3467   D2B3 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
3467   D2B4 A6          
3468   D2B5 44              INC  X
3469   D2B6 44              INC  X
3470   D2B7 45              LIN  X
3471   D2B8 FD CA           ADR  X
3472   D2BA 05              LDA  (X)
3473   D2BB DD              INC  A
3474   D2BC 91 4D           BCR  BCD_Y2ARX_38 ; $D271
3475   D2BE CD 16           VMJ  ($16)
3476   D2C0 B5 FF           LDI  A,$FF
3477   D2C2 8E 07           BCH BCD_Y2ARX_39 ; $D2CB
3478   D2C4             
3479   D2C4             BCD_Y2ARX_40: ; $D2C4
3480   D2C4 F7              CIN
3481   D2C5 89 09           BZR BCD_Y2ARX_1 ; $D2D0
3482   D2C7 88 05           LOP  UL,BCD_Y2ARX_40 ; $D2C4
3483   D2C9 FD 62           DEC  UH
3484   D2CB             
3485   D2CB             BCD_Y2ARX_39: ; $D2CB
3486   D2CB 93 09           BCS BCD_Y2ARX_40 ; $D2C4
3487   D2CD             
3488   D2CD             BCD_Y2ARX_41: ; $D2CD
3489   D2CD 68 00           LDI  UH,$00
3490   D2CF 9A              RTN
3491   D2D0             
3492   D2D0             ; Transmits output line to which X-Reg points to Input buffer
3493   D2D0             ; Lists program line on LCD.
3494   D2D0             BCD_Y2ARX_1: ; $D2D0
3495   D2D0 46              DEC  X
3496   D2D1 9E 62           BCH BCD_Y2ARX_38 ; $D271
3497   D2D3             
3498   D2D3             ; Searches for line address according to search pointer
3499   D2D3             BCD_Y2ARX_43: ; $D2D3
3500   D2D3 CD 12           VMJ  ($12)
3501   D2D5 FD 6A           STX  U
3502   D2D7 CC              VEJ  (CC) \ ABYTL(SRCH_ADD_H) ; $78A6
3502   D2D8 A6          
3503   D2D9 BE DF E2        SJP  (U_MINUS_X)
3504   D2DC 93 11           BCS BCD_Y2ARX_41 ; $D2CD
3505   D2DE 9E 67           BCH BCD_Y2ARX_42 ; $D279
3506   D2E0             
3507   D2E0             ; Searches for line number according to U-Reg from merge start
3508   D2E0             ; Searches for the line number from the start of the merge.
3509   D2E0             BCD_Y2ARX_2: ; $D2E0
3510   D2E0 CC              VEJ  (CC) \ ABYTL($7869)
3510   D2E1 69          
3511   D2E2 FD 98           PSH  Y
3512   D2E4 8E 19           BCH SRCHPRGLINE_2 ; $D2FF
3513   D2E6             
3514   D2E6             
3515   D2E6             
3516   D2E6             ;------------------------------------------------------------------------------
3517   D2E6             ; (1A) Searches according to U-Reg ; D2E6
3518   D2E6             ; Searches for line numbers according to U-Reg. Jump if an error occurs.
3519   D2E6             ;------------------------------------------------------------------------------
3520   D2E6 6C FF           CPI  UH,$FF
3521   D2E8 89 3D           BZR SRCHPRGLINE_3 ; $D327
3522   D2EA             
3523   D2EA             
3524   D2EA             ; Searches line number according to U-Reg from beginning of program memory
3525   D2EA             ; Searches for line number corresponding to U-Reg; updated program pointer. 
3526   D2EA             ; If not found, jump to Distance Address.
3527   D2EA             LINESEARCH: ; $D2EA
3528   D2EA CD 12           VMJ  ($12)
3529   D2EC             
3530   D2EC             ; Searches for program line from U-Reg from X-Reg
3531   D2EC             SRCHPRGLINE: ; $D2EC
3532   D2EC FD 98           PSH  Y
3533   D2EE FD A8           PSH  U
3534   D2F0 CA              VEJ  (CA) \ ABYTL(SRCH_TOP_H) ; $78AA
3534   D2F1 AA          
3535   D2F2             
3536   D2F2             SRCHPRGLINE_10: ; $D2F2
3537   D2F2 FD 2A           POP  U
3538   D2F4 6C FF           CPI  UH,$FF
3539   D2F6 89 07           BZR SRCHPRGLINE_2 ; $D2FF
3540   D2F8 FD 88           PSH  X
3541   D2FA E6              VEJ  (E6)
3542   D2FB FD 0A           POP  X
3543   D2FD             
3544   D2FD             SRCHPRGLINE_8: ; $D2FD
3545   D2FD 68 FF           LDI  UH,$FF
3546   D2FF             
3547   D2FF             SRCHPRGLINE_2: ; $D2FF
3548   D2FF BE D0 BC        SJP  (DEL_DIM_VARS_14) ; $D0BC
3549   D302 A5 78 A8        LDA  (SRCH_LINE_H)
3550   D305 B7 FF           CPI  A,$FF
3551   D307 81 38           BCR SRCHPRGLINE_4 ; $D341
3552   D309 6C FF           CPI  UH,$FF
3553   D30B 81 11           BCR SRCHPRGLINE_5 ; $D31E
3554   D30D CD 16           VMJ  ($16)
3555   D30F 81 0D           BCR SRCHPRGLINE_5 ; $D31E
3556   D311 46              DEC  X
3557   D312 46              DEC  X
3558   D313 B5 FF           LDI  A,$FF
3559   D315             
3560   D315             SRCHPRGLINE_7: ; $D315
3561   D315 F7              CIN
3562   D316 89 0A           BZR SRCHPRGLINE_6 ; $D322
3563   D318 88 05           LOP  UL,SRCHPRGLINE_7 ; $D315
3564   D31A FD 62           DEC  UH
3565   D31C 93 09           BCS SRCHPRGLINE_7 ; $D315
3566   D31E             
3567   D31E             SRCHPRGLINE_5: ; $D31E
3568   D31E 68 0B           LDI  UH,$0B
3569   D320 CD 4A           VMJ  ($4A) ; ($4A)($25)
3570   D322             
3571   D322             SRCHPRGLINE_6: ; $D322
3572   D322 46              DEC  X
3573   D323 CA              VEJ  (CA) \ ABYTL(SRCH_TOP_H) ; $78AA
3573   D324 AA          
3574   D325 9E 2A           BCH SRCHPRGLINE_8 ; $D2FD
3575   D327             
3576   D327             SRCHPRGLINE_3: ; $D327
3577   D327 CC              VEJ  (CC) \ ABYTL(CURR_LINE_H) ; $789C
3577   D328 9C          
3578   D329 24              LDA  UL
3579   D32A 00              SBC  XL
3580   D32B A4              LDA  UH
3581   D32C 80              SBC  XH
3582   D32D 83 04           BCS SRCHPRGLINE_9 ; $D333
3583   D32F CC              VEJ  (CC) \ ABYTL(SRCH_TOP_H) ; $78AA
3583   D330 AA          
3584   D331 9E 47           BCH SRCHPRGLINE
3585   D333             
3586   D333             SRCHPRGLINE_9: ; $D333
3587   D333 FD 98           PSH  Y
3588   D335 FD A8           PSH  U
3589   D337 CC              VEJ  (CC) \ ABYTL(CURR_TOP_H) ; $789E
3589   D338 9E          
3590   D339 CA              VEJ  (CA) \ ABYTL(SRCH_TOP_H) ; $78AA
3590   D33A AA          
3591   D33B 56              DEC  Y
3592   D33C CD 20           VMJ  ($20)
3593   D33E 38              NOP
3594   D33F 9E 4F           BCH SRCHPRGLINE_10 ; $D2F2
3595   D341             
3596   D341             SRCHPRGLINE_4: ; $D341
3597   D341 6C FF           CPI  UH,$FF
3598   D343 89 1D           BZR SRCHPRGLINE_11 ; $D362
3599   D345 45              LIN  X
3600   D346 B7 22           CPI  A,$22
3601   D348 89 11           BZR SRCHPRGLINE_12 ; $D35B
3602   D34A FD 88           PSH  X
3603   D34C FD 5A           STX  Y
3604   D34E CD 0C           VMJ  ($0C)
3605   D350 B5 04           LDI  A,$04
3606   D352 BE D0 F9        SJP  (DEL_DIM_VARS_15) ; $D0F9
3607   D355 FD 0A           POP  X
3608   D357 68 FF           LDI  UH,$FF
3609   D359 89 14           BZR SRCHPRGLINE_13 ; $D36F
3610   D35B             
3611   D35B             SRCHPRGLINE_12: ; $D35B
3612   D35B 46              DEC  X
3613   D35C             
3614   D35C             SRCHPRGLINE_14: ; $D35C
3615   D35C 46              DEC  X
3616   D35D 45              LIN  X
3617   D35E FD CA           ADR  X
3618   D360 9E 63           BCH SRCHPRGLINE_2 ; $D2FF
3619   D362             
3620   D362             SRCHPRGLINE_11: ; $D362
3621   D362 A6              CPA  UH
3622   D363 91 09           BCR  SRCHPRGLINE_14 ; $D35C
3623   D365 99 49           BZR  SRCHPRGLINE_5 ; $D31E
3624   D367 A5 78 A9        LDA  (SRCH_LINE_L)
3625   D36A 26              CPA  UL
3626   D36B 91 11           BCR  SRCHPRGLINE_14 ; $D35C
3627   D36D 99 51           BZR  SRCHPRGLINE_5 ; $D31E
3628   D36F             
3629   D36F             SRCHPRGLINE_13: ; $D36F
3630   D36F CD 4E           VMJ  ($4E) ; ($4E)($27)
3631   D371             
3632   D371             
3633   D371             
3634   D371             ; Reserves space for simple variables
3635   D371             ; Reserves space for simple variables and corrects variable pointers.
3636   D371             SRCHPRGLINE_16: ; $D371
3637   D371 A5 78 84        LDA  (CURVARADD_L)
3638   D374 B9 20           ANI  A,$20
3639   D376 D5              SHR
3640   D377 1A              STA  YL
3641   D378 89 04           BZR SRCHPRGLINE_15 ; $D37E
3642   D37A 5A 08           LDI  YL,$08
3643   D37C B5 88           LDI  A,$88
3644   D37E             
3645   D37E             SRCHPRGLINE_15: ; $D37E
3646   D37E AE 78 85        STA  (CURVARTYPE) ; $7885
3647   D381 B5 00           LDI  A,$00
3648   D383 18              STA  YH
3649   D384 2A              STA  UL
3650   D385 28              STA  UH
3651   D386             
3652   D386             ; Reserves space for variables
3653   D386             SRCHPRGLINE_1 ; $D386
3654   D386 FD A8           PSH  U
3655   D388 F4              VEJ  (F4) \ AWRD(VAR_START_H)
3655   D389 78 99       
3656   D38B B5 07           LDI  A,$07
3657   D38D F9              REC
3658   D38E 12              ADC  YL
3659   D38F 0A              STA  XL
3660   D390 B5 00           LDI  A,$00
3661   D392 92              ADC  YH
3662   D393 08              STA  XH
3663   D394 83 39           BCS DELU_FROMX_2 ; $D3CF
3664   D396 BE DF E2        SJP  (U_MINUS_X)
3665   D399 81 34           BCR DELU_FROMX_2 ; $D3CF
3666   D39B FD 28           LDX  U
3667   D39D 46              DEC  X
3668   D39E CD 16           VMJ  ($16)
3669   D3A0 83 2D           BCS DELU_FROMX_2 ; $D3CF
3670   D3A2 44              INC  X
3671   D3A3 CA              VEJ  (CA) \ ABYTL($7899)
3671   D3A4 99          
3672   D3A5 F4              VEJ  (F4) \ AWRD(CURVARADD_H)
3672   D3A6 78 83       
3673   D3A8 B9 7F           ANI  A,$7F
3674   D3AA 41              SIN  X
3675   D3AB 24              LDA  UL
3676   D3AC 41              SIN  X
3677   D3AD 14              LDA  YL
3678   D3AE 2A              STA  UL
3679   D3AF 94              LDA  YH
3680   D3B0 28              STA  UH
3681   D3B1 54              INC  Y
3682   D3B2 54              INC  Y
3683   D3B3 54              INC  Y
3684   D3B4 94              LDA  YH
3685   D3B5 41              SIN  X
3686   D3B6 14              LDA  YL
3687   D3B7 41              SIN  X
3688   D3B8 FD 1A           POP  Y
3689   D3BA 14              LDA  YL
3690   D3BB 41              SIN  X
3691   D3BC 94              LDA  YH
3692   D3BD 41              SIN  X
3693   D3BE A5 78 85        LDA  (CURVARTYPE) ; $7885
3694   D3C1 41              SIN  X
3695   D3C2 FD 5A           STX  Y
3696   D3C4             
3697   D3C4             
3698   D3C4             ;------------------------------------------------------------------------------
3699   D3C4             ; Delete U bytes from X-Reg
3700   D3C4             ;            Address: DC34
3701   D3C4             ;          Parameter: X-Reg points to the start address of the area to be deleted
3702   D3C4             ; 
3703   D3C4             ; Modified Registers: X-Reg, U-Reg, Accumulator
3704   D3C4             ;   Error conditions: None
3705   D3C4             ;------------------------------------------------------------------------------
3706   D3C4             ; Deletes U-bytes from X-Reg
3707   D3C4             DELU_FROMX: ; $D3C4
3708   D3C4 66              DEC  U
3709   D3C5 B5 00           LDI  A,$00
3710   D3C7             
3711   D3C7             DELU_FROMX_1: ; $D3C7
3712   D3C7 41              SIN  X
3713   D3C8 88 03           LOP  UL,DELU_FROMX_1 ; $D3C7
3714   D3CA FD 62           DEC  UH
3715   D3CC 93 07           BCS DELU_FROMX_1 ; $D3C7
3716   D3CE 9A              RTN
3717   D3CF             
3718   D3CF             DELU_FROMX_2: ; $D3CF
3719   D3CF 68 0A           LDI  UH,$0A
3720   D3D1 FB              SEC
3721   D3D2 FD 0A           POP  X
3722   D3D4 9A              RTN
3723   D3D5             
3724   D3D5             
3725   D3D5             
3726   D3D5             ;------------------------------------------------------------------------------
3727   D3D5             ; Conversion decimal to hexadecimal
3728   D3D5             ; Address:	D335
3729   D3D5             ;   Entry parameters: Y-Reg points to 1st ASCII character of decimal number. 
3730   D3D5             ;                     Leading zeros are skipped.
3731   D3D5             ; 
3732   D3D5             ; Modified registers: U-Reg contains hex result. (0000-FEFF).
3733   D3D5             ;                     Y-Reg points to address after last decimal number.
3734   D3D5             ;   Error conditions: If the value range is not complied with, 
3735   D3D5             ;                     error code 1E UH is loaded and the carry flag is set.
3736   D3D5             ;------------------------------------------------------------------------------
3737   D3D5             DEC2HEX: ; $D335
3738   D3D5 4A 00           LDI  XL,$00
3739   D3D7 48 00           LDI  XH,$00
3740   D3D9             
3741   D3D9             DEC2HEX_4: ; $D3D9
3742   D3D9 FD 88           PSH  X
3743   D3DB CD 02           VMJ  ($02) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_2) ; $D3FE
3743   D3DD 30          
3743   D3DE 3A          
3743   D3DF 1E          
3744   D3E0 FD 0A           POP  X
3745   D3E2 FD 98           PSH  Y
3746   D3E4 FD C8           PSH  A
3747   D3E6 FD 5A           STX  Y
3748   D3E8 6A 0A           LDI  UL,$0A
3749   D3EA CD 50           VMJ  ($50) ; ($50)($28)
3750   D3EC FD 8A           POP  A
3751   D3EE 68 1E           LDI  UH,$1E
3752   D3F0 FD 1A           POP  Y
3753   D3F2 83 12           BCS DEC2HEX_3 ; $D406
3754   D3F4 4C FF           CPI  XH,$FF
3755   D3F6 8B 0E           BZS DEC2HEX_3 ; $D406
3756   D3F8 B9 0F           ANI  A,$0F
3757   D3FA FD CA           ADR  X
3758   D3FC 9E 25           BCH DEC2HEX_4 ; $D3D9
3759   D3FE             
3760   D3FE             DEC2HEX_2: ; $D3FE
3761   D3FE C6              VEJ  (C6)
3762   D3FF FD 2A           POP  U
3763   D401 24              LDA  UL
3764   D402 F9              REC
3765   D403 89 01           BZR DEC2HEX_3 ; $D406
3766   D405 A4              LDA  UH
3767   D406             
3768   D406             DEC2HEX_3: ; $D406
3769   D406 9A              RTN
3770   D407             
3771   D407             
3772   D407             
3773   D407             ;------------------------------------------------------------------------------
3774   D407             ; Retrieves the encoded name of variable pointed to by Y-Reg
3775   D407             ;            Address: D407
3776   D407             ;                     1 Data byte
3777   D407             ;   Entry parameters: Y-Reg points to 1st byte of variable name in main memory
3778   D407             ; 
3779   D407             ; Modified registers: X-Reg contains return address
3780   D407             ;                     Y-Reg points to the index or byte after variable name.
3781   D407             ;                     U-Reg contains encoded variable names.
3782   D407             ;   Error conditions: If variable name is not allowed, branch to offset (D1).
3783   D407             ;------------------------------------------------------------------------------
3784   D407             DEC2HEX_13: ; $D407
3785   D407 C0              VEJ  (C0)
3786   D408 CD 00           VMJ  ($00) \ ABYT($40) \ ABYT($5B) \ ABRF(DEC2HEX_128) ; $D42F
3786   D40A 40          
3786   D40B 5B          
3786   D40C 22          
3787   D40D             
3788   D40D             
3789   D40D             
3790   D40D             ;------------------------------------------------------------------------------
3791   D40D             ; Find encoded variable name whose 1st letter is in UL and 2nd letter in Y-Reg.
3792   D40D             ;            Address: D40D
3793   D40D             ;                     1 Data byte
3794   D40D             ;   Entry parameters: Y-Reg points to 2nd letters of variable. UL=1st letter
3795   D40D             ; 
3796   D40D             ; Modified registers: Like D407
3797   D40D             ;   Error conditions: Like D407
3798   D40D             ;------------------------------------------------------------------------------
3799   D40D             DEC2HEX_70: ; $D40D
3800   D40D 24              LDA  UL
3801   D40E 08              STA  XH
3802   D40F 4A 00           LDI  XL,$00
3803   D411             
3804   D411             DEC2HEX_9: ; $D411
3805   D411 FD 88           PSH  X
3806   D413 CD 02           VMJ  ($02) \ ABYT($41) \ ABYT($5B) \ ABRF(DEC2HEX_5) ; $D41A
3806   D415 41          
3806   D416 5B          
3806   D417 02          
3807   D418 8E 08           BCH DEC2HEX_7 ; $D422
3808   D41A             
3809   D41A             DEC2HEX_5: ; $D41A
3810   D41A CD 00           VMJ  ($00) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_6) ; $D43B
3810   D41C 30          
3810   D41D 3A          
3810   D41E 1C          
3811   D41F B9 DF           ANI  A,$DF
3812   D421 2A              STA  UL
3813   D422             
3814   D422             DEC2HEX_7: ; $D422
3815   D422 FD 0A           POP  X
3816   D424 4C 40           CPI  XH,$40
3817   D426 8B 31           BZS DEC2HEX_8 ; $D459
3818   D428 04              LDA  XL
3819   D429 99 1A           BZR DEC2HEX_9 ; $D411
3820   D42B 24              LDA  UL
3821   D42C 0A              STA  XL
3822   D42D 9E 1E           BCH DEC2HEX_9 ; $D411
3823   D42F             
3824   D42F             DEC2HEX_128: ; $D42F
3825   D42F C4              VEJ  (C4) \ AWRD($F15B) \ ABRF(DEC2HEX_10) ; $D435
3825   D430 F1 5B       
3825   D432 02          
3826   D433 CD 4C           VMJ  ($4C) ; ($4C)($26)
3827   D435             
3828   D435             DEC2HEX_10: ; $D435
3829   D435 A4              LDA  UH
3830   D436 2A              STA  UL
3831   D437 68 15           LDI  UH,$15
3832   D439 CD 48           VMJ  ($48) ; ($48)($24)
3833   D43B             
3834   D43B             DEC2HEX_6: ; $D43B
3835   D43B C4              VEJ  (C4) \ ACHR($24) \ ABRF(DEC2HEX_11) ; $D447
3835   D43C 24          
3835   D43D 09          
3836   D43E FD 2A           POP  U
3837   D440 B5 20           LDI  A,$20
3838   D442 FD EA           ADR  U
3839   D444 FD A8           PSH  U
3840   D446 C0              VEJ  (C0)
3841   D447             
3842   D447             DEC2HEX_11: ; $D447
3843   D447 C4              VEJ  (C4) \ ACHR($28) \ ABRF(DEC2HEX_12) ; $D452
3843   D448 28          
3843   D449 08          
3844   D44A FD 2A           POP  U
3845   D44C B5 80           LDI  A,$80
3846   D44E FD EA           ADR  U
3847   D450 CD 4C           VMJ  ($4C) ; ($4C)($26)
3848   D452             
3849   D452             DEC2HEX_12: ; $D452
3850   D452 C6              VEJ  (C6)
3851   D453 FD 2A           POP  U
3852   D455 6C 40           CPI  UH,$40
3853   D457 C9 4C           VZR  ($4C) ; ($4C)($26)
3854   D459             
3855   D459             DEC2HEX_8: ; $D459
3856   D459 68 14           LDI  UH,$14
3857   D45B CD 48           VMJ  ($48) ; ($48)($24)
3858   D45D             
3859   D45D             
3860   D45D             
3861   D45D             ;------------------------------------------------------------------------------
3862   D45D             ; (CE) Gets the address of the variable whose name is pointed to by Y-Reg
3863   D45D             ;            Address: D45D (CE)
3864   D45D             ;                     2 Data bytes
3865   D45D             ;                     D1 = selection of permitted variable types
3866   D45D             ;                     14: Array variable must not yet be dimensioned
3867   D45D             ;                     58: all variable types allowed
3868   D45D             ;                     48: only string variables allowed
3869   D45D             ;                     68: only numeric variables allowed.
3870   D45D             ;   Entry parameters: X-Reg contains return address
3871   D45D             ; 
3872   D45D             ; Modified registers: Y-Reg points to next byte in main memory
3873   D45D             ;                     U-Reg contains the start address of the variable.
3874   D45D             ;                     AR-X may contain CSI or BCD value of searched var.
3875   D45D             ;   Error conditions: This subroutine can produce a variety of error
3876   D45D             ;                     conditions depending on the preselected data byte 1 and 
3877   D45D             ;                     the variable type. If an error is detected, then a
3878   D45D             ;                     branch is made to the offset address defined by D2.
3879   D45D             ;------------------------------------------------------------------------------
3880   D45D             GET_VAR_ADDR: ; $D45D
3881   D45D BE D4 07        SJP  (DEC2HEX_13) ; $D407
3882   D460 58              .BYTE $58
3883   D461             
3884   D461             ;------------------------------------------------------------------------------
3885   D461             ; (0E) Find address of the variable whose name is stored in U-Reg
3886   D461             ; Line above and below different in PC-1500 Intern ***
3887   D461             ;            Address: D461 (0E)
3888   D461             ;                     2 Data bytes (see (CE))
3889   D461             ;   Entry parameters: U-Reg contains variable name
3890   D461             ;
3891   D461             ; Modified registers: Like (CE)
3892   D461             ;   Error conditions: Like (CE)
3893   D461             ;------------------------------------------------------------------------------
3894   D461             GET_VAR_NAME: ; $D461
3895   D461 FD 0A           POP X
3896   D463 45              LIN  X
3897   D464 FD 88           PSH  X
3898   D466 46              DEC  X
3899   D467 FD C8           PSH  A
3900   D469 24              LDA  UL
3901   D46A B9 A0           ANI  A,$A0
3902   D46C 0D              EOR  (X)
3903   D46D BF C0           BII  A,$C0
3904   D46F 8B 9B           BZS DEC2HEX_14 ; $D50C
3905   D471 BF 30           BII  A,$30
3906   D473 8B 97           BZS DEC2HEX_14 ; $D50C
3907   D475 6C 40           CPI  UH,$40
3908   D477 8B 97           BZS DEC2HEX_15 ; $D510
3909   D479 6C 5B           CPI  UH,$5B
3910   D47B 81 03           BCR DEC2HEX_16 ; $D480
3911   D47D BA D5 D8        JMP  DEC2HEX_29 ; $D5D8
3912   D480             
3913   D480             DEC2HEX_16: ; $D480
3914   D480 24              LDA  UL
3915   D481 B9 DF           ANI  A,$DF
3916   D483 89 30           BZR DEC2HEX_17 ; $D4B5
3917   D485             
3918   D485             DEC2HEX_37: ; $D485
3919   D485 A4              LDA  UH
3920   D486 B9 1F           ANI  A,$1F
3921   D488 4A F8           LDI  XL,$F8
3922   D48A 48 78           LDI  XH,$78
3923   D48C 6E 20           CPI  UL,$20
3924   D48E 81 13           BCR DEC2HEX_18 ; $D4A3
3925   D490 4A B0           LDI  XL,$B0
3926   D492 B7 05           CPI  A,$05
3927   D494 81 0C           BCR DEC2HEX_19 ; $D4A2
3928   D496 4A 00           LDI  XL,$00
3929   D498 48 76           LDI  XH,$76
3930   D49A B7 10           CPI  A,$10
3931   D49C 81 04           BCR DEC2HEX_19 ; $D4A2
3932   D49E 4A 50           LDI  XL,$50
3933   D4A0 48 77           LDI  XH,$77
3934   D4A2             
3935   D4A2             DEC2HEX_19: ; $D4A2
3936   D4A2 D9              SHL
3937   D4A3             
3938   D4A3             DEC2HEX_18: ; $D4A3
3939   D4A3 D9              SHL
3940   D4A4 D9              SHL
3941   D4A5 D9              SHL
3942   D4A6 FD CA           ADR  X
3943   D4A8 68 00           LDI  UH,$00
3944   D4AA FD 8A           POP  A
3945   D4AC FD C8           PSH  A
3946   D4AE D1              ROR
3947   D4AF 24              LDA  UL
3948   D4B0 83 4E           BCS DEC2HEX_20 ; $D500
3949   D4B2 BA D5 E6        JMP  DEC2HEX_21 ; $D5E6
3950   D4B5             
3951   D4B5             DEC2HEX_17: ; $D4B5
3952   D4B5 CC              VEJ  (CC) \ ABYTL(VAR_START_H) ; $7899
3952   D4B6 99          
3953   D4B7 8E 11           BCH DEC2HEX_30 ; $D4CA
3954   D4B9 FD 0A           POP  X
3955   D4BB BA DC F6        JMP  LOAD_NEXT_2 ; $DCF6
3956   D4BE             
3957   D4BE             DEC2HEX_23: ; $D4BE
3958   D4BE 44              INC  X
3959   D4BF             
3960   D4BF             DEC2HEX_24: ; $D4BF
3961   D4BF 45              LIN  X
3962   D4C0 FD C8           PSH  A
3963   D4C2 45              LIN  X
3964   D4C3 F9              REC
3965   D4C4 02              ADC  XL
3966   D4C5 0A              STA  XL
3967   D4C6 FD 8A           POP  A
3968   D4C8 82              ADC  XH
3969   D4C9 08              STA  XH
3970   D4CA             
3971   D4CA             DEC2HEX_30: ; $D4CA
3972   D4CA A7 78 64        CPA  (RAM_END_H)
3973   D4CD 83 DA           BCS DEC2HEX_22 ; $D5A9
3974   D4CF 45              LIN  X
3975   D4D0 A6              CPA  UH
3976   D4D1 99 15           BZR  DEC2HEX_23 ; $D4BE
3977   D4D3 45              LIN  X
3978   D4D4 26              CPA  UL
3979   D4D5 99 18           BZR  DEC2HEX_24 ; $D4BF
3980   D4D7 FD 8A           POP  A
3981   D4D9 FD C8           PSH  A
3982   D4DB D5              SHR
3983   D4DC 83 10           BCS DEC2HEX_25 ; $D4EE
3984   D4DE 44              INC  X
3985   D4DF 44              INC  X
3986   D4E0 D5              SHR
3987   D4E1 83 78           BCS DEC2HEX_26 ; $D55B
3988   D4E3 D5              SHR
3989   D4E4 81 60           BCR DEC2HEX_27 ; $D546
3990   D4E6 68 05           LDI  UH,$05
3991   D4E8 8E BB           BCH DEC2HEX_28 ; $D5A5
3992   D4EA             
3993   D4EA             DEC2HEX_31: ; $D4EA
3994   D4EA 68 01           LDI  UH,$01
3995   D4EC 8E B7           BCH DEC2HEX_28 ; $D5A5
3996   D4EE             
3997   D4EE             DEC2HEX_25: ; $D4EE
3998   D4EE 6E 80           CPI  UL,$80
3999   D4F0             
4000   D4F0             DEC2HEX_49: ; $D4F0
4001   D4F0 68 01           LDI  UH,$01
4002   D4F2 81 0C           BCR DEC2HEX_20 ; $D500
4003   D4F4 68 21           LDI  UH,$21
4004   D4F6             
4005   D4F6             DEC2HEX_33: ; $D4F6
4006   D4F6 55              LIN  Y
4007   D4F7 B7 2A           CPI  A,$2A
4008   D4F9 99 11           BZR DEC2HEX_31 ; $D4EA
4009   D4FB 55              LIN  Y
4010   D4FC B7 29           CPI  A,$29
4011   D4FE 99 16           BZR DEC2HEX_31 ; $D4EA
4012   D500             
4013   D500             DEC2HEX_20: ; $D500
4014   D500 FD 8A           POP  A
4015   D502 24              LDA  UL
4016   D503 B9 20           ANI  A,$20
4017   D505 D5              SHR
4018   D506 D5              SHR
4019   D507 A2              ADC  UH
4020   D508 FD 6A           STX  U
4021   D50A             
4022   D50A             DEC2HEX_45: ; $D50A
4023   D50A CD 4C           VMJ  ($4C) ; ($4C)($26)
4024   D50C             
4025   D50C             DEC2HEX_14: ; $D50C
4026   D50C 68 07           LDI  UH,$07
4027   D50E 8E 95           BCH DEC2HEX_28 ; $D5A5
4028   D510             
4029   D510             DEC2HEX_15: ; $D510
4030   D510 FD 8A           POP  A
4031   D512 FD C8           PSH  A
4032   D514 B9 07           ANI  A,$07
4033   D516 8B 1B           BZS DEC2HEX_32 ; $D533
4034   D518 D5              SHR
4035   D519 91 0F           BCR DEC2HEX_14 ; $D50C
4036   D51B 4A C0           LDI  XL,$C0
4037   D51D 48 78           LDI  XH,$78
4038   D51F 68 10           LDI  UH,$10
4039   D521 6E A0           CPI  UL,$A0
4040   D523 93 2F           BCS DEC2HEX_33 ; $D4F6
4041   D525 0A              STA  XL
4042   D526 48 79           LDI  XH,$79
4043   D528 9E 34           BCH DEC2HEX_33 ; $D4F6
4044   D52A             
4045   D52A             ; Determines indexed default variable
4046   D52A             DEC2HEX_78: ; $D52A
4047   D52A FD C8           PSH  A
4048   D52C FD A8           PSH  U
4049   D52E CD 28           VMJ  ($28) \ ABRF(DEC2HEX_34) ; $D5F5
4049   D530 C4          
4050   D531 8E 07           BCH DEC2HEX_35 ; $D53A
4051   D533             
4052   D533             DEC2HEX_32: ; $D533
4053   D533 FD A8           PSH  U
4054   D535 DE              VEJ  (DE) \ ABRF(DEC2HEX_34) ; $D5F5
4054   D536 BE          
4055   D537 C2              VEJ  (C2) \ ACHR($29) \ ABRF(DEC2HEX_36) ; $D5F3
4055   D538 29          
4055   D539 B9          
4056   D53A             
4057   D53A             DEC2HEX_35: ; $D53A
4058   D53A D0              VEJ  (D0) \ ABYT($0F) \ ABRF(DEC2HEX_34) ; $D5F5
4058   D53B 0F          
4058   D53C B8          
4059   D53D FD 2A           POP  U
4060   D53F 28              STA  UH
4061   D540 24              LDA  UL
4062   D541 D9              SHL
4063   D542 D5              SHR
4064   D543 2A              STA  UL
4065   D544 9E C1           BCH DEC2HEX_37 ; $D485
4066   D546             
4067   D546             DEC2HEX_27: ; $D546
4068   D546 6E 80           CPI  UL,$80
4069   D548 83 19           BCS DEC2HEX_38 ; $D563
4070   D54A 44              INC  X
4071   D54B 44              INC  X
4072   D54C 45              LIN  X
4073   D54D             
4074   D54D             DEC2HEX_42: ; $D54D
4075   D54D CD 24           VMJ  ($24)
4076   D54F FD 6A           STX  U
4077   D551 FD 8A           POP  A
4078   D553 BF 08           BII  A,$08
4079   D555 89 02           BZR DEC2HEX_39 ; $D559
4080   D557 CD 0A           VMJ  ($0A)
4081   D559             
4082   D559             DEC2HEX_39: ; $D559
4083   D559 CD 4C           VMJ  ($4C) ; ($4C)($26)
4084   D55B             
4085   D55B             DEC2HEX_26: ; $D55B
4086   D55B FD 88           PSH  X
4087   D55D BE D7 CA        SJP  (DEC2HEX_40) ; $D7CA
4088   D560 94              LDA  YH
4089   D561 8E 05           BCH DEC2HEX_43 ; $D568
4090   D563             
4091   D563             DEC2HEX_38: ; $D563
4092   D563 FD 88           PSH  X
4093   D565 CD 2C           VMJ  ($2C) \ ABRF(DEC2HEX_34) ; $D5F5
4093   D567 8D          
4094   D568             
4095   D568             DEC2HEX_43: ; $D568
4096   D568 FD 0A           POP  X
4097   D56A FD 98           PSH  Y
4098   D56C 45              LIN  X
4099   D56D 1A              STA  YL
4100   D56E 26              CPA  UL
4101   D56F 81 30           BCR DEC2HEX_41 ; $D5A1
4102   D571 45              LIN  X
4103   D572 A6              CPA  UH
4104   D573 81 2C           BCR DEC2HEX_41 ; $D5A1
4105   D575 45              LIN  X
4106   D576 FD C8           PSH  A
4107   D578 FD 88           PSH  X
4108   D57A FD C8           PSH  A
4109   D57C 24              LDA  UL
4110   D57D FD C8           PSH  A
4111   D57F A4              LDA  UH
4112   D580 2A              STA  UL
4113   D581 58 00           LDI  YH,$00
4114   D583 68 00           LDI  UH,$00
4115   D585 54              INC  Y
4116   D586 CD 50           VMJ  ($50) ; ($50)($28)
4117   D588 FD 8A           POP  A
4118   D58A FD DA           ADR  Y
4119   D58C FD 8A           POP  A
4120   D58E B9 7F           ANI  A,$7F
4121   D590 2A              STA  UL
4122   D591 CD 50           VMJ  ($50) ; ($50)($28)
4123   D593 FD 0A           POP  X
4124   D595 14              LDA  YL
4125   D596 02              ADC  XL
4126   D597 0A              STA  XL
4127   D598 94              LDA  YH
4128   D599 82              ADC  XH
4129   D59A 08              STA  XH
4130   D59B FD 8A           POP  A
4131   D59D FD 1A           POP  Y
4132   D59F 9E 54           BCH DEC2HEX_42 ; $D54D
4133   D5A1             
4134   D5A1             DEC2HEX_41: ; $D5A1
4135   D5A1 68 09           LDI  UH,$09
4136   D5A3             
4137   D5A3             DEC2HEX_48: ; $D5A3
4138   D5A3 FD 1A           POP  Y
4139   D5A5             
4140   D5A5             DEC2HEX_28: ; $D5A5
4141   D5A5 FD 8A           POP  A
4142   D5A7 CD 48           VMJ  ($48) ; ($48)($24)
4143   D5A9             
4144   D5A9             DEC2HEX_22: ; $D5A9
4145   D5A9 6E 80           CPI  UL,$80
4146   D5AB FD 8A           POP  A
4147   D5AD 81 08           BCR DEC2HEX_44 ; $D5B7
4148   D5AF BF 04           BII  A,$04
4149   D5B1 99 A9           BZR DEC2HEX_45 ; $D50A
4150   D5B3 68 06           LDI  UH,$06
4151   D5B5 CD 48           VMJ  ($48) ; ($48)($24)
4152   D5B7             
4153   D5B7             DEC2HEX_44: ; $D5B7
4154   D5B7 FD C8           PSH  A
4155   D5B9 B9 07           ANI  A,$07
4156   D5BB 8B 23           BZS DEC2HEX_46 ; $D5E0
4157   D5BD ED 78 79 80     BII  (CASS_FLAG),$80
4158   D5C1 8B 2C           BZS DEC2HEX_47 ; $D5EF
4159   D5C3 DA              VEJ  (DA)
4160   D5C4 FD 98           PSH  Y
4161   D5C6 BE D3 71        SJP  (SRCHPRGLINE_16) ; $D371
4162   D5C9 93 28           BCS DEC2HEX_48 ; $D5A3
4163   D5CB FD 18           LDX  Y
4164   D5CD FD 1A           POP  Y
4165   D5CF A5 78 84        LDA  (CURVARADD_L)
4166   D5D2 2A              STA  UL
4167   D5D3 46              DEC  X
4168   D5D4 46              DEC  X
4169   D5D5 46              DEC  X
4170   D5D6 9E E8           BCH DEC2HEX_49 ; $D4F0
4171   D5D8             
4172   D5D8             DEC2HEX_29: ; $D5D8
4173   D5D8 FD 8A           POP  A
4174   D5DA FD C8           PSH  A
4175   D5DC B9 07           ANI  A,$07
4176   D5DE 99 D4           BZR DEC2HEX_14 ; $D50C
4177   D5E0             
4178   D5E0             DEC2HEX_46: ; $D5E0
4179   D5E0 A4              LDA  UH
4180   D5E1 BB 80           ORI  A,$80
4181   D5E3 08              STA  XH
4182   D5E4 24              LDA  UL
4183   D5E5 0A              STA  XL
4184   D5E6             
4185   D5E6             DEC2HEX_21: ; $D5E6
4186   D5E6 B9 20           ANI  A,$20
4187   D5E8 D5              SHR
4188   D5E9 99 9E           BZR DEC2HEX_42 ; $D54D
4189   D5EB B5 88           LDI  A,$88
4190   D5ED 9E A2           BCH DEC2HEX_42 ; $D54D
4191   D5EF             
4192   D5EF             DEC2HEX_47: ; $D5EF
4193   D5EF 68 15           LDI  UH,$15
4194   D5F1 9E 4E           BCH DEC2HEX_28 ; $D5A5
4195   D5F3             
4196   D5F3             DEC2HEX_36: ; $D5F3
4197   D5F3 68 01           LDI  UH,$01
4198   D5F5             
4199   D5F5             DEC2HEX_34: ; $D5F5
4200   D5F5 FD 0A           POP  X
4201   D5F7 9E 54           BCH DEC2HEX_28 ; $D5A5
4202   D5F9             
4203   D5F9             
4204   D5F9             ;------------------------------------------------------------------------------
4205   D5F9             ; (D0) Convert AR-X to integer and load to U-Reg. D1 specifies the area. 
4206   D5F9             ; If exceeded, jump
4207   D5F9             ;------------------------------------------------------------------------------
4208   D5F9 FD 0A           POP  X ; D5F9
4209   D5FB 45              LIN  X
4210   D5FC FD 88           PSH  X
4211   D5FE FD 98           PSH  Y
4212   D600 FD C8           PSH  A
4213   D602 5A 00           LDI  YL,$00
4214   D604 58 00           LDI  YH,$00
4215   D606 A5 7A 04        LDA  (ARX + $04)
4216   D609 B7 B2           CPI  A,$B2
4217   D60B 81 33           BCR DEC2HEX_50 ; $D640
4218   D60D 89 11           BZR DEC2HEX_51 ; $D620
4219   D60F DC              VEJ  (DC)
4220   D610 FD 5A           STX  Y
4221   D612 5C 80           CPI  YH,$80
4222   D614 81 31           BCR DEC2HEX_52 ; $D647
4223   D616 FD 8A           POP  A
4224   D618 B9 1F           ANI  A,$1F
4225   D61A B7 04           CPI  A,$04
4226   D61C CB 4E           VZS  ($4E) ; ($4E)($27)
4227   D61E 8E 2B           BCH DEC2HEX_53 ; $D64B
4228   D620             
4229   D620             DEC2HEX_51: ; $D620
4230   D620 2A              STA  UL
4231   D621 FD 8A           POP  A
4232   D623 DB              ROL
4233   D624 68 11           LDI  UH,$11
4234   D626 81 83           BCR DEC2HEX_54 ; $D6AB
4235   D628 6E C1           CPI  UL,$C1
4236   D62A 68 FF           LDI  UH,$FF
4237   D62C 89 3C           BZR DEC2HEX_55 ; $D66A
4238   D62E DB              ROL
4239   D62F 81 39           BCR DEC2HEX_55 ; $D66A
4240   D631 D1              ROR
4241   D632 D5              SHR
4242   D633 FD C8           PSH  A
4243   D635 DC              VEJ  (DC)
4244   D636 8B 0F           BZS DEC2HEX_52 ; $D647
4245   D638 05              LDA  (X)
4246   D639 1A              STA  YL
4247   D63A 04              LDA  XL
4248   D63B AE 78 94        STA  (STR_BUF_PTR_L)
4249   D63E 8E 07           BCH DEC2HEX_52 ; $D647
4250   D640             
4251   D640             DEC2HEX_50: ; $D640
4252   D640 A5 7A 00        LDA  (ARX)
4253   D643 2A              STA  UL
4254   D644 D9              SHL
4255   D645 81 2F           BCR DEC2HEX_56 ; $D676
4256   D647             
4257   D647             DEC2HEX_52: ; $D647
4258   D647 FD 8A           POP  A
4259   D649 B9 1F           ANI  A,$1F
4260   D64B             
4261   D64B             DEC2HEX_53: ; $D64B
4262   D64B D5              SHR
4263   D64C 81 08           BCR DEC2HEX_57 ; $D656
4264   D64E 5E 00           CPI  YL,$00
4265   D650 89 04           BZR DEC2HEX_57 ; $D656
4266   D652 5C 00           CPI  YH,$00
4267   D654 8B 53           BZS DEC2HEX_58 ; $D6A9
4268   D656             
4269   D656             DEC2HEX_57: ; $D656
4270   D656 D9              SHL
4271   D657 4A AD           LDI  XL,$AD
4272   D659 48 D6           LDI  XH,$D6
4273   D65B FD CA           ADR  X
4274   D65D 45              LIN  X
4275   D65E 12              ADC  YL
4276   D65F 05              LDA  (X)
4277   D660 92              ADC  YH
4278   D661 83 46           BCS DEC2HEX_58 ; $D6A9
4279   D663 14              LDA  YL
4280   D664 2A              STA  UL
4281   D665 94              LDA  YH
4282   D666 28              STA  UH
4283   D667             
4284   D667             DEC2HEX_61: ; $D667
4285   D667 BE D9 E7        SJP  (ARUINT2ARX)
4286   D66A             
4287   D66A             DEC2HEX_55: ; $D66A
4288   D66A CD 4E           VMJ  ($4E) ; ($4E)($27)
4289   D66C             
4290   D66C             DEC2HEX_60: ; $D66C
4291   D66C FD A8           PSH  U
4292   D66E 6A 0A           LDI  UL,$0A
4293   D670 CD 50           VMJ  ($50) ; ($50)($28)
4294   D672 FD 2A           POP  U
4295   D674 83 31           BCS DEC2HEX_59 ; $D6A7
4296   D676             
4297   D676             DEC2HEX_56: ; $D676
4298   D676 4A 04           LDI  XL,$04
4299   D678 48 7A           LDI  XH,$7A
4300   D67A D7              DRL  (X)
4301   D67B 46              DEC  X
4302   D67C D7              DRL  (X)
4303   D67D 46              DEC  X
4304   D67E D7              DRL  (X)
4305   D67F B9 F0           ANI  A,$F0
4306   D681 F1              AEX
4307   D682 12              ADC  YL
4308   D683 1A              STA  YL
4309   D684 B5 00           LDI  A,$00
4310   D686 28              STA  UH
4311   D687 92              ADC  YH
4312   D688 18              STA  YH
4313   D689 83 1C           BCS DEC2HEX_59 ; $D6A7
4314   D68B 88 21           LOP  UL,DEC2HEX_60 ; $D66C
4315   D68D 28              STA  UH
4316   D68E 14              LDA  YL
4317   D68F 2A              STA  UL
4318   D690 ED 7A 01 80     BII  (ARX + $01),$80
4319   D694 9B 4F           BZS DEC2HEX_52 ; $D647
4320   D696 BE DA A8        SJP  (TWOSCOMP)
4321   D699 6C 80           CPI  UH,$80
4322   D69B 81 0A           BCR DEC2HEX_59 ; $D6A7
4323   D69D FD 8A           POP  A
4324   D69F B9 1F           ANI  A,$1F
4325   D6A1 B7 04           CPI  A,$04
4326   D6A3 9B 3E           BZS DEC2HEX_61 ; $D667
4327   D6A5 8E 02           BCH DEC2HEX_58 ; $D6A9
4328   D6A7             
4329   D6A7             DEC2HEX_59: ; $D6A7
4330   D6A7 FD 8A           POP  A
4331   D6A9             
4332   D6A9             DEC2HEX_58: ; $D6A9
4333   D6A9 68 13           LDI  UH,$13
4334   D6AB             
4335   D6AB             DEC2HEX_54: ; $D6AB
4336   D6AB CD 4A           VMJ  ($4A) ; ($4A)($25)
4337   D6AD             
4338   D6AD             ; Parameters for subroutine (D0) ; D6AD 
4339   D6AD 00 00 00 01     .BYTE $00,$00,$00,$01,$00,$80,$00,$80
4339   D6B1 00 80 00 80 
4340   D6B5 00 FF 64 FF     .BYTE $00,$FF,$64,$FF,$AF,$FF,$E5,$FF
4340   D6B9 AF FF E5 FF 
4341   D6BD E6 FF 38        .BYTE $E6,$FF,$38
4342   D6C0             
4343   D6C0             
4344   D6C0             ;------------------------------------------------------------------------------
4345   D6C0             ; (2E) Calculates formula expression and transfers result to AR-X.
4346   D6C0             ;------------------------------------------------------------------------------
4347   D6C0 FD 98           PSH  Y ; $DC60
4348   D6C2 BE D3 D5        SJP  (DEC2HEX)
4349   D6C5 83 16           BCS DEC2HEX_62 ; $D6DD
4350   D6C7 8B 14           BZS DEC2HEX_62 ; $D6DD
4351   D6C9 BE D9 E7        SJP  (ARUINT2ARX)
4352   D6CC C2              VEJ  (C2) \ ACHR($2E) \ ABRF($D6D1)
4352   D6CD 2E          
4352   D6CE 02          
4353   D6CF 8E 0C           BCH DEC2HEX_62 ; $D6DD
4354   D6D1 C4              VEJ  (C4) \ ACHR($45) \ ABRF($D6D6)
4354   D6D2 45          
4354   D6D3 02          
4355   D6D4 8E 07           BCH DEC2HEX_62 ; $D6DD
4356   D6D6 FD 0A           POP  X
4357   D6D8 C6              VEJ  (C6)
4358   D6D9             
4359   D6D9             DEC2HEX_1:  ; $D6D9
4360   D6D9 B5 02           LDI  A,$02
4361   D6DB 8E 04           BCH DEC2HEX_63 ; $D6E1
4362   D6DD             
4363   D6DD             DEC2HEX_62:  ; $D6DD
4364   D6DD FD 1A           POP  Y
4365   D6DF             
4366   D6DF             
4367   D6DF             ;------------------------------------------------------------------------------
4368   D6DF             ; (DE) Calculates formula pointed to by Y-Reg and transfers the result to AR-X. 
4369   D6DF             ; Jump if an error occurs.
4370   D6DF             ;------------------------------------------------------------------------------
4371   D6DF B5 01           LDI  A,$01 ; $D6DF
4372   D6E1             
4373   D6E1             DEC2HEX_63:  ; $D6E1
4374   D6E1 E9 78 89 FE     ANI  ($7889),$FE
4375   D6E5             
4376   D6E5             DEC2HEX_127:  ; $D6E5
4377   D6E5 AE 78 81        STA  ($7881)
4378   D6E8 CC              VEJ  (CC) \ ABYTL($7890)
4378   D6E9 90          
4379   D6EA F9              REC
4380   D6EB B3 04           ADI  A,$04
4381   D6ED 08              STA  XH
4382   D6EE CA              VEJ  (CA) \ ABYTL($7892)
4382   D6EF 92          
4383   D6F0 64              INC  U
4384   D6F1 B5 10           LDI  A,$10
4385   D6F3 2E              STA  (U)
4386   D6F4 BA D8 26        JMP  DEC2HEX_64 ; $D826
4387   D6F7             
4388   D6F7             DEC2HEX_66:  ; $D6F7
4389   D6F7 BA DA 25        JMP  BCMD_RLM_STR_1 ; $DA25
4390   D6FA             
4391   D6FA             DEC2HEX_87:  ; $D6FA
4392   D6FA CD 00           VMJ  ($00) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_65) ; $D70E
4392   D6FC 30          
4392   D6FD 3A          
4392   D6FE 0F          
4393   D6FF ED 78 81 1D     BII  ($7881),$1D
4394   D703 9B 0E           BZS DEC2HEX_66 ; $D6F7
4395   D705             
4396   D705             DEC2HEX_105:  ; $D705
4397   D705 56              DEC  Y
4398   D706 6A 4F           LDI  UL,$4F
4399   D708 BE D1 4F        SJP  (BCD_Y2ARX) \ ABRF(DEC2HEX_67) ; $D7F3
4399   D70B E7          
4400   D70C 8E 28           BCH DEC2HEX_68 ; $D736
4401   D70E             
4402   D70E             DEC2HEX_65:  ; $D70E
4403   D70E CD 00           VMJ  ($00) \ ABYT($40) \ ABYT($5B) \ ABRF(DEC2HEX_69) ; $D738
4403   D710 40          
4403   D711 5B          
4403   D712 25          
4404   D713 ED 78 81 1D     BII  ($7881),$1D
4405   D717 9B 22           BZS DEC2HEX_66 ; $D6F7
4406   D719 BE D4 0D        SJP  (DEC2HEX_70) ; $D40D
4407   D71C D6              VEJ  (D6) \ ABYT($6E)
4407   D71D 6E          
4408   D71E 80              SBC  XH
4409   D71F 81 11           BCR DEC2HEX_71 ; $D732
4410   D721 BE DB E0        SJP  (ISARXBCD_5) ; $DBE0
4411   D724 C3 48           VCS  ($48) ; ($48)($24)
4412   D726 B5 01           LDI  A,$01
4413   D728 AE 78 81        STA  ($7881)
4414   D72B B5 01           LDI  A,$01
4415   D72D AE 78 8C        STA  (NUMARGS)
4416   D730 8E 35           BCH DEC2HEX_72 ; $D767
4417   D732             
4418   D732             DEC2HEX_71:  ; $D732
4419   D732 CD 0E           VMJ  ($0E) \ ABYT($50) \ ABRF(DEC2HEX_67) ; $D7F3
4419   D734 50          
4419   D735 BD          
4420   D736             
4421   D736             DEC2HEX_68:  ; $D736
4422   D736 8E E9           BCH DEC2HEX_73 ; $D821
4423   D738             
4424   D738             DEC2HEX_69:  ; $D738
4425   D738 24              LDA  UL
4426   D739 6A 10           LDI  UL,$10
4427   D73B BE DA 98        SJP  (MULT16B_1) ; $DA98
4428   D73E 2A              STA  UL
4429   D73F 45              LIN  X
4430   D740 28              STA  UH
4431   D741 45              LIN  X
4432   D742 A9 78 81        AND  ($7881)
4433   D745 9B 50           BZS DEC2HEX_66 ; $D6F7
4434   D747 45              LIN  X
4435   D748 FD C8           PSH  A
4436   D74A 45              LIN  X
4437   D74B 48 D7           LDI  XH,$D7
4438   D74D 4A 55           LDI  XL,$55
4439   D74F FD CA           ADR  X
4440   D751 FD 8A           POP  A
4441   D753 FD 5E           STX  P
4442   D755 ED 78 81 1D     BII  ($7881),$1D
4443   D759 8B DC           BZS DEC2HEX_74 ; $D837
4444   D75B 68 83           LDI  UH,$83
4445   D75D B5 04           LDI  A,$04
4446   D75F             
4447   D75F             DEC2HEX_107:  ; $D75F
4448   D75F AE 78 81        STA  ($7881)
4449   D762 BE DB E0        SJP  (ISARXBCD_5) ; $DBE0
4450   D765 C3 48           VCS  ($48) ; ($48)($24)
4451   D767             
4452   D767             DEC2HEX_72:  ; $D767
4453   D767 BA D8 9D        JMP  DEC2HEX_75 ; $D89D
4454   D76A 6A 01           LDI  UL,$01
4455   D76C 17              CPA  (Y)
4456   D76D 89 04           BZR DEC2HEX_101 ; $D773
4457   D76F 6A 05           LDI  UL,$05
4458   D771 8E 06           BCH DEC2HEX_100 ; $D779
4459   D773             
4460   D773             DEC2HEX_101:  ; $D773
4461   D773 DD              INC  A
4462   D774 17              CPA  (Y)
4463   D775 89 03           BZR DEC2HEX_99 ; $D77A
4464   D777 6A 00           LDI  UL,$00
4465   D779             
4466   D779             DEC2HEX_100:  ; $D779
4467   D779 54              INC  Y
4468   D77A             
4469   D77A             DEC2HEX_99:  ; $D77A
4470   D77A B5 08           LDI  A,$08
4471   D77C 8E B9           BCH DEC2HEX_74 ; $D837
4472   D77E 6A 02           LDI  UL,$02
4473   D780 17              CPA  (Y)
4474   D781 99 09           BZR DEC2HEX_99 ; $D77A
4475   D783 6A 06           LDI  UL,$06
4476   D785 9E 0E           BCH DEC2HEX_100 ; $D779
4477   D787 2A              STA  UL
4478   D788 9E 10           BCH DEC2HEX_99 ; $D77A
4479   D78A CD 0C           VMJ  ($0C)
4480   D78C 8E 93           BCH DEC2HEX_73 ; $D821
4481   D78E EC              VEJ  (EC)
4482   D78F             
4483   D78F             DEC2HEX_104:  ; $D78F
4484   D78F CD 02           VMJ  ($02) \ ABYT($30) \ ABYT($3A) \ ABRF(DEC2HEX_102) ; $D796
4484   D791 30          
4484   D792 3A          
4484   D793 02          
4485   D794 8E 07           BCH $D79D
4486   D796             
4487   D796             DEC2HEX_102:  ; $D796
4488   D796 CD 00           VMJ  ($00) \ ABYT($41) \ ABYT($47) \ ABRF(DEC2HEX_103) ; $D7B1
4488   D798 41          
4488   D799 47          
4488   D79A 16          
4489   D79B B3 09           ADI  A,$09
4490   D79D 4A 06           LDI  XL,$06
4491   D79F 48 7A           LDI  XH,$7A
4492   D7A1 F1              AEX
4493   D7A2 D7              DRL  (X)
4494   D7A3 46              DEC  X
4495   D7A4 D7              DRL  (X)
4496   D7A5 B9 F0           ANI  A,$F0
4497   D7A7 68 10           LDI  UH,$10
4498   D7A9 C9 48           VZR  ($48) ; ($48)($24)
4499   D7AB 9E 1E           BCH DEC2HEX_104 ; $D78F
4500   D7AD 9E AA           BCH DEC2HEX_105 ; $D705
4501   D7AF 8E EF           BCH DEC2HEX_106 ; $D8A0
4502   D7B1             
4503   D7B1             DEC2HEX_103:  ; $D7B1
4504   D7B1 C6              VEJ  (C6)
4505   D7B2 DC              VEJ  (DC)
4506   D7B3 BE DD 2F        SJP  (LOAD_NEXT_1) ; $DD2F
4507   D7B6 00              SBC  XL
4508   D7B7 8E 68           BCH DEC2HEX_73 ; $D821
4509   D7B9 6A 6B           LDI  UL,$6B
4510   D7BB 9E 5E           BCH DEC2HEX_107 ; $D75F
4511   D7BD             
4512   D7BD             DEC2HEX_89:  ; $D7BD
4513   D7BD CC              VEJ  (CC) \ ABYTL($7893)
4513   D7BE 93          
4514   D7BF             
4515   D7BF             DEC2HEX_80:  ; $D7BF
4516   D7BF A7 78 91        CPA  (GOSB_STK_PTR_L)
4517   D7C2 89 34           BZR DEC2HEX_108 ; $D7F8
4518   D7C4 ED 78 89 01     BII  ($7889),$01
4519   D7C8 8B 8E           BZS DEC2HEX_109 ; $D858
4520   D7CA             
4521   D7CA             
4522   D7CA             ; UH = 1st index, UL = 2nd index of a variable. Jump if error.
4523   D7CA             DEC2HEX_40:  ; $D7CA
4524   D7CA EF 78 8C FD     ADI  (NUMARGS),$FD
4525   D7CE 68 08           LDI  UH,$08
4526   D7D0 C3 48           VCS  ($48) ; ($48)($24)
4527   D7D2 BE F9 2B        SJP  (ADD_ARU_ARX_1) ; $F92B
4528   D7D5 C3 48           VCS  ($48) ; ($48)($24)
4529   D7D7 D0              VEJ  (D0) \ ABYT($08) \ ABRF(DEC2HEX_67) ; $D7F3
4529   D7D8 08          
4529   D7D9 19          
4530   D7DA EF 78 8C 01     ADI  (NUMARGS),$01
4531   D7DE C1 4C           VCR  ($4C) ; ($4C)($26)
4532   D7E0 FD A8           PSH  U
4533   D7E2 CD 30           VMJ  ($30)
4534   D7E4 BE F9 2B        SJP  (ADD_ARU_ARX_1) ; $F92B
4535   D7E7 C3 48           VCS  ($48) ; ($48)($24)
4536   D7E9 D0              VEJ  (D0) \ ABYT($08) \ ABRF(DEC2HEX_110) ; $D7F1
4536   D7EA 08          
4536   D7EB 05          
4537   D7EC FD 2A           POP  U
4538   D7EE 28              STA  UH
4539   D7EF CD 4C           VMJ  ($4C) ; ($4C)($26)
4540   D7F1             
4541   D7F1             DEC2HEX_110:  ; $D7F1
4542   D7F1 FD 0A           POP  X
4543   D7F3             
4544   D7F3             DEC2HEX_67:  ; $D7F3
4545   D7F3 CD 48           VMJ  ($48) ; ($48)($24)
4546   D7F5             
4547   D7F5             DEC2HEX_93:  ; $D7F5
4548   D7F5 BA D6 FA        JMP  DEC2HEX_87 ; $D6FA
4549   D7F8             
4550   D7F8             DEC2HEX_108:  ; $D7F8
4551   D7F8 BE DB D3        SJP  (ISARXBCD_7) ; $DBD3
4552   D7FB 6C 60           CPI  UH,$60
4553   D7FD 89 06           BZR DEC2HEX_88 ; $D805
4554   D7FF EF 78 8C 01     ADI  (NUMARGS),$01
4555   D803 9E 48           BCH DEC2HEX_89 ; $D7BD
4556   D805             
4557   D805             DEC2HEX_88:  ; $D805
4558   D805 6C 20           CPI  UH,$20
4559   D807 8B 94           BZS DEC2HEX_75 ; $D89D
4560   D809 48 10           LDI  XH,$10
4561   D80B 6C 5B           CPI  UH,$5B
4562   D80D 83 6B           BCS DEC2HEX_76 ; $D87A
4563   D80F 6C 40           CPI  UH,$40
4564   D811 81 67           BCR DEC2HEX_76 ; $D87A
4565   D813 89 08           BZR DEC2HEX_77 ; $D81D
4566   D815 B5 00           LDI  A,$00
4567   D817 BE D5 2A        SJP  (DEC2HEX_78) ; $D52A
4568   D81A DC              VEJ  (DC)
4569   D81B             
4570   D81B             DEC2HEX_115:  ; $D81B
4571   D81B 8E 04           BCH DEC2HEX_73 ; $D821
4572   D81D             
4573   D81D             DEC2HEX_77:  ; $D81D
4574   D81D CD 0E           VMJ  ($0E) \ ABYT($52) \ ABRF(DEC2HEX_79) ; $D8F7
4574   D81F 52          
4574   D820 D6          
4575   D821             
4576   D821             DEC2HEX_73:  ; $D821
4577   D821 B5 02           LDI  A,$02
4578   D823 AE 78 81        STA  ($7881)
4579   D826             
4580   D826             DEC2HEX_64:  ; $D826
4581   D826 CC              VEJ  (CC) \ ABYTL($7881)
4581   D827 81          
4582   D828 D5              SHR
4583   D829 83 08           BCS $D833 ; ***
4584   D82B BE DB 95        SJP  (ISARXBCD_6) ; $DB95
4585   D82E 04              LDA  XL
4586   D82F BE DF A0        SJP  (BCMD_TIME_8) ; $DFA0
4587   D832 C4              VEJ  (C4) \ ACHR($BA) \ ABRF($D90C) ; ***
4587   D833 BA          
4587   D834 D7          
4588   D835 2B              ORA  (U)
4589   D836 56              DEC  Y
4590   D837             
4591   D837             DEC2HEX_74:  ; $D837
4592   D837 AE 78 81        STA  ($7881)
4593   D83A             
4594   D83A             DEC2HEX_116:  ; $D83A
4595   D83A CC              VEJ  (CC) \ ABYTL($7893)
4595   D83B 93          
4596   D83C 6C 10           CPI  UH,$10
4597   D83E 9B 81           BZS DEC2HEX_80 ; $D7BF
4598   D840 A7 78 91        CPA  (GOSB_STK_PTR_L)
4599   D843 89 1F           BZR DEC2HEX_81 ; $D864
4600   D845 A5 78 89        LDA  ($7889)
4601   D848 6C 10           CPI  UH,$10
4602   D84A 83 05           BCS DEC2HEX_82 ; $D851
4603   D84C D5              SHR
4604   D84D 81 0A           BCR DEC2HEX_83 ; $D859
4605   D84F 8E 26           BCH DEC2HEX_84 ; $D877
4606   D851             
4607   D851             DEC2HEX_82:  ; $D851
4608   D851 6C 60           CPI  UH,$60
4609   D853 89 3E           BZR DEC2HEX_85 ; $D893
4610   D855 D5              SHR
4611   D856 83 3B           BCS DEC2HEX_85 ; $D893
4612   D858             
4613   D858             DEC2HEX_109:  ; $D858
4614   D858 56              DEC  Y
4615   D859             
4616   D859             DEC2HEX_83:  ; $D859
4617   D859 CD 28           VMJ  ($28) \ ABRF(DEC2HEX_79) ; $D8F7
4617   D85B 9B          
4618   D85C BE F9 2B        SJP  (ADD_ARU_ARX_1) ; $F92B
4619   D85F C3 48           VCS  ($48) ; ($48)($24)
4620   D861 CD 4C           VMJ  ($4C) ; ($4C)($26)
4621   D863 38              NOP
4622   D864             
4623   D864             DEC2HEX_81:  ; $D864
4624   D864 0A              STA  XL
4625   D865 48 7A           LDI  XH,$7A
4626   D867 44              INC  X
4627   D868 05              LDA  (X)
4628   D869 A6              CPA  UH
4629   D86A 8B 1F           BZS DEC2HEX_86 ; $D88B
4630   D86C 81 25           BCR DEC2HEX_85 ; $D893
4631   D86E             
4632   D86E             DEC2HEX_92:  ; $D86E
4633   D86E FD 28           LDX  U
4634   D870 BE DB D3        SJP  (ISARXBCD_7) ; $DBD3
4635   D873 6C 70           CPI  UH,$70
4636   D875 83 03           BCS DEC2HEX_76 ; $D87A
4637   D877             
4638   D877             DEC2HEX_84:  ; $D877
4639   D877 BA DA 25        JMP  BCMD_RLM_STR_1 ; $DA25
4640   D87A             
4641   D87A             DEC2HEX_76:  ; $D87A
4642   D87A FD 88           PSH  X
4643   D87C             
4644   D87C             DEC2HEX_111:  ; $D87C
4645   D87C FD 98           PSH  Y
4646   D87E 24              LDA  UL
4647   D87F 1A              STA  YL
4648   D880 A4              LDA  UH
4649   D881 18              STA  YH
4650   D882 B7 E0           CPI  A,$E0
4651   D884 81 51           BCR DEC2HEX_90 ; $D8D7
4652   D886 CD 1C           VMJ  ($1C) \ ABYT($01)
4652   D888 01          
4653   D889 8E 67           BCH DEC2HEX_91 ; $D8F2
4654   D88B             
4655   D88B             DEC2HEX_86:  ; $D88B
4656   D88B 6C 60           CPI  UH,$60
4657   D88D 8B 04           BZS DEC2HEX_85 ; $D893
4658   D88F 6C 84           CPI  UH,$84
4659   D891 99 25           BZR DEC2HEX_92 ; $D86E
4660   D893             
4661   D893             DEC2HEX_85:  ; $D893
4662   D893 BE DB E0        SJP  (ISARXBCD_5) ; $DBE0
4663   D896 C3 48           VCS  ($48) ; ($48)($24)
4664   D898 BE DB F5        SJP  (ISARXBCD_1); $DBF5
4665   D89B C3 48           VCS  ($48) ; ($48)($24)
4666   D89D             
4667   D89D             DEC2HEX_75:  ; $D89D
4668   D89D C0              VEJ  (C0)
4669   D89E 91 AB           BCR DEC2HEX_93 ; $D7F5
4670   D8A0             
4671   D8A0             DEC2HEX_106:  ; $D8A0
4672   D8A0 A5 78 81        LDA  ($7881)
4673   D8A3 6E 80           CPI  UL,$80
4674   D8A5 81 06           BCR DEC2HEX_94 ; $D8AD
4675   D8A7 56              DEC  Y
4676   D8A8 56              DEC  Y
4677   D8A9 68 00           LDI  UH,$00
4678   D8AB 8E 12           BCH DEC2HEX_95 ; $D8BF
4679   D8AD             
4680   D8AD             DEC2HEX_94:  ; $D8AD
4681   D8AD 6E 60           CPI  UL,$60
4682   D8AF 83 15           BCS DEC2HEX_96 ; $D8C6
4683   D8B1 6E 50           CPI  UL,$50
4684   D8B3 8B 04           BZS DEC2HEX_97 ; $D8B9
4685   D8B5 6E 51           CPI  UL,$51
4686   D8B7 89 16           BZR DEC2HEX_98 ; $D8CF
4687   D8B9             
4688   D8B9             DEC2HEX_97:  ; $D8B9
4689   D8B9 6C F1           CPI  UH,$F1
4690   D8BB 89 12           BZR DEC2HEX_98 ; $D8CF
4691   D8BD 68 70           LDI  UH,$70
4692   D8BF             
4693   D8BF             DEC2HEX_95:  ; $D8BF
4694   D8BF BF 22           BII  A,$22
4695   D8C1 9B 4C           BZS DEC2HEX_84 ; $D877
4696   D8C3 BA D7 7A        JMP  DEC2HEX_99 ; $D77A
4697   D8C6             
4698   D8C6             DEC2HEX_96:  ; $D8C6
4699   D8C6 BF 1D           BII  A,$1D
4700   D8C8 9B 53           BZS DEC2HEX_84 ; $D877
4701   D8CA B5 10           LDI  A,$10
4702   D8CC BA D7 5F        JMP  DEC2HEX_107 ; $D75F
4703   D8CF             
4704   D8CF             DEC2HEX_98:  ; $D8CF
4705   D8CF BF 1D           BII  A,$1D
4706   D8D1 9B 5C           BZS DEC2HEX_84 ; $D877
4707   D8D3 FD A8           PSH  U
4708   D8D5 9E 5B           BCH DEC2HEX_111 ; $D87C
4709   D8D7             
4710   D8D7             DEC2HEX_90:  ; $D8D7
4711   D8D7 CD 28           VMJ  ($28) \ ABRF(DEC2HEX_91) ; D8F2
4711   D8D9 18          
4712   D8DA 5C 83           CPI  YH,$83
4713   D8DC 89 2B           BZR DEC2HEX_112 ; $D909
4714   D8DE D2              VEJ  (D2) \ ABRF($D8F2) \ ABYT($80)
4714   D8DF 12          
4714   D8E0 80          
4715   D8E1 5E 2D           CPI  YL,$2D
4716   D8E3 81 0B           BCR DEC2HEX_113 ; $D8F0
4717   D8E5 4A 02           LDI  XL,$02
4718   D8E7 48 7A           LDI  XH,$7A
4719   D8E9 47              LDE  X
4720   D8EA 8B 04           BZS DEC2HEX_113 ; $D8F0
4721   D8EC B5 80           LDI  A,$80
4722   D8EE 0D              EOR  (X)
4723   D8EF             
4724   D8EF             DEC2HEX_124:  ; $D8EF
4725   D8EF 0E              STA  (X)
4726   D8F0             
4727   D8F0             DEC2HEX_113:  ; $D8F0
4728   D8F0 68 00           LDI  UH,$00
4729   D8F2             
4730   D8F2             DEC2HEX_91:  ; $D8F2
4731   D8F2 FD 1A           POP  Y
4732   D8F4 FD 0A           POP  X
4733   D8F6 A4              LDA  UH
4734   D8F7             
4735   D8F7             DEC2HEX_79:  ; $D8F7
4736   D8F7 C9 48           VZR  ($48) ; ($48)($24)
4737   D8F9 4C E0           CPI  XH,$E0
4738   D8FB 81 04           BCR DEC2HEX_114 ; $D901
4739   D8FD 4E 60           CPI  XL,$60
4740   D8FF 91 E6           BCR DEC2HEX_115 ; $D81B
4741   D901             
4742   D901             DEC2HEX_114:  ; $D901
4743   D901 DD              INC  A
4744   D902 AE 78 8C        STA  (NUMARGS)
4745   D905 FD 6A           STX  U
4746   D907 9E CF           BCH DEC2HEX_116 ; $D83A
4747   D909             
4748   D909             DEC2HEX_112:  ; $D909
4749   D909 8F 68           BVS DEC2HEX_117 ; $D973
4750   D90B FD 98           PSH  Y
4751   D90D BE DB 95        SJP  (ISARXBCD_6) ; $DB95
4752   D910 3E              STA  (V)
4753   D911 E6              VEJ  (E6)
4754   D912 CD 30           VMJ  ($30)
4755   D914 BE DB 95        SJP  (ISARXBCD_6) ; $DB95
4756   D917 55              LIN  Y
4757   D918 FD 1A           POP  Y
4758   D91A 94              LDA  YH
4759   D91B DF              DEC  A
4760   D91C 85 25           BHR DEC2HEX_118 ; $D943
4761   D91E DF              DEC  A
4762   D91F 87 4E           BHS DEC2HEX_119 ; $D96F
4763   D921 5E 2B           CPI  YL,$2B
4764   D923 89 4A           BZR DEC2HEX_119 ; $D96F
4765   D925             
4766   D925             ; Concatenate two strings
4767   D925 BE DF A0        SJP  (BCMD_TIME_8) ; $DFA0
4768   D928 48 DC           LDI  XH,$DC
4769   D92A FD 5A           STX  Y
4770   D92C FD A8           PSH  U
4771   D92E 6A 15           LDI  UL,$15
4772   D930 BE DE BE        SJP  (BCMD_TIME_7) ; $DEBE
4773   D933 BE DF A1        SJP  (XREG2STRBUF) \ ABRF(BCMD_RLM_STR_2) ; $DA29
4773   D936 F2          
4774   D937 A5 7A 07        LDA  (ARX + $07)
4775   D93A FD 2A           POP  U
4776   D93C 22              ADC  UL
4777   D93D FD 18           LDX  Y
4778   D93F CD 24           VMJ  ($24)
4779   D941             
4780   D941             DEC2HEX_126:  ; $D941
4781   D941 9E 53           BCH DEC2HEX_113 ; $D8F0
4782   D943             
4783   D943             DEC2HEX_118:  ; $D943
4784   D943 14              LDA  YL
4785   D944 BE D0 F9        SJP  (DEL_DIM_VARS_15) ; $D0F9
4786   D947 9E 59           BCH DEC2HEX_113 ; $D8F0
4787   D949             
4788   D949             DEC2HEX_120:  ; $D949
4789   D949 14              LDA  YL
4790   D94A BE D0 D2        SJP  (DEL_DIM_VARS_16) ; $D0D2
4791   D94D 9E 5F           BCH DEC2HEX_113 ; $D8F0
4792   D94F D2              VEJ  (D2) \ ABRF($D952) \ ABYT($80)
4792   D950 01          
4792   D951 80          
4793   D952 E6              VEJ  (E6)
4794   D953 CD 30           VMJ  ($30)
4795   D955 D2              VEJ  (D2) \ ABRF($D96D) \ ABYT($80) ; ABRF address +1 off
4795   D956 16          
4795   D957 80          
4796   D958 FD 1A           POP  Y
4797   D95A 94              LDA  YH
4798   D95B DF              DEC  A
4799   D95C 95 15           BHR DEC2HEX_120 ; $D949
4800   D95E DF              DEC  A
4801   D95F 87 03           BHS DEC2HEX_121 ; $D964
4802   D961 BA EF 94        JMP  OUTBUFCLR_1 ; $EF94
4803   D964             
4804   D964             DEC2HEX_121:  ; $D964
4805   D964 DF              DEC  A
4806   D965 87 03           BHS DEC2HEX_122 ; $D96A
4807   D967 BA EF A5        JMP  OUTBUFCLR_2 ; $EFA5
4808   D96A             
4809   D96A             DEC2HEX_122:  ; $D96A
4810   D96A BA EF B1        JMP  OUTBUFCLR_3 ; $EFB1
4811   D96D FD 1A           POP  Y
4812   D96F             
4813   D96F             DEC2HEX_119:  ; $D96F
4814   D96F 68 11           LDI  UH,$11
4815   D971             
4816   D971             DEC2HEX_125:  ; $D971
4817   D971 9E 81           BCH DEC2HEX_91 ; $D8F2
4818   D973             
4819   D973             DEC2HEX_117:  ; $D973
4820   D973 D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_RLM_STR_3) ; $DA2B
4820   D974 04          
4820   D975 B5          
4821   D976 FD A8           PSH  U
4822   D978 CD 30           VMJ  ($30)
4823   D97A D0              VEJ  (D0) \ ABYT($04) \ ABRF(BCMD_RLM_STR_2) ; $DA29)
4823   D97B 04          
4823   D97C AC          
4824   D97D FD 2A           POP  U
4825   D97F 4A 06           LDI  XL,$06
4826   D981 48 7A           LDI  XH,$7A
4827   D983 24              LDA  UL
4828   D984 52              DEC  YL
4829   D985 87 06           BHS DEC2HEX_123 ; $D98D
4830   D987 09              AND  (X)
4831   D988 43              SDE  X
4832   D989 A4              LDA  UH
4833   D98A 09              AND  (X)
4834   D98B 9E 9E           BCH DEC2HEX_124 ; $D8EF
4835   D98D             
4836   D98D             DEC2HEX_123:  ; $D98D
4837   D98D 0B              ORA  (X)
4838   D98E 43              SDE  X
4839   D98F A4              LDA  UH
4840   D990 0B              ORA  (X)
4841   D991 9E A4           BCH DEC2HEX_124 ; $D8EF
4842   D993             
4843   D993             
4844   D993             
4845   D993             ; Basic commands PEEK#/PEEK
4846   D993             BCMD_PEEK: ; $D993
4847   D993 D0              VEJ  (D0) \ ABYT($00) \ ABRF(ARUINT2ARX_1) ; $D9F2
4847   D994 00          
4847   D995 5C          
4848   D996 50              INC  YL
4849   D997 25              LDA  (U)
4850   D998 87 02           BHS BCMD_PEEK_1 ; $D99C
4851   D99A FD 25           LDA  #(U)
4852   D99C             
4853   D99C             BCMD_PEEK_1: ; $D99C
4854   D99C 8E 46           BCH BCMD_LEN_1 ; $D9E4
4855   D99E             
4856   D99E             
4857   D99E             
4858   D99E             ; Basic command NOT
4859   D99E             BCMD_NOT: ; $D99E
4860   D99E D0              VEJ  (D0) \ ABYT($04) \ ABRF(ARUINT2ARX_1) ; $D9F2
4860   D99F 04          
4860   D9A0 51          
4861   D9A1 BE DA A8        SJP  (TWOSCOMP)
4862   D9A4 66              DEC  U
4863   D9A5 BE D9 E7        SJP  (ARUINT2ARX)
4864   D9A8 8E 97           BCH BCMD_RLM_STR_4 ; $DA41
4865   D9AA             
4866   D9AA             
4867   D9AA             
4868   D9AA             ; Basic INKEY$ command
4869   D9AA             BCMD_INKY: ; $D9AA
4870   D9AA BE E4 2C        SJP  (KEY2ASCII)
4871   D9AD 48 D0           LDI  XH,$D0
4872   D9AF 8E 05           BCH BCMD_CHR_1 ; $D9B6
4873   D9B1             
4874   D9B1             
4875   D9B1             
4876   D9B1             ; Basic CHR$ Command
4877   D9B1             BCMD_CHR: ; $D981
4878   D9B1 D0              VEJ  (D0) \ ABYT($08) \ ABRF(ARUINT2ARX_1) ; $D9F2
4878   D9B2 08          
4878   D9B3 3E          
4879   D9B4 48 C1           LDI  XH,$C1
4880   D9B6             
4881   D9B6             BCMD_CHR_1: ; $D9B6
4882   D9B6 0A              STA  XL
4883   D9B7 2A              STA  UL
4884   D9B8 24              LDA  UL
4885   D9B9 8B 02           BZS BCMD_CHR_2 ; $D9BD
4886   D9BB B5 01           LDI  A,$01
4887   D9BD             
4888   D9BD             BCMD_CHR_2: ; $D9B6
4889   D9BD BE DF B4        SJP  (XREG2STRBUF_1) ; $DFB4
4890   D9C0 83 30           BCS ARUINT2ARX_1 ; $D9F2
4891   D9C2 04              LDA  XL
4892   D9C3 8B 01           BZS BCMD_CHR_3 ; $D9C6
4893   D9C5 51              SIN  Y
4894   D9C6             
4895   D9C6             BCMD_CHR_3: ; $D9C6
4896   D9C6 84              LDA  XH
4897   D9C7 18              STA  YH
4898   D9C8 BE DF C5        SJP  (ARX2STRBUF_1) ; $DFC5
4899   D9CB 94              LDA  YH
4900   D9CC 2E              STA  (U)
4901   D9CD 8E 72           BCH BCMD_RLM_STR_4 ; $DA41
4902   D9CF             
4903   D9CF             
4904   D9CF             
4905   D9CF             ; Basic STRS command
4906   D9CF             BCMD_STR: ; $D9CF
4907   D9CF D2              VEJ  (D2) \ ABRF(ARUINT2ARX_1) \ ABYT($80)
4907   D9D0 21          
4907   D9D1 80          
4908   D9D2 BE EF 1B        SJP  (ARX2STRNG)
4909   D9D5 8E 66           BCH BCMD_RLM_STR_5 ; $DA3D
4910   D9D7             
4911   D9D7             
4912   D9D7             
4913   D9D7             ; Basic VAL command
4914   D9D7             BCMD_LEN: ; $D9D7
4915   D9D7 BE D1 4C        SJP  (DEL_DIM_VARS_17) ; $D14C
4916   D9DA 17              CPA  (Y)
4917   D9DB 8E 64           BCH BCMD_RLM_STR_4 ; $DA41
4918   D9DD             
4919   D9DD             ; Basic LEN / ASC Command $D9DD
4920   D9DD DC              VEJ  (DC)
4921   D9DE 8B 05           BZS BCMD_LEN_2 ; $D9E5
4922   D9E0 52              DEC  YL
4923   D9E1 87 02           BHS BCMD_LEN_2 ; $D9E5
4924   D9E3 05              LDA  (X)
4925   D9E4             
4926   D9E4             BCMD_LEN_1: ; $D9E4
4927   D9E4 2A              STA  UL
4928   D9E5             
4929   D9E5             BCMD_LEN_2: ; $D9E5
4930   D9E5 68 00           LDI  UH,$00
4931   D9E7             
4932   D9E7             
4933   D9E7             
4934   D9E7             ; Transfers U-Reg as an integer to AR-X in the format '82 UH UL '.
4935   D9E7             ARUINT2ARX: ; $D9E7
4936   D9E7 4A 04           LDI  XL,$04
4937   D9E9 48 7A           LDI  XH,$7A
4938   D9EB B5 B2           LDI  A,$B2
4939   D9ED 41              SIN  X
4940   D9EE A4              LDA  UH
4941   D9EF 41              SIN  X
4942   D9F0 24              LDA  UL
4943   D9F1 0E              STA  (X)
4944   D9F2             
4945   D9F2             ARUINT2ARX_1: ; $D9F2
4946   D9F2 9A              RTN
4947   D9F3             
4948   D9F3             
4949   D9F3             
4950   D9F3             ; Basic RIGHT$ / LEFT$ / MID$ Commands
4951   D9F3             BCMD_RLM_STR: ; D9F3
4952   D9F3 14              LDA  YL
4953   D9F4 B9 03           ANI  A,$03
4954   D9F6 BE DB B3        SJP  (ISARXBCD_8) ; $DBB3
4955   D9F9 9D D0           BVR $D92B ; ***
4956   D9FB 0C              DCS  (X)
4957   D9FC 9A              RTN
4958   D9FD 18              STA  YH
4959   D9FE 68 00           LDI  UH,$00
4960   DA00 5E 7B           CPI  YL,$7B
4961   DA02 89 07           BZR BCMD_RLM_STR_6 ; $DA0B
4962   DA04 CD 30           VMJ  ($30)
4963   DA06 D0              VEJ  (D0) \ ABYT($0D) \ ABRF(MULT16B_2) ; $DA97
4963   DA07 0D          
4963   DA08 8E          
4964   DA09 DF              DEC  A
4965   DA0A 28              STA  UH
4966   DA0B             
4967   DA0B             BCMD_RLM_STR_6: ; DA0B
4968   DA0B CD 30           VMJ  ($30)
4969   DA0D BE DB 95        SJP  (ISARXBCD_6) ; $DB95
4970   DA10 86              CPA  XH
4971   DA11 4A 07           LDI  XL,$07
4972   DA13 48 7A           LDI  XH,$7A
4973   DA15 05              LDA  (X)
4974   DA16 FB              SEC
4975   DA17 A0              SBC  UH
4976   DA18 81 20           BCR BCMD_RLM_STR_7 ; $DA3A
4977   DA1A 90              SBC  YH
4978   DA1B 81 12           BCR BCMD_RLM_STR_8 ; $DA2F
4979   DA1D 5E 7A           CPI  YL,$7A
4980   DA1F 83 01           BCS BCMD_RLM_STR_9 ; $DA22
4981   DA21 28              STA  UH
4982   DA22             
4983   DA22             BCMD_RLM_STR_9: ; $DA22
4984   DA22 94              LDA  YH
4985   DA23 8E 0B           BCH BCMD_RLM_STR_10 ; $DA30
4986   DA25             
4987   DA25             BCMD_RLM_STR_1: ; $DA25
4988   DA25 68 01           LDI  UH,$01
4989   DA27 CD 48           VMJ  ($48) ; ($48)($24)
4990   DA29             
4991   DA29             BCMD_RLM_STR_2: ; $DA29
4992   DA29 FD 0A           POP  X
4993   DA2B             
4994   DA2B             BCMD_RLM_STR_3: ; $DA2B
4995   DA2B 9E BC           BCH DEC2HEX_125 ; $D971
4996   DA2D 9E EE           BCH DEC2HEX_126 ; $D941
4997   DA2F             
4998   DA2F             BCMD_RLM_STR_8: ; $DA2F
4999   DA2F 92              ADC  YH
5000   DA30             
5001   DA30             BCMD_RLM_STR_10: ;$ DA30
5002   DA30 43              SDE  X
5003   DA31 05              LDA  (X)
5004   DA32 F9              REC
5005   DA33 A2              ADC  UH
5006   DA34 43              SDE  X
5007   DA35 05              LDA  (X)
5008   DA36 B3 00           ADI  A,$00
5009   DA38 8E 02           BCH BCMD_RLM_STR_11 ; $DA3C
5010   DA3A             
5011   DA3A             BCMD_RLM_STR_7: ; $DA3A
5012   DA3A B5 00           LDI  A,$00
5013   DA3C             
5014   DA3C             BCMD_RLM_STR_11: ; $DA3C
5015   DA3C 0E              STA  (X)
5016   DA3D             
5017   DA3D             BCMD_RLM_STR_5: ; $DA3D
5018   DA3D BE DF A0        SJP  (BCMD_TIME_8) ; $DFA0
5019   DA40 66              DEC  U
5020   DA41             
5021   DA41             BCMD_RLM_STR_4: ; $DA41
5022   DA41 68 00           LDI  UH,$00
5023   DA43 9A              RTN
5024   DA44             
5025   DA44             
5026   DA44             
5027   DA44             ; Basic STATUS Command
5028   DA44             BCMD_STATUS: ; $DA44
5029   DA44 D0              VEJ  (D0) \ ABYT($08) \ ABRF(MULT16B_3) ; $DAA7
5029   DA45 08          
5029   DA46 60          
5030   DA47 62              DEC  UL
5031   DA48 81 13           BCR BCMD_MEM
5032   DA4A 8B 16           BZS BCMD_MEM_1 ; $DA62
5033   DA4C CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; 7867
5033   DA4D 67          
5034   DA4E 44              INC  X
5035   DA4F 62              DEC  UL
5036   DA50 8B 07           BZS BCMD_STATUS_1 ; $DA59
5037   DA52 CC              VEJ  (CC) \ ABYTL($7899)
5037   DA53 99          
5038   DA54 62              DEC  UL
5039   DA55 8B 02           BZS BCMD_STATUS_1 ; $DA59
5040   DA57 CC              VEJ  (CC) \ ABYTL(PREV_LINE_H) ; $78A2
5040   DA58 A2          
5041   DA59             
5042   DA59             BCMD_STATUS_1: ; $DA59
5043   DA59 FD 6A           STX  U
5044   DA5B 8E 0F           BCH BCMD_MEM_2 ; $DA6C
5045   DA5D             
5046   DA5D             
5047   DA5D             
5048   DA5D              ;Basic MEM Command
5049   DA5D             BCMD_MEM: ; $DA5D
5050   DA5D BE DF EE        SJP  (MEM_IN_UREG)
5051   DA60 8E 03           BCH BCMD_MEM_3 ; $DA65
5052   DA62             
5053   DA62             BCMD_MEM_1: ; $DA62
5054   DA62 CD 14           VMJ  ($14)
5055   DA64 64              INC  U
5056   DA65             
5057   DA65             BCMD_MEM_3: ; $DA65
5058   DA65 64              INC  U
5059   DA66 83 04           BCS BCMD_MEM_2 ; $DA6C
5060   DA68 6A 00           LDI  UL,$00
5061   DA6A 68 00           LDI  UH,$00
5062   DA6C             
5063   DA6C             BCMD_MEM_2: ; $DA6C
5064   DA6C CD 10           VMJ  ($10) \ ABYT($00)
5064   DA6E 00          
5065   DA6F 9E 30           BCH BCMD_RLM_STR_4 ; $DA41
5066   DA71             
5067   DA71             
5068   DA71             
5069   DA71             ;------------------------------------------------------------------------------
5070   DA71             ; (50) 16 * 16 Bit Multiplication (U-Reg * Y-Reg)
5071   DA71             ;            Address: DA71 (50)
5072   DA71             ;   Entry parameters: At entry, U-Reg and Y-Reg each contain a hex value that is to be multiplied with one another.
5073   DA71             ; 
5074   DA71             ; Modified registers: The result is in X-Reg and Y-Reg
5075   DA71             ;   Error conditions: Carry=1 when overflow occurs
5076   DA71             ;------------------------------------------------------------------------------
5077   DA71             MULT16B: ; $DA71
5078   DA71 4A 00           LDI  XL,$00
5079   DA73 48 00           LDI  XH,$00
5080   DA75             
5081   DA75             MULT16B_8: ; $DA75
5082   DA75 A4              LDA  UH
5083   DA76 D5              SHR
5084   DA77 28              STA  UH
5085   DA78 24              LDA  UL
5086   DA79 D1              ROR
5087   DA7A 2A              STA  UL
5088   DA7B 81 09           BCR MULT16B_4 ; $DA86
5089   DA7D F9              REC
5090   DA7E 14              LDA  YL
5091   DA7F 02              ADC  XL
5092   DA80 0A              STA  XL
5093   DA81 94              LDA  YH
5094   DA82 82              ADC  XH
5095   DA83 08              STA  XH
5096   DA84 83 0E           BCS MULT16B_5 ; $DA94
5097   DA86             
5098   DA86             MULT16B_4: ; $DA86
5099   DA86 24              LDA  UL
5100   DA87 89 03           BZR MULT16B_6 ; $DA8C
5101   DA89 A4              LDA  UH
5102   DA8A 8B 09           BZS MULT16B_7 ; $DA95
5103   DA8C             
5104   DA8C             MULT16B_6: ; $DA8C
5105   DA8C 14              LDA  YL
5106   DA8D D9              SHL
5107   DA8E 1A              STA  YL
5108   DA8F 94              LDA  YH
5109   DA90 DB              ROL
5110   DA91 18              STA  YH
5111   DA92 91 1F           BCR MULT16B_8 ; $DA75
5112   DA94             
5113   DA94             MULT16B_5: ; $DA94
5114   DA94 9A              RTN
5115   DA95             
5116   DA95             MULT16B_7: ; $DA95
5117   DA95 FD 5A           STX  Y
5118   DA97             
5119   DA97             MULT16B_2: ; $DA97
5120   DA97 9A              RTN
5121   DA98             
5122   DA98             
5123   DA98             
5124   DA98             ; Searches operator table by value in accumulator
5125   DA98             MULT16B_1: ; $DA98
5126   DA98 4A A7           LDI  XL,$A7
5127   DA9A 48 C3           LDI  XH,$C3
5128   DA9C             
5129   DA9C             MULT16B_9: ; $DA9C
5130   DA9C 44              INC  X
5131   DA9D 44              INC  X
5132   DA9E 44              INC  X
5133   DA9F 44              INC  X
5134   DAA0 F7              CIN
5135   DAA1 8B 04           BZS MULT16B_3 ; $DAA7
5136   DAA3 88 09           LOP  UL,MULT16B_9 ; $DA9C
5137   DAA5 4A D4           LDI  XL,$D4
5138   DAA7             
5139   DAA7             MULT16B_3: ; $DAA7
5140   DAA7 9A              RTN
5141   DAA8             
5142   DAA8             
5143   DAA8             
5144   DAA8             ; Forms a two’s complement of U-Reg
5145   DAA8             TWOSCOMP: ; $DAA8
5146   DAA8 A4              LDA  UH
5147   DAA9 BD FF           EAI  $FF
5148   DAAB 28              STA  UH
5149   DAAC 24              LDA  UL
5150   DAAD BD FF           EAI  $FF
5151   DAAF 2A              STA  UL
5152   DAB0 64              INC  U
5153   DAB1 9A              RTN
5154   DAB2             
5155   DAB2             
5156   DAB2             
5157   DAB2             ; Y-Reg points to a string with USING parameters. Evaluation and transfer to 
5158   DAB2             ; the using pointers.
5159   DAB2             EVAL_USING: ; $DAB2
5160   DAB2 B5 00           LDI  A,$00
5161   DAB4             
5162   DAB4             ; Read USING parameters and update in memory. Jump in case of error.
5163   DAB4             EVAL_USING_1: ; $DAB4
5164   DAB4 AE 78 82        STA  (STK_PTR_GSB_FOR)
5165   DAB7 CD 36           VMJ  ($36)
5166   DAB9 81 05           BCR EVAL_USING_2 ; $DAC0
5167   DABB FD 98           PSH  Y
5168   DABD DC              VEJ  (DC)
5169   DABE 8E 08           BCH EVAL_USING_3 ; $DAC8
5170   DAC0             
5171   DAC0             EVAL_USING_2: ; $DAC0
5172   DAC0 6C 15           CPI  UH,$15
5173   DAC2 89 80           BZR EVAL_USING_4 ; $DB44
5174   DAC4 6A 00           LDI  UL,$00
5175   DAC6 FD 88           PSH  X
5176   DAC8             
5177   DAC8             EVAL_USING_3: ; $DAC8
5178   DAC8 B5 00           LDI  A,$00
5179   DACA 5A 08           LDI  YL,$08
5180   DACC 58 7A           LDI  YH,$7A
5181   DACE 28              STA  UH
5182   DACF 51              SIN  Y
5183   DAD0 51              SIN  Y
5184   DAD1 1E              STA  (Y)
5185   DAD2 62              DEC  UL
5186   DAD3 83 51           BCS EVAL_USING_5 ; $DB26
5187   DAD5             
5188   DAD5             EVAL_USING_12: ; $DAD5
5189   DAD5 FD 1A           POP  Y
5190   DAD7 55              LIN  Y
5191   DAD8 B7 E0           CPI  A,$E0
5192   DADA 81 05           BCR EVAL_USING_6 ; $DAE1
5193   DADC 54              INC  Y
5194   DADD             
5195   DADD             EVAL_USING_9: ; $DADD
5196   DADD 68 01           LDI  UH,$01
5197   DADF CD 48           VMJ  ($48) ; ($48)($24)
5198   DAE1             
5199   DAE1             EVAL_USING_6: ; $DAE1
5200   DAE1 B7 3B           CPI  A,$3B
5201   DAE3 8B 09           BZS EVAL_USING_7 ; $DAEE
5202   DAE5 B7 3A           CPI  A,$3A
5203   DAE7 8B 04           BZS EVAL_USING_8 ; $DAED
5204   DAE9 B7 0D           CPI  A,$0D
5205   DAEB 99 10           BZR EVAL_USING_9 ; $DADD
5206   DAED             
5207   DAED             EVAL_USING_8: ; $DAED
5208   DAED F9              REC
5209   DAEE             
5210   DAEE             EVAL_USING_7: ; $DAEE
5211   DAEE DB              ROL
5212   DAEF AD 78 82        EOR  (STK_PTR_GSB_FOR)
5213   DAF2 D1              ROR
5214   DAF3 91 18           BCR EVAL_USING_9 ; $DADD
5215   DAF5 FD 98           PSH  Y
5216   DAF7 5A 95           LDI  YL,$95
5217   DAF9 58 78           LDI  YH,$78
5218   DAFB 4A 0A           LDI  XL,$0A
5219   DAFD 48 7A           LDI  XH,$7A
5220   DAFF A4              LDA  UH
5221   DB00 8B 0D           BZS EVAL_USING_10 ; $DB0F
5222   DB02 51              SIN  Y
5223   DB03 4A 08           LDI  XL,$08
5224   DB05 F5              TIN
5225   DB06 45              LIN  X
5226   DB07 54              INC  Y
5227   DB08 53              SDE  Y
5228   DB09 05              LDA  (X)
5229   DB0A CB 4E           VZS  ($4E) ; ($4E)($27)
5230   DB0C             
5231   DB0C             EVAL_USING_11: ; $DB0C
5232   DB0C 1E              STA  (Y)
5233   DB0D CD 4E           VMJ  ($4E) ; ($4E)($27)
5234   DB0F             
5235   DB0F             EVAL_USING_10: ; $DB0F
5236   DB0F 5A 97           LDI  YL,$97
5237   DB11 05              LDA  (X)
5238   DB12 99 08           BZR EVAL_USING_11 ; $DB0C
5239   DB14 54              INC  Y
5240   DB15 53              SDE  Y
5241   DB16 53              SDE  Y
5242   DB17 53              SDE  Y
5243   DB18 9E 0E           BCH EVAL_USING_11 ; $DB0C
5244   DB1A             
5245   DB1A             EVAL_USING_13: ; $DB1A
5246   DB1A 5F 01           ADI  (Y),$01
5247   DB1C 62              DEC  UL
5248   DB1D 91 4A           BCR EVAL_USING_12 ; $DAD5
5249   DB1F F7              CIN
5250   DB20 9B 08           BZS EVAL_USING_13 ; $DB1A
5251   DB22 A4              LDA  UH
5252   DB23 89 1D           BZR EVAL_USING_14 ; $DB42
5253   DB25 46              DEC  X
5254   DB26             
5255   DB26             EVAL_USING_5: ; $DB26
5256   DB26 45              LIN  X
5257   DB27 B7 26           CPI  A,$26
5258   DB29 9B 11           BZS EVAL_USING_13 ; $DB1A
5259   DB2B 5A 08           LDI  YL,$08
5260   DB2D             
5261   DB2D             EVAL_USING_24: ; $DB2D
5262   DB2D FD 88           PSH  X
5263   DB2F CD 34           VMJ  ($34) \ ABYT($06) \ ABYT($23) \ ABRF(EVAL_USING_15) \
5263   DB31 06          
5263   DB32 23          
5263   DB33 15          
5263   DB34             
5264   DB34 2A                                       ABYT($2A) \ ABRF(EVAL_USING_16) \ 
5264   DB35 10          
5264   DB36             
5265   DB36 2B                                       ABYT($2B) \ ABRF(EVAL_USING_18) \ 
5265   DB37 25          
5265   DB38             
5266   DB38 5E                                       ABYT($5E) \ ABRF(EVAL_USING_17) \
5266   DB39 31          
5266   DB3A             
5267   DB3A 2C                                       ABYT($2C) \ ABRF(EVAL_USING_19) \ 
5267   DB3B 47          
5267   DB3C             
5268   DB3C 2E                                       ABYT($2E) \ ABRF(EVAL_USING_20) \ 
5268   DB3D 24          
5268   DB3E             
5269   DB3E 26                                       ABYT($26) \ ABRF(EVAL_USING_21)
5269   DB3F 38          
5270   DB40             
5271   DB40             EVAL_USING_23: ; $DB40
5272   DB40 FD 0A           POP  X
5273   DB42             
5274   DB42             EVAL_USING_14: ; $DB42
5275   DB42 68 0C           LDI  UH,$0C
5276   DB44             
5277   DB44             EVAL_USING_4: ; $DB44
5278   DB44 CD 4A           VMJ  ($4A) ;  ($4A)($25)
5279   DB46             
5280   DB46             EVAL_USING_16: ; $DB46
5281   DB46 BB 40           ORI  A,$40
5282   DB48 28              STA  UH
5283   DB49             
5284   DB49             EVAL_USING_15: ; $DB49
5285   DB49 15              LDA  (Y)
5286   DB4A DD              INC  A
5287   DB4B 87 01           BHS EVAL_USING_22 ; $DB4E
5288   DB4D 1E              STA  (Y)
5289   DB4E             
5290   DB4E             EVAL_USING_22: ; $DB4E
5291   DB4E 6C 80           CPI  UH,$80
5292   DB50 93 12           BCS EVAL_USING_23 ; $DB40
5293   DB52 A4              LDA  UH
5294   DB53 BB 01           ORI  A,$01
5295   DB55 28              STA  UH
5296   DB56             
5297   DB56             EVAL_USING_25: ; $DB56
5298   DB56 FD 0A           POP  X
5299   DB58 45              LIN  X
5300   DB59 88 2E           LOP  UL,EVAL_USING_24 ; $DB2D
5301   DB5B 9E 88           BCH EVAL_USING_12 ; $DAD5
5302   DB5D             
5303   DB5D             EVAL_USING_18: ; $DB5D
5304   DB5D BB 20           ORI  A,$20
5305   DB5F             
5306   DB5F             EVAL_USING_26: ; $DB5F
5307   DB5F 28              STA  UH
5308   DB60 9E 14           BCH EVAL_USING_22 ; $DB4E
5309   DB62             
5310   DB62             EVAL_USING_20: ; $DB62
5311   DB62 5E 08           CPI  YL,$08
5312   DB64 99 26           BZR EVAL_USING_23 ; $DB40
5313   DB66 54              INC  Y
5314   DB67 5B 01           ORI  (Y),$01
5315   DB69 9E 1D           BCH EVAL_USING_22 ; $DB4E
5316   DB6B             
5317   DB6B             EVAL_USING_17: ; $DB6B
5318   DB6B BB 80           ORI  A,$80
5319   DB6D 28              STA  UH
5320   DB6E 5A 08           LDI  YL,$08
5321   DB70 B5 02           LDI  A,$02
5322   DB72 17              CPA  (Y)
5323   DB73 91 1F           BCR EVAL_USING_25 ; $DB56
5324   DB75 1E              STA  (Y)
5325   DB76 9E 22           BCH EVAL_USING_25 ; $DB56
5326   DB78             
5327   DB78             EVAL_USING_21: ; $DB78
5328   DB78 5A 0A           LDI  YL,$0A
5329   DB7A 15              LDA  (Y)
5330   DB7B 99 3D           BZR EVAL_USING_23 ; $DB40
5331   DB7D FD 0A           POP  X
5332   DB7F B5 26           LDI  A,$26
5333   DB81 9E 69           BCH EVAL_USING_13 ; $DB1A
5334   DB83             
5335   DB83             EVAL_USING_19: ; $DB83
5336   DB83 BB 10           ORI  A,$10
5337   DB85 9E 28           BCH EVAL_USING_26 ; $DB5F
5338   DB87             
5339   DB87             
5340   DB87             
5341   DB87             ;------------------------------------------------------------------------------
5342   DB87             ; (26) Checks AR-X for BCD format and branches
5343   DB87             ; Branches to offset address P1 if a BCD value is present in AR-X. 
5344   DB87             ; If a CSI could be recognized in the AR-X, continue after the address following P1.
5345   DB87             ; 
5346   DB87             ;            Address:	DB87 (26)
5347   DB87             ;    Entry Parameter:	No
5348   DB87             ; Modified Registers:	X-Reg contains return address. U Reg, accumulator
5349   DB87             ;   Error conditions:	UH contains error code 11 if a BCD value is detected.
5350   DB87             ;------------------------------------------------------------------------------
5351   DB87             ISARXBCD: ; $DB87
5352   DB87 B5 B2           LDI  A,$B2
5353   DB89 A7 7A 04        CPA  (ARX + $04)
5354   DB8C 81 03           BCR ISARXBCD_9 ; $DB91
5355   DB8E BA DC F1        JMP  LOAD_NEXT_3 ; $DCF1
5356   DB91             
5357   DB91             ISARXBCD_9: ; $DB91
5358   DB91 68 11           LDI  UH,$11
5359   DB93 CD 48           VMJ  ($48) ; ($48)($24)
5360   DB95             
5361   DB95             
5362   DB95             ; Checks whether the address in the AR-X is within the string buffer. If OK, 
5363   DB95             ; resets the string buffer pointer. If not, set error 11 in UH and jump.
5364   DB95             ISARXBCD_6: ; $DB95
5365   DB95 4A 04           LDI  XL,$04
5366   DB97 48 7A           LDI  XH,$7A
5367   DB99 45              LIN  X
5368   DB9A B7 C1           CPI  A,$C1
5369   DB9C 91 0D           BCR ISARXBCD_9 ; $DB91
5370   DB9E 45              LIN  X
5371   DB9F B7 7B           CPI  A,$7B
5372   DBA1 C9 4C           VZR  ($4C) ; ($4C)($26)
5373   DBA3 05              LDA  (X)
5374   DBA4 B7 10           CPI  A,$10
5375   DBA6 C1 4C           VCR  ($4C) ; ($4C)($26)
5376   DBA8 B7 60           CPI  A,$60
5377   DBAA C3 4C           VCS  ($4C) ; ($4C)($26)
5378   DBAC AE 78 94        STA  (STR_BUF_PTR_L)
5379   DBAF CD 4C           VMJ  ($4C) ; ($4C)($26)
5380   DBB1             
5381   DBB1             ;------------------------------------------------------------------------------
5382   DBB1             ; (28) Checks in $788C to see if the variable was one-dimensional. If not, load 
5383   DBB1             ; error code 12 to UH and jump.
5384   DBB1             ;------------------------------------------------------------------------------
5385   DBB1 B5 01           LDI  A,$01 ; $DBB1
5386   DBB3             
5387   DBB3             ; Checks whether the variable is one-dimensional. Jump, if not
5388   DBB3             ISARXBCD_8: ; $DBB3
5389   DBB3 A7 78 8C        CPA  (NUMARGS)
5390   DBB6 CB 4C           VZS  ($4C) ; ($4C)($26) 
5391   DBB8 68 12           LDI  UH,$12
5392   DBBA CD 48           VMJ  ($48) ; ($48)
5393   DBBC             
5394   DBBC             
5395   DBBC             
5396   DBBC             ;------------------------------------------------------------------------------
5397   DBBC             ; (F4) Loads U-Reg with address from main memory
5398   DBBC             ; Address:	D8BC (F4)
5399   DBBC             ;          Parameter: D1 & D2 identify address to load into U-Reg.
5400   DBBC             ;
5401   DBBC             ; Modified Registers: U-Reg, Accumulator
5402   DBBC             ;   Error conditions: None
5403   DBBC             ;------------------------------------------------------------------------------
5404   DBBC             ADDR_2_UREG: ; $D8BC 
5405   DBBC FD 2A           POP  U
5406   DBBE 65              LIN  U
5407   DBBF 64              INC  U
5408   DBC0 FD A8           PSH  U
5409   DBC2 66              DEC  U
5410   DBC3 FD C8           PSH  A
5411   DBC5 25              LDA  (U)
5412   DBC6 2A              STA  UL
5413   DBC7 FD 8A           POP  A
5414   DBC9 28              STA  UH
5415   DBCA             
5416   DBCA             ISARXBCD_10: ; $DBCA
5417   DBCA 65              LIN  U
5418   DBCB FD C8           PSH  A
5419   DBCD 25              LDA  (U)
5420   DBCE 2A              STA  UL
5421   DBCF FD 8A           POP  A
5422   DBD1 28              STA  UH
5423   DBD2 9A              RTN
5424   DBD3             
5425   DBD3             ; Gets U-Reg from basic stack
5426   DBD3             ISARXBCD_7: ; $DBD3
5427   DBD3 EF 78 93 02     ADI  (BAS_PENOP_STK_L),$02
5428   DBD7 A5 78 93        LDA  (BAS_PENOP_STK_L)
5429   DBDA 2A              STA  UL
5430   DBDB 62              DEC  UL
5431   DBDC 68 7A           LDI  UH,$7A
5432   DBDE 9E 16           BCH ISARXBCD_10 ; $DBCA
5433   DBE0             
5434   DBE0             
5435   DBE0             ; Save U-Reg on the basic stack. Loads error code 0E to UH in case of stack 
5436   DBE0             ; overflow. If o.k. C = 0.
5437   DBE0             ISARXBCD_5: ; $DBE0
5438   DBE0 A5 78 93        LDA  (BAS_PENOP_STK_L)
5439   DBE3 0A              STA  XL
5440   DBE4 A5 78 92        LDA  (BAS_DATA_STK_L)
5441   DBE7 06              CPA  XL
5442   DBE8 83 45           BCS ISARXBCD_11 ; $DC2F
5443   DBEA 48 7A           LDI  XH,$7A
5444   DBEC 24              LDA  UL
5445   DBED 43              SDE  X
5446   DBEE A4              LDA  UH
5447   DBEF 43              SDE  X
5448   DBF0 04              LDA  XL
5449   DBF1 AE 78 93        STA  (BAS_PENOP_STK_L)
5450   DBF4 9A              RTN
5451   DBF5             
5452   DBF5             
5453   DBF5             ; Transfer AR-X to Basic Stack
5454   DBF5             ISARXBCD_1: ; $DBF5
5455   DBF5 A5 78 92        LDA  (BAS_DATA_STK_L)
5456   DBF8 0A              STA  XL
5457   DBF9 B7 38           CPI  A,$38
5458   DBFB 81 32           BCR ISARXBCD_11 ; $DC2F
5459   DBFD B3 06           ADI  A,$06
5460   DBFF 83 2E           BCS ISARXBCD_11 ; $DC2F
5461   DC01 A7 78 93        CPA  (BAS_PENOP_STK_L)
5462   DC04 83 29           BCS ISARXBCD_11 ; $DC2F
5463   DC06 EF 78 92 08     ADI  (BAS_DATA_STK_L),$08
5464   DC0A 48 7A           LDI  XH,$7A
5465   DC0C             
5466   DC0C             
5467   DC0C             ; Transfers AR-X from the memory cell pointed to by X-Reg. (8-bytes).
5468   DC0C             ISARXBCD_24: ; $DC0C
5469   DC0C FD 98           PSH  Y
5470   DC0E FD 5A           STX  Y
5471   DC10 4A 00           LDI  XL,$00
5472   DC12 48 7A           LDI  XH,$7A
5473   DC14 8E 10           BCH ISARXBCD_12 ; $DC26
5474   DC16             
5475   DC16             
5476   DC16             ;------------------------------------------------------------------------------
5477   DC16             ; (30) Get AR-X from Basic Stack $DC16
5478   DC16             ;------------------------------------------------------------------------------
5479   DC16 EF 78 92 F8     ADI  (BAS_DATA_STK_L),$F8
5480   DC1A A5 78 92        LDA  (BAS_DATA_STK_L)
5481   DC1D 0A              STA  XL
5482   DC1E 48 7A           LDI  XH,$7A
5483   DC20             
5484   DC20             ; Stores 8 bytes from address X-Reg to AR-X.
5485   DC20             ISARXBCD_2: ; $ DC20
5486   DC20 FD 98           PSH  Y
5487   DC22 5A 00           LDI  YL,$00
5488   DC24 58 7A           LDI  YH,$7A
5489   DC26             
5490   DC26             ISARXBCD_12: ; $ DC26
5491   DC26 6A 07           LDI  UL,$07
5492   DC28             
5493   DC28             ISARXBCD_13: ; $ DC28
5494   DC28 F5              TIN
5495   DC29 88 03           LOP  UL,ISARXBCD_13 ; $DC28
5496   DC2B FD 1A           POP  Y
5497   DC2D F9              REC
5498   DC2E 9A              RTN
5499   DC2F             
5500   DC2F             ISARXBCD_11: ; $ DC2F
5501   DC2F 68 0E           LDI  UH,$0E
5502   DC31 9A              RTN
5503   DC32             
5504   DC32             ISARXBCD_4: ; $ DC32
5505   DC32 FD 2A           POP  U
5506   DC34 FD 98           PSH  Y
5507   DC36             
5508   DC36 ED 78 80 10     BII  (DISPARAM),$10
5509   DC3A 8B 0D           BZS ISARXBCD_15 ; $DC49
5510   DC3C 62              DEC  UL
5511   DC3D 8B 05           BZS ISARXBCD_16 ; $DC44
5512   DC3F BE D2 D3        SJP  (BCD_Y2ARX_43) ; $D2D3
5513   DC42 8E 5C           BCH ISARXBCD_17 ; $DCA0
5514   DC44             
5515   DC44             ISARXBCD_16: ; $ DC44
5516   DC44 BE D2 B3        SJP  ($D2B3)
5517   DC47 8E 57           BCH ISARXBCD_17 ; $DCA0
5518   DC49             
5519   DC49             ISARXBCD_15: ; $ DC49
5520   DC49 ED 78 8A E0     BII  (BREAKPARAM),$E0
5521   DC4D 8B 05           BZS ISARXBCD_18 ; $DC54
5522   DC4F BE D2 4E        SJP  (BCD_Y2ARX_44) ; $D24E
5523   DC52 8E 0A           BCH ISARXBCD_19 ; $DC5E
5524   DC54             
5525   DC54             ISARXBCD_18: ; $ DC54
5526   DC54 CC              VEJ  (CC) \ ABYTL(ERR_LINE_H) ; $78B4
5526   DC55 B4          
5527   DC56 AB 78 B5        ORA  (ERR_LINE_L)
5528   DC59 8B 38           BZS ISARXBCD_20 ; $DC93
5529   DC5B BE D2 46        SJP  (BCD_Y2ARX_45) ; $D246
5530   DC5E             
5531   DC5E             ISARXBCD_19: ; $ DC5E
5532   DC5E 81 2F           BCR ISARXBCD_21 ; $DC8F
5533   DC60 B5 54           LDI  A,$54
5534   DC62 ED 76 4F 20     BII  (DISP_BUFF + $4F),$20
5535   DC66 C9 44           VZR  ($44) ; ($44)($22)
5536   DC68 BE EE 80        SJP  (SAVELCD2BUF)
5537   DC6B CC              VEJ  (CC) \ ABYTL(DISPARAM) ; $7880)
5537   DC6C 80          
5538   DC6D FD C8           PSH  A
5539   DC6F B5 54           LDI  A,$54
5540   DC71 AE 78 80        STA  (DISPARAM)
5541   DC74 BE E8 CA        SJP  (PRGMDISP)
5542   DC77 E9 7B 0E BF     ANI  (CURS_CTRL),$BF
5543   DC7B BE E2 3D        SJP  (WAITNOKEYS)
5544   DC7E BE EE 99        SJP  (BUF2LCD)
5545   DC81 FD 8A           POP  A
5546   DC83 B9 DF           ANI  A,$DF
5547   DC85 AE 78 80        STA  (DISPARAM)
5548   DC88 BF C0           BII  A,$C0
5549   DC8A 8B 03           BZS ISARXBCD_21 ; $DC8F
5550   DC8C F2              VEJ  (F2)
5551   DC8D CD 42           VMJ  ($42) ; ($42)($21)
5552   DC8F             
5553   DC8F             ISARXBCD_21: ; $DC8F
5554   DC8F FD 1A           POP  Y
5555   DC91 CD 46           VMJ  ($46) ; ($46)($23)
5556   DC93             
5557   DC93             ISARXBCD_20: ; $DC93
5558   DC93 62              DEC  UL
5559   DC94 91 07           BCR ISARXBCD_21 ; $DC8F
5560   DC96 8B 05           BZS ISARXBCD_22 ; $DC9D
5561   DC98 BE D2 77        SJP  (BCD_Y2ARX_46) ; $D277
5562   DC9B 8E 03           BCH ISARXBCD_17 ; $DCA0
5563   DC9D             
5564   DC9D             ISARXBCD_22: ; $DC9D
5565   DC9D BE D2 6F        SJP  (BCD_Y2ARX_47) ; $D26F
5566   DCA0             
5567   DCA0             ISARXBCD_17: ; $DCA0
5568   DCA0 91 13           BCR ISARXBCD_21 ; $DC8F
5569   DCA2 B5 14           LDI  A,$14
5570   DCA4 CD 44           VMJ  ($44) ; ($44)($22)
5571   DCA6             
5572   DCA6             
5573   DCA6             ;------------------------------------------------------------------------------
5574   DCA6             ; (2C) Passes function result to AR-X. $DCA6
5575   DCA6             ;------------------------------------------------------------------------------
5576   DCA6 B5 01           LDI  A,$01
5577   DCA8 AE 78 89        STA  ($7889)
5578   DCAB BA D6 E5        JMP  DEC2HEX_127 ; $D6E5
5579   DCAE             
5580   DCAE             ; Compares accumulator with pointer to the input buffer
5581   DCAE             ISARXBCD_3: ; $DCAE
5582   DCAE DF              DEC  A
5583   DCAF A7 78 8B        CPA  (INBUFPTR_L)
5584   DCB2 9A              RTN
5585   DCB3 80 00 FF        .BYTE $80,$00,$FF
5586   DCB6             
5587   DCB6             
5588   DCB6             ;------------------------------------------------------------------------------
5589   DCB6             ; (02) Checks if next character in main memory in specific ASCII code range
5590   DCB6             ; Address:	DCB6 (02)
5591   DCB6             ; D1 = Smallest value within the interval
5592   DCB6             ; D2 = Smallest value above the interval
5593   DCB6             ; D3 = Distance 
5594   DCB6             ; 
5595   DCB6             ;    Entry Parameter:	Y-Reg points to character to be tested. U-Reg contains the character loaded from memory in UL.
5596   DCB6             ; Modified Registers:	X-Reg return address, accumulators, Y-Reg points to the next character
5597   DCB6             ;   Error conditions:	A token or character read outside of the interval continues the program at offset D3
5598   DCB6             ;------------------------------------------------------------------------------
5599   DCB6             CHAR_MEM_N_RANGE_: ; $DCB6
5600   DCB6 C0              VEJ  (C0) ; $DCB6
5601   DCB7                 
5602   DCB7             
5603   DCB7             
5604   DCB7             ;------------------------------------------------------------------------------
5605   DCB7             ; (00) Checks whether character in U-Reg in specific ASCII code range
5606   DCB7             ;            Address: DCB7 (00)
5607   DCB7             ;                     D1 = smallest value within the interval
5608   DCB7             ;                     D2 = smallest value above the interval
5609   DCB7             ;                     D3 = distance address
5610   DCB7             ; 
5611   DCB7             ;    Entry Parameter: U-Reg contains character loaded from memory in UL.
5612   DCB7             ; Modified Registers: X-Reg return address, accumulator
5613   DCB7             ;   Error conditions: Token/caracter read outside interval continues program at offset D3
5614   DCB7             ;------------------------------------------------------------------------------
5615   DCB7             CHAR_U_N_RANGE_: ; $DCB7
5616   DCB7 FD 0A           POP  X 
5617   DCB9 A4              LDA  UH
5618   DCBA 89 39           BZR LOAD_NEXT_4 ; $DCF5
5619   DCBC 24              LDA  UL
5620   DCBD F7              CIN
5621   DCBE 81 36           BCR LOAD_NEXT_2 ; $DCF6
5622   DCC0 F7              CIN
5623   DCC1 81 23           BCR LOAD_NEXT_5 ; $DCE6
5624   DCC3 8E 3E           BCH LOAD_NEXT_6 ; $DD03
5625   DCC5             
5626   DCC5             
5627   DCC5             ;------------------------------------------------------------------------------
5628   DCC5             ; (C8) Branch if not end of command sequence or end of line
5629   DCC5             ;            Address: DCC5 (C8)
5630   DCC5             ;                 D1: Distance Address
5631   DCC5             ;    Entry Parameter: None
5632   DCC5             ; Modified Registers: X-Reg contains return address
5633   DCC5             ;   Error conditions: Carry-Flag = 1 if an end of the command sequence was 
5634   DCC5             ;                     recognized in a Basic program (:).
5635   DCC5             ;------------------------------------------------------------------------------
5636   DCC5             CHECK_AT_END: ; $DCC5 (C8)
5637   DCC5 C0              VEJ  (C0)
5638   DCC6 D8              VEJ  (D8)
5639   DCC7 8B 04           BZS ISARXBCD_23 ; $DCCD
5640   DCC9 6E 3A           CPI  UL,$3A
5641   DCCB 8B 24           BZS LOAD_NEXT_3 ; $DCF1
5642   DCCD             
5643   DCCD             ISARXBCD_23: ; $DCCD
5644   DCCD 6E 0D           CPI  UL,$0D
5645   DCCF F9              REC
5646   DCD0 8B 1F           BZS LOAD_NEXT_3 ; $DCF1
5647   DCD2 8E 2D           BCH LOAD_NEXT_7 ; $DD01
5648   DCD4             
5649   DCD4             
5650   DCD4             ;------------------------------------------------------------------------------
5651   DCD4             ; (C2) Checks for the presence of a specific character or token. If found,  
5652   DCD4             ; a branch is made to the offset address.
5653   DCD4             ;            Address:	1. DCD4 (C2) with character/token loading
5654   DCD4             ;                       2. DCD5 (C4) character/token already in U-Reg.
5655   DCD4             ;                       D1, D2: character or token expected.
5656   DCD4             ;                       D3: Distance Address
5657   DCD4             ; 
5658   DCD4             ;    Entry Parameter: Y-Reg points to main memory
5659   DCD4             ; Modified Registers: Y-Reg has been incremented.
5660   DCD4             ;   Error conditions: None
5661   DCD4             ;------------------------------------------------------------------------------ 
5662   DCD4             LOAD_NEXT_C2: ; $DCD4 (C2)
5663   DCD4 C0              VEJ  (C0)
5664   DCD5             
5665   DCD5             ;Checks tokens/characters in U-Reg with data bytes If not equal, branch.
5666   DCD5             LOAD_NEXT_C4: ; $DCD5 (C4)
5667   DCD5 FD 0A           POP  X
5668   DCD7 45              LIN  X
5669   DCD8 B7 E0           CPI  A,$E0
5670   DCDA 83 03           BCS LOAD_NEXT_8 ; $DCDF
5671   DCDC 46              DEC  X
5672   DCDD B5 00           LDI  A,$00
5673   DCDF             
5674   DCDF             LOAD_NEXT_8: ; $DCDF
5675   DCDF A6              CPA  UH
5676   DCE0 89 14           BZR LOAD_NEXT_2 ; $DCF6
5677   DCE2 45              LIN  X
5678   DCE3 26              CPA  UL
5679   DCE4 89 1D           BZR LOAD_NEXT_6 ; $DD03
5680   DCE6             
5681   DCE6             LOAD_NEXT_5: ; $DCE6
5682   DCE6 44              INC  X
5683   DCE7 FD 5E           STX  P
5684   DCE9 FD 0A           POP  X
5685   DCEB 8E 04           BCH LOAD_NEXT_3 ; $DCF1
5686   DCED             
5687   DCED             
5688   DCED             
5689   DCED             
5690   DCED             ;------------------------------------------------------------------------------
5691   DCED             ; (4C) Return to a main program (after the last data byte)
5692   DCED             ; Address:	(4C) DCE9
5693   DCED             ;   Entry parameters: The stack must show an address of main program pointing
5694   DCED             ;                     to the last of data bytes following the subprogram call.
5695   DCED             ; 
5696   DCED             ; Modified registers: X-Reg contains return address
5697   DCED             ;   Error conditions: None
5698   DCED             ;------------------------------------------------------------------------------
5699   DCED             RTN_AFTER_DATA: ; $DCE9
5700   DCED FD 0A           POP  X
5701   DCEF FD 1A           POP  Y
5702   DCF1             
5703   DCF1             ;------------------------------------------------------------------------------
5704   DCF1             ; (4E) Return to main program (after data byte). Restore Basic program pointer
5705   DCF1             ; Address:	(4E) DCED
5706   DCF1             ;   Entry parameters: As (4C). In addition, Basic program pointer is on stack.
5707   DCF1             ; 
5708   DCF1             ; Modified registers: Basic program pointer (Y-Reg) restored, else like (4C).
5709   DCF1             ;   Error conditions: None
5710   DCF1             ;------------------------------------------------------------------------------
5711   DCF1             LOAD_NEXT_3: ; $DCF1
5712   DCF1 FD 0A           POP  X
5713   DCF3 9E 0F           BCH LOAD_NEXT_5 ; $DCE6
5714   DCF5             
5715   DCF5             LOAD_NEXT_4: ; $DCF5
5716   DCF5 44              INC  X
5717   DCF6             
5718   DCF6             LOAD_NEXT_2: ; $DCF6
5719   DCF6 44              INC  X
5720   DCF7 8E 0A           BCH LOAD_NEXT_6 ; $DD03
5721   DCF9             
5722   DCF9             ;------------------------------------------------------------------------------
5723   DCF9             ; (48) Return to a main program (relative jump)
5724   DCF9             ;            Address: (48) DCF9
5725   DCF9             ;   Entry parameters: The stack must show an address of the main program that 
5726   DCF9             ;                     points to last of data bytes following subprogram call.
5727   DCF9             ; 
5728   DCF9             ; Modified registers: X-Reg contains address where the main program continues.
5729   DCF9             ;   Error conditions: None
5730   DCF9             ;------------------------------------------------------------------------------
5731   DCF9             RTN_TO_MAIN: ; $DCF9
5732   DCF9 FD 0A           POP  X
5733   DCFB 8E 04           BCH LOAD_NEXT_7 ; $DD01
5734   DCFD             
5735   DCFD             ; (4A) Return to distance address. Restore Y-Reg $DCFD
5736   DCFD FD 0A           POP  X
5737   DCFF FD 1A           POP  Y
5738   DD01             
5739   DD01             LOAD_NEXT_7: ; $DD01
5740   DD01 FD 0A           POP  X
5741   DD03             
5742   DD03             LOAD_NEXT_6: ; $DD03
5743   DD03 45              LIN  X
5744   DD04 FD CA           ADR  X
5745   DD06 FD 5E           STX  P
5746   DD08             
5747   DD08             ; (C0) Load next character/token into U-REG
5748   DD08 68 00           LDI  UH,$00
5749   DD0A 55              LIN  Y
5750   DD0B B7 E0           CPI  A,$E0
5751   DD0D 81 02           BCR LOAD_NEXT_9 ; $DD11
5752   DD0F 28              STA  UH
5753   DD10 55              LIN  Y
5754   DD11             
5755   DD11             LOAD_NEXT_9: ; $DD11
5756   DD11 2A              STA  UL
5757   DD12 9A              RTN
5758   DD13             
5759   DD13             ;------------------------------------------------------------------------------
5760   DD13             ; (C6) $$DD13 Decrements Y-Reg for tokens in U-Reg by 2-bytes, or by 1-byte 
5761   DD13             ; for characters
5762   DD13 6C 00           CPI  UH,$00
5763   DD15 8B 01           BZS LOAD_NEXT_10 ; $DD18
5764   DD17 56              DEC  Y
5765   DD18             
5766   DD18             LOAD_NEXT_10: ; $DD18
5767   DD18 56              DEC  Y
5768   DD19 9A              RTN
5769   DD1A             
5770   DD1A             
5771   DD1A             
5772   DD1A             ;------------------------------------------------------------------------------
5773   DD1A             ; (D2) Convert AR-X with subroutine DD2D (10) if it is integer value.
5774   DD1A             ; Else if address of a string is there, a branch is made to offset address D1.
5775   DD1A             ;            Address:	DD1A (D2)
5776   DD1A             ; 	                    D1: Distance Address if AR-X contains string address
5777   DD1A             ;                       D2: Data byte for possibly called subprogram DD2D (10)
5778   DD1A             ;
5779   DD1A             ;    Entry Parameter:	None
5780   DD1A             ; Modified Registers:	X-Reg, U-Reg, Accumulator
5781   DD1A             ;   Error conditions:	None
5782   DD1A             ;------------------------------------------------------------------------------
5783   DD1A             CONVERT_ARX_IF_INT: ; $DD1A (D2)
5784   DD1A A5 7A 04        LDA  (ARX + $04)
5785   DD1D B7 B2           CPI  A,$B2
5786   DD1F 81 02           BCR LOAD_NEXT_11 ; $DD23
5787   DD21 99 22           BZR LOAD_NEXT_7 ; $DD01
5788   DD23             
5789   DD23             LOAD_NEXT_11: ; $DD23
5790   DD23 FD 0A           POP  X
5791   DD25 44              INC  X
5792   DD26 91 42           BCR LOAD_NEXT_5 ; $DCE6
5793   DD28 FD 88           PSH  X
5794   DD2A F4              VEJ  (F4) \ AWRD(ARX + $05)
5794   DD2B 7A 05       
5795   DD2D                 
5796   DD2D             
5797   DD2D             
5798   DD2D             ; (10)  Convert U-Reg according to data bytes
5799   DD2D             ;       00: Save U-Reg to AR-X in BCD format. (0-65535)
5800   DD2D             ;       40: Save to (Y-Reg) in ASCII
5801   DD2D             ;       8D: Save U-Reg in AR-X as BCD. (integer number)
5802   DD2D             ;       E0: Save to Y-Reg with 2 digits in ASCII
5803   DD2D FD 28           LDX  U
5804   DD2F             
5805   DD2F             ; $DD2F Like subroutine (10-DD2D).
5806   DD2F             LOAD_NEXT_1:
5807   DD2F FD 2A           POP  U
5808   DD31 65              LIN  U
5809   DD32 FD A8           PSH  U
5810   DD34 FD 98           PSH  Y
5811   DD36 FD C8           PSH  A
5812   DD38 FD 88           PSH  X
5813   DD3A EC              VEJ  (EC)
5814   DD3B BE F7 5B        SJP  (CLR_SM_ARX3)
5815   DD3E EB 7A 0C 10     ORI  (ARZ + $04),$10
5816   DD42 FD 2A           POP  U
5817   DD44 FD 8A           POP  A
5818   DD46 D9              SHL
5819   DD47 FD C8           PSH  A
5820   DD49 58 7A           LDI  YH,$7A
5821   DD4B 81 0B           BCR LOAD_NEXT_12 ; $DD58
5822   DD4D 6C 80           CPI  UH,$80
5823   DD4F 81 07           BCR LOAD_NEXT_12 ; $DD58
5824   DD51 BE DA A8        SJP  (TWOSCOMP)
5825   DD54 EB 7A 01 80     ORI  (ARX + $01),$80
5826   DD58             
5827   DD58             LOAD_NEXT_12: ; $DD58
5828   DD58 4A 04           LDI  XL,$04
5829   DD5A 5A 0C           LDI  YL,$0C
5830   DD5C 24              LDA  UL
5831   DD5D 89 38           BZR LOAD_NEXT_13 ; $DD97
5832   DD5F A4              LDA  UH
5833   DD60 89 36           BZR LOAD_NEXT_14 ; $DD98
5834   DD62 04              LDA  XL
5835   DD63 AE 7A 00        STA  (ARX)
5836   DD66 BE F6 5D        SJP  (ARX2BCD_ABS)
5837   DD69 A5 7A 00        LDA  (ARX)
5838   DD6C 2A              STA  UL
5839   DD6D FD 8A           POP  A
5840   DD6F D9              SHL
5841   DD70 FD 1A           POP  Y
5842   DD72 81 22           BCR LOAD_NEXT_15 ; $DD96
5843   DD74 4A 01           LDI  XL,$01
5844   DD76 D9              SHL
5845   DD77 81 0E           BCR LOAD_NEXT_16 ; $DD87
5846   DD79 47              LDE  X
5847   DD7A D9              SHL
5848   DD7B B5 20           LDI  A,$20
5849   DD7D 81 02           BCR LOAD_NEXT_17 ; $DD81
5850   DD7F B5 2D           LDI  A,$2D
5851   DD81             
5852   DD81             LOAD_NEXT_17: ; $DD81
5853   DD81 51              SIN  Y
5854   DD82 24              LDA  UL
5855   DD83 6A 01           LDI  UL,$01
5856   DD85 8B 0A           BZS LOAD_NEXT_18 ; $DD91
5857   DD87             
5858   DD87             LOAD_NEXT_16: ; $DD87
5859   DD87 4A 04           LDI  XL,$04
5860   DD89 D7              DRL  (X)
5861   DD8A 46              DEC  X
5862   DD8B D7              DRL  (X)
5863   DD8C 46              DEC  X
5864   DD8D D7              DRL  (X)
5865   DD8E F1              AEX
5866   DD8F B9 0F           ANI  A,$0F
5867   DD91             
5868   DD91             LOAD_NEXT_18: ; $DD91
5869   DD91 BB 30           ORI  A,$30
5870   DD93 51              SIN  Y
5871   DD94 88 0F           LOP  UL,LOAD_NEXT_16 ; $DD87
5872   DD96             
5873   DD96             LOAD_NEXT_15: ; $DD96
5874   DD96 9A              RTN
5875   DD97             
5876   DD97             LOAD_NEXT_13: ; $DD97
5877   DD97 A4              LDA  UH
5878   DD98             
5879   DD98             LOAD_NEXT_14: ; $DD98
5880   DD98 D5              SHR
5881   DD99 28              STA  UH
5882   DD9A 24              LDA  UL
5883   DD9B D1              ROR
5884   DD9C 2A              STA  UL
5885   DD9D 81 0B           BCR LOAD_NEXT_19 ; $DDAA
5886   DD9F F9              REC
5887   DDA0 57              LDE  Y
5888   DDA1 8C              DCA  (X)
5889   DDA2 43              SDE  X
5890   DDA3 57              LDE  Y
5891   DDA4 8C              DCA  (X)
5892   DDA5 43              SDE  X
5893   DDA6 55              LIN  Y
5894   DDA7 8C              DCA  (X)
5895   DDA8 0E              STA  (X)
5896   DDA9 54              INC  Y
5897   DDAA             
5898   DDAA             LOAD_NEXT_19: ; $DDAA
5899   DDAA 15              LDA  (Y)
5900   DDAB 9C              DCA  (Y)
5901   DDAC 53              SDE  Y
5902   DDAD 15              LDA  (Y)
5903   DDAE 9C              DCA  (Y)
5904   DDAF 53              SDE  Y
5905   DDB0 15              LDA  (Y)
5906   DDB1 9C              DCA  (Y)
5907   DDB2 1E              STA  (Y)
5908   DDB3 9E 5D           BCH LOAD_NEXT_12 ; $DD58
5909   DDB5             
5910   DDB5             
5911   DDB5             ;------------------------------------------------------------------------------
5912   DDB5             ; (F6) U-Reg transferred to main memory
5913   DDB5             ;            Address: DDB5 (F6)
5914   DDB5             ;          Parameter: D1 & D2 identify address to which U-Reg is transferred
5915   DDB5             ; 
5916   DDB5             ; Modified Registers: X-Reg contains address of 2nd memory cell, accumulator
5917   DDB5             ;   Error conditions: None
5918   DDB5             ;------------------------------------------------------------------------------
5919   DDB5             UREG_2_MEM: ; $DDB5
5920   DDB5 FD 0A           POP  X
5921   DDB7 45              LIN  X
5922   DDB8 44              INC  X
5923   DDB9 FD 88           PSH  X
5924   DDBB 46              DEC  X
5925   DDBC FD C8           PSH  A
5926   DDBE 05              LDA  (X)
5927   DDBF 0A              STA  XL
5928   DDC0 FD 8A           POP  A
5929   DDC2 08              STA  XH
5930   DDC3 A4              LDA  UH
5931   DDC4 41              SIN  X
5932   DDC5 24              LDA  UL
5933   DDC6 0E              STA  (X)
5934   DDC7 9A              RTN
5935   DDC8             
5936   DDC8             
5937   DDC8             
5938   DDC8             ;------------------------------------------------------------------------------
5939   DDC8             ; (CC) Load X-Reg with 16-bit value from memory page 78XX
5940   DDC8             ;            Address: DDC8 (CC)
5941   DDC8             ;                     D1: Low byte of address in memory page 78XX
5942   DDC8             ;   Entry parameters: None
5943   DDC8             ;
5944   DDC8             ; Modified registers: X-Reg contains value from (7801 f.). Accumulator includes (78D1)
5945   DDC8             ;   Error conditions: None
5946   DDC8             ;------------------------------------------------------------------------------
5947   DDC8 FD 0A           POP  X
5948   DDCA 45              LIN  X
5949   DDCB FD 88           PSH  X
5950   DDCD 0A              STA  XL
5951   DDCE 48 78           LDI  XH,$78
5952   DDD0 45              LIN  X
5953   DDD1 FD C8           PSH  A
5954   DDD3 05              LDA  (X)
5955   DDD4 0A              STA  XL
5956   DDD5 FD 8A           POP  A
5957   DDD7 08              STA  XH
5958   DDD8 9A              RTN
5959   DDD9             
5960   DDD9             
5961   DDD9             
5962   DDD9             ;------------------------------------------------------------------------------
5963   DDD9             ; (08) Transfers the result from AR-X to a fixed variable or clock module
5964   DDD9             ;            Address: DDD9 (08)
5965   DDD9             ;                     Distance Address
5966   DDD9             ;   Entry parameters: AR-X contains BCD value, integer value or CSI (7883 ff.) 
5967   DDD9             ;                     contains pointer of prepared variable with bit 7 of 
5968   DDD9             ;                     address set if variable is not already set up in variable 
5969   DDD9             ;                     memory. If there is a pointer greater than DB00 in 
5970   DDD9             ;                     (7883 f.), the clock module is written with value from 
5971   DDD9             ;                     AR-X. The subprogram checks whether the variable type of 
5972   DDD9             ;                     prepared variable (output variable) matches that in AR-X.
5973   DDD9             ; 
5974   DDD9             ; Modified registers: X-Reg contains return address: Y-Reg pointer to main memory.
5975   DDD9             ;   Error conditions: If an error is detected (wrong format, insufficient variable memory or invalid value for the clock module), the process continues with the distance address D1.
5976   DDD9             ;------------------------------------------------------------------------------
5977   DDD9             ARX_2_VAR: ; $DDD9
5978   DDD9 FD 98           PSH  Y
5979   DDDB CD 26           VMJ  ($26)
5980   DDDD 00              SBC  XL
5981   DDDE D1              ROR
5982   DDDF AD 78 85        EOR  (CURVARTYPE) ; $7885
5983   DDE2 D9              SHL
5984   DDE3 68 07           LDI  UH,$07
5985   DDE5 C3 4A           VCS  ($4A) ;($4A)($25)
5986   DDE7 CC              VEJ  (CC) \ ABYTL(CURVARADD_H) ; $7883
5986   DDE8 83          
5987   DDE9 4C 80           CPI  XH,$80
5988   DDEB 81 0B           BCR LOAD_NEXT_20 ; $DDF8
5989   DDED 4C DB           CPI  XH,$DB
5990   DDEF 83 2C           BCS LOAD_NEXT_21 ;  $DE1D
5991   DDF1 BE D3 71        SJP  (SRCHPRGLINE_16) ; $D371
5992   DDF4 C3 4A           VCS  ($4A) ;($4A)($25)
5993   DDF6 FD 18           LDX  Y
5994   DDF8             
5995   DDF8             LOAD_NEXT_20: ; $DDF8
5996   DDF8 ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
5997   DDFC 8B 05           BZS LOAD_NEXT_22 ; $DE03
5998   DDFE BE DC 0C        SJP  (ISARXBCD_24) ; $DC0C
5999   DE01 CD 4E           VMJ  ($4E) ; ($4E)($27)
6000   DE03             
6001   DE03             LOAD_NEXT_22: ; $DE03
6002   DE03 FD 5A           STX  Y
6003   DE05 DC              VEJ  (DC)
6004   DE06 FB              SEC
6005   DE07 A1 78 85        SBC  (CURVARTYPE); $7885
6006   DE0A 68 00           LDI  UH,$00
6007   DE0C 81 06           BCR LOAD_NEXT_23 ; $DE14
6008   DE0E A5 78 85        LDA  (CURVARTYPE); $7885
6009   DE11 2A              STA  UL
6010   DE12 68 01           LDI  UH,$01
6011   DE14             
6012   DE14             LOAD_NEXT_23: ; $DE14
6013   DE14 BE D0 49        SJP  (XREG2YREG)
6014   DE17 A4              LDA  UH
6015   DE18 89 01           BZR LOAD_NEXT_24 ; $DE1B
6016   DE1A 1E              STA  (Y)
6017   DE1B             
6018   DE1B             LOAD_NEXT_24: ; $DE1B
6019   DE1B CD 4E           VMJ  ($4E) ; ($4E)($27)
6020   DE1D             
6021   DE1D             LOAD_NEXT_21: ; $DE1D
6022   DE1D E6              VEJ  (E6)
6023   DE1E A5 7A 00        LDA  (ARX)
6024   DE21 BF 80           BII  A,$80
6025   DE23 89 08           BZR LOAD_NEXT_25 ; $DE2D
6026   DE25 B1 06           SBI  A,$06
6027   DE27 81 0C           BCR LOAD_NEXT_26 ; $DE35
6028   DE29             
6029   DE29             LOAD_NEXT_31: ; $DE29
6030   DE29 68 17           LDI  UH,$17
6031   DE2B CD 4A           VMJ  ($4A) ; ($4A)($25)
6032   DE2D             
6033   DE2D             LOAD_NEXT_25: ; $DE2D
6034   DE2D B7 FC           CPI  A,$FC
6035   DE2F 68 F6           LDI  UH,$F6
6036   DE31 81 03           BCR LOAD_NEXT_27 ; $DE36
6037   DE33 B3 F9           ADI  A,$F9
6038   DE35             
6039   DE35             LOAD_NEXT_26: ; $DE35
6040   DE35 28              STA  UH
6041   DE36             
6042   DE36             LOAD_NEXT_27: ; $DE36
6043   DE36 48 7A           LDI  XH,$7A
6044   DE38             
6045   DE38             LOAD_NEXT_29: ; $DE38
6046   DE38 4A 02           LDI  XL,$02
6047   DE3A FD 60           INC  UH
6048   DE3C 83 0A           BCS LOAD_NEXT_28 ; $DE48
6049   DE3E 6A 04           LDI  UL,$04
6050   DE40 B5 00           LDI  A,$00
6051   DE42             
6052   DE42             LOAD_NEXT_30: ; $DE42
6053   DE42 D3              DRR  (X)
6054   DE43 44              INC  X
6055   DE44 88 04           LOP  UL,LOAD_NEXT_30 ; $DE42
6056   DE46 9E 10           BCH LOAD_NEXT_29 ; $DE38
6057   DE48             
6058   DE48             LOAD_NEXT_28: ; $DE48
6059   DE48 05              LDA  (X)
6060   DE49 B7 13           CPI  A,$13
6061   DE4B 93 24           BCS LOAD_NEXT_31 ; $DE29
6062   DE4D B7 10           CPI  A,$10
6063   DE4F 81 02           BCR LOAD_NEXT_32 ; $DE53
6064   DE51 B3 09           ADI  A,$09
6065   DE53             
6066   DE53             LOAD_NEXT_32: ; $DE53
6067   DE53 B9 0F           ANI  A,$0F
6068   DE55 F1              AEX
6069   DE56 0E              STA  (X)
6070   DE57 BE E5 9A        SJP  (ARX2TIME)
6071   DE5A CD 56           VMJ  ($56) ; ($56)($2B)
6072   DE5C CD 4E           VMJ  ($4E) ; ($4E)($27)
6073   DE5E             
6074   DE5E             
6075   DE5E             
6076   DE5E             
6077   DE5E             ;------------------------------------------------------------------------------
6078   DE5E             ; (0A) Variable, whose address is in AR-X, is transferred numerically to AR-X, 
6079   DE5E             ;      if string: determine length
6080   DE5E             ;            Address: DE5E (0A)
6081   DE5E             ;   Entry parameters: AR-X must contain the CSI of a variable. If the clock 
6082   DE5E             ;                     module is to be read out, the high byte of the address 
6083   DE5E             ;                     must be greater than DB.
6084   DE5E             ; 
6085   DE5E             ; Modified registers: Variable was transferred to AR-X. X-Reg points to the 1st
6086   DE5E             ;                     byte after the transmitted value. Y Reg on 7A08
6087   DE5E             ;   Error conditions: Like (CE)
6088   DE5E             ;------------------------------------------------------------------------------
6089   DE5E             VAR_2_ARX: ; $DE5E
6090   DE5E DC              VEJ  (DC) 
6091   DE5F 4C 80           CPI  XH,$80
6092   DE61 B9 80           ANI  A,$80
6093   DE63 83 15           BCS LOAD_NEXT_33 ; $DE7A
6094   DE65 8B 03           BZS LOAD_NEXT_34 ; $DE6A
6095   DE67 BA DC 20        JMP  ISARXBCD_2 ; $DC20
6096   DE6A             
6097   DE6A             LOAD_NEXT_34: ; $DE6A
6098   DE6A FD 88           PSH  X
6099   DE6C 62              DEC  UL
6100   DE6D 68 00           LDI  UH,$00
6101   DE6F             
6102   DE6F             LOAD_NEXT_36: ; $DE6F
6103   DE6F 45              LIN  X
6104   DE70 8B 04           BZS LOAD_NEXT_35 ; $DE76
6105   DE72 FD 60           INC  UH
6106   DE74 88 07           LOP  UL,LOAD_NEXT_36 ; $DE6F
6107   DE76             
6108   DE76             LOAD_NEXT_35: ; $DE76
6109   DE76 FD 0A           POP  X
6110   DE78 8E 34           BCH BCMD_TIME_9 ; $DEAE
6111   DE7A             
6112   DE7A             LOAD_NEXT_33: ; $DE71
6113   DE7A 8B 33           BZS BCMD_TIME_10 ; $DEAF
6114   DE7C 4C DB           CPI  XH,$DB
6115   DE7E 83 02           BCS BCMD_TIME
6116   DE80 EC              VEJ  (EC)
6117   DE81 9A              RTN
6118   DE82             
6119   DE82             
6120   DE82             
6121   DE82             ; Basic command TIME
6122   DE82             BCMD_TIME: ; $DE82
6123   DE82 EC              VEJ  (EC)
6124   DE83 BE E5 B4        SJP  (TIME2ARX)
6125   DE86 4A 02           LDI  XL,$02
6126   DE88 B5 00           LDI  A,$00
6127   DE8A D3              DRR  (X)
6128   DE8B B7 A0           CPI  A,$A0
6129   DE8D 81 02           BCR BCMD_TIME_11 ; $DE91
6130   DE8F 4F 06           ADI  (X),$06
6131   DE91             
6132   DE91             BCMD_TIME_11: ; $DE91
6133   DE91 EB 7A 00 05     ORI  (ARX),$05
6134   DE95 E8              VEJ  (E8)
6135   DE96 9A              RTN
6136   DE97             
6137   DE97             
6138   DE97             ; (0C) $DE97 Read the length of the string from U-Reg and creates CSI in AR-X.
6139   DE97 6A 50           LDI  UL,$50
6140   DE99 FD 18           LDX  Y
6141   DE9B 68 00           LDI  UH,$00
6142   DE9D             
6143   DE9D             BCMD_TIME_13: ; $DE9D
6144   DE9D 62              DEC  UL
6145   DE9E 81 0E           BCR BCMD_TIME_9 ; $DEAE
6146   DEA0 55              LIN  Y
6147   DEA1 B7 22           CPI  A,$22
6148   DEA3 8B 09           BZS BCMD_TIME_9 ; $DEAE
6149   DEA5 B7 0D           CPI  A,$0D
6150   DEA7 8B 04           BZS BCMD_TIME_12 ; $DEAD
6151   DEA9 FD 60           INC  UH
6152   DEAB 9E 10           BCH BCMD_TIME_13 ; $DE9D
6153   DEAD             
6154   DEAD             BCMD_TIME_12: ; $DEAD
6155   DEAD 56              DEC  Y
6156   DEAE             
6157   DEAE             BCMD_TIME_9: ; $DEAE
6158   DEAE A4              LDA  UH
6159   DEAF             
6160   DEAF             
6161   DEAF             
6162   DEAF             ;------------------------------------------------------------------------------
6163   DEAF             ; (24) Creates CSI in AR-X
6164   DEAF             ;            Address: DEAF (24)
6165   DEAF             ;          Parameter: X-Reg contains the start address of the string
6166   DEAF             ;                     Accumulator contains the string length
6167   DEAF             ; Modified Registers: (7A04) = D0
6168   DEAF             ;                     (7A05 - 7A06) = address of the string
6169   DEAF             ;                     (7A07) = String length
6170   DEAF             ;                      U-Reg = 7A04, Accumulator
6171   DEAF             ;   Error conditions: None
6172   DEAF             ;------------------------------------------------------------------------------
6173   DEAF             BCMD_TIME_10: ; $DEAF
6174   DEAF 6A 07           LDI  UL,$07
6175   DEB1 68 7A           LDI  UH,$7A
6176   DEB3 63              SDE  U
6177   DEB4 04              LDA  XL
6178   DEB5 63              SDE  U
6179   DEB6 84              LDA  XH
6180   DEB7 63              SDE  U
6181   DEB8 B5 D0           LDI  A,$D0
6182   DEBA 2E              STA  (U)
6183   DEBB 9A              RTN
6184   DEBC             
6185   DEBC             
6186   DEBC             ; (DC) $DEBC Loads CSI from AR-X address to X-Reg length to UL and accumulator
6187   DEBC 6A 05           LDI  UL,$05
6188   DEBE             
6189   DEBE             ; Transfers from address 7A UL, 16-bit address to X-Reg and length to UL.
6190   DEBE             BCMD_TIME_7: ; $DEBE
6191   DEBE 68 7A           LDI  UH,$7A
6192   DEC0 65              LIN  U
6193   DEC1 08              STA  XH
6194   DEC2 65              LIN  U
6195   DEC3 0A              STA  XL
6196   DEC4 25              LDA  (U)
6197   DEC5 2A              STA  UL
6198   DEC6 9A              RTN
6199   DEC7             
6200   DEC7             
6201   DEC7             ; $DEC7 Get program pointer from basic stack
6202   DEC7             BCMD_TIME_4: 
6203   DEC7 D4              VEJ  (D4) \ ABYT($A0)
6203   DEC8 A0          
6204   DEC9 A5 78 82        LDA  (STK_PTR_GSB_FOR)
6205   DECC 2A              STA  UL
6206   DECD 68 7A           LDI  UH,$7A
6207   DECF 8E 08           BCH BCMD_TIME_14 ; $DED9
6208   DED1             
6209   DED1             
6210   DED1             ; (D6) $DED1 Loads address pointer from memory to AR-Y: A6=PROGRAM, AC=BREAK, B8=0N ERROR.
6211   DED1 FD 0A           POP  X
6212   DED3 45              LIN  X
6213   DED4 2A              STA  UL
6214   DED5 FD 88           PSH  X
6215   DED7 68 78           LDI  UH,$78
6216   DED9             
6217   DED9             BCMD_TIME_14: ; $DED9
6218   DED9 4A 9C           LDI  XL,$9C
6219   DEDB 48 78           LDI  XH,$78
6220   DEDD 65              LIN  U
6221   DEDE 18              STA  YH
6222   DEDF 65              LIN  U
6223   DEE0 1A              STA  YL
6224   DEE1 8E 10           BCH BCMD_TIME_15 ; $DEF3
6225   DEE3             
6226   DEE3             
6227   DEE3             
6228   DEE3             ;------------------------------------------------------------------------------
6229   DEE3             ; (D4) Save the pointer of the current processing status to memory
6230   DEE3             ;            Address: DEE3 (D4)
6231   DEE3             ;                     D1 determines which area of program pointer is updated.
6232   DEE3             ;                     D1 can assume the following values:
6233   DEE3             ;                     A0: The address of the line currently being processed is 
6234   DEE3             ;                         transferred to (78A0-78A1). Contents of the Y Reg. 
6235   DEE3             ;                         The current line number is taken from (789C-789D) and 
6236   DEE3             ;                         transferred to (78A2 f.). The program start address
6237   DEE3             ;                         is taken from (789E f.) and transferred to (78A4 f.).
6238   DEE3             ;                     AC: Information about a BREAK that has been carried out 
6239   DEE3             ;                         is saved in same way as data byte A0 to (78AC ff.).
6240   DEE3             ;                     B2: Similar ERROR information as (78B2 ff.)
6241   DEE3             ;   Entry parameters: Y-Reg points to Basic main memory
6242   DEE3             ;
6243   DEE3             ; Modified registers: X-Reg, Y-Reg
6244   DEE3             ;   Error conditions: None
6245   DEE3             ;------------------------------------------------------------------------------
6246   DEE3 FD 2A           POP  U
6247   DEE5 65              LIN  U
6248   DEE6 0A              STA  XL
6249   DEE7 FD A8           PSH  U
6250   DEE9 48 78           LDI  XH,$78
6251   DEEB             
6252   DEEB             BCMD_TIME_16: ; $DEEB
6253   DEEB 68 78           LDI  UH,$78
6254   DEED 6A 9C           LDI  UL,$9C
6255   DEEF 94              LDA  YH
6256   DEF0 41              SIN  X
6257   DEF1 14              LDA  YL
6258   DEF2             
6259   DEF2             BCMD_TIME_17: ; $DEF2
6260   DEF2 41              SIN  X
6261   DEF3             
6262   DEF3             BCMD_TIME_15: ; $DEF3
6263   DEF3 65              LIN  U
6264   DEF4 41              SIN  X
6265   DEF5 65              LIN  U
6266   DEF6 41              SIN  X
6267   DEF7 65              LIN  U
6268   DEF8 41              SIN  X
6269   DEF9 65              LIN  U
6270   DEFA 41              SIN  X
6271   DEFB 9A              RTN
6272   DEFC             
6273   DEFC             
6274   DEFC             ; Write address, line number, and start address of nth instruction to stack
6275   DEFC             BCMD_TIME_5: ; $DEFC
6276   DEFC C8              VEJ  (C8) \ ABRF(BCMD_TIME_6) ; $DEFE
6276   DEFD 00          
6277   DEFE             
6278   DEFE             
6279   DEFE             ; Address, line number, program start of current instruction on basic stack
6280   DEFE             BCMD_TIME_6: ; $DEFE
6281   DEFE CD 18           VMJ  ($18)
6282   DF00 CC              VEJ  (CC) \ ABYTL($7881)
6282   DF01 81          
6283   DF02 48 7A           LDI  XH,$7A
6284   DF04 9E 1B           BCH BCMD_TIME_16 ; $DEEB
6285   DF06             
6286   DF06             
6287   DF06             ; Transfers 3 addresses (program pointer) within memory map
6288   DF06             ; Relocate 6 bytes starting from address 78UL to 78XL.
6289   DF06             BCMD_TIME_1: ; $DF06
6290   DF06 68 78           LDI  UH,$78
6291   DF08 48 78           LDI  XH,$78
6292   DF0A 65              LIN  U
6293   DF0B 41              SIN  X
6294   DF0C 65              LIN  U
6295   DF0D 9E 1D           BCH BCMD_TIME_17 ; $DEF2
6296   DF0F             
6297   DF0F             
6298   DF0F             
6299   DF0F             ;------------------------------------------------------------------------------
6300   DF0F             ; (36) Create CSI in AR-X for string. C=0 if no string found
6301   DF0F             ;            Address: DF0F (36)
6302   DF0F             ;   Entry parameters: Y-Reg points to double quotes or name of string variable 
6303   DF0F             ;                     in main memory.
6304   DF0F             ;
6305   DF0F             ; Modified registers: AR-X contains the CSI of the string
6306   DF0F             ;   Error conditions: If no string was recognized, Carry=0
6307   DF0F             ;------------------------------------------------------------------------------
6308   DF0F             STRING_2_CSI: ; DF0F
6309   DF0F FD 98           PSH  Y
6310   DF11 C2              VEJ  (C2) \ ACHR($22) \ ABRF(BCMD_TIME_18) ; $DF18
6310   DF12 22          
6310   DF13 04          
6311   DF14 CD 0C           VMJ  ($0C)
6312   DF16 8E 04           BCH BCMD_TIME_19 ; $DF1C
6313   DF18             
6314   DF18             BCMD_TIME_18: ; $DF18
6315   DF18 C6              VEJ  (C6)
6316   DF19 CE              VEJ  (CE) \ ABYT($40) \ ABRF(BCMD_TIME_20) ; $DF1F
6316   DF1A 40          
6316   DF1B 03          
6317   DF1C             
6318   DF1C             BCMD_TIME_19: ; $DF1C
6319   DF1C FB              SEC
6320   DF1D 8E 01           BCH BCMD_TIME_21 ; $DF20
6321   DF1F             
6322   DF1F             BCMD_TIME_20: ; $DF1F
6323   DF1F F9              REC
6324   DF20             
6325   DF20             BCMD_TIME_21: ; $DF20
6326   DF20 FD 0A           POP  X
6327   DF22 9A              RTN
6328   DF23             
6329   DF23             
6330   DF23             ;------------------------------------------------------------------------------
6331   DF23             ; (34) Syntax check and multiple branching
6332   DF23             ; Multiple branching after character test
6333   DF23             ; 
6334   DF23             ; Address:	DF23 (34)
6335   DF23             ;      D1: Number of character tests +1
6336   DF23             ;      D2: Sign that the accumulator is being checked for agreement.
6337   DF23             ;      D3: Relative jump by D3 bytes if agreement with the accumulator was
6338   DF23             ;          found. Each additional character that is tested for agreement
6339   DF23             ;          with the accumulator always occupies two bytes analogous to D2 & D3
6340   DF23             ;                     
6341   DF23             ; 
6342   DF23             ;    Entry Parameter: Accumulator contains characters whose occurrences are 
6343   DF23             ;                     searched for in the branching table. The character to be 
6344   DF23             ;                     tested should be stored in UH, otherwise it will be lost.
6345   DF23             ; Modified Registers: X-Reg contains return address. U Reg, accumulator
6346   DF23             ;   Error conditions: None
6347   DF23             ;------------------------------------------------------------------------------
6348   DF23             CHARTESTBRANCH: ; $DF23
6349   DF23 FD 0A           POP  X
6350   DF25 FD A8           PSH  U
6351   DF27 28              STA  UH
6352   DF28 45              LIN  X
6353   DF29 2A              STA  UL
6354   DF2A A4              LDA  UH
6355   DF2B             
6356   DF2B             BCMD_TIME_23: ; $DF2B
6357   DF2B F7              CIN
6358   DF2C 8B 05           BZS BCMD_TIME_22 ; $DF33
6359   DF2E 44              INC  X
6360   DF2F 88 06           LOP  UL,BCMD_TIME_23 ; $DF2B
6361   DF31 8E 03           BCH BCMD_TIME_24 ; $DF36
6362   DF33             
6363   DF33             BCMD_TIME_22: ; $DF33
6364   DF33 45              LIN  X
6365   DF34 FD CA           ADR  X
6366   DF36             
6367   DF36             BCMD_TIME_24: ; $DF36
6368   DF36 FD 2A           POP  U
6369   DF38 A4              LDA  UH
6370   DF39 FD 5E           STX  P
6371   DF3B             
6372   DF3B             
6373   DF3B             
6374   DF3B             ;------------------------------------------------------------------------------
6375   DF3B             ; (D8) Checks calculator mode $DF3B
6376   DF3B             ;            Address: DF3B (D8)
6377   DF3B             ; 
6378   DF3B             ;    Entry Parameter: None
6379   DF3B             ; Modified Registers: Zero flag= 1 if calculator is in direct mode
6380   DF3B             ;   Error conditions: None
6381   DF3B             ;------------------------------------------------------------------------------
6382   DF3B             CHECK_CALC_MODE: ; $DF38 (d8)
6383   DF3B A5 78 9D        LDA  (CURR_LINE_L)
6384   DF3E AB 78 9C        ORA  (CURR_LINE_H)
6385   DF41 9A              RTN
6386   DF42             
6387   DF42             
6388   DF42             ; Syntax check: Checks whether the string is enclosed in “…” max 80 characters. 
6389   DF42             ; Whether the program is running. If so, Z=0.
6390   DF42             BCMD_TIME_3: ; $DF42
6391   DF42 6A 50           LDI  UL,$50
6392   DF44             
6393   DF44             
6394   DF44             ; As above, Syntax check: whether the string is enclosed by “…”. If not UL=FF.
6395   DF44             BCMD_TIME_2: ; $DF44
6396   DF44 68 00           LDI  UH,$00
6397   DF46 62              DEC  UL
6398   DF47             
6399   DF47             BCMD_TIME_29: ; $DF47
6400   DF47 55              LIN  Y
6401   DF48 CD 34           VMJ  ($34) \ ABYT($03) \ ABYT($2C) \ 
6401   DF4A 03          
6401   DF4B 2C          
6401   DF4C             
6402   DF4C 0C                   ABRF(BCMD_TIME_25) \ ABYT($22) \ ABRF(BCMD_TIME_26) \ 
6402   DF4D 22          
6402   DF4E 0F          
6402   DF4F             
6403   DF4F 0D                   ABYT($0D) \ ABRF(BCMD_TIME_27) \ ABYT($3A) \ ABRF(BCMD_TIME_28)
6403   DF50 06          
6403   DF51 3A          
6403   DF52 02          
6404   DF53 9E 0E           BCH BCMD_TIME_29 ; $DF47
6405   DF55             
6406   DF55             BCMD_TIME_28: ; $DF55
6407   DF55 99 10           BZR BCMD_TIME_29 ; $DF47
6408   DF57             
6409   DF57             BCMD_TIME_27: ; $DF57
6410   DF57 56              DEC  Y
6411   DF58 9A              RTN
6412   DF59             
6413   DF59             BCMD_TIME_25: ; $DF59
6414   DF59 99 14           BZR BCMD_TIME_29 ; $DF47
6415   DF5B 88 16           LOP  UL,BCMD_TIME_29 ; $DF47
6416   DF5D 9A              RTN
6417   DF5E             
6418   DF5E             BCMD_TIME_26: ; $DF5E
6419   DF5E BD 01           EAI  $01
6420   DF60 28              STA  UH
6421   DF61 9E 1C           BCH BCMD_TIME_29 ; $DF47
6422   DF63             
6423   DF63             
6424   DF63             
6425   DF63             ;------------------------------------------------------------------------------
6426   DF63             ;(22) If string constant follows in main memory, save CSI to AR-X $DF63
6427   DF63             ; Address:	DF63 (22)
6428   DF63             ; 
6429   DF63             ;    Entry Parameter:	Y-Reg must point to main memory
6430   DF63             ; Modified Registers:	Y-Reg points to the next memory location in main memory following the string. AR-X may contain CSI. U-Reg contains the next character/token.
6431   DF63             ;   Error conditions:	Carry=1 if string found and CSI created in AR-X Carry=0 if no string found
6432   DF63             ;------------------------------------------------------------------------------
6433   DF63             IS_STRING: ; $DF63   
6434   DF63 C2              VEJ  (C2) \ ACHR($22) \ ABRF($DF70)
6434   DF64 22          
6434   DF65 0A          
6435   DF66 CD 0C           VMJ  ($0C)
6436   DF68 C2              VEJ  (C2) \ ACHR($0D) \ ABRF($DF6C)
6436   DF69 0D          
6436   DF6A 01          
6437   DF6B 9A              RTN
6438   DF6C C4              VEJ  (C4) \ ACHR($3A) \ ABRF($DF70)
6438   DF6D 3A          
6438   DF6E 01          
6439   DF6F C0              VEJ  (C0)
6440   DF70 F9              REC
6441   DF71 9A              RTN
6442   DF72             
6443   DF72             
6444   DF72             ; (20) $DF72 Find next beginning of line from (Y-Reg)
6445   DF72             ; Increments Y-Reg to the low byte of the next line number (REM).
6446   DF72 B5 0D           LDI  A,$0D
6447   DF74 6A 4C           LDI  UL,$4C
6448   DF76 FD 18           LDX  Y
6449   DF78             
6450   DF78             BCMD_TIME_31: ; $DF78
6451   DF78 F7              CIN
6452   DF79 8B 02           BZS BCMD_TIME_30 ; $DF7D
6453   DF7B 88 05           LOP  UL,BCMD_TIME_31 ; $DF78
6454   DF7D             
6455   DF7D             BCMD_TIME_30: ; $DF7D
6456   DF7D FD 5A           STX  Y
6457   DF7F 9A              RTN
6458   DF80             
6459   DF80             
6460   DF80             ; (18) $DF80 Updates program parameters for next instruction
6461   DF80 D4              VEJ  (D4) \ ABYT($A0)
6461   DF81 A0          
6462   DF82 83 0A           BCS BCMD_TIME_32 ; $DF8E
6463   DF84 55              LIN  Y
6464   DF85 AE 78 9C        STA  (CURR_LINE_H)
6465   DF88 55              LIN  Y
6466   DF89 AE 78 9D        STA  (CURR_LINE_L)
6467   DF8C 54              INC  Y
6468   DF8D 9A              RTN
6469   DF8E             
6470   DF8E             BCMD_TIME_32: ; $DF8E
6471   DF8E 94              LDA  YH
6472   DF8F BB 80           ORI  A,$80
6473   DF91 18              STA  YH
6474   DF92 9A              RTN
6475   DF93             
6476   DF93             
6477   DF93             ; (12) $DF93 Loads program start address to X-Reg
6478   DF93 CC              VEJ  (CC) \ ABYTL($61) ; $7861
6478   DF94 61          
6479   DF95 DB              ROL
6480   DF96 81 02           BCR BCMD_TIME_33 ; $DF9A
6481   DF98 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
6481   DF99 65          
6482   DF9A             
6483   DF9A             BCMD_TIME_33: ; $DF9A
6484   DF9A 9A              RTN
6485   DF9B B5 10           LDI  A,$10
6486   DF9D AE 78 94        STA  (STR_BUF_PTR_L)
6487   DFA0             
6488   DFA0             ; Inserts a string, the address of which is stored in 
6489   DFA0             ; the AR-X, into the string buffer. Jump if overflow. Update buffer pointers.
6490   DFA0             BCMD_TIME_8: ; $DFA0
6491   DFA0 DC              VEJ  (DC)
6492   DFA1             
6493   DFA1             
6494   DFA1             
6495   DFA1             ; Inserts String pointed to by X-Res into String buffer. Jump if overflow.
6496   DFA1             XREG2STRBUF: ; $DFA1
6497   DFA1 FD 98           PSH  Y
6498   DFA3 BE DF B4        SJP  (XREG2STRBUF_1) ; $DFB4
6499   DFA6 C3 4A           VCS  ($4A) ;($4A)($25)
6500   DFA8 24              LDA  UL
6501   DFA9             
6502   DFA9             XREG2STRBUF_3: ; $DFA9
6503   DFA9 DF              DEC  A
6504   DFAA 81 03           BCR XREG2STRBUF_2 ; $DFAF
6505   DFAC F5              TIN
6506   DFAD 9E 06           BCH XREG2STRBUF_3 ; $DFA9
6507   DFAF             
6508   DFAF             XREG2STRBUF_2: ; $DFAF
6509   DFAF BE DF C5        SJP  (ARX2STRBUF_1) ; $DFC5
6510   DFB2 CD 4E           VMJ  ($4E) ; ($4E)($27)
6511   DFB4             
6512   DFB4             
6513   DFB4             ; $DFB4 Checks whether the string buffer can still hold the number of 
6514   DFB4             ; characters contained in the accumulator. If not, C=1.
6515   DFB4             XREG2STRBUF_1: ; $DFB4
6516   DFB4 2A              STA  UL
6517   DFB5 A5 78 94        LDA  (STR_BUF_PTR_L)
6518   DFB8 1A              STA  YL
6519   DFB9 F9              REC
6520   DFBA 22              ADC  UL
6521   DFBB 68 0F           LDI  UH,$0F
6522   DFBD 83 02           BCS XREG2STRBUF_4 ; $DFC1
6523   DFBF B7 61           CPI  A,$61
6524   DFC1             
6525   DFC1             XREG2STRBUF_4: ; $DFC1
6526   DFC1 58 7B           LDI  YH,$7B
6527   DFC3 9A              RTN
6528   DFC4             
6529   DFC4             
6530   DFC4             ; Save String buffer pointers to X-Reg and AR-X. Updating pointer with YL
6531   DFC4             ARX2STRBUF: ; $DFC4
6532   DFC4 2A              STA  UL
6533   DFC5             
6534   DFC5             ; $DFC5 Loads AR-X with a pointer to the string buffer.
6535   DFC5             ARX2STRBUF_1: ; $DFC5
6536   DFC5 A5 78 94        LDA  (STR_BUF_PTR_L)
6537   DFC8 0A              STA  XL
6538   DFC9 14              LDA  YL
6539   DFCA AE 78 94        STA  (STR_BUF_PTR_L)
6540   DFCD 48 7B           LDI  XH,$7B
6541   DFCF 24              LDA  UL
6542   DFD0 8B 04           BZS ARX2STRBUF_2 ; $DFD6
6543   DFD2 E9 78 74 7F     ANI  (CURSOR_ENA),$7F
6544   DFD6             
6545   DFD6             ARX2STRBUF_2: ; $DFD6
6546   DFD6 BA DE AF        JMP  BCMD_TIME_10 ; $DEAF
6547   DFD9 CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
6547   DFDA 65          
6548   DFDB             
6549   DFDB             ARX2STRBUF_3: ; $DFD8
6550   DFDB A5 78 64        LDA  (RAM_END_H)
6551   DFDE 28              STA  UH
6552   DFDF 6A 00           LDI  UL,$00
6553   DFE1             
6554   DFE1             ARX2STRBUF_4: ; $DFE1
6555   DFE1 66              DEC  U
6556   DFE2             
6557   DFE2             
6558   DFE2             
6559   DFE2             ;  $DFE2 U-Reg=U-Reg-X-Reg. If overflow occurs C=0 and UH=16
6560   DFE2             U_MINUS_X: ; 
6561   DFE2 FB              SEC
6562   DFE3 24              LDA  UL
6563   DFE4 00              SBC  XL
6564   DFE5 2A              STA  UL
6565   DFE6 A4              LDA  UH
6566   DFE7 80              SBC  XH
6567   DFE8 28              STA  UH
6568   DFE9 83 02           BCS U_MINUS_X_1 ; $DFED
6569   DFEB 68 16           LDI  UH,$16
6570   DFED             
6571   DFED             U_MINUS_X_1: ; $DFED
6572   DFED 9A              RTN
6573   DFEE             
6574   DFEE             
6575   DFEE             
6576   DFEE             ; $DFEE Calculates the free memory space "MEM" in U-Reg
6577   DFEE             MEM_IN_UREG: ; 
6578   DFEE CC              VEJ  (CC) \ ABYTL(BASPRG_END_H) ; $7867
6578   DFEF 67          
6579   DFF0 44              INC  X
6580   DFF1 9E 18           BCH ARX2STRBUF_3 ; $DFDB
6581   DFF3             
6582   DFF3             
6583   DFF3             
6584   DFF3             ; U-Reg= STATUS 1-2. Program start after X-Reg; length according to U.
6585   DFF3             PRGST2XREG: ; $DFF3
6586   DFF3 CD 12           VMJ  ($12)
6587   DFF5             
6588   DFF5             
6589   DFF5             ; (16) $DFF5 U-Reg= U-Reg - X-Reg. Determines the difference between 
6590   DFF5             ; the X-Reg and the end of the program memory (STATUS 1-2).
6591   DFF5             PRGST2XREG_1: ; $DFF5
6592   DFF5 F4              VEJ  (F4) \ AWRD(BASPRG_END_H)
6592   DFF6 78 67       
6593   DFF8 9E 19           BCH ARX2STRBUF_4 ; $DFE1
6594   DFFA             
6595   DFFA             ; (14) $DFFA U-Reg= STATUS 1-2 . Loads X with program start, U with length.
6596   DFFA CC              VEJ  (CC) \ ABYTL(BASPRG_ST_H) ; $7865
6596   DFFB 65          
6597   DFFC 9E 09           BCH PRGST2XREG_1 ; $DFF5
6598   DFFE E4              VEJ  (E4)
6599   DFFF E4              VEJ  (E4)
6600   E000             
6601   E000             
6602   E000             ; Reset-Routine
6603   E000             RESET: ; $E000
6604   E000 FD BE           RIE
6605   E002 B5 00           LDI  A,$00
6606   E004 FD CE           AM0
6607   E006 FD C0           RDP
6608   E008 6A C0           LDI  UL,$C0
6609   E00A             
6610   E00A             RESET_1: ; $E00A
6611   E00A 88 02           LOP  UL,RESET_1 ; $E00A
6612   E00C FD C1           SDP
6613   E00E 6A C0           LDI  UL,$C0
6614   E010             
6615   E010             RESET_2: ; $E010
6616   E010 88 02           LOP  UL,RESET_2 ; $E010
6617   E012 FD C0           RDP
6618   E014 68 96           LDI  UH,$96
6619   E016 6A FF           LDI  UL,$FF
6620   E018             
6621   E018             RESET_3: ; $E018
6622   E018 88 02           LOP  UL,RESET_3 ; $E018
6623   E01A FD 62           DEC  UH
6624   E01C 93 06           BCS RESET_3 ; $E018
6625   E01E B5 00           LDI  A,$00
6626   E020 FD AE F0 0A     STA  #(PC1500_MSK_REG)
6627   E024 FD AE B0 0A     STA  #($B00A)
6628   E028 FD AE F0 0B     STA  #(PC1500_IF_REG)
6629   E02C FD AE DC 00     STA  #($DC00)
6630   E030 FD AE B0 0B     STA  #($B00B)
6631   E034 48 7A           LDI  XH,$7A
6632   E036 4A 10           LDI  XL,$10
6633   E038 6A 0F           LDI  UL,$0F
6634   E03A B5 A0           LDI  A,$A0
6635   E03C 07              CPA  (X)
6636   E03D 8B 01           BZS RESET_4 ; $E040
6637   E03F D5              SHR
6638   E040             
6639   E040             RESET_4: ; $E040
6640   E040 07              CPA  (X)
6641   E041 44              INC  X
6642   E042 89 09           BZR RESET_5 ; $E04D
6643   E044 DD              INC  A
6644   E045 88 07           LOP  UL,RESET_4 ; $E040
6645   E047 D9              SHL
6646   E048 B5 00           LDI  A,$00
6647   E04A DB              ROL
6648   E04B 8E 10           BCH RESET_6 ; $E05D
6649   E04D             
6650   E04D             RESET_5: ; $E04D
6651   E04D B5 41           LDI  A,$41
6652   E04F AE 76 4E        STA  (DISP_BUFF + $4E)
6653   E052 B5 43           LDI  A,$43
6654   E054 AE 76 4F        STA  (DISP_BUFF + $4F)
6655   E057 E9 78 6B 00     ANI  (BEEP_PTR),$00
6656   E05B B5 02           LDI  A,$02
6657   E05D             
6658   E05D             RESET_6: ; $E05D
6659   E05D 48 7A           LDI  XH,$7A
6660   E05F 4A 20           LDI  XL,$20
6661   E061 41              SIN  X
6662   E062 B5 00           LDI  A,$00
6663   E064 41              SIN  X
6664   E065 43              SDE  X
6665   E066 46              DEC  X
6666   E067 4D 01           BII  (X),$01
6667   E069 89 DC           BZR RESET_7 ; $E147
6668   E06B AA 78 4F        LDI  S,(CPU_STACK + $4F)
6669   E06E EB 78 5D FF     ORI  (KATAFLAGS),$FF
6670   E072 E9 7B 0E 01     ANI  (CURS_CTRL),$01
6671   E076 B5 60           LDI  A,$60
6672   E078 AE 79 D1        STA  (OPN)
6673   E07B BE F5 B5        SJP  (BCMD_PI)
6674   E07E CD 5C           VMJ  ($5C) ; ($5C)($2E)
6675   E080 48 79           LDI  XH,$79
6676   E082 4A D2           LDI  XL,$D2
6677   E084 6A 0C           LDI  UL,$0C
6678   E086 CD BA           VMJ  ($BA) ; ($BA)($5D)
6679   E088             
6680   E088             RESET_22: ; $E088
6681   E088 BE E1 53        SJP  (IO_INT)
6682   E08B 58 7A           LDI  YH,$7A
6683   E08D 5A 14           LDI  YL,$14
6684   E08F B5 FF           LDI  A,$FF
6685   E091 6A 04           LDI  UL,$04
6686   E093             
6687   E093             RESET_8: ; $E093
6688   E093 53              SDE  Y
6689   E094 88 03           LOP  UL,RESET_8 ; $E093
6690   E096 48 00           LDI  XH,$00
6691   E098             
6692   E098             RESET_11: ; $E098
6693   E098 4A 00           LDI  XL,$00
6694   E09A 05              LDA  (X)
6695   E09B 2A              STA  UL
6696   E09C B5 5A           LDI  A,$5A
6697   E09E 0E              STA  (X)
6698   E09F 07              CPA  (X)
6699   E0A0 89 22           BZR RESET_9 ; $E0C4
6700   E0A2 B5 A5           LDI  A,$A5
6701   E0A4 0E              STA  (X)
6702   E0A5 07              CPA  (X)
6703   E0A6 89 1C           BZR RESET_9 ; $E0C4
6704   E0A8 24              LDA  UL
6705   E0A9 0E              STA  (X)
6706   E0AA 5A 13           LDI  YL,$13
6707   E0AC 15              LDA  (Y)
6708   E0AD DD              INC  A
6709   E0AE 81 02           BCR RESET_10 ; $E0B2
6710   E0B0 84              LDA  XH
6711   E0B1 1E              STA  (Y)
6712   E0B2             
6713   E0B2             RESET_10: ; $E0B2
6714   E0B2 FD 40           INC  XH
6715   E0B4 4C 70           CPI  XH,$70
6716   E0B6 91 20           BCR RESET_11 ; $E098
6717   E0B8 5A 14           LDI  YL,$14
6718   E0BA             
6719   E0BA             RESET_15: ; $E0BA
6720   E0BA 84              LDA  XH
6721   E0BB 53              SDE  Y
6722   E0BC 15              LDA  (Y)
6723   E0BD DD              INC  A
6724   E0BE 81 02           BCR RESET_12 ; $E0C2
6725   E0C0 84              LDA  XH
6726   E0C1 1E              STA  (Y)
6727   E0C2             
6728   E0C2             RESET_12: ; $E0C2
6729   E0C2 8E 29           BCH RESET_13 ; $E0ED
6730   E0C4             
6731   E0C4             RESET_9: ; $E0C4
6732   E0C4 5A 13           LDI  YL,$13
6733   E0C6 45              LIN  X
6734   E0C7 B7 55           CPI  A,$55
6735   E0C9 89 1C           BZR RESET_14 ; $E0E7
6736   E0CB 55              LIN  Y
6737   E0CC DD              INC  A
6738   E0CD 91 15           BCR RESET_15 ; $E0BA
6739   E0CF 5A 10           LDI  YL,$10
6740   E0D1 15              LDA  (Y)
6741   E0D2 DD              INC  A
6742   E0D3 91 23           BCR RESET_10 ; $E0B2
6743   E0D5 45              LIN  X
6744   E0D6 DD              INC  A
6745   E0D7 83 02           BCS RESET_16 ; $E0DB
6746   E0D9 DF              DEC  A
6747   E0DA 08              STA  XH
6748   E0DB             
6749   E0DB             RESET_16: ; $E0DB
6750   E0DB 84              LDA  XH
6751   E0DC 51              SIN  Y
6752   E0DD 05              LDA  (X)
6753   E0DE D9              SHL
6754   E0DF 93 2F           BCS RESET_10 ; $E0B2
6755   E0E1 45              LIN  X
6756   E0E2 82              ADC  XH
6757   E0E3 51              SIN  Y
6758   E0E4 F5              TIN
6759   E0E5 9E 35           BCH RESET_10 ; $E0B2
6760   E0E7             
6761   E0E7             RESET_14: ; $E0E8
6762   E0E7 55              LIN  Y
6763   E0E8 DD              INC  A
6764   E0E9 91 31           BCR RESET_15 ; $E0BA
6765   E0EB 9E 3B           BCH RESET_10 ; $E0B2
6766   E0ED             
6767   E0ED             RESET_13: ; $E0ED
6768   E0ED 48 78           LDI  XH,$78
6769   E0EF 4A 64           LDI  XL,$64
6770   E0F1 54              INC  Y
6771   E0F2 6A 04           LDI  UL,$04
6772   E0F4             
6773   E0F4             RESET_18: ; $E0F4
6774   E0F4 57              LDE  Y
6775   E0F5 07              CPA  (X)
6776   E0F6 8B 04           BZS RESET_17 ; $E0FC
6777   E0F8 EB 7A 20 04     ORI  (ARV),$04
6778   E0FC             
6779   E0FC             RESET_17: ; $E0FC
6780   E0FC 43              SDE  X
6781   E0FD 88 0B           LOP  UL,RESET_18 ; $E0F4
6782   E0FF B5 00           LDI  A,$00
6783   E101 CD 5A           VMJ  ($5A) ; ($5A)($2D)
6784   E103 EB 7B 0E 01     ORI  (CURS_CTRL),$01
6785   E107 CD BE           VMJ  ($BE) ; ($BE)($5F)
6786   E109 81 15           BCR RESET_19 ; $E120
6787   E10B             
6788   E10B             RESET_20: ; $E10B
6789   E10B FD C8           PSH  A
6790   E10D FD 88           PSH  X
6791   E10F 4A 0A           LDI  XL,$0A
6792   E111 68 E1           LDI  UH,$E1
6793   E113 6A 18           LDI  UL,$18
6794   E115 BA E2 0E        JMP  ISR_HANDLER_1 ; $E20E
6795   E118 FD 0A           POP  X
6796   E11A FD 8A           POP  A
6797   E11C CD BC           VMJ  ($BC) ; ($BC)($5E)
6798   E11E 93 15           BCS RESET_20 ; $E10B
6799   E120             
6800   E120             RESET_19: ; $E120
6801   E120 FD EB F0 0A     ORI  #(PC1500_MSK_REG),$01
6801   E124 01 
6802   E125 FD EB B0 0A     ORI  #($B00A),$01
6802   E129 01 
6803   E12A FD C1           SDP
6804   E12C FD 81           SIE
6805   E12E 48 7A           LDI  XH,$7A
6806   E130 4A 20           LDI  XL,$20
6807   E132 45              LIN  X
6808   E133 BF 01           BII  A,$01
6809   E135 8B 0D           BZS RESET_21 ; $E144
6810   E137 45              LIN  X
6811   E138 89 0A           BZR RESET_21 ; $E144
6812   E13A 05              LDA  (X)
6813   E13B 89 07           BZR RESET_21 ; $E144
6814   E13D FD 2A           POP  U
6815   E13F FD 1A           POP  Y
6816   E141 BA E2 43        JMP  WAIT4KB ; $E243
6817   E144             
6818   E144             RESET_21: ; $E144
6819   E144 BA C9 E4        JMP  COLD_START ; $C9E4
6820   E147             
6821   E147             RESET_7: ; $E147
6822   E147 A5 7A 30        LDA  (ARS)
6823   E14A 08              STA  XH
6824   E14B A5 7A 31        LDA  (ARS + $01)
6825   E14E 0A              STA  XL
6826   E14F FD 4E           STX  S
6827   E151 9E CB           BCH RESET_22 ; $E088
6828   E153             
6829   E153             
6830   E153             ; $E153 Initializes I/O module with table from E168.
6831   E153             IO_INT:
6832   E153 FD 98           PSH  Y
6833   E155 48 E1           LDI  XH,$E1
6834   E157 4A 68           LDI  XL,$68
6835   E159 58 F0           LDI  YH,$F0
6836   E15B 5A 07           LDI  YL,$07
6837   E15D 6A 08           LDI  UL,$08
6838   E15F             
6839   E15F             IO_INT_1: ; $E15F
6840   E15F 45              LIN  X
6841   E160 FD 1E           STA  #(Y)
6842   E162 54              INC  Y
6843   E163 88 06           LOP  UL,IO_INT_1 ; $E15F
6844   E165 FD 1A           POP  Y
6845   E167 9A              RTN
6846   E168             
6847   E168             
6848   E168             
6849   E168             ; Parameters for initializing the I/0 ports
6850   E168             IO_TBL: ; $E168
6851   E168 23              .BYTE $23 ; #F007
6852   E169 C0              .BYTE $C0 ; #F008
6853   E16A D7              .BYTE $D7 ; #F009
6854   E16B 00              .BYTE $00 ; #F00A
6855   E16C 00              .BYTE $00 ; #F00B
6856   E16D 00              .BYTE $00 ; #F00C
6857   E16E 00              .BYTE $00 ; #F00D
6858   E16F FF              .BYTE $FF ; #F00E
6859   E170 00              .BYTE $00 ; #F00F
6860   E171             
6861   E171             
6862   E171             
6863   E171             ; (F8) Maskable interrupt routine
6864   E171             ISR_HANDLER: ; $E171
6865   E171 FD C8           PSH  A
6866   E173 FD 88           PSH  X
6867   E175 FD 98           PSH  Y
6868   E177 FD A8           PSH  U
6869   E179 A5 79 D0        LDA  (PU_PV)
6870   E17C FD C8           PSH  A
6871   E17E FD ED F0 0B     BII  #(PC1500_IF_REG),$01
6871   E182 01 
6872   E183 8B 65           BZS $E1EA
6873   E185 FD E9 F0 0A     ANI  #(PC1500_MSK_REG),$FE
6873   E189 FE 
6874   E18A FD E9 B0 0A     ANI  #($B00A),$FE
6874   E18E FE 
6875   E18F FD A5 DE 00     LDA  #($DE00)
6876   E193 FD E9 B0 0B     ANI  #($B00B),$FE
6876   E197 FE 
6877   E198 FD AE DC 00     STA  #($DC00)
6878   E19C BD FF           EAI  $FF
6879   E19E 8B 2E           BZS ISR_HANDLER_2 ; $E1CE
6880   E1A0             
6881   E1A0             ISR_HANDLER_8: ; $E1A0
6882   E1A0 B8              RPV
6883   E1A1             
6884   E1A1             ISR_HANDLER_6:  ;$E1A1
6885   E1A1 48 B0           LDI  XH,$B0
6886   E1A3 4A 00           LDI  XL,$00
6887   E1A5             
6888   E1A5             ISR_HANDLER_5: ; $E1A5
6889   E1A5 FD 88           PSH  X
6890   E1A7 D5              SHR
6891   E1A8 FD C8           PSH  A
6892   E1AA 81 0D           BCR ISR_HANDLER_3 ; $E1B9
6893   E1AC B5 55           LDI  A,$55
6894   E1AE 07              CPA  (X)
6895   E1AF 89 08           BZR ISR_HANDLER_3 ; $E1B9
6896   E1B1 68 E1           LDI  UH,$E1
6897   E1B3 6A B9           LDI  UL,$B9
6898   E1B5 4A 13           LDI  XL,$13
6899   E1B7 8E 55           BCH ISR_HANDLER_1 ; $E20E
6900   E1B9             
6901   E1B9             ISR_HANDLER_3: ; $E189
6902   E1B9 FD 8A           POP  A
6903   E1BB FD 0A           POP  X
6904   E1BD 8B 0F           BZS ISR_HANDLER_2 ; $E1CE
6905   E1BF 4C 90           CPI  XH,$90
6906   E1C1 81 08           BCR ISR_HANDLER_4 ; $E1CB
6907   E1C3 1A              STA  YL
6908   E1C4 B5 EF           LDI  A,$EF
6909   E1C6 82              ADC  XH
6910   E1C7 08              STA  XH
6911   E1C8 14              LDA  YL
6912   E1C9 9E 26           BCH ISR_HANDLER_5 ; $E1A5
6913   E1CB             
6914   E1CB             ISR_HANDLER_4: ; $E1CB
6915   E1CB A8              SPV
6916   E1CC 9E 2D           BCH ISR_HANDLER_6 ; $E1A1
6917   E1CE             
6918   E1CE             ISR_HANDLER_2: ; $E1CE
6919   E1CE FD ED F0 0B     BII  #(PC1500_IF_REG),$01
6919   E1D2 01 
6920   E1D3 8B 15           BZS ISR_HANDLER_7 ; $E1EA
6921   E1D5 FD E9 F0 0B     ANI  #(PC1500_IF_REG),$FE
6921   E1D9 FE 
6922   E1DA FD A5 B0 0B     LDA  #($B00B)
6923   E1DE FD A9 B0 0A     AND  #($B00A)
6924   E1E2 B9 0E           ANI  A,$0E
6925   E1E4 8B 04           BZS ISR_HANDLER_7 ; $E1EA
6926   E1E6 B5 01           LDI  A,$01
6927   E1E8 9E 4A           BCH ISR_HANDLER_8 ; $E1A0
6928   E1EA             
6929   E1EA             ISR_HANDLER_7: ; $E1EA
6930   E1EA A5 79 DA        LDA  ($79DA)
6931   E1ED B7 55           CPI  A,$55
6932   E1EF 89 21           BZR ISR_HANDLER_9 ; $E212
6933   E1F1 FD A5 F0 0B     LDA  #(PC1500_IF_REG)
6934   E1F5 FD A9 F0 0A     AND  #(PC1500_MSK_REG)
6935   E1F9 B9 0E           ANI  A,$0E
6936   E1FB 8B 15           BZS ISR_HANDLER_9 ; $E212
6937   E1FD 68 E2           LDI  UH,$E2
6938   E1FF 6A 12           LDI  UL,$12
6939   E201 A5 79 DB        LDA  ($79DB)
6940   E204 08              STA  XH
6941   E205 A5 79 DC        LDA  ($79DC)
6942   E208 0A              STA  XL
6943   E209 D5              SHR
6944   E20A B8              RPV
6945   E20B 81 01           BCR ISR_HANDLER_1 ; $E20E
6946   E20D A8              SPV
6947   E20E             
6948   E20E             ISR_HANDLER_1: ; $E20E
6949   E20E FD A8           PSH  U
6950   E210 FD 5E           STX  P
6951   E212             
6952   E212             ISR_HANDLER_9: ; $E212
6953   E212 FD EB B0 0A     ORI  #($B00A),$01
6953   E216 01 
6954   E217 FD EB F0 0A     ORI  #(PC1500_MSK_REG),$01
6954   E21B 01 
6955   E21C FD 8A           POP  A
6956   E21E AE 79 D0        STA  (PU_PV)
6957   E221 CD A0           VMJ  ($A0) ; ($A0)($50)
6958   E223 FD 2A           POP  U
6959   E225 FD 1A           POP  Y
6960   E227 FD 0A           POP  X
6961   E229             
6962   E229             ISR_HANDLER_10: ; $E229
6963   E229 FD 8A           POP  A
6964   E22B             
6965   E22B             
6966   E22B             
6967   E22B             ; (FC) Non-Maskable Interrupt
6968   E22B             NMI_HANDLER: ; $E22B
6969   E22B 8A              RTI
6970   E22C             
6971   E22C             
6972   E22C             
6973   E22C             ; (FA) Timer Interrupt
6974   E22C             TIMER_ISR:  ; $E22C
6975   E22C FD C8           PSH  A
6976   E22E B5 00           LDI  A,$00
6977   E230 FD CE           AM0
6978   E232 9E 0B           BCH ISR_HANDLER_10 ; $E229
6979   E234             
6980   E234             
6981   E234             
6982   E234             ; (A0) PV-banking according to status of Bit 0 in $7900. If 0, PV=1.
6983   E234             PVBANK: ; $E234
6984   E234 B8              RPV
6985   E235 ED 79 D0 01     BII  (PU_PV),$01
6986   E239 8B 01           BZS PVBANK_1 ;$E23C
6987   E23B A8              SPV
6988   E23C             
6989   E23C             PVBANK_1: ; $E23C
6990   E23C 9A              RTN
6991   E23D             
6992   E23D             
6993   E23D             
6994   E23D             ; $E23D Waits until no more keys are pressed
6995   E23D             WAITNOKEYS: 
6996   E23D EB 7B 0E 03     ORI  (CURS_CTRL),$03
6997   E241 8E 0B           BCH WAIT4KB_2 ; $E24E
6998   E243             
6999   E243             
7000   E243             
7001   E243             ; Entering a Character Using the Keyboard (Page 324:Keyboard Status)
7002   E243             ; Waiting for input from keyboard. Character is in accumulator
7003   E243             WAIT4KB: ; $E243
7004   E243 A5 79 D4        LDA  ($79D4)
7005   E246             
7006   E246             WAIT4KB_1: ; $E246
7007   E246 B7 55           CPI  A,$55
7008   E248 8B 6D           BZS WAIT4KB_3 $E2B7
7009   E24A E9 7B 0E FD     ANI  (CURS_CTRL),$FD
7010   E24E             
7011   E24E             WAIT4KB_2: ; $E24E
7012   E24E 48 7B           LDI  XH,$7B
7013   E250 ED 7B 0E 40     BII  (CURS_CTRL),$40
7014   E254 89 05           BZR WAIT4KB_4 ; $E25B
7015   E256 4A 09           LDI  XL,$09
7016   E258 B5 60           LDI  A,$60
7017   E25A 41              SIN  X
7018   E25B             
7019   E25B             WAIT4KB_4: ; $E25B
7020   E25B 4A 0A           LDI  XL,$0A
7021   E25D B5 FE           LDI  A,$FE
7022   E25F 41              SIN  X
7023   E260 B5 1D           LDI  A,$1D
7024   E262 41              SIN  X
7025   E263 41              SIN  X
7026   E264 B5 80           LDI  A,$80
7027   E266 41              SIN  X
7028   E267 68 F8           LDI  UH,$F8
7029   E269             
7030   E269             WAIT4KB_11: ; $E269
7031   E269 CD A6           VMJ  ($A6) ; ($A6)($53)
7032   E26B 89 CD           BZR WAIT4KB_5 ; $E33A
7033   E26D BE E4 18        SJP  (ISKEY)
7034   E270 8B 52           BZS WAIT4KB_6 ; $E2C4
7035   E272 BE E4 2C        SJP  (KEY2ASCII)
7036   E275 83 4D           BCS WAIT4KB_6 ; $E2C4
7037   E277 38              NOP
7038   E278 ED 7B 0E 01     BII  (CURS_CTRL),$01
7039   E27C 8B 2E           BZS WAIT4KB_7 ; $E2AC
7040   E27E ED 7B 0E 40     BII  (CURS_CTRL),$40
7041   E282 8B 7B           BZS WAIT4KB_8 ; $E2FF
7042   E284 04              LDA  XL
7043   E285 A7 7B 0F        CPA  (KEY_LAST)
7044   E288 89 6C           BZR WAIT4KB_9 ; $E2F6
7045   E28A 48 7B           LDI  XH,$7B
7046   E28C 4A 09           LDI  XL,$09
7047   E28E 05              LDA  (X)
7048   E28F DD              INC  A
7049   E290 81 0B           BCR WAIT4KB_10 ; $E29D
7050   E292 B5 F2           LDI  A,$F2
7051   E294 0E              STA  (X)
7052   E295 48 FE           LDI  XH,$FE
7053   E297 A5 7B 0F        LDA  (KEY_LAST)
7054   E29A 0A              STA  XL
7055   E29B 8E C9           BCH AUTO_OFF_1 ; $E366
7056   E29D             
7057   E29D             WAIT4KB_10: ; $E29D
7058   E29D 0E              STA  (X)
7059   E29E             
7060   E29E             WAIT4KB_20: ; $E29E
7061   E29E E9 79 D9 00     ANI  ($79D9),$00
7062   E2A2 B5 57           LDI  A,$57
7063   E2A4 FD CE           AM0
7064   E2A6 FD 81           SIE
7065   E2A8 FD B1           HLT
7066   E2AA 9E 43           BCH WAIT4KB_11 ; $E269
7067   E2AC             
7068   E2AC             WAIT4KB_7: ; $E2AC
7069   E2AC BE E4 2C        SJP  (KEY2ASCII)
7070   E2AF 83 13           BCS WAIT4KB_6 ; $E2C4
7071   E2B1 04              LDA  XL
7072   E2B2 AE 7B 0F        STA  (KEY_LAST)
7073   E2B5 8E AF           BCH AUTO_OFF_1 ; $E366
7074   E2B7             
7075   E2B7             WAIT4KB_3: ; $E2B7
7076   E2B7 CC              VEJ  (CC) \ ABYTL($785B)
7076   E2B8 5B          
7077   E2B9 38              NOP
7078   E2BA 04              LDA  XL
7079   E2BB D5              SHR
7080   E2BC FD BE           RIE
7081   E2BE B8              RPV
7082   E2BF 81 01           BCR WAIT4KB_12 ; $E2C2
7083   E2C1 A8              SPV
7084   E2C2             
7085   E2C2             WAIT4KB_12: ; $E2C2
7086   E2C2 FD 5E           STX  P
7087   E2C4             
7088   E2C4             WAIT4KB_6: ; $E2C4
7089   E2C4 ED 7B 0E 01     BII  (CURS_CTRL),$01
7090   E2C8 8B 0E           BZS WAIT4KB_13 ; $E2D8
7091   E2CA ED 7B 0E 40     BII  (CURS_CTRL),$40
7092   E2CE 89 26           BZR WAIT4KB_9 ; $E2F6
7093   E2D0 FD 60           INC  UH
7094   E2D2 81 0A           BCR WAIT4KB_14 ; $E2DE
7095   E2D4 E9 7B 0E FE     ANI  (CURS_CTRL),$FE
7096   E2D8             
7097   E2D8             WAIT4KB_13: ; $E2D8
7098   E2D8 ED 7B 0E 02     BII  (CURS_CTRL),$02
7099   E2DC 89 14           BZR WAIT4KB_15 ; $E2F2
7100   E2DE             
7101   E2DE             WAIT4KB_14: ; $E2DE
7102   E2DE 6A 02           LDI  UL,$02
7103   E2E0 48 7B           LDI  XH,$7B
7104   E2E2 4A 0D           LDI  XL,$0D
7105   E2E4             
7106   E2E4             WAIT4KB_17: ; $E2E4
7107   E2E4 46              DEC  X
7108   E2E5 4F 01           ADI  (X),$01
7109   E2E7 81 1A           BCR WAIT4KB_16 ; $E303
7110   E2E9 88 07           LOP  UL,WAIT4KB_17 ; $E2E4
7111   E2EB B5 FF           LDI  A,$FF
7112   E2ED 41              SIN  X
7113   E2EE 41              SIN  X
7114   E2EF 0E              STA  (X)
7115   E2F0 8E 4D           BCH AUTO_OFF
7116   E2F2             
7117   E2F2             WAIT4KB_15: ; $E2F2
7118   E2F2 B5 00           LDI  A,$00
7119   E2F4 F9              REC
7120   E2F5 9A              RTN
7121   E2F6             
7122   E2F6             WAIT4KB_9: ; $E2F6
7123   E2F6 B5 60           LDI  A,$60
7124   E2F8 AE 7B 09        STA  (KEY_REPEAT)
7125   E2FB E9 7B 0E 9F     ANI  (CURS_CTRL),$9F
7126   E2FF             
7127   E2FF             WAIT4KB_8: ; $E2FF
7128   E2FF 68 F8           LDI  UH,$F8
7129   E301 9E 25           BCH WAIT4KB_14 ; $E2DE
7130   E303             
7131   E303             WAIT4KB_16: ; $E303
7132   E303 4A 0B           LDI  XL,$0B
7133   E305 45              LIN  X
7134   E306 BF 07           BII  A,$07
7135   E308 89 0B           BZR WAIT4KB_18 ; $E315
7136   E30A 05              LDA  (X)
7137   E30B 89 08           BZR WAIT4KB_18 ; $E315
7138   E30D FD C0           RDP
7139   E30F 6A BC           LDI  UL,$BC
7140   E311             
7141   E311             WAIT4KB_19: ; $E311
7142   E311 88 02           LOP  UL,WAIT4KB_19 ; $E311
7143   E313 FD C1           SDP
7144   E315             
7145   E315             WAIT4KB_18: ; $E315
7146   E315 ED 78 7C 01     BII  (CURSOR_BLNK),$01
7147   E319 9B 7D           BZS WAIT4KB_20 ; $E29E
7148   E31B EF 7B 0D 01     ADI  (CURS_BLNK_CTR),$01
7149   E31F 91 83           BCR WAIT4KB_20 ; $E29E
7150   E321 EB 7B 0D 80     ORI  (CURS_BLNK_CTR),$80
7151   E325 FD A8           PSH  U
7152   E327 CC              VEJ  (CC) \ ABYTL(CURS_POS_NBUF_H) ; $787E
7152   E328 7E          
7153   E329 EF 78 7C 80     ADI  (CURSOR_BLNK),$80
7154   E32D B5 7F           LDI  A,$7F
7155   E32F 81 03           BCR WAIT4KB_21 ; $E334
7156   E331 A5 78 7D        LDA  (BLNKD_CHAR_CODE)
7157   E334             
7158   E334             WAIT4KB_21: ; $E334
7159   E334 CD 8A           VMJ  ($8A) ; ($8A)($45) ; ($8A)($45)
7160   E336 FD 2A           POP  U
7161   E338 9E 9C           BCH WAIT4KB_20 ; $E29E
7162   E33A             
7163   E33A             WAIT4KB_5: ; $E33A
7164   E33A B5 0E           LDI  A,$0E
7165   E33C FB              SEC
7166   E33D 9A              RTN
7167   E33E 38              NOP
7168   E33F             
7169   E33F             
7170   E33F             
7171   E33F             ; Auto-Power-Off Routine
7172   E33F             AUTO_OFF: ; $E33F
7173   E33F B5 A0           LDI  A,$A0
7174   E341 48 7A           LDI  XH,$7A
7175   E343 4A 10           LDI  XL,$10
7176   E345 6A 0F           LDI  UL,$0F
7177   E347             
7178   E347             AUTO_OFF_2: ; $E347
7179   E347 41              SIN  X
7180   E348 DD              INC  A
7181   E349 88 04           LOP  UL,AUTO_OFF_2 ; $E347
7182   E34B FD 98           PSH  Y
7183   E34D FD A8           PSH  U
7184   E34F FD 48           LDX  S
7185   E351 84              LDA  XH
7186   E352 AE 7A 30        STA  (ARS)
7187   E355 04              LDA  XL
7188   E356 AE 7A 31        STA  (ARS + $01)
7189   E359 FD 4C           .BYTE $FD, $4C ;    OFF ***ADD TO TASM
7190   E35B FD 4C           .BYTE $FD, $4C ;    OFF
7191   E35D FD 4C           .BYTE $FD, $4C ;    OFF
7192   E35F FD 2A           POP  U
7193   E361 FD 1A           POP  Y
7194   E363 BA E2 69        JMP  WAIT4KB_11 ; $E269
7195   E366             
7196   E366             AUTO_OFF_1: ; $E366
7197   E366 68 76           LDI  UH,$76
7198   E368 6A 4E           LDI  UL,$4E
7199   E36A EB 7B 0E 01     ORI  (CURS_CTRL),$01
7200   E36E 05              LDA  (X)
7201   E36F B7 3E           CPI  A,$3E
7202   E371 81 55           BCR AUTO_OFF_3 ; $E3C8
7203   E373 B7 41           CPI  A,$41
7204   E375 83 16           BCS AUTO_OFF_4 ; $E38D
7205   E377 6D 04           BII  (U),$04
7206   E379 8B 36           BZS AUTO_OFF_5 ; $E3B1
7207   E37B             
7208   E37B             AUTO_OFF_9: ; $E37B
7209   E37B FD BE           RIE
7210   E37D A5 78 5D        LDA  (KATAFLAGS)
7211   E380 D9              SHL
7212   E381 B8              RPV
7213   E382 81 01           BCR AUTO_OFF_6 ; $E385
7214   E384 A8              SPV
7215   E385             
7216   E385             AUTO_OFF_6: ; $E385
7217   E385 A5 78 5E        LDA  (KATACHAR)
7218   E388 DF              DEC  A
7219   E389 08              STA  XH
7220   E38A 05              LDA  (X)
7221   E38B 8E 26           BCH AUTO_OFF_7 ; $E3B3
7222   E38D             
7223   E38D             AUTO_OFF_4: ; $E38D
7224   E38D 6D 80           BII  (U),$80
7225   E38F 89 16           BZR AUTO_OFF_8 ; $E3A7
7226   E391 6D 04           BII  (U),$04
7227   E393 99 1A           BZR AUTO_OFF_9 ; $E37B
7228   E395 6D 08           BII  (U),$08
7229   E397 89 08           BZR AUTO_OFF_10 ; $E3A1
7230   E399 6D 02           BII  (U),$02
7231   E39B 89 0F           BZR AUTO_OFF_11 ; $E3AC
7232   E39D             
7233   E39D             AUTO_OFF_12: ; $E39D
7234   E39D F9              REC
7235   E39E 69 7D           ANI  (U),$7D
7236   E3A0 9A              RTN
7237   E3A1             
7238   E3A1             AUTO_OFF_10: ; $E3A1
7239   E3A1 6D 02           BII  (U),$02
7240   E3A3 8B 07           BZS AUTO_OFF_11 ; $E3AC
7241   E3A5 9E 0A           BCH AUTO_OFF_12 ; $E39D
7242   E3A7             
7243   E3A7             AUTO_OFF_8: ; $E3A7
7244   E3A7 F9              REC
7245   E3A8 B3 40           ADI  A,$40
7246   E3AA 9E 0F           BCH AUTO_OFF_12 ; $E39D
7247   E3AC             
7248   E3AC             AUTO_OFF_11: ; $E3AC
7249   E3AC F9              REC
7250   E3AD B3 20           ADI  A,$20
7251   E3AF 9E 14           BCH AUTO_OFF_12 ; $E39D
7252   E3B1             
7253   E3B1             AUTO_OFF_5: ; $E3B1
7254   E3B1 FD BE           RIE
7255   E3B3             
7256   E3B3             AUTO_OFF_7: ; $E3B3
7257   E3B3 6D 02           BII  (U),$02
7258   E3B5 8B 05           BZS AUTO_OFF_13 ; $E3BC
7259   E3B7 B5 40           LDI  A,$40
7260   E3B9 FD CA           ADR  X
7261   E3BB 05              LDA  (X)
7262   E3BC             
7263   E3BC             AUTO_OFF_13: ; $E3BC
7264   E3BC CD A0           VMJ  ($A0) ; ($A0)($50)
7265   E3BE FD 81           SIE
7266   E3C0 9E 25           BCH AUTO_OFF_12 ; $E39D
7267   E3C2             
7268   E3C2             AUTO_OFF_17: ; $E3C2
7269   E3C2 6D 04           BII  (U),$04
7270   E3C4 99 4B           BZR AUTO_OFF_9 ; $E37B
7271   E3C6 9E 17           BCH AUTO_OFF_5 ; $E3B1
7272   E3C8             
7273   E3C8             AUTO_OFF_3: ; $E3C8
7274   E3C8 B7 01           CPI  A,$01
7275   E3CA 8B 1C           BZS AUTO_OFF_14 ; $E3E8
7276   E3CC B7 02           CPI  A,$02
7277   E3CE 8B 26           BZS AUTO_OFF_15 ; $E3F6
7278   E3D0 B7 1B           CPI  A,$1B
7279   E3D2 8B 1B           BZS AUTO_OFF_16 ; $E3EF
7280   E3D4 6D 80           BII  (U),$80
7281   E3D6 9B 16           BZS AUTO_OFF_17 ; $E3C2
7282   E3D8 B7 20           CPI  A,$20
7283   E3DA 8B 08           BZS $E3E4
7284   E3DC B7 3D           CPI  A,$3D
7285   E3DE 99 1E           BZR AUTO_OFF_17 ; $E3C2
7286   E3E0 B5 9D           LDI  A,$9D
7287   E3E2 9E 47           BCH AUTO_OFF_12 ; $E39D
7288   E3E4 B5 80           LDI  A,$80
7289   E3E6 9E 4B           BCH AUTO_OFF_12 ; $E39D
7290   E3E8             
7291   E3E8             AUTO_OFF_14: ; $E3E8
7292   E3E8 25              LDA  (U)
7293   E3E9 BD 02           EAI  $02
7294   E3EB B9 7F           ANI  A,$7F
7295   E3ED 8E 19           BCH AUTO_OFF_18 ; $E408
7296   E3EF             
7297   E3EF             AUTO_OFF_16: ; $E3EF
7298   E3EF 25              LDA  (U)
7299   E3F0 BD 80           EAI  $80
7300   E3F2 B9 FD           ANI  A,$FD
7301   E3F4 8E 12           BCH AUTO_OFF_18 ; $E408
7302   E3F6             
7303   E3F6             AUTO_OFF_15: ; $E3F6
7304   E3F6 FD ED F0 0F     BII  #(PC1500_PRT_B),$08
7304   E3FA 08 
7305   E3FB 89 0F           BZR AUTO_OFF_19 ; $E40C
7306   E3FD A5 78 5D        LDA  (KATAFLAGS)
7307   E400 D9              SHL
7308   E401 89 10           BZR AUTO_OFF_20 ; $E413
7309   E403 25              LDA  (U)
7310   E404 BD 04           EAI  $04
7311   E406 B9 77           ANI  A,$77
7312   E408             
7313   E408             AUTO_OFF_18: ; $E408
7314   E408 2E              STA  (U)
7315   E409 BA E2 43        JMP  WAIT4KB ; $E243
7316   E40C             
7317   E40C             AUTO_OFF_19: ; $E40C
7318   E40C 25              LDA  (U)
7319   E40D BD 08           EAI  $08
7320   E40F B9 7B           ANI  A,$7B
7321   E411 9E 0B           BCH AUTO_OFF_18 ; $E408
7322   E413             
7323   E413             AUTO_OFF_20: ; $E413
7324   E413 25              LDA  (U)
7325   E414 B9 73           ANI  A,$73
7326   E416 9E 10           BCH AUTO_OFF_18 ; $E408
7327   E418             
7328   E418             
7329   E418             
7330   E418             ; $E418 Checks whether key is pressed. If not, Z=1.
7331   E418             ISKEY:
7332   E418 B5 FF           LDI  A,$FF
7333   E41A             
7334   E41A             ; Keyboard query. If no key is pressed Z=0.
7335   E41A             ISKEY_1: ; $E41A
7336   E41A FD AE F0 0C     STA  #(PC1500_PRT_A_DIR)
7337   E41E FD E9 F0 0E     ANI  #(PC1500_PRT_A),$00
7337   E422 00 
7338   E423 6A 03           LDI  UL,$03
7339   E425             
7340   E425             ISKEY_2: ; $E425
7341   E425 88 02           LOP  UL,ISKEY_2 ; $E425
7342   E427 FD BA           ITA
7343   E429 BD FF           EAI  $FF
7344   E42B 9A              RTN
7345   E42C             
7346   E42C             
7347   E42C             
7348   E42C             ; $E42C Keyboard query: ASCII code in accumulator. If no key pressed: C=1.
7349   E42C             KEY2ASCII:
7350   E42C 4A 80           LDI  XL,$80
7351   E42E B5 01           LDI  A,$01
7352   E430             
7353   E430             KEY2ASCII_3: ; $E430
7354   E430 08              STA  XH
7355   E431 BE E4 1A        SJP  (ISKEY_1) ; $E41A
7356   E434 89 0E           BZR KEY2ASCII_1 ; $E444
7357   E436 F9              REC
7358   E437 B5 08           LDI  A,$08
7359   E439 02              ADC  XL
7360   E43A 0A              STA  XL
7361   E43B 84              LDA  XH
7362   E43C D9              SHL
7363   E43D 83 02           BCS KEY2ASCII_2 ; $E441
7364   E43F 99 11           BZR KEY2ASCII_3 ; $E430
7365   E441             
7366   E441             KEY2ASCII_2: ; $E441
7367   E441 B5 00           LDI  A,$00
7368   E443 9A              RTN
7369   E444             
7370   E444             KEY2ASCII_1: ; $E444
7371   E444 D9              SHL
7372   E445 83 05           BCS KEY2ASCII_4 ; $E44C
7373   E447 40              INC  XL
7374   E448 91 06           BCR KEY2ASCII_1 ; $E444
7375   E44A 9E 0B           BCH KEY2ASCII_2 ; $E441
7376   E44C             
7377   E44C             KEY2ASCII_4: ; $E44C
7378   E44C 48 FE           LDI  XH,$FE
7379   E44E 05              LDA  (X)
7380   E44F F9              REC
7381   E450 9A              RTN
7382   E451             
7383   E451             
7384   E451             
7385   E451              ; (A6) $E451 Checks if Break was pressed. If so, Z=0; if no Z=1.
7386   E451             CHK_BRK:
7387   E451 FD ED F0 0B     BII  #(PC1500_IF_REG),$02
7387   E455 02 
7388   E456 9A              RTN
7389   E457             
7390   E457             
7391   E457             
7392   E457             ; Basic command OPN
7393   E457 C8              VEJ  (C8) \ ABRF(CHK_BRK_1) ; $E466
7393   E458 0D          
7394   E459 FD 98           PSH  Y
7395   E45B             
7396   E45B             CHK_BRK_2: ; $E45B
7397   E45B B5 60           LDI  A,$60
7398   E45D             
7399   E45D             CHK_BRK_6: ; $E45D
7400   E45D AE 79 D1        STA  (OPN)
7401   E460 FD 1A           POP  Y
7402   E462 FD 81           SIE
7403   E464 56              DEC  Y
7404   E465 E2              VEJ  (E2)
7405   E466             
7406   E466             CHK_BRK_1: ; $E466
7407   E466 C6              VEJ  (C6)
7408   E467 CD 36           VMJ  ($36)
7409   E469 81 BF           BCR BCMD_PRINT_1 ; $E52A
7410   E46B C8              VEJ  (C8) \ ABRF(BCMD_PRINT_1) ; $E52A
7410   E46C BD          
7411   E46D FD 98           PSH  Y
7412   E46F 48 7A           LDI  XH,$7A
7413   E471 58 7A           LDI  YH,$7A
7414   E473 CD 82           VMJ  ($82) ; ($82)($41)
7415   E475 58 E4           LDI  YH,$E4
7416   E477 5A E3           LDI  YL,$E3
7417   E479 CD 9E           VMJ  ($9E) ; ($9E)($4F)
7418   E47B 99 22           BZR CHK_BRK_2 ; $E45B
7419   E47D CD BE           VMJ  ($BE) ; ($BE)($5F)
7420   E47F 81 14           BCR CHK_BRK_3 ; $E495
7421   E481             
7422   E481             CHK_BRK_5: ; $E481
7423   E481 FD A8           PSH  U
7424   E483 FD 88           PSH  X
7425   E485 4A 02           LDI  XL,$02
7426   E487 FD 5A           STX  Y
7427   E489 CD 9E           VMJ  ($9E) ; ($9E)($4F)
7428   E48B FD 0A           POP  X
7429   E48D FD 2A           POP  U
7430   E48F 89 09           BZR CHK_BRK_4 ; $E49A
7431   E491 CD BC           VMJ  ($BC) ; ($BC)($5E)
7432   E493 93 14           BCS CHK_BRK_5 ; $E481
7433   E495             
7434   E495             CHK_BRK_3: ; $E495
7435   E495 FD 1A           POP  Y
7436   E497 68 22           LDI  UH,$22
7437   E499 E0              VEJ  (E0)
7438   E49A             
7439   E49A             CHK_BRK_4: ; $E49A
7440   E49A A4              LDA  UH
7441   E49B D5              SHR
7442   E49C 84              LDA  XH
7443   E49D D1              ROR
7444   E49E 9E 43           BCH CHK_BRK_6 ; $E45D
7445   E4A0             
7446   E4A0             
7447   E4A0             
7448   E4A0             ;------------------------------------------------------------------------------
7449   E4A0             ; (9E) Comparison of two strings
7450   E4A0             ; Checks string 1st byte Y-Reg points to matches string CSI is stored in AR-Y.
7451   E4A0             ; Address:	E4A0 (9E)
7452   E4A0             ; 
7453   E4A0             ;    Entry Parameter:	Y-Reg points to the 1st byte of string to be checked
7454   E4A0             ;                       AR-Y contains CSI of the 2nd string
7455   E4A0             ; Modified Registers:	All
7456   E4A0             ;   Error conditions:	If match, numeric value (BCD format) loaded into AR-X
7457   E4A0             ;------------------------------------------------------------------------------
7458   E4A0             STR_COMP: ; $E4A0 (9E)
7459   E4A0 CD 0C           VMJ  ($0C)
7460   E4A2 B5 04           LDI  A,$04
7461   E4A4 BE D0 F9        SJP  (DEL_DIM_VARS_15) ; $D0F9
7462   E4A7 9A              RTN
7463   E4A8             
7464   E4A8             
7465   E4A8             
7466   E4A8             ; (BE) Searches 1st token table below C000
7467   E4A8             ; Searches token table if CE-158 or CE-150 connected C=1. With CE-150 UH=2 CE-158 UH=1.
7468   E4A8             TOK_TABL_SRCH: ; $E4A8
7469   E4A8 FD BE           RIE
7470   E4AA B8              RPV
7471   E4AB B5 02           LDI  A,$02
7472   E4AD             
7473   E4AD             TOK_TABL_SRCH_5: ; $E4AD
7474   E4AD 48 B8           LDI  XH,$B8
7475   E4AF 28              STA  UH
7476   E4B0             
7477   E4B0             TOK_TABL_SRCH_3: ; $E4B0
7478   E4B0 B5 55           LDI  A,$55
7479   E4B2 4A 00           LDI  XL,$00
7480   E4B4 07              CPA  (X)
7481   E4B5 8B 16           BZS TOK_TABL_SRCH_1 ; $E4CD
7482   E4B7             
7483   E4B7             
7484   E4B7             ; (BC) $E4B7 Searches for the next lower token table (8000-BFFF) based on the
7485   E4B7             ; address area pointed to by X-Reg.
7486   E4B7 A4              LDA  UH
7487   E4B8 4C 88           CPI  XH,$88
7488   E4BA 81 06           BCR TOK_TABL_SRCH_2 ; $E4C2
7489   E4BC 84              LDA  XH
7490   E4BD B3 F7           ADI  A,$F7
7491   E4BF 08              STA  XH
7492   E4C0 9E 12           BCH TOK_TABL_SRCH_3 ; $E4B0
7493   E4C2             
7494   E4C2             TOK_TABL_SRCH_2: ; $E4C2
7495   E4C2 D5              SHR
7496   E4C3 83 03           BCS TOK_TABL_SRCH_4 ; $E4C8
7497   E4C5 A8              SPV
7498   E4C6 9E 1B           BCH TOK_TABL_SRCH_5 ; $E4AD
7499   E4C8             
7500   E4C8             TOK_TABL_SRCH_4: ; $E4C8
7501   E4C8 CD A0           VMJ  ($A0) ; ($A0)($50)
7502   E4CA F9              REC
7503   E4CB FD 81           SIE
7504   E4CD             
7505   E4CD             TOK_TABL_SRCH_1: ; $E4CD
7506   E4CD 9A              RTN
7507   E4CE             
7508   E4CE             
7509   E4CE             ; $E4CE Searches for token table whose number is in UL
7510   E4CE             ; Searches for the start address of the token table, the number of which is in
7511   E4CE             ;the accumulator. C=0 if not found. If available C=1.
7512   E4CE CD BE           VMJ  ($BE) ; ($BE)($5F)
7513   E4D0 81 09           BCR TOK_TABL_SRCH_6 ; $E4DB
7514   E4D2             
7515   E4D2             TOK_TABL_SRCH_8: ; $E4D2
7516   E4D2 44              INC  X
7517   E4D3 24              LDA  UL
7518   E4D4 07              CPA  (X)
7519   E4D5 8B 05           BZS TOK_TABL_SRCH_7 ; $E4DC
7520   E4D7 CD BC           VMJ  ($BC) ; ($BC)($5E)
7521   E4D9 93 09           BCS TOK_TABL_SRCH_8 ; $E4D2
7522   E4DB             
7523   E4DB             TOK_TABL_SRCH_6: ; $E4DB
7524   E4DB 9A              RTN
7525   E4DC             
7526   E4DC             TOK_TABL_SRCH_7: ; $E4DC
7527   E4DC A4              LDA  UH
7528   E4DD AE 79 D0        STA  (PU_PV)
7529   E4E0 FD 81           SIE
7530   E4E2 9A              RTN
7531   E4E3             
7532   E4E3             
7533   E4E3             
7534   E4E3             ; Text for comparison OPN "LCD"
7535   E4E3 4C 43 44 0D     .BYTE $4C,$43,$44,$0D ; LCD/CR
7536   E4E7             
7537   E4E7             
7538   E4E7             
7539   E4E7             ; INPUT# - Routine
7540   E4E7             BCMD_INPUTNUM: ; $E427
7541   E4E7 B5 84           LDI  A,$84
7542   E4E9 8E 05           BCH BCMD_PRINT_2 ; $E4F0
7543   E4EB             
7544   E4EB             
7545   E4EB             ; Basic-Command PRINT
7546   E4EB             BCMD_PRINT: ; $E4EB
7547   E4EB C2              VEJ  (C2) \ ACHR($23) \ ABRF(BCMD_PRINT_3) ; $E513
7547   E4EC 23          
7547   E4ED 25          
7548   E4EE B5 04           LDI  A,$04
7549   E4F0             
7550   E4F0             BCMD_PRINT_2: ; $E4F0
7551   E4F0 AE 78 79        STA  (CASS_FLAG)
7552   E4F3 C2              VEJ  (C2) \ ACHR($2D) \ ABRF(BCMD_PRINT_4) ; $E51E
7552   E4F4 2D          
7552   E4F5 28          
7553   E4F6 DE              VEJ  (DE) \ ABRF(BCMD_PRINT_5) ; $E529
7553   E4F7 31          
7554   E4F8 C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_PRINT_1) ; $E52A
7554   E4F9 2C          
7554   E4FA 2F          
7555   E4FB D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_PRINT_5) ; $E529
7555   E4FC 08          
7555   E4FD 2B          
7556   E4FE B7 02           CPI  A,$02
7557   E500 81 15           BCR BCMD_PRINT_6 ; $E517
7558   E502 BE E4 CE        SJP  ($E4CE)
7559   E505 81 20           BCR BCMD_PRINT_7 ; $E527
7560   E507 4A 10           LDI  XL,$10
7561   E509 ED 78 79 80     BII  (CASS_FLAG),$80
7562   E50D 8B 02           BZS BCMD_PRINT_8 ; $E511
7563   E50F 4A 0D           LDI  XL,$0D
7564   E511             
7565   E511             BCMD_PRINT_8: ; $E511
7566   E511 FD 5E           STX  P
7567   E513             
7568   E513             BCMD_PRINT_3: ; $E513
7569   E513 C6              VEJ  (C6)
7570   E514 BA E6 B6        JMP  BCMD_PAUSE_1 ; $E6B6
7571   E517             
7572   E517             BCMD_PRINT_6: ; $E517
7573   E517 D5              SHR
7574   E518 81 04           BCR BCMD_PRINT_4 ; $E51E
7575   E51A EB 78 79 10     ORI  (CASS_FLAG),$10
7576   E51E             
7577   E51E             BCMD_PRINT_4: ; $E51E
7578   E51E B5 5C           LDI  A,$5C
7579   E520 CD 3C           VMJ  ($3C)
7580   E522 81 03           BCR BCMD_PRINT_7 ; $E527
7581   E524 BA B8 A3        JMP  $B8A3 ; ***
7582   E527             
7583   E527             BCMD_PRINT_7: ; $E527
7584   E527 68 23           LDI  UH,$23
7585   E529             
7586   E529             BCMD_PRINT_5: ; $E529
7587   E529 E0              VEJ  (E0)
7588   E52A             
7589   E52A             BCMD_PRINT_1: ; $E52A
7590   E52A E4              VEJ  (E4)
7591   E52B             
7592   E52B             
7593   E52B             
7594   E52B             ; Writes to clock chip
7595   E52B             WRITE2CLOCK: ; $E52B
7596   E52B FD AA           TTA
7597   E52D FD C8           PSH  A
7598   E52F FD BE           RIE
7599   E531 B5 08           LDI  A,$08
7600   E533 CD 5A           VMJ  ($5A) ; ($5A)($2D)
7601   E535 B5 00           LDI  A,$00
7602   E537 FD AE F0 0D     STA  #(PC1500_PRT_B_DIR)
7603   E53B 48 7A           LDI  XH,$7A
7604   E53D 4A 06           LDI  XL,$06
7605   E53F 68 04           LDI  UH,$04
7606   E541             
7607   E541             WRITE2CLOCK_3: ; $E541
7608   E541 05              LDA  (X)
7609   E542 6A 07           LDI  UL,$07
7610   E544 FD ED F0 0F     BII  #(PC1500_PRT_B),$40
7610   E548 40 
7611   E549 F9              REC
7612   E54A 8B 01           BZS WRITE2CLOCK_1 ; $E54D
7613   E54C FB              SEC
7614   E54D             
7615   E54D             WRITE2CLOCK_1: ; $E54D
7616   E54D D1              ROR
7617   E54E 83 1B           BCS $E56B
7618   E550 FD 59 FE        ANI  #(Y),$FE
7619   E553 FD 59 FE        ANI  #(Y),$FE
7620   E556             
7621   E556             WRITE2CLOCK_4: ; $E54D
7622   E556 FD 5B 04        ORI  #(Y),$04
7623   E559 FD 5B 04        ORI  #(Y),$04
7624   E55C FD 59 FB        ANI  #(Y),$FB
7625   E55F 88 1D           LOP  UL,$E544
7626   E561 43              SDE  X
7627   E562 FD 62           DEC  UH
7628   E564 93 25           BCS WRITE2CLOCK_3 ; $E541
7629   E566 FD 8A           POP  A
7630   E568 FD EC           ATT
7631   E56A 9A              RTN
7632   E56B             
7633   E56B             WRITE2CLOCK_2: ; $E56B
7634   E56B FD 5B 01        ORI  #(Y),$01
7635   E56E FD 5B 01        ORI  #(Y),$01
7636   E571 9E 1D           BCH WRITE2CLOCK_4 ; $E556
7637   E573             
7638   E573             
7639   E573             
7640   E573             ;------------------------------------------------------------------------------
7641   E573             ; (5A) Timer-mode-select routine. The PD 1990AC timer module is switched to 
7642   E573             ; its various operating modes via its inputs C0, C1, C2, which are fed via I/O 
7643   E573             ; ports PC3, PC4 and PC5 (#F008).
7644   E573             ;          Address:	E573 (5A)
7645   E573             ;   Entry parameters: At entry, Accumulator contains the control byte of the 
7646   E573             ;                     timer module. The timer can be operated with 4 modes.
7647   E573             ;                       C2	C1	C0	Mode	Effect
7648   E573             ;                       0	0	0	0	    Register hold
7649   E573             ;                       0 	0	1	1	    Register shift
7650   E573             ;                       0	1	0	2	    Time set
7651   E573             ;                       0	1	1	3	    Time read
7652   E573             ;                       B5	B4	B3 of Accumulator
7653   E573             ;
7654   E573             ; Modified registers: U-Reg
7655   E573             ;                     Y-Reg contains F008
7656   E573             ;                     Accumulator
7657   E573             ;   Error conditions: None
7658   E573             ;------------------------------------------------------------------------------
7659   E573             TIMEMODE: ; $E573
7660   E573 58 F0           LDI  YH,$F0
7661   E575 5A 08           LDI  YL,$08
7662   E577 28              STA  UH
7663   E578 FD AA           TTA
7664   E57A FD C8           PSH  A
7665   E57C FD BE           RIE
7666   E57E FD 15           LDA  #(Y)
7667   E580 B9 C0           ANI  A,$C0
7668   E582 F9              REC
7669   E583 A2              ADC  UH
7670   E584 FD 1E           STA  #(Y)
7671   E586 FD 1E           STA  #(Y)
7672   E588 B3 02           ADI  A,$02
7673   E58A FD 1E           STA  #(Y)
7674   E58C FD 1E           STA  #(Y)
7675   E58E B3 FE           ADI  A,$FE
7676   E590 FD 1E           STA  #(Y)
7677   E592 FD 1E           STA  #(Y)
7678   E594 6A 02           LDI  UL,$02
7679   E596             
7680   E596             TIMEMODE_1: ; $E596
7681   E596 88 02           LOP  UL,TIMEMODE_1 ; $E596
7682   E598 9E 34           BCH $E566
7683   E59A             
7684   E59A             
7685   E59A             
7686   E59A              ; Transfers TIME from AR-X to clock module
7687   E59A             ARX2TIME: ; $ E59A
7688   E59A FD 98           PSH  Y
7689   E59C FD 88           PSH  X
7690   E59E BE E5 2B        SJP  (WRITE2CLOCK)
7691   E5A1 B5 10           LDI  A,$10
7692   E5A3 CD 5A           VMJ  ($5A) ; ($5A)($2D)
7693   E5A5             
7694   E5A5             ARX2TIME_1: ; $ E5A5
7695   E5A5 B5 00           LDI  A,$00
7696   E5A7 CD 5A           VMJ  ($5A) ; ($5A)($2D)
7697   E5A9 FD 59 C7        ANI  #(Y),$C7
7698   E5AC FD 5B 08        ORI  #(Y),$08
7699   E5AF             
7700   E5AF             ARX2TIME_2: ; $ E5AF
7701   E5AF FD 0A           POP  X
7702   E5B1 FD 1A           POP  Y
7703   E5B3 9A              RTN
7704   E5B4             
7705   E5B4             
7706   E5B4             
7707   E5B4              ; Reads clock chip to AR-X
7708   E5B4             TIME2ARX: ; $ E5B4
7709   E5B4 FD 98           PSH  Y
7710   E5B6 FD 88           PSH  X
7711   E5B8 B5 18           LDI  A,$18
7712   E5BA CD 5A           VMJ  ($5A) ; ($5A)($2D)
7713   E5BC BE E5 2B        SJP  (WRITE2CLOCK)
7714   E5BF             
7715   E5BF             
7716   E5BF             
7717   E5BF             ; Basic command BEEP $E5C1
7718   E5BF 9E 1C           BCH ARX2TIME_1 ; $E5A5
7719   E5C1 C2              VEJ  (C2) \ AWRD($F19C) \ ABRF(TIME2ARX_1) ; $E5CC
7719   E5C2 F1 9C       
7719   E5C4 07          
7720   E5C5 E9 78 6B FE     ANI  (BEEP_PTR),$FE
7721   E5C9             
7722   E5C9             TIME2ARX_3: ; $ E5C9
7723   E5C9 CD A2           VMJ  ($A2) ; ($A2)($51)
7724   E5CB E2              VEJ  (E2)
7725   E5CC             
7726   E5CC             TIME2ARX_1: ; $ E5CC
7727   E5CC C4              VEJ  (C4) \ AWRD($F19E) \ ABRF(TIME2ARX_2) ; $E5D6
7727   E5CD F1 9E       
7727   E5CF 06          
7728   E5D0 EB 78 6B 01     ORI  (BEEP_PTR),$01
7729   E5D4 9E 0D           BCH TIME2ARX_3 ; $E5C9
7730   E5D6             
7731   E5D6             TIME2ARX_2: ; $ E5D6
7732   E5D6 C6              VEJ  (C6)
7733   E5D7 ED 78 6B 01     BII  (BEEP_PTR),$01
7734   E5DB 89 73           BZR TIME2ARX_4 ; $E650
7735   E5DD DE              VEJ  (DE) \ ABRF(TIME2ARX_12) ; $E653
7735   E5DE 74          
7736   E5DF D2              VEJ  (D2) \ ABRF(TIME2ARX_12) \ ABYT($80)
7736   E5E0 72          
7736   E5E1 80          
7737   E5E2 ED 7A 01 80     BII  (ARX + $01),$80
7738   E5E6 89 68           BZR TIME2ARX_4 ; $E650
7739   E5E8 ED 7A 02 F0     BII  (ARX + $02),$F0
7740   E5EC 8B 62           BZS TIME2ARX_4 ; $E650
7741   E5EE D0              VEJ  (D0) \ ABYT($00) \ ABRF(TIME2ARX_12) ; $E653
7741   E5EF 00          
7741   E5F0 62          
7742   E5F1 FD A8           PSH  U
7743   E5F3 C8              VEJ  (C8) \ ABRF(TIME2ARX_5) ; $E622
7743   E5F4 2D          
7744   E5F5 B5 FF           LDI  A,$FF
7745   E5F7             
7746   E5F7             TIME2ARX_15: ; $ E5F7
7747   E5F7 FD 2A           POP  U
7748   E5F9 FD 98           PSH  Y
7749   E5FB 1A              STA  YL
7750   E5FC FD A8           PSH  U
7751   E5FE             
7752   E5FE             TIME2ARX_9: ; $ E5FE
7753   E5FE 14              LDA  YL
7754   E5FF 8B 18           BZS TIME2ARX_6 ; $E619
7755   E601 BE E6 69        SJP  (BCMD_BEEP_STD)
7756   E604             
7757   E604             TIME2ARX_10: ; $ E604
7758   E604 FD 2A           POP  U
7759   E606 89 42           BZR TIME2ARX_7 ; $E64A
7760   E608 66              DEC  U
7761   E609 24              LDA  UL
7762   E60A 89 03           BZR TIME2ARX_8 ; $E60F
7763   E60C A4              LDA  UH
7764   E60D 8B 3B           BZS TIME2ARX_7 ; $E64A
7765   E60F             
7766   E60F             TIME2ARX_8: ; $ E60F
7767   E60F FD A8           PSH  U
7768   E611 68 00           LDI  UH,$00
7769   E613 6A 06           LDI  UL,$06
7770   E615 CD AC           VMJ  ($AC) ; ($AC)($56)
7771   E617 9E 1B           BCH TIME2ARX_9 ; $E5FE
7772   E619             
7773   E619             TIME2ARX_6: ; $ E619
7774   E619 A5 78 78        LDA  (BEEP_FREQ)
7775   E61C 2A              STA  UL
7776   E61D BE E6 6F        SJP  (BCMD_BEEP)
7777   E620 9E 1E           BCH TIME2ARX_10 ; $E604
7778   E622             
7779   E622             TIME2ARX_5: ; $ E622
7780   E622 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(TIME2ARX_11) ; $E654
7780   E623 2C          
7780   E624 2F          
7781   E625 DE              VEJ  (DE) \ ABRF(TIME2ARX_12) ; $E653
7781   E626 2C          
7782   E627 D0              VEJ  (D0) \ ABYT($08) \ ABRF(TIME2ARX_12) ; $E653
7782   E628 08          
7782   E629 29          
7783   E62A 24              LDA  UL
7784   E62B AE 78 78        STA  (BEEP_FREQ)
7785   E62E C8              VEJ  (C8) \ ABRF(TIME2ARX_13) ; $E636
7785   E62F 06          
7786   E630 48 01           LDI  XH,$01
7787   E632 4A A0           LDI  XL,$A0
7788   E634 8E 10           BCH TIME2ARX_14 ; $E646
7789   E636             
7790   E636             TIME2ARX_13: ; $ E636
7791   E636 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(TIME2ARX_11) ; $E654
7791   E637 2C          
7791   E638 1B          
7792   E639 DE              VEJ  (DE) \ ABRF(TIME2ARX_12) ; $E653
7792   E63A 18          
7793   E63B D0              VEJ  (D0) \ ABYT($02) \ ABRF(TIME2ARX_12) ; $E653
7793   E63C 02          
7793   E63D 15          
7794   E63E FD A8           PSH  U
7795   E640 C8              VEJ  (C8) \ ABRF(TIME2ARX_11) ; $E654
7795   E641 12          
7796   E642 FD 0A           POP  X
7797   E644 FD 40           INC  XH
7798   E646             
7799   E646             TIME2ARX_14: ; $ E646
7800   E646 B5 00           LDI  A,$00
7801   E648 9E 53           BCH TIME2ARX_15 ; $E5F7
7802   E64A             
7803   E64A             TIME2ARX_7: ; $ E64A
7804   E64A FD 1A           POP  Y
7805   E64C CD A2           VMJ  ($A2) ; ($A2)($51)
7806   E64E 56              DEC  Y
7807   E64F E2              VEJ  (E2)
7808   E650             
7809   E650             TIME2ARX_4: ; $ E650
7810   E650 BA C6 84        JMP  BCMD_DATA ; $C684
7811   E653             
7812   E653             TIME2ARX_12: ; $ E653
7813   E653 E0              VEJ  (E0)
7814   E654             
7815   E654             TIME2ARX_11: ; $ E654
7816   E654 E4              VEJ  (E4)
7817   E655             
7818   E655             
7819   E655             
7820   E655             ;------------------------------------------------------------------------------
7821   E655             ; (A2) Beep-On/Off
7822   E655             ;            Address: (A2) E655
7823   E655             ;   Entry parameters: (7868) contains in bit 0 the information whether beep ON 
7824   E655             ;                     (bit 0=1) or beep OFF (bit 0=1) should be switched.
7825   E655             ; 
7826   E655             ; Modified registers: Bit 6 in #(F008), i.e. PC6 is set to 0 at Beep Off. No 
7827   E655             ;                     registers changed. If beep off: Carry flag=1
7828   E655             ;   Error conditions: None
7829   E655             ;------------------------------------------------------------------------------
7830   E655             BEEP_ON_OFF: ; $E655
7831   E655 ED 78 6B 01     BII  (BEEP_PTR),$01
7832   E659 8B 07           BZS BEEP_ON_OFF_1 ; $E662
7833   E65B FD E9 F0 08     ANI  #(PC1500_PRT_C),$BF
7833   E65F BF 
7834   E660 FB              SEC
7835   E661 9A              RTN
7836   E662             
7837   E662             BEEP_ON_OFF_1: ; $E662
7838   E662 FD EB F0 08     ORI  #(PC1500_PRT_C),$40
7838   E666 40 
7839   E667 F9              REC
7840   E668 9A              RTN
7841   E669             
7842   E669             
7843   E669             ; $E669 Standard Beep
7844   E669             BCMD_BEEP_STD:
7845   E669 6A 08           LDI  UL,$08
7846   E66B 48 01           LDI  XH,$01
7847   E66D 4A A0           LDI  XL,$A0
7848   E66F             
7849   E66F             
7850   E66F             
7851   E66F             ; $E66F Beep with duration in X-Reg and pitch in UL
7852   E66F             BCMD_BEEP: ; 
7853   E66F FD 98           PSH  Y
7854   E671 FD 88           PSH  X
7855   E673 FD A8           PSH  U
7856   E675 58 F0           LDI  YH,$F0
7857   E677 5A 08           LDI  YL,$08
7858   E679 24              LDA  UL
7859   E67A 28              STA  UH
7860   E67B             
7861   E67B             BCMD_BEEP_5: ; $E67B
7862   E67B B5 C8           LDI  A,$C8
7863   E67D FD 1E           STA  #(Y)
7864   E67F A4              LDA  UH
7865   E680 2A              STA  UL
7866   E681             
7867   E681             BCMD_BEEP_1: ; $E681
7868   E681 88 02           LOP  UL,BCMD_BEEP_1 ; $E681
7869   E683 FD ED F0 0B     BII  #(PC1500_IF_REG),$03
7869   E687 03 
7870   E688 89 14           BZR BCMD_BEEP_2 ; $E69E
7871   E68A 46              DEC  X
7872   E68B 84              LDA  XH
7873   E68C 8B 10           BZS BCMD_BEEP_2 ; $E69E
7874   E68E B5 88           LDI  A,$88
7875   E690 FD 1E           STA  #(Y)
7876   E692 A4              LDA  UH
7877   E693 2A              STA  UL
7878   E694             
7879   E694             BCMD_BEEP_3: ; $E694
7880   E694 88 02           LOP  UL,BCMD_BEEP_3 ; $E694
7881   E696 6A 01           LDI  UL,$01
7882   E698             
7883   E698             BCMD_BEEP_4: ; $E698
7884   E698 88 02           LOP  UL,BCMD_BEEP_4 ; $E698
7885   E69A 49 FF           ANI  (X),$FF
7886   E69C 9E 23           BCH BCMD_BEEP_5 ; $E67B
7887   E69E             
7888   E69E             BCMD_BEEP_2: ; $E69E
7889   E69E FD 2A           POP  U
7890   E6A0 9E F3           BCH ARX2TIME_2 ; $E5AF
7891   E6A2 E4              VEJ  (E4)
7892   E6A3 E4              VEJ  (E4)
7893   E6A4 E4              VEJ  (E4)
7894   E6A5             
7895   E6A5             
7896   E6A5             
7897   E6A5              ; Basic command PAUSE
7898   E6A5             BCMD_PAUSE: ; $E6A5
7899   E6A5 B5 FF           LDI  A,$FF
7900   E6A7 8E 0F           BCH BCMD_PAUSE_2 ; $E6B8
7901   E6A9             
7902   E6A9             BCMD_PAUSE_25: ; $E6A9
7903   E6A9 B5 AA           LDI  A,$AA
7904   E6AB FD C8           PSH  A
7905   E6AD B5 60           LDI  A,$60
7906   E6AF AE 78 8F        STA  ($788F)
7907   E6B2 FD 98           PSH  Y
7908   E6B4 8E 57           BCH BCMD_PAUSE_3 ; $E70D
7909   E6B6             
7910   E6B6             BCMD_PAUSE_1: ; $E6B6
7911   E6B6 B5 00           LDI  A,$00
7912   E6B8             
7913   E6B8             BCMD_PAUSE_2: ; $E6B8
7914   E6B8 FD C8           PSH  A
7915   E6BA B5 60           LDI  A,$60
7916   E6BC AE 78 8F        STA  ($788F)
7917   E6BF C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_4); $E6FD
7917   E6C0 3C          
7918   E6C1             
7919   E6C1             BCMD_PAUSE_16: ; $E6C1
7920   E6C1 BE EC AE        SJP  (INIT_CURS)
7921   E6C4             
7922   E6C4             BCMD_PAUSE_21: ; $E6C4
7923   E6C4 CD 84           VMJ  ($84) ; ($84)($84)($42)
7924   E6C6 FD 8A           POP  A
7925   E6C8 D9              SHL
7926   E6C9 83 17           BCS BCMD_PAUSE_5 ; $E6E2
7927   E6CB             
7928   E6CB             BCMD_PAUSE_24: ; $E6CB
7929   E6CB D8              VEJ  (D8)
7930   E6CC 89 04           BZR BCMD_PAUSE_6 ; $E6D2
7931   E6CE B5 20           LDI  A,$20
7932   E6D0 8E 24           BCH BCMD_PAUSE_7 ; $E6F6
7933   E6D2             
7934   E6D2             BCMD_PAUSE_6: ; $E6D2
7935   E6D2 A5 78 71        LDA  (WAIT_CFG)
7936   E6D5 D5              SHR
7937   E6D6 83 08           BCS BCMD_PAUSE_8 ; $E6E0
7938   E6D8 D5              SHR
7939   E6D9 81 11           BCR BCMD_PAUSE_9 ; $E6EC
7940   E6DB F4              VEJ  (F4) \ AWRD(WAIT_CTR_H)
7940   E6DC 78 72       
7941   E6DE             
7942   E6DE             BCMD_PAUSE_10: ; $E6DE
7943   E6DE CD AC           VMJ  ($AC) ; ($AC)($56)
7944   E6E0             
7945   E6E0             BCMD_PAUSE_8: ; $E6E0
7946   E6E0 56              DEC  Y
7947   E6E1 E2              VEJ  (E2)
7948   E6E2             
7949   E6E2             BCMD_PAUSE_5: ; $E6E2
7950   E6E2 D9              SHL
7951   E6E3 68 00           LDI  UH,$00
7952   E6E5 6A 36           LDI  UL,$36
7953   E6E7 93 0B           BCS  BCMD_PAUSE_10 ; $E6DE
7954   E6E9 BA EE F7        JMP  BCMD_POINT_4 ; $EEF7
7955   E6EC             
7956   E6EC             BCMD_PAUSE_9: ; $E6EC
7957   E6EC EB 78 8A 20     ORI  (BREAKPARAM),$20
7958   E6F0 D4              VEJ  (D4) \ ABYT($AC)
7958   E6F1 AC          
7959   E6F2 D4              VEJ  (D4) \ ABYT($A0)
7959   E6F3 A0          
7960   E6F4 B5 02           LDI  A,$02
7961   E6F6             
7962   E6F6             BCMD_PAUSE_7: ; $E6F6
7963   E6F6 AE 78 80        STA  (DISPARAM)
7964   E6F9 CD 84           VMJ  ($84) ; ($84)($42)
7965   E6FB CD 46           VMJ  ($46)
7966   E6FD             
7967   E6FD             BCMD_PAUSE_4: ; $E6FD
7968   E6FD CD 9A           VMJ  ($9A) ; ($9A)($4D)
7969   E6FF C3 E0           VCS  ($E0)
7970   E701 DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_11) ; $E7A8
7970   E702 A5          
7971   E703 C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_12) ; $E744
7971   E704 3F          
7972   E705 FD 98           PSH  Y
7973   E707 ED 78 74 01     BII  (CURSOR_ENA),$01
7974   E70B 89 26           BZR BCMD_PAUSE_13 ; $E733
7975   E70D             
7976   E70D             BCMD_PAUSE_3: ; $E70D
7977   E70D BE EF 81        SJP  (OUTBUFCLR)
7978   E710 CD 98           VMJ  ($98) ; ($98)($4C
7979   E712 83 10           BCS BCMD_PAUSE_14 ; $E724
7980   E714 B5 02           LDI  A,$02
7981   E716 CD 96           VMJ  ($96) ; ($96)($4B)
7982   E718 83 8A           BCS BCMD_PAUSE_15 ; $E7A4
7983   E71A 2A              STA  UL
7984   E71B BD FF           EAI  $FF
7985   E71D B3 7B           ADI  A,$7B
7986   E71F AE 78 8F        STA  ($788F)
7987   E722 CD 94           VMJ  ($94) ; ($94)($4A)
7988   E724             
7989   E724             BCMD_PAUSE_14: ; $E724
7990   E724 B5 1A           LDI  A,$1A
7991   E726 BE EC B2        SJP  (INIT_MTRX)
7992   E729             
7993   E729             BCMD_PAUSE_18: ; $E729
7994   E729 68 7B           LDI  UH,$7B
7995   E72B 6A 60           LDI  UL,$60
7996   E72D CD 92           VMJ  ($92) ; ($92)($49)
7997   E72F FD 1A           POP  Y
7998   E731 9E 72           BCH BCMD_PAUSE_16 ; $E6C1
7999   E733             
8000   E733             BCMD_PAUSE_13: ; $E733
8001   E733 CD 98           VMJ  ($98) ; ($98)($4C)
8002   E735 83 07           BCS BCMD_PAUSE_17 ; $E73E
8003   E737 B5 01           LDI  A,$01
8004   E739 BE EC D6        SJP  (ARX2OUTBUF_F)
8005   E73C 83 66           BCS BCMD_PAUSE_15 ; $E7A4
8006   E73E             
8007   E73E             BCMD_PAUSE_17: ; $E73E
8008   E73E FB              SEC
8009   E73F 14              LDA  YL
8010   E740 B1 60           SBI  A,$60
8011   E742 9E 1B           BCH BCMD_PAUSE_18 ; $E729
8012   E744             
8013   E744             BCMD_PAUSE_12: ; $E744
8014   E744 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_PAUSE_19) ; $E785
8014   E745 2C          
8014   E746 3E          
8015   E747 FD 98           PSH  Y
8016   E749 CD 9C           VMJ  ($9C); ($9C)($4E)
8017   E74B 83 57           BCS BCMD_PAUSE_15 ; $E7A4
8018   E74D FD 1A           POP  Y
8019   E74F C8              VEJ  (C8) \ ABRF(BCMD_PAUSE_20) ; $E766
8019   E750 15          
8020   E751 E9 78 74 FE     ANI  (CURSOR_ENA),$FE
8021   E755 BE EC 9C        SJP  (CLRNOCURSOR)
8022   E758 68 7B           LDI  UH,$7B
8023   E75A 6A 60           LDI  UL,$60
8024   E75C CD 92           VMJ  ($92) ; ($92)($49)
8025   E75E EB 78 74 01     ORI  (CURSOR_ENA),$01
8026   E762 91 A0           BCR BCMD_PAUSE_21 ; $E6C4
8027   E764 9E A5           BCH BCMD_PAUSE_16 ; $E6C1
8028   E766             
8029   E766             BCMD_PAUSE_20: ; $E766
8030   E766 CD 9A           VMJ  ($9A) ; ($9A)($4D)
8031   E768 C3 E0           VCS  ($E0)
8032   E76A DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_11) ; $E7A8
8032   E76B 3C          
8033   E76C C2              VEJ  (C2) \ ACHR($2C) \ ABRF(BCMD_PAUSE_22) ; $E770
8033   E76D 2C          
8033   E76E 01          
8034   E76F E4              VEJ  (E4)
8035   E770             
8036   E770             BCMD_PAUSE_22: ; $E770
8037   E770 CD 04           VMJ  ($04) \ ABRF(BCMD_PAUSE_23) ; $E7A9
8037   E772 36          
8038   E773 FD 98           PSH  Y
8039   E775 CD 9C           VMJ  ($9C) ; ($9C)($4E)
8040   E777 83 2B           BCS BCMD_PAUSE_15 ; $E7A4
8041   E779 BE EC B2        SJP  (INIT_MTRX)
8042   E77C 9E 40           BCH BCMD_PAUSE_17 ; $E73E
8043   E77E CD 9A           VMJ  ($9A) ; ($9A)($4D)
8044   E780 C3 E0           VCS  ($E0)
8045   E782 DE              VEJ  (DE) \ ABRF(BCMD_PAUSE_11) ; $E7A8
8045   E783 24          
8046   E784 C0              VEJ  (C0)
8047   E785             
8048   E785             BCMD_PAUSE_19: ; $E785
8049   E785 C4              VEJ  (C4) \ ACHR($3B) \ ABRF($E795)
8049   E786 3B          
8049   E787 0D          
8050   E788 FD 98           PSH  Y
8051   E78A BE EC E3        SJP  (ARXASCII2OUTBUF)
8052   E78D 83 15           BCS BCMD_PAUSE_15 ; $E7A4
8053   E78F FD 1A           POP  Y
8054   E791 C8              VEJ  (C8) \ ABRF($E7AA)
8054   E792 17          
8055   E793 9E 40           BCH $E755
8056   E795 CD 04           VMJ  ($04) \ ABRF(BCMD_PAUSE_23) ; $E7A9
8056   E797 11          
8057   E798 FD 98           PSH  Y
8058   E79A BE EC E3        SJP  (ARXASCII2OUTBUF)
8059   E79D 83 05           BCS BCMD_PAUSE_15 ; $E7A4
8060   E79F BE EC 9C        SJP  (CLRNOCURSOR)
8061   E7A2 9E 7B           BCH BCMD_PAUSE_18 ; $E729
8062   E7A4             
8063   E7A4             BCMD_PAUSE_15: ; $E7A4
8064   E7A4 68 24           LDI  UH,$24
8065   E7A6 FD 1A           POP  Y
8066   E7A8             
8067   E7A8             BCMD_PAUSE_11: ; $E7A8
8068   E7A8 E0              VEJ  (E0)
8069   E7A9             
8070   E7A9             BCMD_PAUSE_23: ; $E7A9
8071   E7A9 E4              VEJ  (E4)
8072   E7AA 9E 2E           BCH $E77E
8073   E7AC             
8074   E7AC             
8075   E7AC             
8076   E7AC              ; Basic command GPRINT
8077   E7AC             BCMD_GPRINT: ; $E7AC
8078   E7AC C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_1) ; $E7B0
8078   E7AD 02          
8079   E7AE 8E 5B           BCH $E80B
8080   E7B0             
8081   E7B0             BCMD_GPRINT_1: ; $E7B0
8082   E7B0 FD A8           PSH  U
8083   E7B2 BE EC 9C        SJP  (CLRNOCURSOR)
8084   E7B5 FD 2A           POP  U
8085   E7B7             
8086   E7B7             BCMD_GPRINT_19: ; $E7B7
8087   E7B7 C6              VEJ  (C6)
8088   E7B8 DE              VEJ  (DE) \ ABRF($E831)
8088   E7B9 77          
8089   E7BA BE ED AB        SJP  (MTRXNRANGE);($48)
8090   E7BD 83 38           BCS BCMD_GPRINT_2 ; $E7F7
8091   E7BF FD 98           PSH  Y
8092   E7C1 CD 8C           VMJ  ($8C) ; ($8C)($46)
8093   E7C3 FD 88           PSH  X
8094   E7C5 A5 7A 04        LDA  (ARX + $04)
8095   E7C8 B7 C0           CPI  A,$C0
8096   E7CA 81 1C           BCR BCMD_GPRINT_3 ; $E7E8
8097   E7CC DC              VEJ  (DC)
8098   E7CD             
8099   E7CD             BCMD_GPRINT_7: ; $E7CD
8100   E7CD 6E 02           CPI  UL,$02
8101   E7CF 81 22           BCR BCMD_GPRINT_4 ; $E7F3
8102   E7D1 BE ED 95        SJP  (ASCII2HEX)
8103   E7D4 FD 5A           STX  Y
8104   E7D6 FD 0A           POP  X
8105   E7D8 81 58           BCR BCMD_GPRINT_5 ; $E832
8106   E7DA CD 88           VMJ  ($88) ; ($88)($44)
8107   E7DC 62              DEC  UL
8108   E7DD 62              DEC  UL
8109   E7DE CD 8E           VMJ  ($8E) ; ($8E)($47)
8110   E7E0 83 13           BCS BCMD_GPRINT_6 ; $E7F5
8111   E7E2 FD 88           PSH  X
8112   E7E4 FD 18           LDX  Y
8113   E7E6 9E 1B           BCH BCMD_GPRINT_7 ; $E7CD
8114   E7E8             
8115   E7E8             BCMD_GPRINT_3: ; $E7E8
8116   E7E8 D0              VEJ  (D0) \ ABYT($08) \ ABRF(BCMD_GPRINT_8) ; $E836
8116   E7E9 08          
8116   E7EA 4B          
8117   E7EB FD 0A           POP  X
8118   E7ED CD 88           VMJ  ($88) ; ($88)($44)
8119   E7EF CD 8E           VMJ  ($8E) ; ($8E)($47)
8120   E7F1 8E 02           BCH BCMD_GPRINT_6 ; $E7F5
8121   E7F3             
8122   E7F3             BCMD_GPRINT_4: ; $E7F3
8123   E7F3 FD 0A           POP  X
8124   E7F5             
8125   E7F5             BCMD_GPRINT_6: ; $E7F5
8126   E7F5 FD 1A           POP  Y
8127   E7F7             
8128   E7F7             BCMD_GPRINT_2: ; $E7F7
8129   E7F7 C2              VEJ  (C2) \ ACHR($3B) \ ABRF(BCMD_GPRINT_9) ; $E808
8129   E7F8 3B          
8129   E7F9 0E          
8130   E7FA C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_10) ; $E83C
8130   E7FB 40          
8131   E7FC             
8132   E7FC             BCMD_GPRINT_20: ; $E7FC
8133   E7FC EB 78 74 01     ORI  (CURSOR_ENA),$01
8134   E800 BE ED AB        SJP  (MTRXNRANGE);($48)
8135   E803 83 0A           BCS BCMD_GPRINT_11 ; $E80F
8136   E805             
8137   E805             BCMD_GPRINT_13: ; $E805
8138   E805 BA E6 CB        JMP  BCMD_PAUSE_24 ; $E6CB
8139   E808             
8140   E808             BCMD_GPRINT_9: ; $E808
8141   E808 CD 04           VMJ  ($04) \ ABRF(BCMD_GPRINT_12) ; $E814
8141   E80A 09          
8142   E80B E9 78 74 FE     ANI  (CURSOR_ENA),$FE
8143   E80F             
8144   E80F             BCMD_GPRINT_11: ; $E80F
8145   E80F BE EC B2        SJP  (INIT_MTRX)
8146   E812 9E 0F           BCH BCMD_GPRINT_13 ; $E805
8147   E814             
8148   E814             BCMD_GPRINT_12: ; $E814
8149   E814 C4              VEJ  (C4) \ ACHR($2C) \ ABRF(BCMD_GPRINT_14) ; $E827
8149   E815 2C          
8149   E816 10          
8150   E817 BE ED AB        SJP  (MTRXNRANGE);($48)
8151   E81A 83 07           BCS BCMD_GPRINT_15 ; $E823
8152   E81C B5 00           LDI  A,$00
8153   E81E BE ED EF        SJP  (HEX2COL)
8154   E821 CD 8E           VMJ  ($8E) ; ($8E)($47)
8155   E823             
8156   E823             BCMD_GPRINT_15: ; $E823
8157   E823 C8              VEJ  (C8) \ ABRF(BCMD_GPRINT_10) ; $E83C
8157   E824 17          
8158   E825 9E 2B           BCH BCMD_GPRINT_20 ; $E7FC
8159   E827             
8160   E827             BCMD_GPRINT_14: ; $E827
8161   E827 68 01           LDI  UH,$01
8162   E829             
8163   E829             BCMD_GPRINT_18: ; $E829
8164   E829 BE ED AB        SJP  (MTRXNRANGE);($48)
8165   E82C 81 03           BCR BCMD_GPRINT_16 ; $E831
8166   E82E BE EC B2        SJP  (INIT_MTRX)
8167   E831             
8168   E831             BCMD_GPRINT_16: ; $E831
8169   E831 E0              VEJ  (E0)
8170   E832             
8171   E832             BCMD_GPRINT_5: ; $E932
8172   E832 68 24           LDI  UH,$24
8173   E834 8E 02           BCH BCMD_GPRINT_17 ; $E838
8174   E836             
8175   E836             BCMD_GPRINT_8: ; $E836
8176   E836 FD 0A           POP  X
8177   E838             
8178   E838             BCMD_GPRINT_17: ; $E838
8179   E838 FD 1A           POP  Y
8180   E83A 9E 13           BCH BCMD_GPRINT_18 ; $E829
8181   E83C             
8182   E83C             BCMD_GPRINT_10: ; $E82C
8183   E83C 9E 87           BCH BCMD_GPRINT_19 ; $E7B7
8184   E83E             
8185   E83E             
8186   E83E             
8187   E83E              ; Basic command GCURSOR
8188   E83E             BCMD_GCURSOR: ; $E83E
8189   E83E DE              VEJ  (DE) \ ABRF(BCMD_WAIT_1) ; $E88A
8189   E83F 4A          
8190   E840 D0              VEJ  (D0) \ ABYT($0A) \ ABRF(BCMD_WAIT_1) ; $E88A
8190   E841 0A          
8190   E842 47          
8191   E843 24              LDA  UL
8192   E844 8E 17           BCH BCMD_CURSOR_2 ; $E85D
8193   E846             
8194   E846             
8195   E846             
8196   E846             
8197   E846             ; Basic command CURSOR
8198   E846             BCMD_CURSOR_1: ; $E846
8199   E846 C8              VEJ  (C8) \ ABRF(BCMD_CURSOR_3) ; $E852
8199   E847 0A          
8200   E848 E9 78 75 00     ANI  (CURSOR_PTR),$00
8201   E84C E9 78 74 FE     ANI  (CURSOR_ENA),$FE
8202   E850 56              DEC  Y
8203   E851 E2              VEJ  (E2)
8204   E852             
8205   E852             BCMD_CURSOR_3: ; $E852
8206   E852 C6              VEJ  (C6)
8207   E853 DE              VEJ  (DE) \ ABRF(BCMD_WAIT_1) ; $E88A
8207   E854 35          
8208   E855 D0              VEJ  (D0) \ ABYT($10) \ ABRF(BCMD_WAIT_1) ; $E88A
8208   E856 10          
8208   E857 32          
8209   E858 24              LDA  UL
8210   E859 D9              SHL
8211   E85A F9              REC
8212   E85B 22              ADC  UL
8213   E85C D9              SHL
8214   E85D             
8215   E85D             BCMD_CURSOR_2: ; $E85D
8216   E85D AE 78 75        STA  (CURSOR_PTR)
8217   E860 EB 78 74 01     ORI  (CURSOR_ENA),$01
8218   E864 E2              VEJ  (E2)
8219   E865             
8220   E865             
8221   E865             
8222   E865             ; Basic Command CLS
8223   E865             BCMD_CLS: ; $E865
8224   E865 F2              VEJ  (F2)
8225   E866 BE EC AE        SJP  (INIT_CURS)
8226   E869 E2              VEJ  (E2)
8227   E86A             
8228   E86A             
8229   E86A             ; Basic Command WAIT
8230   E86A             BCMD_WAIT: ; $E86A
8231   E86A C8              VEJ  (C8) \ ABRF(BCMD_WAIT_2) ; $E871
8231   E86B 05          
8232   E86C 56              DEC  Y
8233   E86D B5 00           LDI  A,$00
8234   E86F 8E 15           BCH BCMD_WAIT_3 ; $E886
8235   E871             
8236   E871             BCMD_WAIT_2: ; $E871
8237   E871 C6              VEJ  (C6)
8238   E872 DE              VEJ  (DE) \ ABRF(BCMD_WAIT_1) ; $E88A
8238   E873 16          
8239   E874 D0              VEJ  (D0) \ ABYT($00) \ ABRF(BCMD_WAIT_1) ; $E88A
8239   E875 00          
8239   E876 13          
8240   E877 F6              VEJ  (F6) \ AWRD(WAIT_CTR_H)
8240   E878 78 72       
8241   E87A B5 02           LDI  A,$02
8242   E87C 6C 00           CPI  UH,$00
8243   E87E 89 06           BZR BCMD_WAIT_3 ; $E886
8244   E880 6E 00           CPI  UL,$00
8245   E882 89 02           BZR BCMD_WAIT_3 ; $E886
8246   E884 B5 03           LDI  A,$03
8247   E886             
8248   E886             BCMD_WAIT_3: ; $E886
8249   E886 AE 78 71        STA  (WAIT_CFG)
8250   E889 E2              VEJ  (E2)
8251   E88A             
8252   E88A             BCMD_WAIT_1: ; $E86A
8253   E88A E0              VEJ  (E0)
8254   E88B E4              VEJ  (E4)
8255   E88C             
8256   E88C             
8257   E88C             
8258   E88C             ;------------------------------------------------------------------------------
8259   E88C             ; Time delay by 15.625 ms * U-Reg
8260   E88C             ;            Address: E88C (AC)
8261   E88C             ;   Entry parameters: U-Reg contains the number of delay loops.
8262   E88C             ; 
8263   E88C             ; Modified registers: U-Reg
8264   E88C             ;   Error conditions: It is possible to abort with the break key
8265   E88C             ;------------------------------------------------------------------------------
8266   E88C             TIMEDELAY: ; $E88C
8267   E88C FD 98           PSH  Y
8268   E88E FD A8           PSH  U
8269   E890 B5 20           LDI  A,$20
8270   E892 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8271   E894 FD 2A           POP  U
8272   E896 B5 00           LDI  A,$00
8273   E898 FD AE F0 0D     STA  #(PC1500_PRT_B_DIR)
8274   E89C             
8275   E89C             TIMEDELAY_2: ; $E89C
8276   E89C FD ED F0 0F     BII  #(PC1500_PRT_B),$20
8276   E8A0 20 
8277   E8A1 8B 06           BZS TIMEDELAY_1 ; $E8A9
8278   E8A3 CD A6           VMJ  ($A6) ; ($A6)($53)
8279   E8A5 9B 0B           BZS TIMEDELAY_2 ; $E89C
8280   E8A7 8E 0B           BCH TIMEDELAY_3 ; $E8B4
8281   E8A9             
8282   E8A9             TIMEDELAY_1: ; $E8A9
8283   E8A9 FD ED F0 0F     BII  #(PC1500_PRT_B),$20
8283   E8AD 20 
8284   E8AE 89 0C           BZR TIMEDELAY_4 ; $E8BC
8285   E8B0 CD A6           VMJ  ($A6) ; ($A6)($53)
8286   E8B2 9B 0B           BZS TIMEDELAY_1 ; $E8A9
8287   E8B4             
8288   E8B4             TIMEDELAY_3: ; $E8B4
8289   E8B4 B5 00           LDI  A,$00
8290   E8B6 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8291   E8B8 FB              SEC
8292   E8B9             
8293   E8B9             TIMEDELAY_5: ; $E8B9
8294   E8B9 FD 1A           POP  Y
8295   E8BB 9A              RTN
8296   E8BC             
8297   E8BC             TIMEDELAY_4: ; $E8BC
8298   E8BC 62              DEC  UL
8299   E8BD 93 23           BCS TIMEDELAY_2 ; $E89C
8300   E8BF FD 62           DEC  UH
8301   E8C1 93 27           BCS TIMEDELAY_2 ; $E89C
8302   E8C3 B5 00           LDI  A,$00
8303   E8C5 CD 5A           VMJ  ($5A) ; ($5A)($2D)
8304   E8C7 F9              REC
8305   E8C8 9E 11           BCH TIMEDELAY_5 ; $E8B9
8306   E8CA             
8307   E8CA             
8308   E8CA             
8309   E8CA              ; Display Program
8310   E8CA             PRGMDISP: ; $E8CA
8311   E8CA A5 78 80        LDA  (DISPARAM)
8312   E8CD BF 31           BII  A,$31
8313   E8CF 89 96           BZR PRGMDISP_1 ; $E967
8314   E8D1 FD 98           PSH  Y
8315   E8D3 14              LDA  YL
8316   E8D4 FD C8           PSH  A
8317   E8D6 48 7A           LDI  XH,$7A
8318   E8D8 4A 08           LDI  XL,$08
8319   E8DA ED 78 8A 10     BII  (BREAKPARAM),$10
8320   E8DE 89 10           BZR PRGMDISP_2 ; $E8F0
8321   E8E0 ED 78 80 40     BII  (DISPARAM),$40
8322   E8E4 8B 11           BZS PRGMDISP_3 ; $E8F7
8323   E8E6 FD 88           PSH  X
8324   E8E8 B5 E5           LDI  A,$E5
8325   E8EA             
8326   E8EA             PRGMDISP_5: ; $E8EA
8327   E8EA 68 7B           LDI  UH,$7B
8328   E8EC 6A B0           LDI  UL,$B0
8329   E8EE 8E 28           BCH PRGMDISP_4 ; $E918
8330   E8F0             
8331   E8F0             PRGMDISP_2: ; $E8F0
8332   E8F0 FD 88           PSH  X
8333   E8F2 A5 78 77        LDA  ($7877)
8334   E8F5 9E 0D           BCH PRGMDISP_5 ; $E8EA
8335   E8F7             
8336   E8F7             PRGMDISP_3: ; $E8F7
8337   E8F7 58 7B           LDI  YH,$7B
8338   E8F9 5A B0           LDI  YL,$B0
8339   E8FB 8E 71           BCH PRGMDISP_6 ; $E96E
8340   E8FD             
8341   E8FD             PRGMDISP_31: ; $E8FF
8342   E8FD ED 78 80 40     BII  (DISPARAM),$40
8343   E901 8B 6B           BZS PRGMDISP_6 ; $E96E
8344   E903 FD 8A           POP  A
8345   E905 FD C8           PSH  A
8346   E907 FD 88           PSH  X
8347   E909 FD 98           PSH  Y
8348   E90B FD 2A           POP  U
8349   E90D ED 78 7B FF     BII  ($787B),$FF
8350   E911 89 01           BZR PRGMDISP_7 ; $E914
8351   E913 1A              STA  YL
8352   E914             
8353   E914             PRGMDISP_7: ; $E914
8354   E914 F9              REC
8355   E915 04              LDA  XL
8356   E916 B3 DD           ADI  A,$DD
8357   E918             
8358   E918             PRGMDISP_4: ; $E918
8359   E918 64              INC  U
8360   E919 FD C8           PSH  A
8361   E91B FD A8           PSH  U
8362   E91D C0              VEJ  (C0)
8363   E91E 81 16           BCR PRGMDISP_8 ; $E936
8364   E920 CD 1C           VMJ  ($1C) \ ABYT($04)
8364   E922 04          
8365   E923 8B 11           BZS PRGMDISP_8 ; $E936
8366   E925 2A              STA  UL
8367   E926 FD 0A           POP  X
8368   E928 F9              REC
8369   E929 FD 8A           POP  A
8370   E92B 22              ADC  UL
8371   E92C 83 02           BCS PRGMDISP_9 ; $E930
8372   E92E 8E 11           BCH PRGMDISP_10 ; $E941
8373   E930             
8374   E930             PRGMDISP_9: ; $E930
8375   E930 C6              VEJ  (C6)
8376   E931 8E 28           BCH PRGMDISP_11 ; $E95B
8377   E933             
8378   E933             PRGMDISP_15: ; $E933
8379   E933 C0              VEJ  (C0)
8380   E934 83 29           BCS PRGMDISP_12 ; $E95F
8381   E936             
8382   E936             PRGMDISP_8: ; $E936
8383   E936 B5 01           LDI  A,$01
8384   E938             
8385   E938             PRGMDISP_16: ; $E938
8386   E938 2A              STA  UL
8387   E939 FD 0A           POP  X
8388   E93B F9              REC
8389   E93C FD 8A           POP  A
8390   E93E 22              ADC  UL
8391   E93F 83 1A           BCS PRGMDISP_11 ; $E95B
8392   E941             
8393   E941             PRGMDISP_10: ; $E941
8394   E941 C6              VEJ  (C6)
8395   E942 FD C8           PSH  A
8396   E944 14              LDA  YL
8397   E945 06              CPA  XL
8398   E946 81 11           BCR PRGMDISP_13 ; $E959
8399   E948 FD 88           PSH  X
8400   E94A 8B 0A           BZS PRGMDISP_14 ; $E956
8401   E94C 56              DEC  Y
8402   E94D 56              DEC  Y
8403   E94E 15              LDA  (Y)
8404   E94F B7 E0           CPI  A,$E0
8405   E951 93 20           BCS PRGMDISP_15 ; $E933
8406   E953 54              INC  Y
8407   E954 9E 23           BCH PRGMDISP_15 ; $E933
8408   E956             
8409   E956             PRGMDISP_14: ; $E956
8410   E956 56              DEC  Y
8411   E957 9E 26           BCH PRGMDISP_15 ;  $E933
8412   E959             
8413   E959             PRGMDISP_13: ; $E959
8414   E959 FD 8A           POP  A
8415   E95B             
8416   E95B             PRGMDISP_11: ; $E95B
8417   E95B FD 0A           POP  X
8418   E95D 8E 0F           BCH PRGMDISP_6 ; $E96E
8419   E95F             
8420   E95F             PRGMDISP_12: ; $E95F
8421   E95F CD 1C           VMJ  ($1C) \ ABYT($04)
8421   E961 04          
8422   E962 9B 2E           BZS PRGMDISP_8 ; $E936
8423   E964 DD              INC  A
8424   E965 9E 2F           BCH PRGMDISP_16 ; $E938
8425   E967             
8426   E967             PRGMDISP_1: ; $E967
8427   E967 F1              AEX
8428   E968 D5              SHR
8429   E969 83 BB           BCS STATUSCHK_1 $EA26
8430   E96B BA EE EC        JMP  BCMD_POINT_2 ; $EEEC
8431   E96E             
8432   E96E             PRGMDISP_6: ; $E96E
8433   E96E FD 8A           POP  A
8434   E970 FD C8           PSH  A
8435   E972 16              CPA  YL
8436   E973 89 04           BZR PRGMDISP_17 ; $E979
8437   E975 04              LDA  XL
8438   E976 AE 78 7B        STA  ($787B)
8439   E979             
8440   E979             PRGMDISP_17: ; $E979
8441   E979 C0              VEJ  (C0)
8442   E97A 83 1B           BCS PRGMDISP_18 ; $E997
8443   E97C B7 0D           CPI  A,$0D
8444   E97E 8B 2C           BZS PRGMDISP_19 ; $E9AC
8445   E980             
8446   E980             PRGMDISP_23: ; $E980
8447   E980 41              SIN  X
8448   E981 4E 22           CPI  XL,$22
8449   E983 91 17           BCR PRGMDISP_6 ; $E96E
8450   E985 BE E9 EB        SJP  (STATUSCHK)
8451   E988 83 2E           BCS PRGMDISP_20 ; $E9B8
8452   E98A B5 1A           LDI  A,$1A
8453   E98C             
8454   E98C             PRGMDISP_30: ; $E98C
8455   E98C 28              STA  UH
8456   E98D             
8457   E98D             PRGMDISP_29: ; $E98D
8458   E98D FD 8A           POP  A
8459   E98F A5 78 75        LDA  (CURSOR_PTR)
8460   E992 FD C8           PSH  A
8461   E994 A4              LDA  UH
8462   E995 8E 2E           BCH PRGMDISP_21 ; $E9C5
8463   E997             
8464   E997             PRGMDISP_18: ; $E997
8465   E997 FD 98           PSH  Y
8466   E999 FD 5A           STX  Y
8467   E99B CD 1C           VMJ  ($1C) \ ABYT($02)
8467   E99D 02          
8468   E99E 8B 08           BZS PRGMDISP_22 ; $E9A8
8469   E9A0 B5 20           LDI  A,$20
8470   E9A2             
8471   E9A2             PRGMDISP_24: ; $E9A2
8472   E9A2 FD 18           LDX  Y
8473   E9A4 FD 1A           POP  Y
8474   E9A6 9E 28           BCH PRGMDISP_23 ; $E980
8475   E9A8             
8476   E9A8             PRGMDISP_22: ; $E9A8
8477   E9A8 B5 7E           LDI  A,$7E
8478   E9AA 9E 0A           BCH PRGMDISP_24 ; $E9A2
8479   E9AC             
8480   E9AC             PRGMDISP_19: ; $E9AC
8481   E9AC BE E9 EB        SJP  (STATUSCHK)
8482   E9AF 81 1C           BCR PRGMDISP_25 ; $E9CD
8483   E9B1 B5 00           LDI  A,$00
8484   E9B3             
8485   E9B3             PRGMDISP_26: ; $E9B3
8486   E9B3 41              SIN  X
8487   E9B4 4E 22           CPI  XL,$22
8488   E9B6 91 05           BCR PRGMDISP_26 ; $E9B3
8489   E9B8             
8490   E9B8             PRGMDISP_20: ; $E9B8
8491   E9B8 FD 8A           POP  A
8492   E9BA A5 78 75        LDA  (CURSOR_PTR)
8493   E9BD FD C8           PSH  A
8494   E9BF E9 78 75 00     ANI  (CURSOR_PTR),$00
8495   E9C3 B5 1A           LDI  A,$1A
8496   E9C5             
8497   E9C5             PRGMDISP_21: ; $E9C5
8498   E9C5 68 7A           LDI  UH,$7A
8499   E9C7 6A 08           LDI  UL,$08
8500   E9C9 CD 92           VMJ  ($92) ; ($92)($49)
8501   E9CB 8E 2C           BCH STATUSCHK_2 ; $E9F9
8502   E9CD             
8503   E9CD             PRGMDISP_25: ; $E9CD
8504   E9CD 49 00           ANI  (X),$00
8505   E9CF 04              LDA  XL
8506   E9D0 B1 06           SBI  A,$06
8507   E9D2 A7 78 76        CPA  (CHARPOS_LCD)
8508   E9D5 83 0F           BCS PRGMDISP_27 ; $E9E6
8509   E9D7 2A              STA  UL
8510   E9D8 A5 78 76        LDA  (CHARPOS_LCD)
8511   E9DB 28              STA  UH
8512   E9DC DD              INC  A
8513   E9DD 20              SBC  UL
8514   E9DE 2A              STA  UL
8515   E9DF B5 00           LDI  A,$00
8516   E9E1             
8517   E9E1             PRGMDISP_28: ; $E9E1
8518   E9E1 41              SIN  X
8519   E9E2 88 03           LOP  UL,PRGMDISP_28 ; $E9E1
8520   E9E4 9E 59           BCH PRGMDISP_29 ; $E98D
8521   E9E6             
8522   E9E6             PRGMDISP_27: ; $E9E6
8523   E9E6 AE 78 76        STA  (CHARPOS_LCD)
8524   E9E9 9E 5F           BCH PRGMDISP_30 ; $E98C
8525   E9EB             
8526   E9EB             
8527   E9EB             
8528   E9EB              ; $E9EB Checks display and input status. Checks computer status.
8529   E9EB             STATUSCHK: ; 
8530   E9EB ED 78 80 10     BII  (DISPARAM),$10
8531   E9EF 89 07           BZR STATUSCHK_3 ; $E9F8
8532   E9F1 ED 78 8A 10     BII  (BREAKPARAM),$10
8533   E9F5 8B 01           BZS STATUSCHK_3 ; $E9F8
8534   E9F7 F9              REC
8535   E9F8             
8536   E9F8             STATUSCHK_3: ; $E9F8
8537   E9F8 9A              RTN
8538   E9F9             
8539   E9F9             STATUSCHK_2: ; $E9F9
8540   E9F9 ED 78 80 40     BII  (DISPARAM),$40
8541   E9FD 8B 19           BZS STATUSCHK_4 ; $EA18
8542   E9FF CC              VEJ  (CC) \ ABYTL(CURS_POS_NBUF_H) ; $787E
8542   EA00 7E          
8543   EA01 A5 78 7D        LDA  (BLNKD_CHAR_CODE)
8544   EA04 B7 20           CPI  A,$20
8545   EA06 81 16           BCR STATUSCHK_5 ; $EA1E
8546   EA08 B5 7F           LDI  A,$7F
8547   EA0A EB 78 7C 81     ORI  (CURSOR_BLNK),$81
8548   EA0E             
8549   EA0E             STATUSCHK_7: ; $EA0E
8550   EA0E CD 8A           VMJ  ($8A) ; ($8A)($45)
8551   EA10             
8552   EA10             STATUSCHK_6: ; $EA10
8553   EA10 FD 8A           POP  A
8554   EA12 AE 78 75        STA  (CURSOR_PTR)
8555   EA15 FD 1A           POP  Y
8556   EA17 9A              RTN
8557   EA18             
8558   EA18             STATUSCHK_4: ; $EA18
8559   EA18 E9 78 7C 7E     ANI  (CURSOR_BLNK),$7E
8560   EA1C 9E 0E           BCH STATUSCHK_6 ; $EA10
8561   EA1E             
8562   EA1E             STATUSCHK_5: ; $EA1E
8563   EA1E B5 5F           LDI  A,$5F
8564   EA20 E9 78 7C 7E     ANI  (CURSOR_BLNK),$7E
8565   EA24 9E 18           BCH STATUSCHK_7 ; $EA0E
8566   EA26             
8567   EA26             STATUSCHK_1: ; $EA26
8568   EA26 FD 98           PSH  Y
8569   EA28 E9 78 7B 00     ANI  ($787B),$00
8570   EA2C ED 78 80 40     BII  (DISPARAM),$40
8571   EA30 89 02           BZR STATUSCHK_8 ; $EA34
8572   EA32 5A B0           LDI  YL,$B0
8573   EA34             
8574   EA34             STATUSCHK_8: ; $EA34
8575   EA34 14              LDA  YL
8576   EA35 FD C8           PSH  A
8577   EA37 48 7A           LDI  XH,$7A
8578   EA39 4A 08           LDI  XL,$08
8579   EA3B 5A B0           LDI  YL,$B0
8580   EA3D             
8581   EA3D             STATUSCHK_11: ; $EA3D
8582   EA3D FD 8A           POP  A
8583   EA3F FD C8           PSH  A
8584   EA41 16              CPA  YL
8585   EA42 8B 23           BZS STATUSCHK_9 ; $EA67
8586   EA44 C0              VEJ  (C0)
8587   EA45 B7 3A           CPI  A,$3A
8588   EA47 83 17           BCS STATUSCHK_10 ; $EA60
8589   EA49 B7 30           CPI  A,$30
8590   EA4B 81 13           BCR STATUSCHK_10 ; $EA60
8591   EA4D 41              SIN  X
8592   EA4E 4E 0E           CPI  XL,$0E
8593   EA50 91 15           BCR STATUSCHK_11 ; $EA3D
8594   EA52             
8595   EA52             STATUSCHK_14: ; $EA52
8596   EA52 B5 20           LDI  A,$20
8597   EA54 ED 78 80 04     BII  (DISPARAM),$04
8598   EA58 8B 02           BZS STATUSCHK_12 ; $EA5C
8599   EA5A B5 3A           LDI  A,$3A
8600   EA5C             
8601   EA5C             STATUSCHK_12: ; $EA5C
8602   EA5C 41              SIN  X
8603   EA5D             
8604   EA5D             STATUSCHK_13: ; $EA5D
8605   EA5D BA E8 FD        JMP  PRGMDISP_31 ; $E8FD
8606   EA60             
8607   EA60             STATUSCHK_10: ; $EA60
8608   EA60 C6              VEJ  (C6)
8609   EA61 4E 09           CPI  XL,$09
8610   EA63 91 08           BCR STATUSCHK_13 ; $EA5D
8611   EA65 9E 15           BCH STATUSCHK_14 ; $EA52
8612   EA67             
8613   EA67             STATUSCHK_9: ; $EA67
8614   EA67 C0              VEJ  (C0)
8615   EA68 B7 3A           CPI  A,$3A
8616   EA6A 93 0C           BCS STATUSCHK_10 ; $EA60
8617   EA6C B7 30           CPI  A,$30
8618   EA6E 91 10           BCR STATUSCHK_10 ; $EA60
8619   EA70 0E              STA  (X)
8620   EA71 04              LDA  XL
8621   EA72 AE 78 7B        STA  ($787B)
8622   EA75 44              INC  X
8623   EA76 9E 2A           BCH $EA4E
8624   EA78             
8625   EA78             
8626   EA78             
8627   EA78              ; (96) Using formatting. If error C=1.
8628   EA78             USING_FRMT: ; $EA78
8629   EA78 FD C8           PSH  A
8630   EA7A CD 54           VMJ  ($54) ; ($54)($2A)
8631   EA7C 4A 10           LDI  XL,$10
8632   EA7E 6A 0D           LDI  UL,$0D
8633   EA80 B5 20           LDI  A,$20
8634   EA82             
8635   EA82             USING_FRMT_1: ; $EA82
8636   EA82 41              SIN  X
8637   EA83 88 03           LOP  UL,USING_FRMT_1 ; $EA82
8638   EA85 ED 78 96 FF     BII  (USINGM),$FF
8639   EA89 8B 43           BZS USING_FRMT_2 ; $EACE
8640   EA8B ED 78 95 80     BII  (USINGF),$80
8641   EA8F 89 95           BZR USING_FRMT_3 ; $EB26
8642   EA91 A5 78 98        LDA  (USINGMD)
8643   EA94 CD 86           VMJ  ($86) ; ($86)($43)
8644   EA96 83 A4           BCS USING_FRMT_4 ; $EB3C
8645   EA98 A4              LDA  UH
8646   EA99 1A              STA  YL
8647   EA9A             
8648   EA9A             USING_FRMT_12: ; $EA9A
8649   EA9A FD 8A           POP  A
8650   EA9C D5              SHR
8651   EA9D 81 06           BCR USING_FRMT_5 ; $EAA5
8652   EA9F             
8653   EA9F             USING_FRMT_7: ; $EA9F
8654   EA9F FB              SEC
8655   EAA0 14              LDA  YL
8656   EAA1 00              SBC  XL
8657   EAA2 DD              INC  A
8658   EAA3 F9              REC
8659   EAA4 9A              RTN
8660   EAA5             
8661   EAA5             USING_FRMT_5: ; $EAA5
8662   EAA5 D5              SHR
8663   EAA6 81 09           BCR USING_FRMT_6 ; $EAB1
8664   EAA8 5E 2A           CPI  YL,$2A
8665   EAAA 91 0D           BCR USING_FRMT_7 ; $EA9F
8666   EAAC 14              LDA  YL
8667   EAAD B3 E6           ADI  A,$E6
8668   EAAF 8E 03           BCH USING_FRMT_8 ; $EAB4
8669   EAB1             
8670   EAB1             USING_FRMT_6: ; $EAB1
8671   EAB1 14              LDA  YL
8672   EAB2 B3 F4           ADI  A,$F4
8673   EAB4             
8674   EAB4             USING_FRMT_8: ; $EAB4
8675   EAB4 0A              STA  XL
8676   EAB5             
8677   EAB5             USING_FRMT_10: ; $EAB5
8678   EAB5 05              LDA  (X)
8679   EAB6 B7 20           CPI  A,$20
8680   EAB8 9B 1B           BZS USING_FRMT_7 ; $EA9F
8681   EABA B7 2D           CPI  A,$2D
8682   EABC 9B 1F           BZS USING_FRMT_7 ; $EA9F
8683   EABE B7 2B           CPI  A,$2B
8684   EAC0 9B 23           BZS USING_FRMT_7 ; $EA9F
8685   EAC2 8E 08           BCH USING_FRMT_9 ; $EACC
8686   EAC4 8B 06           BZS USING_FRMT_9 ; $EACC
8687   EAC6 46              DEC  X
8688   EAC7 52              DEC  YL
8689   EAC8 5E 1E           CPI  YL,$1E
8690   EACA 93 17           BCS USING_FRMT_10 ; $EAB5
8691   EACC             
8692   EACC             USING_FRMT_9: ; $EACC
8693   EACC FB              SEC
8694   EACD 9A              RTN
8695   EACE             
8696   EACE             USING_FRMT_2: ; $EACE
8697   EACE BE EC 3C        SJP  (BCMD_DEC9)
8698   EAD1 83 09           BCS USING_FRMT_11 ; $EADC
8699   EAD3 B5 0A           LDI  A,$0A
8700   EAD5 CD 86           VMJ  ($86) ; ($86)($43)
8701   EAD7 BE EC 2F        SJP  (TRUNCDEC)
8702   EADA 9E 42           BCH USING_FRMT_12 ; $EA9A
8703   EADC             
8704   EADC             USING_FRMT_11: ; $EADC
8705   EADC 4A 00           LDI  XL,$00
8706   EADE 05              LDA  (X)
8707   EADF 49 00           ANI  (X),$00
8708   EAE1 FD C8           PSH  A
8709   EAE3 B5 0A           LDI  A,$0A
8710   EAE5 CD 86           VMJ  ($86) ; ($86)($43)
8711   EAE7 BE EC 2F        SJP  (TRUNCDEC)
8712   EAEA             
8713   EAEA             USING_FRMT_17: ; $EAEA
8714   EAEA 54              INC  Y
8715   EAEB FD 8A           POP  A
8716   EAED AE 7A 00        STA  (ARX)
8717   EAF0 2A              STA  UL
8718   EAF1 FD 8A           POP  A
8719   EAF3 FD C8           PSH  A
8720   EAF5 8B 27           BZS USING_FRMT_13 ; $EB1E
8721   EAF7             
8722   EAF7             USING_FRMT_15: ; $EAF7
8723   EAF7 B5 45           LDI  A,$45
8724   EAF9 51              SIN  Y
8725   EAFA FD 88           PSH  X
8726   EAFC FD 98           PSH  Y
8727   EAFE 24              LDA  UL
8728   EAFF FD C8           PSH  A
8729   EB01 CD 80           VMJ  ($80) ; ($80)($40)
8730   EB03 FD 8A           POP  A
8731   EB05 2A              STA  UL
8732   EB06 68 00           LDI  UH,$00
8733   EB08 D9              SHL
8734   EB09 81 02           BCR USING_FRMT_14 ; $EB0D
8735   EB0B 68 FF           LDI  UH,$FF
8736   EB0D             
8737   EB0D             USING_FRMT_14: ; $EB0D
8738   EB0D FD 1A           POP  Y
8739   EB0F CD 10           VMJ  ($10) \ ABYT($E0)
8739   EB11 E0          
8740   EB12 FD 98           PSH  Y
8741   EB14 BE F7 37        SJP  (XFER_ARY2ARX)
8742   EB17 FD 1A           POP  Y
8743   EB19 56              DEC  Y
8744   EB1A FD 0A           POP  X
8745   EB1C 9E 84           BCH USING_FRMT_12 ; $EA9A
8746   EB1E             
8747   EB1E             USING_FRMT_13: ; $EB1E
8748   EB1E 5E 27           CPI  YL,$27
8749   EB20 91 2B           BCR USING_FRMT_15 ; $EAF7
8750   EB22 5A 26           LDI  YL,$26
8751   EB24 9E 2F           BCH USING_FRMT_15 ; $EAF7
8752   EB26             
8753   EB26             USING_FRMT_3: ; $EB26
8754   EB26 4A 00           LDI  XL,$00
8755   EB28 05              LDA  (X)
8756   EB29 49 00           ANI  (X),$00
8757   EB2B FD C8           PSH  A
8758   EB2D A5 78 98        LDA  (USINGMD)
8759   EB30 B7 0E           CPI  A,$0E
8760   EB32 81 02           BCR USING_FRMT_16 ; $EB36
8761   EB34 B5 0D           LDI  A,$0D
8762   EB36             
8763   EB36             USING_FRMT_16: ; $EB36
8764   EB36 CD 86           VMJ  ($86) ; ($86)($43)
8765   EB38 A4              LDA  UH
8766   EB39 1A              STA  YL
8767   EB3A 9E 52           BCH USING_FRMT_17 ; $EAEA
8768   EB3C             
8769   EB3C             USING_FRMT_4: ; $EB3C
8770   EB3C FD 8A           POP  A
8771   EB3E FB              SEC
8772   EB3F 9A              RTN
8773   EB40             
8774   EB40             
8775   EB40             
8776   EB40              ; (86) $EB40 Converts AR-X to ASCII according to USING parameters
8777   EB40             ARX2ASCII: ; 
8778   EB40 F9              REC
8779   EB41 B3 1E           ADI  A,$1E
8780   EB43 28              STA  UH
8781   EB44 CD 80           VMJ  ($80) ; ($80)($40)
8782   EB46 4A 31           LDI  XL,$31
8783   EB48 05              LDA  (X)
8784   EB49 49 00           ANI  (X),$00
8785   EB4B FD C8           PSH  A
8786   EB4D 46              DEC  X
8787   EB4E 05              LDA  (X)
8788   EB4F BF 80           BII  A,$80
8789   EB51 89 79           BZR ARX2ASCII_1 ; $EBCC
8790   EB53 ED 78 95 10     BII  (USINGF),$10
8791   EB57 89 32           BZR ARX2ASCII_2 ; $EB8B
8792   EB59 B7 0E           CPI  A,$0E
8793   EB5B 93 21           BCS USING_FRMT_4 ; $EB3C
8794   EB5D             
8795   EB5D             ARX2ASCII_9: ; $EB5D
8796   EB5D BD FF           EAI  $FF
8797   EB5F B3 1E           ADI  A,$1E
8798   EB61 1A              STA  YL
8799   EB62 FD C8           PSH  A
8800   EB64 54              INC  Y
8801   EB65             
8802   EB65             ARX2ASCII_15: ; $EB65
8803   EB65 B5 09           LDI  A,$09
8804   EB67             
8805   EB67             ARX2ASCII_5: ; $EB67
8806   EB67 FD C8           PSH  A
8807   EB69 BE F7 8C        SJP  (ARS_SHL_4BITS)
8808   EB6C F1              AEX
8809   EB6D B9 0F           ANI  A,$0F
8810   EB6F BB 30           ORI  A,$30
8811   EB71 51              SIN  Y
8812   EB72             
8813   EB72             ARX2ASCII_8: ; $EB72
8814   EB72 A4              LDA  UH
8815   EB73 16              CPA  YL
8816   EB74 81 B5           BCR ARX2ASCII_3 ; $EC2B
8817   EB76 5E 1F           CPI  YL,$1F
8818   EB78 8B 0E           BZS ARX2ASCII_4 ; $EB88
8819   EB7A FD 8A           POP  A
8820   EB7C DF              DEC  A
8821   EB7D 93 18           BCS ARX2ASCII_5 ; $EB67
8822   EB7F             
8823   EB7F             ARX2ASCII_6: ; $EB7F
8824   EB7F B5 30           LDI  A,$30
8825   EB81 51              SIN  Y
8826   EB82 A4              LDA  UH
8827   EB83 16              CPA  YL
8828   EB84 93 07           BCS ARX2ASCII_6 ; $EB7F
8829   EB86 8E 64           BCH ARX2ASCII_7 ; $EBEC
8830   EB88             
8831   EB88             ARX2ASCII_4: ; $EB88
8832   EB88 54              INC  Y
8833   EB89 9E 19           BCH ARX2ASCII_8 ; $EB72
8834   EB8B             
8835   EB8B             ARX2ASCII_2: ; $EB8B
8836   EB8B B7 0B           CPI  A,$0B
8837   EB8D 93 53           BCS USING_FRMT_4 ; $EB3C
8838   EB8F B7 03           CPI  A,$03
8839   EB91 91 36           BCR ARX2ASCII_9 ; $EB5D
8840   EB93 B7 06           CPI  A,$06
8841   EB95 81 87           BCR ARX2ASCII_10 ; $EC1E
8842   EB97 B7 09           CPI  A,$09
8843   EB99 B3 02           ADI  A,$02
8844   EB9B             
8845   EB9B             ARX2ASCII_21: ; $EB9B
8846   EB9B F9              REC
8847   EB9C BD FF           EAI  $FF
8848   EB9E B3 1E           ADI  A,$1E
8849   EBA0 1A              STA  YL
8850   EBA1 FD C8           PSH  A
8851   EBA3 54              INC  Y
8852   EBA4 B5 09           LDI  A,$09
8853   EBA6             
8854   EBA6             ARX2ASCII_12: ; $EBA6
8855   EBA6 FD C8           PSH  A
8856   EBA8 BE F7 8C        SJP  (ARS_SHL_4BITS)
8857   EBAB F1              AEX
8858   EBAC B9 0F           ANI  A,$0F
8859   EBAE BB 30           ORI  A,$30
8860   EBB0 51              SIN  Y
8861   EBB1             
8862   EBB1             ARX2ASCII_13: ; $EBB1
8863   EBB1 A4              LDA  UH
8864   EBB2 16              CPA  YL
8865   EBB3 81 76           BCR ARX2ASCII_3 ; $EC2B
8866   EBB5 5E 1F           CPI  YL,$1F
8867   EBB7 9B 31           BZS ARX2ASCII_4 ; $EB88
8868   EBB9 14              LDA  YL
8869   EBBA BD FF           EAI  $FF
8870   EBBC BF 03           BII  A,$03
8871   EBBE 8B 07           BZS ARX2ASCII_11 ; $EBC7
8872   EBC0 FD 8A           POP  A
8873   EBC2 DF              DEC  A
8874   EBC3 93 1F           BCS ARX2ASCII_12 ; $EBA6
8875   EBC5 9E 48           BCH ARX2ASCII_6 ; $EB7F
8876   EBC7             
8877   EBC7             ARX2ASCII_11: ; $EBC7
8878   EBC7 B5 2C           LDI  A,$2C
8879   EBC9 51              SIN  Y
8880   EBCA 9E 1B           BCH ARX2ASCII_13 ; $EBB1
8881   EBCC             
8882   EBCC             ARX2ASCII_1: ; $EBCC
8883   EBCC 2A              STA  UL
8884   EBCD 5A 1E           LDI  YL,$1E
8885   EBCF A5 78 96        LDA  (USINGM)
8886   EBD2 B7 01           CPI  A,$01
8887   EBD4 8B 03           BZS ARX2ASCII_14 ; $EBD9
8888   EBD6 B5 30           LDI  A,$30
8889   EBD8 53              SDE  Y
8890   EBD9             
8891   EBD9             ARX2ASCII_14: ; $EBD9
8892   EBD9 14              LDA  YL
8893   EBDA FD C8           PSH  A
8894   EBDC 24              LDA  UL
8895   EBDD BD FF           EAI  $FF
8896   EBDF 2A              STA  UL
8897   EBE0 5A 20           LDI  YL,$20
8898   EBE2             
8899   EBE2             ARX2ASCII_16: ; $EBE2
8900   EBE2 62              DEC  UL
8901   EBE3 91 80           BCR ARX2ASCII_15 ; $EB65
8902   EBE5 B5 30           LDI  A,$30
8903   EBE7 51              SIN  Y
8904   EBE8 A4              LDA  UH
8905   EBE9 16              CPA  YL
8906   EBEA 93 0A           BCS ARX2ASCII_16 ; $EBE2
8907   EBEC             
8908   EBEC             ARX2ASCII_7: ; $EBEC
8909   EBEC B5 2E           LDI  A,$2E
8910   EBEE AE 7A 1F        STA  (ARU + $07)
8911   EBF1 FD 8A           POP  A
8912   EBF3 1A              STA  YL
8913   EBF4 A5 78 96        LDA  (USINGM)
8914   EBF7 8B 19           BZS ARX2ASCII_17 ; $EC12
8915   EBF9 BD FF           EAI  $FF
8916   EBFB B3 20           ADI  A,$20
8917   EBFD 0A              STA  XL
8918   EBFE 05              LDA  (X)
8919   EBFF B7 20           CPI  A,$20
8920   EC01 99 C7           BZR USING_FRMT_4 ; $EB3C
8921   EC03 ED 78 95 40     BII  (USINGF),$40
8922   EC07 8B 0B           BZS ARX2ASCII_18 ; $EC14
8923   EC09             
8924   EC09             ARX2ASCII_19: ; $EC09
8925   EC09 04              LDA  XL
8926   EC0A 16              CPA  YL
8927   EC0B 8B 07           BZS ARX2ASCII_18 ; $EC14
8928   EC0D B5 2A           LDI  A,$2A
8929   EC0F 53              SDE  Y
8930   EC10 9E 09           BCH ARX2ASCII_19 ; $EC09
8931   EC12             
8932   EC12             ARX2ASCII_17: ; $EC12
8933   EC12 FD 18           LDX  Y
8934   EC14             
8935   EC14             ARX2ASCII_18: ; $EC14
8936   EC14 FD 8A           POP  A
8937   EC16 D9              SHL
8938   EC17 81 08           BCR ARX2ASCII_20 ; $EC21
8939   EC19 B5 2D           LDI  A,$2D
8940   EC1B             
8941   EC1B             ARX2ASCII_23: ; $EC1B
8942   EC1B 1E              STA  (Y)
8943   EC1C             
8944   EC1C             ARX2ASCII_22: ; $EC1C
8945   EC1C F9              REC
8946   EC1D 9A              RTN
8947   EC1E             
8948   EC1E             ARX2ASCII_10: ; $EC1E
8949   EC1E DD              INC  A
8950   EC1F 9E 86           BCH ARX2ASCII_21 ; $EB9B
8951   EC21             
8952   EC21             ARX2ASCII_20: ; $EC21
8953   EC21 ED 78 95 20     BII  (USINGF),$20
8954   EC25 9B 0B           BZS ARX2ASCII_22 ; $EC1C
8955   EC27 B5 2B           LDI  A,$2B
8956   EC29 9E 10           BCH ARX2ASCII_23 ; $EC1B
8957   EC2B             
8958   EC2B             ARX2ASCII_3: ; $EC2B
8959   EC2B FD 8A           POP  A
8960   EC2D 9E 43           BCH ARX2ASCII_7 ; $EBEC
8961   EC2F             
8962   EC2F             
8963   EC2F             
8964   EC2F             ; $EC2F Determines the address at which the rightmost character is located
8965   EC2F             ; from the ASCII number string below 7A28 in the Y-Reg. (Truncation of the 
8966   EC2F             ; decimal places).
8967   EC2F             TRUNCDEC: ; $EC2F
8968   EC2F 5A 28           LDI  YL,$28
8969   EC31             
8970   EC31             TRUNCDEC_1: ; $EC31
8971   EC31 57              LDE  Y
8972   EC32 B7 30           CPI  A,$30
8973   EC34 9B 05           BZS TRUNCDEC_1 ; $EC31
8974   EC36 B7 2E           CPI  A,$2E
8975   EC38 8B 01           BZS TRUNCDEC_2 ; $EC3B
8976   EC3A 54              INC  Y
8977   EC3B             
8978   EC3B             TRUNCDEC_2: ;$EC3B
8979   EC3B 9A              RTN
8980   EC3C             
8981   EC3C             
8982   EC3C             ; $EC3C Checks whether the value in AR-X can be completely represented with 9 decimal places. If not, C=1.
8983   EC3C             BCMD_DEC9: ; 
8984   EC3C A5 7A 00        LDA  (ARX)
8985   EC3F BF 80           BII  A,$80
8986   EC41 89 03           BZR BCMD_DEC9_1 ; $EC46
8987   EC43 B7 0A           CPI  A,$0A
8988   EC45 9A              RTN
8989   EC46             
8990   EC46             BCMD_DEC9_1: ; $EC46
8991   EC46 B7 F7           CPI  A,$F7
8992   EC48 81 4B           BCR XP_STROUT_1 ; $EC95
8993   EC4A B3 0C           ADI  A,$0C
8994   EC4C D5              SHR
8995   EC4D 1A              STA  YL
8996   EC4E 55              LIN  Y
8997   EC4F 83 08           BCS BCMD_DEC9_2 ; $EC59
8998   EC51 BF 0F           BII  A,$0F
8999   EC53             
9000   EC53             BCMD_DEC9_3: ; $EC53
9001   EC53 89 40           BZR XP_STROUT_1 ; $EC95
9002   EC55 5E 07           CPI  YL,$07
9003   EC57 93 3D           BCS ARX2ASCII_22 ; $EC1C
9004   EC59             
9005   EC59             BCMD_DEC9_2: ; $EC59
9006   EC59 55              LIN  Y
9007   EC5A 9E 09           BCH BCMD_DEC9_3 ; $EC53
9008   EC5C             
9009   EC5C             
9010   EC5C             
9011   EC5C             ; (94) Transfers the string whose address is in the X-Reg (lengh in UL) to the
9012   EC5C             ;  free area of the output buffer. If error C=1.
9013   EC5C             X_STROUT: ; $EC5C
9014   EC5C A5 78 8F        LDA  ($788F)
9015   EC5F 1A              STA  YL
9016   EC60 58 7B           LDI  YH,$7B
9017   EC62 8E 05           BCH X_STROUT_1 ; $EC69
9018   EC64             
9019   EC64             X_STROUT_3: ; $EC64
9020   EC64 5E B0           CPI  YL,$B0
9021   EC66 83 03           BCS X_STROUT_2 ; $EC6B
9022   EC68 F5              TIN
9023   EC69             
9024   EC69             X_STROUT_1: ; $EC69
9025   EC69 88 07           LOP  UL,X_STROUT_3 ; $EC64
9026   EC6B             
9027   EC6B             X_STROUT_2: ; $EC6B
9028   EC6B 9A              RTN
9029   EC6C             
9030   EC6C             
9031   EC6C             
9032   EC6C             ; $EC6C If AR-X contains numeric value, if necessary. Convert integer to BCD:
9033   EC6C             ; C=0. If CSI available: Address from X-Reg; load length from to UL; C=1.
9034   EC6C             ARX2BCD:
9035   EC6C D2              VEJ  (D2) \ ABRF(ARX2BCD_2) \ ABYT($80)
9035   EC6D 03          
9035   EC6E 80          
9036   EC6F F9              REC
9037   EC70 9A              RTN
9038   EC71             
9039   EC71             ARX2BCD_2: ; $ 
9040   EC71 DC              VEJ  (DC)
9041   EC72             
9042   EC72             ARX2BCD_1: ; $EC72
9043   EC72 FB              SEC
9044   EC73 9A              RTN
9045   EC74             
9046   EC74             
9047   EC74             
9048   EC74             ; (98) $EC74 Converts AR-X from BCD to ASCII and transfers to Output buffer
9049   EC74             ARXBCD2ASCII: ; 
9050   EC74 BE EC 6C        SJP  (ARX2BCD)
9051   EC77 81 1D           BCR $EC96
9052   EC79 2A              STA  UL
9053   EC7A A5 78 97        LDA  (USING_CHR)
9054   EC7D 8B 19           BZS $EC98
9055   EC7F 26              CPA  UL
9056   EC80 81 15           BCR $EC97
9057   EC82             
9058   EC82             
9059   EC82             
9060   EC82             ; $EC82 Transfers string pointed to by X-Reg into output buffer. Then writes
9061   EC82             ; A-UL spaces to the output buffer. Sets C=1 if the output buffer is full
9062   EC82             XP_STROUT:
9063   EC82 20              SBC  UL
9064   EC83 FD C8           PSH  A
9065   EC85 CD 94           VMJ  ($94) ; ($94)($4A)
9066   EC87 FD 8A           POP  A
9067   EC89 2A              STA  UL
9068   EC8A B5 20           LDI  A,$20
9069   EC8C 8E 05           BCH XP_STROUT_3 ; $EC93
9070   EC8E 5E B0           CPI  YL,$B0
9071   EC90 83 04           BCS XP_STROUT_2 ; $EC96
9072   EC92 51              SIN  Y
9073   EC93             
9074   EC93             XP_STROUT_3: ; $EC93
9075   EC93 88 07           LOP  UL,$EC8E
9076   EC95             
9077   EC95             
9078   EC95             XP_STROUT_1: ; $EC82
9079   EC95 FB              SEC
9080   EC96             
9081   EC96             XP_STROUT_2: ; $EC96
9082   EC96 9A              RTN
9083   EC97 2A              STA  UL
9084   EC98 CD 94           VMJ  ($94) ; ($94)($4A)
9085   EC9A 9E 07           BCH XP_STROUT_1 ; $EC95
9086   EC9C             
9087   EC9C             
9088   EC9C             
9089   EC9C             ; $EC9C Clears LCD if cursor is not allowed and sets matrix pointer to 00
9090   EC9C             CLRNOCURSOR: ; 
9091   EC9C ED 78 74 01     BII  (CURSOR_ENA),$01
9092   ECA0 89 05           BZR $ECA7
9093   ECA2 F2              VEJ  (F2)
9094   ECA3 E9 78 75 00     ANI  (CURSOR_PTR),$00
9095   ECA7 A5 78 8F        LDA  ($788F)
9096   ECAA FB              SEC
9097   ECAB B1 60           SBI  A,$60
9098   ECAD 9A              RTN
9099   ECAE             
9100   ECAE             
9101   ECAE             
9102   ECAE             ;------------------------------------------------------------------------------
9103   ECAE             ; Deletes cursor flag and matrix pointer
9104   ECAE             ;            Address: ECAE
9105   ECAE             ;          Parameter: None
9106   ECAE             ;
9107   ECAE             ; Modified Registers: Cursor flag (7874) and matrix pointer are deleted
9108   ECAE             ;   Error conditions: None
9109   ECAE             ;------------------------------------------------------------------------------
9110   ECAE             INIT_CURS: ; $ECAE
9111   ECAE E9 78 74 FE     ANI  (CURSOR_ENA),$FE
9112   ECB2             
9113   ECB2             INIT_MTRX: ; $ECB2
9114   ECB2 E9 78 75 00     ANI  (CURSOR_PTR),$00
9115   ECB6 9A              RTN
9116   ECB7             
9117   ECB7             
9118   ECB7             
9119   ECB7             ; (97) $ECB7 Transfers value to output buffer
9120   ECB7             ARX2OUTBUF: 
9121   ECB7 BE EC 6C        SJP  (ARX2BCD)
9122   ECBA 81 18           BCR ARX2OUTBUF_1 ; $ECD4
9123   ECBC 2A              STA  UL
9124   ECBD A5 78 97        LDA  (USING_CHR)
9125   ECC0 8B 04           BZS ARX2OUTBUF_2 ; $ECC6
9126   ECC2 B7 0E           CPI  A,$0E
9127   ECC4 81 02           BCR ARX2OUTBUF_3 ; $ECC8
9128   ECC6             
9129   ECC6             ARX2OUTBUF_2: ; $ECC6
9130   ECC6 B5 0D           LDI  A,$0D
9131   ECC8             
9132   ECC8             ARX2OUTBUF_3: ; $ECC8
9133   ECC8 26              CPA  UL
9134   ECC9 83 01           BCS ARX2OUTBUF_4 ; $ECCC
9135   ECCB 2A              STA  UL
9136   ECCC             
9137   ECCC             ARX2OUTBUF_4: ; $ECCC
9138   ECCC B5 0D           LDI  A,$0D
9139   ECCE FB              SEC
9140   ECCF BE EC 82        SJP  (XP_STROUT)
9141   ECD2 8E 09           BCH ARX2OUTBUF_F_1 ; $ECDD
9142   ECD4             
9143   ECD4             ARX2OUTBUF_1: ; $ECD4
9144   ECD4 B5 00           LDI  A,$00
9145   ECD6             
9146   ECD6             
9147   ECD6             
9148   ECD6             ; Transfer AR-X formatted to Output Buffer
9149   ECD6             ARX2OUTBUF_F: ; $ECD6
9150   ECD6 CD 96           VMJ  ($96) ; ($96)($4B)
9151   ECD8 83 08           BCS ARX2OUTBUF_F_2 ; $ECE2
9152   ECDA 2A              STA  UL
9153   ECDB CD 94           VMJ  ($94) ; ($94)($4A)
9154   ECDD             
9155   ECDD             ARX2OUTBUF_F_1: ; $ECDD
9156   ECDD 14              LDA  YL
9157   ECDE AE 78 8F        STA  ($788F)
9158   ECE1 F9              REC
9159   ECE2             
9160   ECE2             ARX2OUTBUF_F_2: ; $ECE2
9161   ECE2 9A              RTN
9162   ECE3             
9163   ECE3             
9164   ECE3             
9165   ECE3             ; $ECE3 Transfers value (string or numeric) to output buffer and resets output buffer pointer.
9166   ECE3             ARXASCII2OUTBUF: 
9167   ECE3 CD 98           VMJ  ($98) ; ($98)($4C)
9168   ECE5 93 0A           BCS ARX2OUTBUF_F_1 ; $ECDD
9169   ECE7 B5 01           LDI  A,$01
9170   ECE9 9E 15           BCH ARX2OUTBUF_F
9171   ECEB             
9172   ECEB             
9173   ECEB             
9174   ECEB             ; (9A) Executes using command pointed to by Y-Reg. If an error occurs C=1.
9175   ECEB             USING_PARAM: ; $ECEB
9176   ECEB C4              VEJ  (C4) \ AWRD($F085) \ ABRF($ECF5)
9176   ECEC F0 85       
9176   ECEE 06          
9177   ECEF BE DA B2        SJP  (EVAL_USING)
9178   ECF2 05              LDA  (X)
9179   ECF3 F9              REC
9180   ECF4 9A              RTN
9181   ECF5 C6              VEJ  (C6)
9182   ECF6 F9              REC
9183   ECF7 9A              RTN
9184   ECF8 FB              SEC
9185   ECF9 9A              RTN
9186   ECFA             
9187   ECFA             
9188   ECFA             
9189   ECFA             ; Output of 26 characters of the output buffer
9190   ECFA             OUTBUF2LCD: ; $ECFA
9191   ECFA B5 1A           LDI  A,$1A
9192   ECFC 68 7B           LDI  UH,$7B
9193   ECFE 6A 60           LDI  UL,$60
9194   ED00             
9195   ED00             
9196   ED00             
9197   ED00             ; (92) Output of text on the LCD. U-Reg contains start address; A the length.
9198   ED00             TEXTUREG_A: ; $ED00
9199   ED00 FD C8           PSH  A
9200   ED02 CD 8C           VMJ  ($8C) ; ($8C)($46)
9201   ED04 FD 8A           POP  A
9202   ED06 FD 98           PSH  Y
9203   ED08 FD C8           PSH  A
9204   ED0A 66              DEC  U
9205   ED0B             
9206   ED0B             TEXTUREG_A4: ; $ED0B
9207   ED0B 64              INC  U
9208   ED0C A5 78 7B        LDA  ($787B)
9209   ED0F 26              CPA  UL
9210   ED10 8B 16           BZS TEXTUREG_A1 ; $ED28
9211   ED12 FD 8A           POP  A
9212   ED14 DF              DEC  A
9213   ED15 81 21           BCR TEXTUREG_A2 ; $ED38
9214   ED17 FD C8           PSH  A
9215   ED19 FD A8           PSH  U
9216   ED1B 25              LDA  (U)
9217   ED1C CD 8A           VMJ  ($8A) ; ($8A)($45)
9218   ED1E FD 2A           POP  U
9219   ED20 83 14           BCS TEXTUREG_A3 ; $ED36
9220   ED22 EF 78 75 06     ADI  (CURSOR_PTR),$06
9221   ED26 9E 1D           BCH TEXTUREG_A4 ; $ED0B
9222   ED28             
9223   ED28             TEXTUREG_A1: ; $ED28
9224   ED28 84              LDA  XH
9225   ED29 AE 78 7E        STA  (CURS_POS_NBUF_H)
9226   ED2C 04              LDA  XL
9227   ED2D AE 78 7F        STA  (CURS_POS_NBUF_L)
9228   ED30 25              LDA  (U)
9229   ED31 AE 78 7D        STA  (BLNKD_CHAR_CODE)
9230   ED34 9E 24           BCH $ED12
9231   ED36             
9232   ED36             TEXTUREG_A3: ; $ED36
9233   ED36 FD 8A           POP  A
9234   ED38             
9235   ED38             TEXTUREG_A2: ; $ED38
9236   ED38 FD 1A           POP  Y
9237   ED3A 9A              RTN
9238   ED3B             
9239   ED3B             
9240   ED3B             ; $ED3B Outputs XL characters of text starting from U-Reg. The output is 
9241   ED3B             ; independent of the value of the matrix pointer. Its old value is then restored.
9242   ED3B             TEXTUREG_XL:
9243   ED3B A5 78 75        LDA  (CURSOR_PTR)
9244   ED3E E9 78 75 00     ANI  (CURSOR_PTR),$00
9245   ED42 FD C8           PSH  A
9246   ED44 04              LDA  XL
9247   ED45 CD 92           VMJ  ($92) ; ($92)($49)
9248   ED47 FD 8A           POP  A
9249   ED49 AE 78 75        STA  (CURSOR_PTR)
9250   ED4C 9A              RTN
9251   ED4D             
9252   ED4D             
9253   ED4D             
9254   ED4D             ; Output a character at the next matrix column
9255   ED4D             CHAR2COL: ; $ED4D
9256   ED4D BE ED 57        SJP  (CHARA2COL)
9257   ED50 93 A0           BCS INIT_MTRX
9258   ED52 EF 78 75 06     ADI  (CURSOR_PTR),$06
9259   ED56 9A              RTN
9260   ED57             
9261   ED57             
9262   ED57             
9263   ED57             ; $ED57 Output of the character in accumulator at next matrix column. 
9264   ED57             ; The output address is calculated automatically.
9265   ED57             CHARA2COL: ; $ED57
9266   ED57 28              STA  UH
9267   ED58 CD 8C           VMJ  ($8C) ; ($8C)($46)
9268   ED5A A4              LDA  UH
9269   ED5B             
9270   ED5B             
9271   ED5B             
9272   ED5B             ; (8A) $ED5B Output of ASCII character in accumulator starting at matrix
9273   ED5B             ; column address pointed to by X-Reg. Second character set is recognized.
9274   ED5B             CHARA2COLX: ; 
9275   ED5B FD 98           PSH  Y
9276   ED5D BE EE 48        SJP  (CHAR2ADDR)
9277   ED60 6A 04           LDI  UL,$04
9278   ED62             
9279   ED62             CHARA2COLX_2: ; $ED62
9280   ED62 55              LIN  Y
9281   ED63 CD 88           VMJ  ($88) ; ($88)($44)
9282   ED65 4C 78           CPI  XH,$78
9283   ED67 83 08           BCS CHARA2COLX_1 ; $ED71
9284   ED69 88 09           LOP  UL,CHARA2COLX_2 ; $ED62
9285   ED6B B5 00           LDI  A,$00
9286   ED6D CD 88           VMJ  ($88) ; ($88)($44)
9287   ED6F 4C 78           CPI  XH,$78
9288   ED71             
9289   ED71             CHARA2COLX_1: ; $ED71
9290   ED71 B8              RPV
9291   ED72 ED 79 D0 01     BII  (PU_PV),$01
9292   ED76 8B 01           BZS $ED79 ; CHARA2COLX_3
9293   ED78 A8              SPV
9294   ED79             
9295   ED79             CHARA2COLX_3: ; $ED79
9296   ED79 FD 81           SIE
9297   ED7B 9E 45           BCH TEXTUREG_A2 ; $ED38
9298   ED7D             
9299   ED7D             
9300   ED7D             
9301   ED7D             ;------------------------------------------------------------------------------
9302   ED7D             ; Converts characters in the accumulator to HEX nibble
9303   ED7D             ;            Address: ED7D
9304   ED7D             ;   Entry parameters: Accumulator contains ASCII characters
9305   ED7D             ;
9306   ED7D             ; Modified registers: Accumulator contains converted HEX nibble (00-0F)
9307   ED7D             ;   Error conditions: Carry=0 if ASCII characters cannot be converted
9308   ED7D             ;------------------------------------------------------------------------------
9309   ED7D             A2HEX: ; $ED7D
9310   ED7D B7 47           CPI  A,$47
9311   ED7F 83 0C           BCS A2HEX_1 ; $ED8D
9312   ED81 B7 41           CPI  A,$41
9313   ED83 83 0D           BCS A2HEX_2 ; $ED92
9314   ED85 B7 3A           CPI  A,$3A
9315   ED87 83 04           BCS A2HEX_1 ; $ED8D
9316   ED89 B7 30           CPI  A,$30
9317   ED8B 83 02           BCS A2HEX_3 ; $ED8F
9318   ED8D             
9319   ED8D             A2HEX_1: ; $ED8D
9320   ED8D F9              REC
9321   ED8E 9A              RTN
9322   ED8F             
9323   ED8F             A2HEX_3: ; $ED8F
9324   ED8F B1 30           SBI  A,$30
9325   ED91 9A              RTN
9326   ED92             
9327   ED92             A2HEX_2: ; $ED92
9328   ED92 B1 37           SBI  A,$37
9329   ED94 9A              RTN
9330   ED95             
9331   ED95             
9332   ED95             
9333   ED95             ;------------------------------------------------------------------------------
9334   ED95             ; Convert 2 ASCII characters to a hex byte
9335   ED95             ;            Address: ED95
9336   ED95             ;   Entry parameters: X-Reg must point to the 1st character to be converted
9337   ED95             ; 
9338   ED95             ; Modified registers: X-Reg was incremented by 2 Accumulator contains hex value. Carry=0
9339   ED95             ;   Error conditions: Carry=0 if ASCII characters cannot be converted to hex.
9340   ED95             ;------------------------------------------------------------------------------
9341   ED95             ASCII2HEX: ; $ED95
9342   ED95 FD A8           PSH  U
9343   ED97 45              LIN  X
9344   ED98 BE ED 7D        SJP  (A2HEX)
9345   ED9B 81 0B           BCR ASCII2HEX_1 ; $EDA8
9346   ED9D F1              AEX
9347   ED9E 28              STA  UH
9348   ED9F 45              LIN  X
9349   EDA0 BE ED 7D        SJP  (A2HEX)
9350   EDA3 81 03           BCR ASCII2HEX_1 ; $EDA8
9351   EDA5 F9              REC
9352   EDA6 A2              ADC  UH
9353   EDA7 FB              SEC
9354   EDA8             
9355   EDA8             ASCII2HEX_1: ; $EDA8
9356   EDA8 FD 2A           POP  U
9357   EDAA 9A              RTN
9358   EDAB             
9359   EDAB             
9360   EDAB             
9361   EDAB             ; (90) $EDAB Checks whether the matrix pointer is still in the permissible range 0-155. Set C=1 if not.
9362   EDAB             MTRXNRANGE: 
9363   EDAB A5 78 75        LDA  (CURSOR_PTR)
9364   EDAE B7 9C           CPI  A,$9C
9365   EDB0 9A              RTN
9366   EDB1             
9367   EDB1             
9368   EDB1             
9369   EDB1             ; (8E) $EDB1 Increases matrix pointer if still in the permissible range 0-155 C=1 if not.
9370   EDB1             MTRXINC: 
9371   EDB1 A5 78 75        LDA  (CURSOR_PTR)
9372   EDB4 DD              INC  A
9373   EDB5 83 02           BCS MTRXINC_1 ; $EDB9
9374   EDB7 B7 9C           CPI  A,$9C
9375   EDB9             
9376   EDB9             MTRXINC_1: ; $EDB9
9377   EDB9 81 02           BCR $EDBD
9378   EDBB B5 9C           LDI  A,$9C
9379   EDBD             
9380   EDBD             MTRXINC_2: ; $EDBD
9381   EDBD AE 78 75        STA  (CURSOR_PTR)
9382   EDC0 9A              RTN
9383   EDC1             
9384   EDC1             
9385   EDC1             
9386   EDC1             ; Cache LCD display of 7810-7BFF
9387   EDC1             LCDCACHE: ; $EDC1
9388   EDC1 FD 98           PSH  Y
9389   EDC3             
9390   EDC3             LCDCACHE_3: ; $EDC3
9391   EDC3 FB              SEC
9392   EDC4 58 7B           LDI  YH,$7B
9393   EDC6 5A 10           LDI  YL,$10
9394   EDC8 48 76           LDI  XH,$76
9395   EDCA             
9396   EDCA             LCDCACHE_2: ; $EDCA
9397   EDCA 4A 00           LDI  XL,$00
9398   EDCC 6A 4D           LDI  UL,$4D
9399   EDCE             
9400   EDCE             LCDCACHE_1: ; $EDCE
9401   EDCE F5              TIN
9402   EDCF 88 03           LOP  UL,LCDCACHE_1 ; $EDCE
9403   EDD1 91 9B           BCR TEXTUREG_A2 ; $ED38
9404   EDD3 F9              REC
9405   EDD4 48 77           LDI  XH,$77
9406   EDD6 9E 0E           BCH LCDCACHE_2 ; $EDCA
9407   EDD8             
9408   EDD8             
9409   EDD8             
9410   EDD8             ; Retrieve LCD display from 7610-7BFF
9411   EDD8             BCMD_BFF: ; $EDD8
9412   EDD8 FD 98           PSH  Y
9413   EDDA             
9414   EDDA             BCMD_BFF_3: ; $EDDA
9415   EDDA FB              SEC
9416   EDDB 48 7B           LDI  XH,$7B
9417   EDDD 4A 10           LDI  XL,$10
9418   EDDF 58 76           LDI  YH,$76
9419   EDE1             
9420   EDE1             BCMD_BFF_2: ; $EDE1
9421   EDE1 5A 00           LDI  YL,$00
9422   EDE3 6A 4D           LDI  UL,$4D
9423   EDE5             
9424   EDE5             BCMD_BFF_1: ; $EDD8
9425   EDE5 F5              TIN
9426   EDE6 88 03           LOP  UL,BCMD_BFF_1 ; $EDE5
9427   EDE8 91 B2           BCR TEXTUREG_A2 ; $ED38
9428   EDEA F9              REC
9429   EDEB 58 77           LDI  YH,$77
9430   EDED 9E 0E           BCH BCMD_BFF_2 ; $EDE1
9431   EDEF             
9432   EDEF             
9433   EDEF             
9434   EDEF             ; $EDEF Output characters from accumulator to next matrix column address.
9435   EDEF             HEX2COL: 
9436   EDEF 28              STA  UH
9437   EDF0 CD 8C           VMJ  ($8C) ; ($8C)($46)
9438   EDF2 A4              LDA  UH
9439   EDF3 8E 01           BCH GPRNT_A_2LCD
9440   EDF5 55              LIN  Y
9441   EDF6             
9442   EDF6             
9443   EDF6             
9444   EDF6             ; (88) $EDF6 Output of accumulator as "GPRINT" value on LCD
9445   EDF6             ; Output of the accumulator as a bit pattern on the LCD (X-Reg and f.).
9446   EDF6             GPRNT_A_2LCD:
9447   EDF6 28              STA  UH
9448   EDF7 B9 0F           ANI  A,$0F
9449   EDF9 4C 76           CPI  XH,$76
9450   EDFB 83 16           BCS GPRNT_A_2LCD_1 ; $EE13
9451   EDFD 49 F0           ANI  (X),$F0
9452   EDFF 0B              ORA  (X)
9453   EE00 41              SIN  X
9454   EE01 A4              LDA  UH
9455   EE02 F1              AEX
9456   EE03 B9 0F           ANI  A,$0F
9457   EE05 49 F0           ANI  (X),$F0
9458   EE07             
9459   EE07             GPRNT_A_2LCD_3: ; $EE07
9460   EE07 0B              ORA  (X)
9461   EE08 41              SIN  X
9462   EE09 4E 4E           CPI  XL,$4E
9463   EE0B 83 01           BCS GPRNT_A_2LCD_2 ; $EE0E
9464   EE0D 9A              RTN
9465   EE0E             
9466   EE0E             GPRNT_A_2LCD_2: ; $EE0E
9467   EE0E 4A 00           LDI  XL,$00
9468   EE10 FD 40           INC  XH
9469   EE12 9A              RTN
9470   EE13             
9471   EE13             GPRNT_A_2LCD_1: ; $EE13
9472   EE13 F1              AEX
9473   EE14 49 0F           ANI  (X),$0F
9474   EE16 0B              ORA  (X)
9475   EE17 41              SIN  X
9476   EE18 A4              LDA  UH
9477   EE19 B9 F0           ANI  A,$F0
9478   EE1B 49 0F           ANI  (X),$0F
9479   EE1D 9E 18           BCH GPRNT_A_2LCD_3 ; $EE07
9480   EE1F             
9481   EE1F             
9482   EE1F             
9483   EE1F             ; (8C) $EE1F Calculates in X-Reg matrix column address from matrix pointer
9484   EE1F             ; Calculates the matrix column address from the matrix pointer $7875 in the X-Reg.
9485   EE1F             MATRIX_PTR2XREG:
9486   EE1F A5 78 75        LDA  (CURSOR_PTR)
9487   EE22             
9488   EE22             
9489   EE22             
9490   EE22             ; $EE22 Calculated from the accumulator matrix column address in the X-Reg.
9491   EE22             MATRIX_A2XREG: 
9492   EE22 B7 4E           CPI  A,$4E
9493   EE24 83 10           BCS MATRIX_A2XREG_1 ; $EE36
9494   EE26 B7 27           CPI  A,$27
9495   EE28 83 05           BCS MATRIX_A2XREG_2 ; $EE2F
9496   EE2A 48 74           LDI  XH,$74
9497   EE2C D9              SHL
9498   EE2D 0A              STA  XL
9499   EE2E 9A              RTN
9500   EE2F             
9501   EE2F             MATRIX_A2XREG_2: ; $EE2F
9502   EE2F B1 27           SBI  A,$27
9503   EE31 48 75           LDI  XH,$75
9504   EE33 D9              SHL
9505   EE34 0A              STA  XL
9506   EE35 9A              RTN
9507   EE36             
9508   EE36             MATRIX_A2XREG_1: ; $EE36
9509   EE36 B7 75           CPI  A,$75
9510   EE38 83 07           BCS MATRIX_A2XREG_3 ; $EE41
9511   EE3A B1 4D           SBI  A,$4D
9512   EE3C 48 76           LDI  XH,$76
9513   EE3E D9              SHL
9514   EE3F 0A              STA  XL
9515   EE40 9A              RTN
9516   EE41             
9517   EE41             MATRIX_A2XREG_3: ; $EE41
9518   EE41 B1 75           SBI  A,$75
9519   EE43 48 77           LDI  XH,$77
9520   EE45 D9              SHL
9521   EE46 0A              STA  XL
9522   EE47 9A              RTN
9523   EE48             
9524   EE48             
9525   EE48             
9526   EE48             ; $EE48 Retrieves address in character set table for character in accumulator
9527   EE48             ; Retrieves the address in the character set table for characters in the
9528   EE48             ; accumulator. 2. Character set is taken into account. Table address is passed to Y-Reg.
9529   EE48             CHAR2ADDR: 
9530   EE48 D9              SHL
9531   EE49 83 0F           BCS CHAR2ADDR_1 ; $EE5A
9532   EE4B             
9533   EE4B             CHAR2ADDR_6: ; $EE4B
9534   EE4B 58 FC           LDI  YH,$FC
9535   EE4D B7 40           CPI  A,$40
9536   EE4F 83 02           BCS CHAR2ADDR_2 ; $EE53
9537   EE51 B5 40           LDI  A,$40
9538   EE53             
9539   EE53             CHAR2ADDR_2: ; $EE53
9540   EE53 1A              STA  YL
9541   EE54             
9542   EE54             CHAR2ADDR_5: ; $EE54
9543   EE54 FD DA           ADR  Y
9544   EE56 D5              SHR
9545   EE57 FD DA           ADR  Y
9546   EE59 9A              RTN
9547   EE5A             
9548   EE5A             CHAR2ADDR_1: ; $EE5A
9549   EE5A 1A              STA  YL
9550   EE5B A5 78 5D        LDA  (KATAFLAGS)
9551   EE5E D9              SHL
9552   EE5F 89 0D           BZR CHAR2ADDR_3 ; $EE6E
9553   EE61 FD BE           RIE
9554   EE63 B8              RPV
9555   EE64 81 01           BCR CHAR2ADDR_4 ; $EE67
9556   EE66 A8              SPV
9557   EE67             
9558   EE67             CHAR2ADDR_4: ; $EE67
9559   EE67 A5 78 5E        LDA  (KATACHAR)
9560   EE6A 18              STA  YH
9561   EE6B 14              LDA  YL
9562   EE6C 9E 1A           BCH CHAR2ADDR_5 ; $EE54
9563   EE6E             
9564   EE6E             CHAR2ADDR_3: ; $EE6E
9565   EE6E 14              LDA  YL
9566   EE6F 9E 26           BCH CHAR2ADDR_6 ; $EE4B
9567   EE71             
9568   EE71             
9569   EE71             
9570   EE71             ;------------------------------------------------------------------------------
9571   EE71             ; (F2) Clears the LCD display
9572   EE71             ;            Address: EE71 (F2)
9573   EE71             ;          Parameter: None
9574   EE71             ;
9575   EE71             ; Modified Registers: U-Reg, Accumulator
9576   EE71             ;   Error conditions: None
9577   EE71             ;------------------------------------------------------------------------------
9578   EE71             LCDCLR: ; $EE71
9579   EE71 68 76           LDI  UH,$76
9580   EE73 BE EE 78        SJP  (LCDCLRRNG)
9581   EE76 68 77           LDI  UH,$77
9582   EE78             
9583   EE78             
9584   EE78             
9585   EE78             ; Clears area from (UH00)-(UH4D)
9586   EE78             LCDCLRRNG: ; $EE78
9587   EE78 6A 4D           LDI  UL,$4D
9588   EE7A B5 00           LDI  A,$00
9589   EE7C             
9590   EE7C             LCDCLRRNG_1: ; $EE7C
9591   EE7C 2E              STA  (U)
9592   EE7D 88 03           LOP  UL,LCDCLRRNG_1 ; $EE7C
9593   EE7F 9A              RTN
9594   EE80             
9595   EE80             
9596   EE80             
9597   EE80             ; $EE80 Saves cursor parameters in cache from $786C. Transfers the display to the buffer area.
9598   EE80             SAVELCD2BUF: ; 
9599   EE80 E9 7A 07 00     ANI  (ARX + $07),$00
9600   EE84 EB 78 74 80     ORI  (CURSOR_ENA),$80
9601   EE88 FD 98           PSH  Y
9602   EE8A 48 78           LDI  XH,$78
9603   EE8C 4A 7C           LDI  XL,$7C
9604   EE8E 58 78           LDI  YH,$78
9605   EE90 5A 6C           LDI  YL,$6C
9606   EE92 6A 03           LDI  UL,$03
9607   EE94             
9608   EE94             SAVELCD2BUF_1: ; $EE94
9609   EE94 F5              TIN
9610   EE95 88 03           LOP  UL,SAVELCD2BUF_1 ; $EE94
9611   EE97 9E D6           BCH LCDCACHE_3 ; $EDC3
9612   EE99             
9613   EE99             
9614   EE99             
9615   EE99             ; $EE99 Transfer back cursor parameters and display.
9616   EE99             BUF2LCD:
9617   EE99 ED 78 74 80     BII  (CURSOR_ENA),$80
9618   EE9D 8B 21           BZS LCDCHRLEFT_1 ; $EEC0
9619   EE9F FD 98           PSH  Y
9620   EEA1 48 78           LDI  XH,$78
9621   EEA3 4A 6C           LDI  XL,$6C
9622   EEA5 58 78           LDI  YH,$78
9623   EEA7 5A 7C           LDI  YL,$7C
9624   EEA9 6A 03           LDI  UL,$03
9625   EEAB             
9626   EEAB             BUF2LCD_1: ; $EEAB
9627   EEAB F5              TIN
9628   EEAC 88 03           LOP  UL,BUF2LCD_1 ; $EEAB
9629   EEAE 9E D6           BCH BCMD_BFF_3 ; $EDDA
9630   EEB0             
9631   EEB0             
9632   EEB0             
9633   EEB0             ; $EEB0 Determines from accumulator number of characters that can be displayed. 
9634   EEB0             ; If output not possible C=1.
9635   EEB0             LCDCHRLEFT: ; 
9636   EEB0 6A 19           LDI  UL,$19
9637   EEB2 A5 78 75        LDA  (CURSOR_PTR)
9638   EEB5 8B 0E           BZS LCDCHRLEFT_2 ; $EEC5
9639   EEB7 DF              DEC  A
9640   EEB8 68 06           LDI  UH,$06
9641   EEBA FB              SEC
9642   EEBB             
9643   EEBB             LCDCHRLEFT_4: ; $EEBB
9644   EEBB A0              SBC  UH
9645   EEBC 81 04           BCR LCDCHRLEFT_3 ; $EEC2
9646   EEBE 88 05           LOP  UL,LCDCHRLEFT_4 ; $EEBB
9647   EEC0             
9648   EEC0             LCDCHRLEFT_1: ; $EEC0
9649   EEC0 FB              SEC
9650   EEC1 9A              RTN
9651   EEC2             
9652   EEC2             LCDCHRLEFT_3: ; $EEC2
9653   EEC2 A2              ADC  UH
9654   EEC3 89 01           BZR LCDCHRLEFT_5 ; $EEC6
9655   EEC5             
9656   EEC5             LCDCHRLEFT_2: ; $EEC5
9657   EEC5 60              INC  UL
9658   EEC6             
9659   EEC6             LCDCHRLEFT_5: ; $EEC6
9660   EEC6 24              LDA  UL
9661   EEC7 9B 09           BZS LCDCHRLEFT_1 ; $EEC0
9662   EEC9 F9              REC
9663   EECA 9A              RTN
9664   EECB             
9665   EECB             
9666   EECB             
9667   EECB             ; Basic command POINT
9668   EECB             BCMD_POINT: ; $EECB
9669   EECB D0              VEJ  (D0) \ ABYT($0A) \ ABRF($EF19) ; ***
9669   EECC 0A          
9669   EECD 4B          
9670   EECE BE EE 22        SJP  (MATRIX_A2XREG)
9671   EED1 4C 76           CPI  XH,$76
9672   EED3 83 0D           BCS BCMD_POINT_1 ; $EEE2
9673   EED5 45              LIN  X
9674   EED6 B9 0F           ANI  A,$0F
9675   EED8 2A              STA  UL
9676   EED9 45              LIN  X
9677   EEDA B9 0F           ANI  A,$0F
9678   EEDC F1              AEX
9679   EEDD             
9680   EEDD             BCMD_POINT_3: ; $EEE2
9681   EEDD F9              REC
9682   EEDE 22              ADC  UL
9683   EEDF BA D9 E4        JMP  BCMD_LEN_1 ; $D9E4
9684   EEE2             
9685   EEE2             BCMD_POINT_1: ; $EEE2
9686   EEE2 45              LIN  X
9687   EEE3 B9 F0           ANI  A,$F0
9688   EEE5 F1              AEX
9689   EEE6 2A              STA  UL
9690   EEE7 45              LIN  X
9691   EEE8 B9 F0           ANI  A,$F0
9692   EEEA 9E 0F           BCH BCMD_POINT_3 ; $EEDD
9693   EEEC             
9694   EEEC             BCMD_POINT_2: ; $EEEC
9695   EEEC D5              SHR
9696   EEED 81 15           BCR CURSOR_OFF_1 ; $EF04
9697   EEEF FD 98           PSH  Y
9698   EEF1 BE EF 05        SJP  (USING2STK)
9699   EEF4 BA E6 A9        JMP  BCMD_PAUSE_25 ; $E6A9
9700   EEF7             
9701   EEF7             BCMD_POINT_4: ; $EEF7
9702   EEF7 E9 78 74 7F     ANI  (CURSOR_ENA),$7F
9703   EEFB BE EF 35        SJP  (STK2USING)
9704   EEFE FD 1A           POP  Y
9705   EF00             
9706   EF00             
9707   EF00             
9708   EF00             ; (84) $EF00 Turns off the blinking cursor.
9709   EF00             CURSOR_OFF: ;
9710   EF00 E9 78 7C FC     ANI  (CURSOR_BLNK),$FC
9711   EF04             
9712   EF04             CURSOR_OFF_1: ; $EF04
9713   EF04 9A              RTN
9714   EF05             
9715   EF05             
9716   EF05             
9717   EF05             ; $EF05 Saves USING parameters on processor stack ($7895-$7897) and deletes USING parameters.
9718   EF05             USING2STK: ; 
9719   EF05 48 78           LDI  XH,$78
9720   EF07 4A 95           LDI  XL,$95
9721   EF09 FD 1A           POP  Y
9722   EF0B 6A 02           LDI  UL,$02
9723   EF0D             
9724   EF0D             USING2STK_1: ; $EF0D
9725   EF0D 45              LIN  X
9726   EF0E FD C8           PSH  A
9727   EF10 88 05           LOP  UL,USING2STK_1 ; $EF0D
9728   EF12 46              DEC  X
9729   EF13 B5 00           LDI  A,$00
9730   EF15 43              SDE  X
9731   EF16 43              SDE  X
9732   EF17 0E              STA  (X)
9733   EF18             
9734   EF18             USING2STK_2: ; $EF18
9735   EF18 FD 98           PSH  Y
9736   EF1A 9A              RTN
9737   EF1B             
9738   EF1B             
9739   EF1B             
9740   EF1B             ; Convert AR-X to string
9741   EF1B             ARX2STRNG: ; $EF1B
9742   EF1B BE EF 05        SJP  (USING2STK)
9743   EF1E B5 01           LDI  A,$01
9744   EF20 CD 96           VMJ  ($96) ; ($96)($4B)
9745   EF22 2A              STA  UL
9746   EF23 05              LDA  (X)
9747   EF24 B7 20           CPI  A,$20
9748   EF26 89 02           BZR ARX2STRNG_1 ; $EF2A
9749   EF28 62              DEC  UL
9750   EF29 44              INC  X
9751   EF2A             
9752   EF2A             ARX2STRNG_1: ; $EF2A
9753   EF2A 24              LDA  UL
9754   EF2B CD 24           VMJ  ($24)
9755   EF2D E9 78 74 7F     ANI  (CURSOR_ENA),$7F
9756   EF31 BE EF 35        SJP  (STK2USING)
9757   EF34 9A              RTN
9758   EF35             
9759   EF35             
9760   EF35             
9761   EF35             ; $EF35 Gets USING parameters from stack
9762   EF35             STK2USING: ; 
9763   EF35 48 78           LDI  XH,$78
9764   EF37 4A 97           LDI  XL,$97
9765   EF39 FD 1A           POP  Y
9766   EF3B 6A 02           LDI  UL,$02
9767   EF3D             
9768   EF3D             STK2USING_1: ; $EF3D
9769   EF3D FD 8A           POP  A
9770   EF3F 43              SDE  X
9771   EF40 88 05           LOP  UL,STK2USING_1 ; $EF3D
9772   EF42 9E 2C           BCH USING2STK_2 ; $EF18
9773   EF44             
9774   EF44             
9775   EF44             
9776   EF44             ; $EF44 Outputs text on LCD display
9777   EF44             TXT2LCD: ; 
9778   EF44 FD 88           PSH  X
9779   EF46 B5 00           LDI  A,$00
9780   EF48 6A 19           LDI  UL,$19
9781   EF4A 4D FF           BII  (X),$FF
9782   EF4C 8B 04           BZS TXT2LCD_1 ; $EF52
9783   EF4E DD              INC  A
9784   EF4F 44              INC  X
9785   EF50 88 08           LOP  UL,$EF4A
9786   EF52             
9787   EF52             TXT2LCD_1: ; $EF52
9788   EF52 0A              STA  XL
9789   EF53 F2              VEJ  (F2)
9790   EF54 FD 2A           POP  U
9791   EF56 BE ED 3B        SJP  (TEXTUREG_XL)
9792   EF59 9E 5B           BCH CURSOR_OFF
9793   EF5B             
9794   EF5B             
9795   EF5B             ; Text output on LCD from (AR-Y)
9796   EF5B             TXT2LCD_ARY: ; $EF5B
9797   EF5B F9              REC
9798   EF5C B5 F0           LDI  A,$F0
9799   EF5E 02              ADC  XL
9800   EF5F 68 7A           LDI  UH,$7A
9801   EF61 6A 10           LDI  UL,$10
9802   EF63 FD A8           PSH  U
9803   EF65 9E 15           BCH TXT2LCD_1 ; $EF52
9804   EF67             
9805   EF67             
9806   EF67             
9807   EF67             ; $EF67 Prepare the LCD output
9808   EF67             PREPLCDOUT:
9809   EF67 EB 78 8A 10     ORI  (BREAKPARAM),$10
9810   EF6B ED 78 74 01     BII  (CURSOR_ENA),$01
9811   EF6F 89 01           BZR PREPLCDOUT_1 ; $EF72
9812   EF71 F2              VEJ  (F2)
9813   EF72             
9814   EF72             PREPLCDOUT_1: ; $EF72
9815   EF72 E9 78 76 00     ANI  (CHARPOS_LCD),$00
9816   EF76 BE EE B0        SJP  (LCDCHRLEFT)
9817   EF79 83 05           BCS PREPLCDOUT_2 ; $EF80
9818   EF7B BD FF           EAI  $FF
9819   EF7D AE 78 77        STA  ($7877)
9820   EF80             
9821   EF80             PREPLCDOUT_2: ; $EF80
9822   EF80 9A              RTN
9823   EF81             
9824   EF81             
9825   EF81             
9826   EF81             ;------------------------------------------------------------------------------
9827   EF81             ; Clears output buffer
9828   EF81             ;            Address: EF81
9829   EF81             ;          Parameter: None
9830   EF81             ; 
9831   EF81             ; Modified Registers: X-Reg, U-Reg, Accumulator
9832   EF81             ;   Error conditions: None
9833   EF81             ;------------------------------------------------------------------------------
9834   EF81             OUTBUFCLR: ; $EF81
9835   EF81 48 7B           LDI  XH,$7B
9836   EF83 4A 60           LDI  XL,$60
9837   EF85 6A 4F           LDI  UL,$4F
9838   EF87 CD BA           VMJ  ($BA) ; ($BA)($5D)
9839   EF89 9A              RTN
9840   EF8A             
9841   EF8A             OUTBUFCLR_8: ; $EF8A
9842   EF8A 5A 07           LDI  YL,$07
9843   EF8C B5 06           LDI  A,$06
9844   EF8E BA F3 BA        JMP  BCMD_SIN_1 ; $F3BA
9845   EF91             
9846   EF91             OUTBUFCLR_7: ; $EF91
9847   EF91 BA F6 5D        JMP  ARX2BCD_ABS ; $F65D
9848   EF94             
9849   EF94             OUTBUFCLR_1: ; $EF94
9850   EF94 5E 2B           CPI  YL,$2B
9851   EF96 8B 04           BZS OUTBUFCLR_4 ; $EF9C
9852   EF98 EF 7A 11 80     ADI  (ARY + $01),$80
9853   EF9C             
9854   EF9C             OUTBUFCLR_4: ; $EF9C
9855   EF9C F0              VEJ  (F0)
9856   EF9D             
9857   EF9D             OUTBUFCLR_6: ; $EF9D
9858   EF9D 83 03           BCS $EFA2
9859   EF9F BA D8 F0        JMP  DEC2HEX_113 ; $D8F0
9860   EFA2 BA D8 F2        JMP  DEC2HEX_91 ; $D8F2
9861   EFA5             
9862   EFA5             OUTBUFCLR_2: ; $EFA5
9863   EFA5 5E 2A           CPI  YL,$2A
9864   EFA7 89 04           BZR OUTBUFCLR_5 ; $EFAD
9865   EFA9 CD 7E           VMJ  ($7E) ; ($7E)($3F)
9866   EFAB 9E 10           BCH OUTBUFCLR_6 ; $EF9D
9867   EFAD             
9868   EFAD             OUTBUFCLR_5: ; $EFAD
9869   EFAD CD 58           VMJ  ($58) ; ($58)($2C)
9870   EFAF 9E 14           BCH OUTBUFCLR_6 ; $EF9D
9871   EFB1             
9872   EFB1             OUTBUFCLR_3: ; $EFB1
9873   EFB1 BE F8 9C        SJP  ($F89C)
9874   EFB4 9E 19           BCH OUTBUFCLR_6 ; $EF9D
9875   EFB6             
9876   EFB6             
9877   EFB6             
9878   EFB6             ; $EFB6 Subtraction: AR-X = ARX – AR-Y
9879   EFB6             SUBTR: ; 
9880   EFB6 EF 7A 11 80     ADI  (ARY + $01),$80
9881   EFBA             
9882   EFBA             
9883   EFBA             
9884   EFBA             ; (F0) $EFBA Addition: AR-X = AR-X + AR-Y
9885   EFBA             ADDIT: ; 
9886   EFBA CD 54           VMJ  ($54) ; ($54)($2A)
9887   EFBC 4A 02           LDI  XL,$02
9888   EFBE 5A 12           LDI  YL,$12
9889   EFC0 47              LDE  X
9890   EFC1 8B 33           BZS ADDIT_1 ; $EFF6
9891   EFC3 57              LDE  Y
9892   EFC4 8B 9F           BZS MULTIPLY_1 ; $F065
9893   EFC6 CD 7C           VMJ  ($7C) ; ($7C)($3E)
9894   EFC8 05              LDA  (X)
9895   EFC9 FB              SEC
9896   EFCA 11              SBC  (Y)
9897   EFCB 8B 18           BZS ADDIT_2 ; $EFE5
9898   EFCD 8F 2B           BVS ADDIT_3 ; $EFFA
9899   EFCF DB              ROL
9900   EFD0             
9901   EFD0             ADDIT_6: ; $EFD0
9902   EFD0 81 2C           BCR ADDIT_4 ; $EFFE
9903   EFD2 D1              ROR
9904   EFD3 BD FF           EAI  $FF
9905   EFD5 DD              INC  A
9906   EFD6 FD C8           PSH  A
9907   EFD8 15              LDA  (Y)
9908   EFD9 0E              STA  (X)
9909   EFDA FD 8A           POP  A
9910   EFDC 4A 07           LDI  XL,$07
9911   EFDE             
9912   EFDE             ADDIT_7: ; $EFDE
9913   EFDE B7 0C           CPI  A,$0C
9914   EFE0 83 21           BCS ADDIT_5 ; $F003
9915   EFE2 BE F7 F7        SJP  (ADD_ARU_ARX_2) ; $F7F7
9916   EFE5             
9917   EFE5             ADDIT_2: ; $EFE5
9918   EFE5 FD 8A           POP  A
9919   EFE7 FD C8           PSH  A
9920   EFE9 D9              SHL
9921   EFEA 83 20           BCS PC1500_PRT_A_DIR
9922   EFEC EE              VEJ  (EE)
9923   EFED             
9924   EFED             ADDIT_8: ; $EFED
9925   EFED FD 8A           POP  A
9926   EFEF             
9927   EFEF             ADDIT_9: ; $EFEF
9928   EFEF 28              STA  UH
9929   EFF0 FD 8A           POP  A
9930   EFF2 F9              REC
9931   EFF3 A2              ADC  UH
9932   EFF4 8E 61           BCH MULTIPLY_2 ; $F057
9933   EFF6             
9934   EFF6             ADDIT_1: ; $EFF6
9935   EFF6 CD 56           VMJ  ($56) ; ($56)($2B)
9936   EFF8 9E 69           BCH OUTBUFCLR_7 ; $EF91
9937   EFFA             
9938   EFFA             ADDIT_3: ; $EFFA
9939   EFFA B5 1F           LDI  A,$1F
9940   EFFC 9E 2E           BCH ADDIT_6 ; $EFD0
9941   EFFE             
9942   EFFE             ADDIT_4: ; $EFFE
9943   EFFE D1              ROR
9944   EFFF 4A 17           LDI  XL,$17
9945   F001 9E 25           BCH ADDIT_7 ; $EFDE
9946   F003             
9947   F003             ADDIT_5: ; $F003
9948   F003 04              LDA  XL
9949   F004 B9 F9           ANI  A,$F9
9950   F006 0A              STA  XL
9951   F007 BE F7 61        SJP  (CLR_7_XREG)
9952   F00A 9E 27           BCH ADDIT_2 ; $EFE5
9953   F00C CD 7A           VMJ  ($7A) ; ($7A)($3D)
9954   F00E 93 23           BCS ADDIT_8 ; $EFED
9955   F010 BE F7 EB        SJP  (ADD_ARU_ARX_3) ; $F7EB
9956   F013 FD 8A           POP  A
9957   F015 BD 80           EAI  $80
9958   F017 9E 2A           BCH ADDIT_9 ; $EFEF
9959   F019             
9960   F019             
9961   F019             
9962   F019             ; ; $F019 AR-X = AR-X * AR-X
9963   F019             SQUARE: 
9964   F019 E6              VEJ  (E6)
9965   F01A             
9966   F01A             
9967   F01A             
9968   F01A             ; $F01A (7E) Multiplication: AR-X = AR-X* AR-Y
9969   F01A             MULTIPLY: ;
9970   F01A CD 54           VMJ  ($54) ; ($54)($2A)
9971   F01C 4A 01           LDI  XL,$01
9972   F01E 5A 11           LDI  YL,$11
9973   F020 CD 7C           VMJ  ($7C) ; ($7C)($3E)
9974   F022 15              LDA  (Y)
9975   F023 F9              REC
9976   F024 03              ADC  (X)
9977   F025 8F 33           BVS MULTIPLY_3 ; $F05A
9978   F027 0E              STA  (X)
9979   F028 CD 78           VMJ  ($78) ; ($78)($3C)
9980   F02A CD 76           VMJ  ($76) ; ($76)($3B)
9981   F02C BE F8 20        SJP  (ADD_ARU_ARX_4) ; $F820
9982   F02F 5A 0F           LDI  YL,$0F
9983   F031             
9984   F031             MULTIPLY_5: ; $F031
9985   F031 FD 98           PSH  Y
9986   F033 15              LDA  (Y)
9987   F034 FD C8           PSH  A
9988   F036 B9 0F           ANI  A,$0F
9989   F038 F1              AEX
9990   F039 BE F0 67        SJP  (ADDMANY)
9991   F03C CD 74           VMJ  ($74) ; ($74)($3A)
9992   F03E FD 8A           POP  A
9993   F040 B9 F0           ANI  A,$F0
9994   F042 BE F0 67        SJP  (ADDMANY)
9995   F045 FD 1A           POP  Y
9996   F047 56              DEC  Y
9997   F048 5E 0A           CPI  YL,$0A
9998   F04A 81 04           BCR DIVISION_11 ; $F050
9999   F04C CD 74           VMJ  ($74) ; ($74)($3A)
10000  F04E 9E 1F           BCH MULTIPLY_5 ; $F031
10001  F050             
10002  F050             DIVISION_11: ; $F050
10003  F050 FD 2A           POP  U
10004  F052 24              LDA  UL
10005  F053 AE 7A 11        STA  (ARY + $01)
10006  F056 A4              LDA  UH
10007  F057             
10008  F057             MULTIPLY_2: ; $F057
10009  F057 CD 52           VMJ  ($52) ; ($52)($29
10010  F059 9A              RTN
10011  F05A             
10012  F05A             MULTIPLY_3: ; $F05A
10013  F05A FD 2A           POP  U
10014  F05C 83 04           BCS MULTIPLY_6 ; $F062
10015  F05E 68 25           LDI  UH,$25
10016  F060 FB              SEC
10017  F061 9A              RTN
10018  F062             
10019  F062             MULTIPLY_6: ; $F062
10020  F062 EC              VEJ  (EC)
10021  F063             
10022  F063             MULTIPLY_7: ; $F063
10023  F063 68 00           LDI  UH,$00
10024  F065             
10025  F065             MULTIPLY_1: ; $F065
10026  F065 F9              REC
10027  F066 9A              RTN
10028  F067             
10029  F067             
10030  F067             ; $F067 Adds the mantissas of those AR to the AR-X that are preselected by 
10031  F067             ; the value in the accumulator. If bit# is set 7:AR-W, 6:AR-V, 5:AR-U,
10032  F067             ; 4:AR-Y, 3:AR-Z are added.
10033  F067             ADDMANY: ; 
10034  F067 28              STA  UH
10035  F068 B5 2F           LDI  A,$2F
10036  F06A             
10037  F06A             ADDMANY_2: ; $F06A
10038  F06A FD C8           PSH  A
10039  F06C 1A              STA  YL
10040  F06D A4              LDA  UH
10041  F06E D9              SHL
10042  F06F 28              STA  UH
10043  F070 81 09           BCR ADDMANY_1 ; $F07B
10044  F072 CD 72           VMJ  ($72) ; ($72)($39)
10045  F074             
10046  F074             ADDMANY_3: ; $F074
10047  F074 F9              REC
10048  F075 FD 8A           POP  A
10049  F077 B3 F8           ADI  A,$F8
10050  F079 9E 11           BCH ADDMANY_2 ; $F06A
10051  F07B             
10052  F07B             ADDMANY_1: ; $F07B
10053  F07B 99 09           BZR ADDMANY_3 ; $F074
10054  F07D FD 8A           POP  A
10055  F07F 9A              RTN
10056  F080             
10057  F080             
10058  F080             
10059  F080             ; (6E) $F080 Reciprocal of AR-X AR-X=1/AR-X (if error C=1).
10060  F080             RECIPRICAL: ; 
10061  F080 CD 6A           VMJ  ($6A) ; ($6A)($35)
10062  F082 CD 66           VMJ  ($66) ; ($66)($33)
10063  F084             
10064  F084             
10065  F084             
10066  F084             ; (58) $F084 Division: AR-X = AR-X / AR- Y
10067  F084             DIVISION: ; 
10068  F084 CD 54           VMJ  ($54) ; ($54)($2A)
10069  F086 4A 01           LDI  XL,$01
10070  F088 5A 11           LDI  YL,$11
10071  F08A CD 7C           VMJ  ($7C) ; ($7C)($3E)
10072  F08C ED 7A 12 F0     BII  (ARY + $02),$F0
10073  F090 8B 51           BZS DIVISION_1 ; $F0E3
10074  F092 F9              REC
10075  F093 05              LDA  (X)
10076  F094 11              SBC  (Y)
10077  F095 9F 3D           BVS MULTIPLY_3 ; $F05A
10078  F097 0E              STA  (X)
10079  F098 BE F7 4B        SJP  (CLR_SM_ARZ)
10080  F09B BE F8 1C        SJP  (ADD_ARU_ARX_5) ; $F81C
10081  F09E B5 0C           LDI  A,$0C
10082  F0A0 FD C8           PSH  A
10083  F0A2             
10084  F0A2             DIVISION_6: ; $F0A2
10085  F0A2 BE F7 D9        SJP  (ADD_ARU_ARX_6) ; $F7D9
10086  F0A5 83 16           BCS DIVISION_2 ; $F0BD
10087  F0A7             
10088  F0A7             DIVISION_8: ; $F0A7
10089  F0A7 BE F7 C8        SJP  (ADD_ARU_ARX)
10090  F0AA 83 22           BCS DIVISION_3 ; $F0CE
10091  F0AC EE              VEJ  (EE)
10092  F0AD 83 29           BCS DIVISION_4 ; $F0D8
10093  F0AF             
10094  F0AF             DIVISION_10: ; $F0AF
10095  F0AF EE              VEJ  (EE)
10096  F0B0             
10097  F0B0             DIVISION_12: ; $F0B0
10098  F0B0 FD 8A           POP  A
10099  F0B2 DF              DEC  A
10100  F0B3 81 29           BCR DIVISION_5 ; $F0DE
10101  F0B5 FD C8           PSH  A
10102  F0B7 EA              VEJ  (EA)
10103  F0B8 BE F7 98        SJP  (ARZ_SHL_4BITS)
10104  F0BB 9E 1B           BCH DIVISION_6 ; $F0A2
10105  F0BD             
10106  F0BD             DIVISION_2: ; $F0BD
10107  F0BD BE F7 D9        SJP  (ADD_ARU_ARX_6) ; $F7D9
10108  F0C0 83 06           BCS DIVISION_7 ; $F0C8
10109  F0C2 EB 7A 0F 04     ORI  (ARZ + $07),$04
10110  F0C6 9E 21           BCH DIVISION_8 ; $F0A7
10111  F0C8             
10112  F0C8             DIVISION_7: ; $F0C8
10113  F0C8 EB 7A 0F 08     ORI  (ARZ + $07),$08
10114  F0CC 8E 04           BCH DIVISION_9 ; $F0D2
10115  F0CE             
10116  F0CE             DIVISION_3: ; $F0CE
10117  F0CE EB 7A 0F 02     ORI  (ARZ + $07),$02
10118  F0D2             
10119  F0D2             DIVISION_9: ; $F0D2
10120  F0D2 CD 7A           VMJ  ($7A) ; ($7A)($3D)
10121  F0D4 83 02           BCS DIVISION_4 ; $F0D8
10122  F0D6 9E 29           BCH DIVISION_10 ; $F0AF
10123  F0D8             
10124  F0D8             DIVISION_4: ; $F0D8
10125  F0D8 EB 7A 0F 01     ORI  (ARZ + $07),$01
10126  F0DC 9E 2E           BCH DIVISION_12 ; $F0B0
10127  F0DE             
10128  F0DE             DIVISION_5: ; $F0DE
10129  F0DE BE F7 1F        SJP  (XFER_SM_ARZ2ARX)
10130  F0E1 9E 93           BCH DIVISION_11 ; $F050
10131  F0E3             
10132  F0E3             DIVISION_1: ; $F0E3
10133  F0E3 FD 0A           POP  X
10134  F0E5 68 26           LDI  UH,$26
10135  F0E7 FB              SEC
10136  F0E8 9A              RTN
10137  F0E9             
10138  F0E9             
10139  F0E9             
10140  F0E9             ; $F0E9 AR-X = SQR (AR-X)
10141  F0E9             SQR_ROOT: ; 
10142  F0E9 CD 54           VMJ  ($54) ; ($54)($2A)
10143  F0EB 4A 01           LDI  XL,$01
10144  F0ED 47              LDE  X
10145  F0EE D9              SHL
10146  F0EF 83 6C           BCS SQR_ROOT_1 ; $F15D
10147  F0F1 05              LDA  (X)
10148  F0F2 BF 80           BII  A,$80
10149  F0F4 8B 01           BZS SQR_ROOT_2 ; $F0F7
10150  F0F6 FB              SEC
10151  F0F7             
10152  F0F7             SQR_ROOT_2: ; $F0F7
10153  F0F7 D1              ROR
10154  F0F8 0E              STA  (X)
10155  F0F9 81 01           BCR SQR_ROOT_3 ; $F0FC
10156  F0FB EA              VEJ  (EA)
10157  F0FC             
10158  F0FC             SQR_ROOT_3: ; $F0FC
10159  F0FC CD 70           VMJ  ($70) ; ($70)($38)
10160  F0FE BE F7 4B        SJP  (CLR_SM_ARZ)
10161  F101 B5 24           LDI  A,$24
10162  F103 EB 7A 12 10     ORI  (ARY + $02),$10
10163  F107 8E 26           BCH SQR_ROOT_4 ; $F12F
10164  F109             
10165  F109             SQR_ROOT_9: ; $F109
10166  F109 EE              VEJ  (EE)
10167  F10A FD 1A           POP  Y
10168  F10C FD 18           LDX  Y
10169  F10E 04              LDA  XL
10170  F10F F9              REC
10171  F110 B3 F8           ADI  A,$F8
10172  F112 0A              STA  XL
10173  F113 FD 8A           POP  A
10174  F115 B7 0F           CPI  A,$0F
10175  F117 A4              LDA  UH
10176  F118 81 06           BCR SQR_ROOT_5 ; $F120
10177  F11A F1              AEX
10178  F11B 0E              STA  (X)
10179  F11C 5F F1           ADI  (Y),$F1
10180  F11E 8E 0B           BCH SQR_ROOT_6 ; $F12B
10181  F120             
10182  F120             SQR_ROOT_5: ; $F120
10183  F120 0B              ORA  (X)
10184  F121 0E              STA  (X)
10185  F122 5E 17           CPI  YL,$17
10186  F124 83 30           BCS SQR_ROOT_7 ; $F156
10187  F126 5F FF           ADI  (Y),$FF
10188  F128 54              INC  Y
10189  F129 5B 10           ORI  (Y),$10
10190  F12B             
10191  F12B             SQR_ROOT_6: ; $F12B
10192  F12B EA              VEJ  (EA)
10193  F12C FD 8A           POP  A
10194  F12E DD              INC  A
10195  F12F             
10196  F12F             SQR_ROOT_4: ; $F12F
10197  F12F FD C8           PSH  A
10198  F131 D5              SHR
10199  F132 1A              STA  YL
10200  F133 B5 20           LDI  A,$20
10201  F135 81 02           BCR SQR_ROOT_8 ; $F139
10202  F137 B5 02           LDI  A,$02
10203  F139             
10204  F139             SQR_ROOT_8: ; $F139
10205  F139 68 00           LDI  UH,$00
10206  F13B FD C8           PSH  A
10207  F13D FD 98           PSH  Y
10208  F13F             
10209  F13F             SQR_ROOT_11: ; $F13F
10210  F13F CD 7A           VMJ  ($7A) ; ($7A)($3D)
10211  F141 91 3A           BCR SQR_ROOT_9 ; $F109
10212  F143 FD 1A           POP  Y
10213  F145 FD 8A           POP  A
10214  F147 FD C8           PSH  A
10215  F149 FD 98           PSH  Y
10216  F14B F9              REC
10217  F14C             
10218  F14C             SQR_ROOT_10: ; $F14C
10219  F14C 9C              DCA  (Y)
10220  F14D 53              SDE  Y
10221  F14E B5 00           LDI  A,$00
10222  F150 93 06           BCS SQR_ROOT_10 ; $F14C
10223  F152 FD 60           INC  UH
10224  F154 9E 17           BCH SQR_ROOT_11 ; $F13F
10225  F156             
10226  F156             SQR_ROOT_7: ; $F156
10227  F156 BE F7 1F        SJP  (XFER_SM_ARZ2ARX)
10228  F159 FD 8A           POP  A
10229  F15B E8              VEJ  (E8)
10230  F15C 9A              RTN
10231  F15D             
10232  F15D             SQR_ROOT_1: ; $F15D
10233  F15D 68 27           LDI  UH,$27
10234  F15F 8E 5F           BCH BCMD_LOG_2 ; $F1C0
10235  F161             
10236  F161             
10237  F161             
10238  F161             ; Basic command LN
10239  F161             BCMD_LN: ; $F161
10240  F161 B5 02           LDI  A,$02
10241  F163 8E 02           BCH BCMD_LOG_3 ; $F167
10242  F165             
10243  F165             
10244  F165             
10245  F165             ; Basic command LOG
10246  F165             BCMD_LOG: ; $F165
10247  F165 B5 00           LDI  A,$00
10248  F167             
10249  F167             BCMD_LOG_3: ; $F167
10250  F167 CD 54           VMJ  ($54) ; ($54)($2A)
10251  F169 4A 02           LDI  XL,$02
10252  F16B 4A 02           LDI  XL,$02
10253  F16D 4D F0           BII  (X),$F0
10254  F16F 9B 14           BZS SQR_ROOT_1 ; $F15D
10255  F171 46              DEC  X
10256  F172 4D FF           BII  (X),$FF
10257  F174 99 19           BZR SQR_ROOT_1 ; $F15D
10258  F176 46              DEC  X
10259  F177 4D 80           BII  (X),$80
10260  F179 89 47           BZR BCMD_LOG_4 ; $F1C2
10261  F17B FD C8           PSH  A
10262  F17D             
10263  F17D             BCMD_LOG_8: ; $F17D
10264  F17D 05              LDA  (X)
10265  F17E FD C8           PSH  A
10266  F180             
10267  F180             BCMD_LOG_1: ; $F180
10268  F180 49 00           ANI  (X),$00
10269  F182 EF 7A 02 F0     ADI  (ARX + $02),$F0
10270  F186 E8              VEJ  (E8)
10271  F187 A5 7A 00        LDA  (ARX)
10272  F18A BD FF           EAI  $FF
10273  F18C DD              INC  A
10274  F18D 28              STA  UH
10275  F18E B5 01           LDI  A,$01
10276  F190 AE 7A 18        STA  (ARU)
10277  F193 BA F2 EC        JMP  EXPONENT_1 ; $F2EC
10278  F196             
10279  F196             BCMD_LOG_9: ; $F196
10280  F196 EF 7A 00 FF     ADI  (ARX),$FF
10281  F19A E8              VEJ  (E8)
10282  F19B E6              VEJ  (E6)
10283  F19C FD 8A           POP  A
10284  F19E 2A              STA  UL
10285  F19F B5 00           LDI  A,$00
10286  F1A1 28              STA  UH
10287  F1A2 83 04           BCS BCMD_LOG_5 ; $F1A8
10288  F1A4 CD 10           VMJ  ($10) \ ABYT($00)
10288  F1A6 00          
10289  F1A7 F0              VEJ  (F0)
10290  F1A8             
10291  F1A8             BCMD_LOG_5: ; $F1A8
10292  F1A8 FD 8A           POP  A
10293  F1AA 83 12           BCS BCMD_LOG_6 ; $F1BE
10294  F1AC D5              SHR
10295  F1AD 81 04           BCR BCMD_LOG_7 ; $F1B3
10296  F1AF EB 7A 01 80     ORI  (ARX + $01),$80
10297  F1B3             
10298  F1B3             BCMD_LOG_7: ; $F1B3
10299  F1B3 D5              SHR
10300  F1B4 81 7A           BCR EXPONENT_2 ; $F230
10301  F1B6 BE F8 7B        SJP  (ADD_ARU_ARX_7) ; $F87B
10302  F1B9 CD 58           VMJ  ($58) ; ($58)($2C)
10303  F1BB 83 01           BCS BCMD_LOG_6 ; $F1BE
10304  F1BD 9A              RTN
10305  F1BE             
10306  F1BE             BCMD_LOG_6: ; $F1BE
10307  F1BE 68 25           LDI  UH,$25
10308  F1C0             
10309  F1C0             BCMD_LOG_2: ; $F1C0
10310  F1C0 FB              SEC
10311  F1C1 9A              RTN
10312  F1C2             
10313  F1C2             BCMD_LOG_4: ; $F1C2
10314  F1C2 DD              INC  A
10315  F1C3 FD C8           PSH  A
10316  F1C5 CD 6E           VMJ  ($6E) ; ($6E)($37)
10317  F1C7 4A 00           LDI  XL,$00
10318  F1C9 9E 4E           BCH BCMD_LOG_8 ; $F17D
10319  F1CB             
10320  F1CB             
10321  F1CB             
10322  F1CB             ; Basic command EXP
10323  F1CB             BCMD_EXP: ; $F1CB
10324  F1CB CD 54           VMJ  ($54) ; ($54)($2A)
10325  F1CD BE F8 7B        SJP  (ADD_ARU_ARX_7) ; $F87B
10326  F1D0 CD 7E           VMJ  ($7E) ; ($7E)($3F)
10327  F1D2 93 16           BCS BCMD_LOG_6 ; $F1BE
10328  F1D4             
10329  F1D4             
10330  F1D4             
10331  F1D4             ; $F1D4 AR-X = 10 to the power of AR-X
10332  F1D4             EXPONENT: ; 
10333  F1D4 CD 54           VMJ  ($54) ; ($54)($2A)
10334  F1D6 CD 6C           VMJ  ($6C) ; ($6C)($36)
10335  F1D8 FD C8           PSH  A
10336  F1DA 46              DEC  X
10337  F1DB 05              LDA  (X)
10338  F1DC 8B 48           BZS EXPONENT_3 ; $F226
10339  F1DE BF 80           BII  A,$80
10340  F1E0 89 40           BZR EXPONENT_4 ; $F222
10341  F1E2 B7 01           CPI  A,$01
10342  F1E4 89 43           BZR EXPONENT_5 ; $F229
10343  F1E6 4A 01           LDI  XL,$01
10344  F1E8 6A 05           LDI  UL,$05
10345  F1EA             
10346  F1EA             EXPONENT_6: ; $F1EA
10347  F1EA 44              INC  X
10348  F1EB 47              LDE  X
10349  F1EC 41              SIN  X
10350  F1ED 88 05           LOP  UL,EXPONENT_6 ; $F1EA
10351  F1EF 49 00           ANI  (X),$00
10352  F1F1             
10353  F1F1             EXPONENT_11: ; $F1F1
10354  F1F1 B5 00           LDI  A,$00
10355  F1F3             
10356  F1F3             EXPONENT_10: ; $F1F3
10357  F1F3 28              STA  UH
10358  F1F4 CD 6C           VMJ  ($6C) ; ($6C)($36)
10359  F1F6 FD C8           PSH  A
10360  F1F8 B5 01           LDI  A,$01
10361  F1FA AE 7A 18        STA  (ARU)
10362  F1FD 8E 34           BCH EXPONENT_7 ; $F233
10363  F1FF             
10364  F1FF             EXPONENT_26: ; $F1FF
10365  F1FF FD 8A           POP  A
10366  F201 4A 02           LDI  XL,$02
10367  F203 43              SDE  X
10368  F204 04              LDA  XL
10369  F205 46              DEC  X
10370  F206 0E              STA  (X)
10371  F207 E8              VEJ  (E8)
10372  F208 D0              VEJ  (D0) \ ABYT($08) \ ABRF(EXPONENT_8) ; $F220
10372  F209 08          
10372  F20A 15          
10373  F20B 48 7A           LDI  XH,$7A
10374  F20D 24              LDA  UL
10375  F20E AE 7A 00        STA  (ARX)
10376  F211 BE F7 1B        SJP  (XFER_SM_ARY2ARX)
10377  F214 CD 74           VMJ  ($74) ; ($74)($3A)
10378  F216 FD 8A           POP  A
10379  F218             
10380  F218             EXPONENT_12: ; $F218
10381  F218 D9              SHL
10382  F219 81 04           BCR EXPONENT_9 ; $F21F
10383  F21B CD 6E           VMJ  ($6E) ; ($6E)($37)
10384  F21D 93 61           BCS BCMD_LOG_6 ; $F1BE
10385  F21F             
10386  F21F             EXPONENT_9: ; $F21F
10387  F21F 9A              RTN
10388  F220             
10389  F220             EXPONENT_8: ; $F220
10390  F220 9E 64           BCH BCMD_LOG_6 ; $F1BE
10391  F222             
10392  F222             EXPONENT_4: ; $F222
10393  F222 BD FF           EAI  $FF
10394  F224 9E 33           BCH EXPONENT_10 ; $F1F3
10395  F226             
10396  F226             EXPONENT_3: ; $F226
10397  F226 EA              VEJ  (EA)
10398  F227 9E 38           BCH EXPONENT_11 ; $F1F1
10399  F229             
10400  F229             EXPONENT_5: ; $F229
10401  F229 EC              VEJ  (EC)
10402  F22A FD 8A           POP  A
10403  F22C BD 80           EAI  $80
10404  F22E 9E 18           BCH EXPONENT_12 ; $F218
10405  F230             
10406  F230             EXPONENT_2: ; $F230
10407  F230 BA F0 63        JMP  MULTIPLY_7 ; $F063
10408  F233             
10409  F233             EXPONENT_7: ; $F233
10410  F233 BE F7 4F        SJP  (CLR_SM_ARW)
10411  F236 CD 70           VMJ  ($70) ; ($70)($38)
10412  F238 B5 00           LDI  A,$00
10413  F23A FD C8           PSH  A
10414  F23C             
10415  F23C             EXPONENT_18: ; $F23C
10416  F23C A4              LDA  UH
10417  F23D ED 7A 18 01     BII  (ARU),$01
10418  F241 8B 08           BZS EXPONENT_13 ; $F24B
10419  F243 B7 0D           CPI  A,$0D
10420  F245 81 0D           BCR EXPONENT_14 ; $F254
10421  F247 B5 0C           LDI  A,$0C
10422  F249 8E 09           BCH EXPONENT_14 ; $F254
10423  F24B             
10424  F24B             EXPONENT_13: ; $F24B
10425  F24B F9              REC
10426  F24C B3 0D           ADI  A,$0D
10427  F24E B7 14           CPI  A,$14
10428  F250 81 02           BCR EXPONENT_14 ; $F254
10429  F252 B5 13           LDI  A,$13
10430  F254             
10431  F254             EXPONENT_14: ; $F254
10432  F254 D9              SHL
10433  F255 D9              SHL
10434  F256 D9              SHL
10435  F257 BB 07           ORI  A,$07
10436  F259 FD C8           PSH  A
10437  F25B 58 FC           LDI  YH,$FC
10438  F25D             
10439  F25D             EXPONENT_16: ; $F25D
10440  F25D FD 8A           POP  A
10441  F25F FD C8           PSH  A
10442  F261 1A              STA  YL
10443  F262 BE F7 DF        SJP  (ADD_ARU_ARX_8) ; $F7DF
10444  F265 81 06           BCR EXPONENT_15 ; $F26D
10445  F267 EF 7A 2F 01     ADI  (ARW + $07),$01
10446  F26B 9E 10           BCH EXPONENT_16 ; $F25D
10447  F26D             
10448  F26D             EXPONENT_15: ; $F26D
10449  F26D FD 8A           POP  A
10450  F26F 1A              STA  YL
10451  F270 CD 72           VMJ  ($72) ; ($72)($39)
10452  F272 FD 8A           POP  A
10453  F274 B7 0C           CPI  A,$0C
10454  F276 83 0B           BCS EXPONENT_17 ; $F283
10455  F278 DD              INC  A
10456  F279 FD C8           PSH  A
10457  F27B FD 60           INC  UH
10458  F27D BE F7 94        SJP  (ARW_SHL_4BITS)
10459  F280 EA              VEJ  (EA)
10460  F281 9E 47           BCH EXPONENT_18 ; $F23C
10461  F283             
10462  F283             EXPONENT_17: ; $F283
10463  F283 58 7A           LDI  YH,$7A
10464  F285 FD C8           PSH  A
10465  F287 CD 76           VMJ  ($76) ; ($76)($3B)
10466  F289 CD 70           VMJ  ($70) ; ($70)($38)
10467  F28B EB 7A 11 01     ORI  (ARY + $01),$01
10468  F28F             
10469  F28F             EXPONENT_25: ; $F28F
10470  F28F A4              LDA  UH
10471  F290 B7 07           CPI  A,$07
10472  F292 ED 7A 18 01     BII  (ARU),$01
10473  F296 8B 02           BZS EXPONENT_19 ; $F29A
10474  F298 B7 0D           CPI  A,$0D
10475  F29A             
10476  F29A             EXPONENT_19: ; $F29A
10477  F29A 81 02           BCR EXPONENT_20 ; $F29E
10478  F29C B5 FF           LDI  A,$FF
10479  F29E             
10480  F29E             EXPONENT_20: ; $F29E
10481  F29E DD              INC  A
10482  F29F AE 7A 08        STA  (ARZ)
10483  F2A2             
10484  F2A2             EXPONENT_23: ; $F2A2
10485  F2A2 4A 2F           LDI  XL,$2F
10486  F2A4 4D 0F           BII  (X),$0F
10487  F2A6 8B 27           BZS EXPONENT_21 ; $F2CF
10488  F2A8 4F FF           ADI  (X),$FF
10489  F2AA ED 7A 18 01     BII  (ARU),$01
10490  F2AE 8B 08           BZS EXPONENT_22 ; $F2B8
10491  F2B0 BE F7 25        SJP  (XFER_SM_ARY2ARZ)
10492  F2B3 BE F8 3C        SJP  (ADD_ARU_ARX_9) ; $F83C
10493  F2B6 9E 16           BCH EXPONENT_23 ; $F2A2
10494  F2B8             
10495  F2B8             EXPONENT_22: ; $F2B8
10496  F2B8 CD 78           VMJ  ($78) ; ($78)($3C)
10497  F2BA EE              VEJ  (EE)
10498  F2BB A5 7A 08        LDA  (ARZ)
10499  F2BE 9B 1E           BZS EXPONENT_23 ; $F2A2
10500  F2C0 DF              DEC  A
10501  F2C1 4A 0F           LDI  XL,$0F
10502  F2C3 BE F8 05        SJP  (ADD_ARU_ARX_10) ; $F805
10503  F2C6 4A 17           LDI  XL,$17
10504  F2C8 5A 0F           LDI  YL,$0F
10505  F2CA BE F7 E1        SJP  (ADD_ARU_ARX_11) ; $F7E1
10506  F2CD 9E 2D           BCH EXPONENT_23 ; $F2A2
10507  F2CF             
10508  F2CF             EXPONENT_21: ; $F2CF
10509  F2CF FD 8A           POP  A
10510  F2D1 DF              DEC  A
10511  F2D2 81 0F           BCR EXPONENT_24 ; $F2E3
10512  F2D4 FD 62           DEC  UH
10513  F2D6 FD C8           PSH  A
10514  F2D8 BE F7 69        SJP  (ARW_SHR_4BITS)
10515  F2DB ED 7A 18 01     BII  (ARU),$01
10516  F2DF CB 74           VZS  ($74) ; ($74)($3A)
10517  F2E1 9E 54           BCH EXPONENT_25 ; $F28F
10518  F2E3             
10519  F2E3             EXPONENT_24: ; $F2E3
10520  F2E3 ED 7A 18 01     BII  (ARU),$01
10521  F2E7 99 EA           BZR EXPONENT_26 ; $F1FF
10522  F2E9 BA F4 32        JMP  BCMD_SIN_2 ; $F432
10523  F2EC             
10524  F2EC             EXPONENT_1: ; $F2EC
10525  F2EC BE F7 4F        SJP  (CLR_SM_ARW)
10526  F2EF CD 6A           VMJ  ($6A) ; ($6A)($35)
10527  F2F1 B5 00           LDI  A,$00
10528  F2F3 FD C8           PSH  A
10529  F2F5             
10530  F2F5             EXPONENT_35: ; $F2F5
10531  F2F5 A4              LDA  UH
10532  F2F6 B7 07           CPI  A,$07
10533  F2F8 ED 7A 18 01     BII  (ARU),$01
10534  F2FC 8B 02           BZS EXPONENT_27 ; $F300
10535  F2FE B7 0D           CPI  A,$0D
10536  F300             
10537  F300             EXPONENT_27: ; $F300
10538  F300 81 02           BCR EXPONENT_28 ; $F304
10539  F302 B5 FF           LDI  A,$FF
10540  F304             
10541  F304             EXPONENT_28: ; $F304
10542  F304 DD              INC  A
10543  F305 AE 7A 08        STA  (ARZ)
10544  F308 ED 7A 18 01     BII  (ARU),$01
10545  F30C 8B 05           BZS EXPONENT_29 ; $F313
10546  F30E 8E 16           BCH EXPONENT_30 ; $F326
10547  F310             
10548  F310             EXPONENT_32: ; $F310
10549  F310 BE F8 4D        SJP  (ADD_ARU_ARX_12) ; $F84D
10550  F313             
10551  F313             EXPONENT_29: ; $F313
10552  F313 CD 78           VMJ  ($78) ; ($78)($3C)
10553  F315             
10554  F315             EXPONENT_33: ; $F315
10555  F315 CD 7A           VMJ  ($7A) ; ($7A)($3D)
10556  F317 81 12           BCR EXPONENT_31 ; $F32B
10557  F319 EF 7A 2F 01     ADI  (ARW + $07),$01
10558  F31D ED 7A 18 01     BII  (ARU),$01
10559  F321 9B 13           BZS EXPONENT_32 ; $F310
10560  F323 BE F8 3C        SJP  (ADD_ARU_ARX_9) ; $F83C
10561  F326             
10562  F326             EXPONENT_30: ; $F326
10563  F326 BE F7 25        SJP  (XFER_SM_ARY2ARZ)
10564  F329 9E 16           BCH EXPONENT_33 ; $F315
10565  F32B             
10566  F32B             EXPONENT_31: ; $F32B
10567  F32B EE              VEJ  (EE)
10568  F32C FD 8A           POP  A
10569  F32E B7 0C           CPI  A,$0C
10570  F330 83 0B           BCS EXPONENT_34 ; $F33D
10571  F332 DD              INC  A
10572  F333 FD C8           PSH  A
10573  F335 FD 60           INC  UH
10574  F337 BE F7 94        SJP  (ARW_SHL_4BITS)
10575  F33A EA              VEJ  (EA)
10576  F33B 9E 48           BCH EXPONENT_35 ; $F2F5
10577  F33D             
10578  F33D             EXPONENT_34: ; $F33D
10579  F33D FD C8           PSH  A
10580  F33F CD 76           VMJ  ($76) ; ($76)($3B)
10581  F341             
10582  F341             EXPONENT_41: ; $F341
10583  F341 A4              LDA  UH
10584  F342 ED 7A 18 01     BII  (ARU),$01
10585  F346 8B 08           BZS EXPONENT_36 ; $F350
10586  F348 B7 0D           CPI  A,$0D
10587  F34A 81 0D           BCR EXPONENT_37 ; $F359
10588  F34C B5 0C           LDI  A,$0C
10589  F34E 8E 09           BCH EXPONENT_37 ; $F359
10590  F350             
10591  F350             EXPONENT_36: ; $F350
10592  F350 F9              REC
10593  F351 B3 0D           ADI  A,$0D
10594  F353 B7 14           CPI  A,$14
10595  F355 81 02           BCR EXPONENT_37 ; $F359
10596  F357 B5 13           LDI  A,$13
10597  F359             
10598  F359             EXPONENT_37: ; $F359
10599  F359 D9              SHL
10600  F35A D9              SHL
10601  F35B D9              SHL
10602  F35C BB 07           ORI  A,$07
10603  F35E FD C8           PSH  A
10604  F360 58 FC           LDI  YH,$FC
10605  F362             
10606  F362             EXPONENT_39: ; $F362
10607  F362 4A 2F           LDI  XL,$2F
10608  F364 FD 8A           POP  A
10609  F366 4D 0F           BII  (X),$0F
10610  F368 8B 09           BZS EXPONENT_38 ; $F373
10611  F36A 4F FF           ADI  (X),$FF
10612  F36C FD C8           PSH  A
10613  F36E 1A              STA  YL
10614  F36F CD 72           VMJ  ($72) ; ($72)($39)
10615  F371 9E 11           BCH EXPONENT_39 ; $F362
10616  F373             
10617  F373             EXPONENT_38: ; $F373
10618  F373 FD 8A           POP  A
10619  F375 DF              DEC  A
10620  F376 81 0B           BCR EXPONENT_40 ; $F383
10621  F378 FD C8           PSH  A
10622  F37A FD 62           DEC  UH
10623  F37C BE F7 69        SJP  (ARW_SHR_4BITS)
10624  F37F CD 74           VMJ  ($74) ; ($74)($3A)
10625  F381 9E 42           BCH EXPONENT_41 ; $F341
10626  F383             
10627  F383             EXPONENT_40: ; $F383
10628  F383 58 7A           LDI  YH,$7A
10629  F385 ED 7A 18 01     BII  (ARU),$01
10630  F389 8B 03           BZS EXPONENT_42 ; $F38E
10631  F38B BA F1 96        JMP  BCMD_LOG_9 ; $F196
10632  F38E             
10633  F38E             EXPONENT_42: ; $F38E
10634  F38E BA F4 F7        JMP  BCMD_ASN_1 ; $F4F7
10635  F391             
10636  F391             
10637  F391             
10638  F391             ; Basic command COS
10639  F391             BCMD_COS: ; $F391
10640  F391 E9 7A 01 00     ANI  (ARX + $01),$00
10641  F395 B5 00           LDI  A,$00
10642  F397 AE 7A 18        STA  (ARU)
10643  F39A B5 01           LDI  A,$01
10644  F39C 8E 0B           BCH BCMD_SIN_3 ; $F3A9
10645  F39E             
10646  F39E             
10647  F39E             
10648  F39E             ; Basic command TAN
10649  F39E             BCMD_TAN: ; $F39E
10650  F39E B5 40           LDI  A,$40
10651  F3A0 8E 02           BCH BCMD_SIN_4 ; $F3A4
10652  F3A2             
10653  F3A2             
10654  F3A2             
10655  F3A2             ; Basic command SIN
10656  F3A2             BCMD_SIN: ; $F3A2
10657  F3A2 B5 00           LDI  A,$00
10658  F3A4             
10659  F3A4             BCMD_SIN_4: ; $F3A4
10660  F3A4 AE 7A 18        STA  (ARU)
10661  F3A7 B5 00           LDI  A,$00
10662  F3A9             
10663  F3A9             BCMD_SIN_3: ; $F3A9
10664  F3A9 AE 7A 20        STA  (ARV)
10665  F3AC CD 54           VMJ  ($54) ; ($54)($2A)
10666  F3AE BE F8 5A        SJP  (ADD_ARU_ARX_13) ; $F85A
10667  F3B1 81 16           BCR BCMD_SIN_5 ; $F3C9
10668  F3B3 CD 7E           VMJ  ($7E) ; ($7E)($3F)
10669  F3B5 83 D7           BCS BCMD_SIN_6 ; $F48E
10670  F3B7 BA EF 8A        JMP  OUTBUFCLR_8 ; $EF8A
10671  F3BA             
10672  F3BA             BCMD_SIN_1: ; $F3BA
10673  F3BA 9C              DCA  (Y)
10674  F3BB 53              SDE  Y
10675  F3BC B5 00           LDI  A,$00
10676  F3BE 93 06           BCS BCMD_SIN_1 ; $F3BA
10677  F3C0 E9 7A 07 F0     ANI  (ARX + $07),$F0
10678  F3C4 BE F6 5D        SJP  (ARX2BCD_ABS)
10679  F3C7 83 C5           BCS BCMD_SIN_6 ; $F48E
10680  F3C9             
10681  F3C9             BCMD_SIN_5: ; $F3C9
10682  F3C9 CD 6C           VMJ  ($6C) ; ($6C)($36)
10683  F3CB FD C8           PSH  A
10684  F3CD 46              DEC  X
10685  F3CE 05              LDA  (X)
10686  F3CF BF 80           BII  A,$80
10687  F3D1 89 56           BZR BCMD_SIN_7 ; $F429
10688  F3D3 B7 0A           CPI  A,$0A
10689  F3D5 83 B5           BCS BCMD_SIN_8 ; $F48C
10690  F3D7 CD 70           VMJ  ($70) ; ($70)($38)
10691  F3D9 EB 7A 11 36     ORI  (ARY + $01),$36
10692  F3DD CD 74           VMJ  ($74) ; ($74)($3A)
10693  F3DF BE F7 71        SJP  (ARY_SHR_4BITS)
10694  F3E2             
10695  F3E2             BCMD_SIN_9: ; $F3E2
10696  F3E2 FD 60           INC  UH
10697  F3E4             
10698  F3E4             BCMD_SIN_12: ; $F3E4
10699  F3E4 CD 7A           VMJ  ($7A) ; ($7A)($3D)
10700  F3E6 93 06           BCS BCMD_SIN_9 ; $F3E2
10701  F3E8 EE              VEJ  (EE)
10702  F3E9 ED 7A 11 0F     BII  (ARY + $01),$0F
10703  F3ED 8B 13           BZS BCMD_SIN_10 ; $F402
10704  F3EF EF 7A 00 FF     ADI  (ARX),$FF
10705  F3F3 81 03           BCR BCMD_SIN_11 ; $F3F8
10706  F3F5 EA              VEJ  (EA)
10707  F3F6 9E 16           BCH BCMD_SIN_9 ; $F3E2
10708  F3F8             
10709  F3F8             BCMD_SIN_11: ; $F3F8
10710  F3F8 CD 70           VMJ  ($70) ; ($70)($38)
10711  F3FA EB 7A 12 90     ORI  (ARY + $02),$90
10712  F3FE 68 00           LDI  UH,$00
10713  F400 9E 1E           BCH BCMD_SIN_12 ; $F3E4
10714  F402             
10715  F402             BCMD_SIN_10: ; $F402
10716  F402 EA              VEJ  (EA)
10717  F403 E9 7A 00 00     ANI  (ARX),$00
10718  F407 A4              LDA  UH
10719  F408 4A 20           LDI  XL,$20
10720  F40A F9              REC
10721  F40B 03              ADC  (X)
10722  F40C 0E              STA  (X)
10723  F40D F1              AEX
10724  F40E 0B              ORA  (X)
10725  F40F 0E              STA  (X)
10726  F410 CD 70           VMJ  ($70) ; ($70)($38)
10727  F412 4A 11           LDI  XL,$11
10728  F414 B5 04           LDI  A,$04
10729  F416 41              SIN  X
10730  F417 4B 50           ORI  (X),$50
10731  F419 CD 7A           VMJ  ($7A) ; ($7A)($3D)
10732  F41B 81 07           BCR BCMD_SIN_13 ; $F424
10733  F41D BE F7 EB        SJP  (ADD_ARU_ARX_3) ; $F7EB
10734  F420 EF 7A 20 01     ADI  (ARV),$01
10735  F424             
10736  F424             BCMD_SIN_13: ; $F424
10737  F424 EE              VEJ  (EE)
10738  F425 E8              VEJ  (E8)
10739  F426 4A 00           LDI  XL,$00
10740  F428 05              LDA  (X)
10741  F429             
10742  F429             BCMD_SIN_7: ; $F429
10743  F429 DF              DEC  A
10744  F42A 0E              STA  (X)
10745  F42B BD FF           EAI  $FF
10746  F42D DD              INC  A
10747  F42E 28              STA  UH
10748  F42F BA F2 33        JMP  EXPONENT_7 ; $F233
10749  F432             
10750  F432             BCMD_SIN_2: ; $F432
10751  F432 E9 7A 10 00     ANI  (ARY),$00
10752  F436 E8              VEJ  (E8)
10753  F437 CD 66           VMJ  ($66) ; ($66)($33)
10754  F439 E8              VEJ  (E8)
10755  F43A CD 66           VMJ  ($66) ; ($66)($33)
10756  F43C CD 58           VMJ  ($58) ; ($58)($2C)
10757  F43E FD 8A           POP  A
10758  F440 AE 7A 01        STA  (ARX + $01)
10759  F443 ED 7A 18 40     BII  (ARU),$40
10760  F447 89 37           BZR BCMD_SIN_14 ; $F480
10761  F449 CD 80           VMJ  ($80) ; ($80)($40)
10762  F44B BE F0 19        SJP  (SQUARE)
10763  F44E 83 DE           BCS BCMD_ASN_2 ; $F52E
10764  F450 CD 6A           VMJ  ($6A) ; ($6A)($35)
10765  F452 F0              VEJ  (F0)
10766  F453 83 D9           BCS BCMD_ASN_2 ; $F52E
10767  F455 BE F0 E9        SJP  (SQR_ROOT)
10768  F458 83 D4           BCS BCMD_ASN_2 ; $F52E
10769  F45A CD 68           VMJ  ($68) ; ($68)($34)
10770  F45C CD 7C           VMJ  ($7C) ; ($7C)($3E)
10771  F45E ED 7A 20 01     BII  (ARV),$01
10772  F462 8B 02           BZS $F466
10773  F464 CD 6A           VMJ  ($6A) ; ($6A)($35)
10774  F466 CD 66           VMJ  ($66) ; ($66)($33)
10775  F468 CD 58           VMJ  ($58) ; ($58)($2C)
10776  F46A FD 8A           POP  A
10777  F46C AE 7A 01        STA  (ARX + $01)
10778  F46F FD 8A           POP  A
10779  F471 ED 7A 20 20     BII  (ARV),$20
10780  F475             
10781  F475             BCMD_SIN_16: ; $F475
10782  F475 83 B7           BCS BCMD_ASN_2 ; $F52E
10783  F477 8B 04           BZS BCMD_SIN_15 ; $F47D
10784  F479 EF 7A 01 80     ADI  (ARX + $01),$80
10785  F47D             
10786  F47D             BCMD_SIN_15: ; $F47D
10787  F47D BA F6 5D        JMP  ARX2BCD_ABS ; $F65D
10788  F480             
10789  F480             BCMD_SIN_14: ; $F480
10790  F480 ED 7A 20 01     BII  (ARV),$01
10791  F484 C9 6E           VZR  ($6E) ; ($6E)($37)
10792  F486 ED 7A 20 10     BII  (ARV),$10
10793  F48A 9E 17           BCH BCMD_SIN_16 ; $F475
10794  F48C             
10795  F48C             BCMD_SIN_8: ; $F48C
10796  F48C FD 8A           POP  A
10797  F48E             
10798  F48E             BCMD_SIN_6: ; $F48E
10799  F48E 68 27           LDI  UH,$27
10800  F490 FB              SEC
10801  F491 9A              RTN
10802  F492             
10803  F492             
10804  F492             
10805  F492             ; Basic command ACS
10806  F492             BCMD_ACS: ; $F492
10807  F492 B5 20           LDI  A,$20
10808  F494 8E 06           BCH BCMD_ASN_3 ; $F49C
10809  F496             
10810  F496             
10811  F496             
10812  F496             ; Basic command ATN
10813  F496             BCMD_ATN: ; $F496
10814  F496 B5 40           LDI  A,$40
10815  F498 8E 02           BCH BCMD_ASN_3 ; $F49C
10816  F49A             
10817  F49A             
10818  F49A             
10819  F49A             ; Basic command ASN
10820  F49A             BCMD_ASN: ; $F49A
10821  F49A B5 00           LDI  A,$00
10822  F49C             
10823  F49C             BCMD_ASN_3: ; $F49C
10824  F49C AE 7A 18        STA  (ARU)
10825  F49F CD 54           VMJ  ($54) ; ($54)($2A)
10826  F4A1 CD 6C           VMJ  ($6C) ; ($6C)($36)
10827  F4A3 FD C8           PSH  A
10828  F4A5 ED 7A 18 40     BII  (ARU),$40
10829  F4A9 89 27           BZR BCMD_ASN_4 ; $F4D2
10830  F4AB CD 80           VMJ  ($80) ; ($80)($40)
10831  F4AD BE F0 19        SJP  (SQUARE)
10832  F4B0 93 26           BCS BCMD_SIN_8 ; $F48C
10833  F4B2 CD 6A           VMJ  ($6A) ; ($6A)($35)
10834  F4B4 EF 7A 01 80     ADI  (ARX + $01),$80
10835  F4B8 F0              VEJ  (F0)
10836  F4B9 93 2F           BCS BCMD_SIN_8 ; $F48C
10837  F4BB BE F0 E9        SJP  (SQR_ROOT)
10838  F4BE 93 34           BCS BCMD_SIN_8 ; $F48C
10839  F4C0 CD 68           VMJ  ($68) ; ($68)($34)
10840  F4C2 ED 7A 18 20     BII  (ARU),$20
10841  F4C6 89 02           BZR BCMD_ASN_5 ; $F4CA
10842  F4C8 CD 66           VMJ  ($66) ; ($66)($33)
10843  F4CA             
10844  F4CA             BCMD_ASN_5: ; $F4CA
10845  F4CA ED 7A 12 F0     BII  (ARY + $02),$F0
10846  F4CE 8B 20           BZS BCMD_ASN_6 ; $F4F0
10847  F4D0 CD 58           VMJ  ($58) ; ($58)($2C)
10848  F4D2             
10849  F4D2             BCMD_ASN_4: ; $F4D2
10850  F4D2 ED 7A 02 F0     BII  (ARX + $02),$F0
10851  F4D6 8B 36           BZS BCMD_ASN_7 ; $F50E
10852  F4D8 ED 7A 00 80     BII  (ARX),$80
10853  F4DC 89 06           BZR BCMD_ASN_8 ; $F4E4
10854  F4DE CD 6E           VMJ  ($6E) ; ($6E)($37)
10855  F4E0 EF 7A 18 80     ADI  (ARU),$80
10856  F4E4             
10857  F4E4             BCMD_ASN_8: ; $F4E4
10858  F4E4 93 5A           BCS BCMD_SIN_8 ; $F48C
10859  F4E6 A5 7A 00        LDA  (ARX)
10860  F4E9 BD FF           EAI  $FF
10861  F4EB DD              INC  A
10862  F4EC 28              STA  UH
10863  F4ED BA F2 EC        JMP EXPONENT_1 ; $F2EC
10864  F4F0             
10865  F4F0             BCMD_ASN_6: ; $F4F0
10866  F4F0 BE F8 83        SJP  (ADD_ARU_ARX_14) ; $F883
10867  F4F3 CD 56           VMJ  ($56) ; ($56)($2B)
10868  F4F5 8E 17           BCH BCMD_ASN_7 ; $F50E
10869  F4F7             
10870  F4F7             BCMD_ASN_1: ; $F4F7
10871  F4F7 EF 7A 00 01     ADI  (ARX),$01
10872  F4FB E8              VEJ  (E8)
10873  F4FC 83 2E           BCS BCMD_ASN_9 ; $F52C
10874  F4FE ED 7A 18 80     BII  (ARU),$80
10875  F502 8B 0A           BZS BCMD_ASN_7 ; $F50E
10876  F504 BE F8 83        SJP  (ADD_ARU_ARX_14) ; $F883
10877  F507 EF 7A 01 80     ADI  (ARX + $01),$80
10878  F50B F0              VEJ  (F0)
10879  F50C 83 1E           BCS BCMD_ASN_9 ; $F52C
10880  F50E             
10881  F50E             BCMD_ASN_7: ; $F50E
10882  F50E FD 8A           POP  A
10883  F510 AE 7A 01        STA  (ARX + $01)
10884  F513 D9              SHL
10885  F514 81 0C           BCR BCMD_ASN_10 ; $F522
10886  F516 ED 7A 18 20     BII  (ARU),$20
10887  F51A 8B 06           BZS BCMD_ASN_10 ; $F522
10888  F51C BE F8 87        SJP  (ADD_ARU_ARX_15) ; $F887
10889  F51F F0              VEJ  (F0)
10890  F520 83 0C           BCS BCMD_ASN_2 ; $F52E
10891  F522             
10892  F522             BCMD_ASN_10: ; $F522
10893  F522 BE F8 5A        SJP  (ADD_ARU_ARX_13) ; $F85A
10894  F525 81 95           BCR BCMD_PI_1 ; $F5BC
10895  F527 CD 58           VMJ  ($58) ; ($58)($2C)
10896  F529 83 03           BCS BCMD_ASN_2 ; $F52E
10897  F52B 9A              RTN
10898  F52C             
10899  F52C             BCMD_ASN_9: ; $F52C
10900  F52C FD 8A           POP  A
10901  F52E             
10902  F52E             BCMD_ASN_2: ; $F52E
10903  F52E BA F6 98        JMP  ARX2BCD2_1 ; $F698
10904  F531             
10905  F531             
10906  F531             
10907  F531             ; Basic command DEG
10908  F531             BCMD_DEG: ; $F531
10909  F531 CD 54           VMJ  ($54) ; ($54)($2A)
10910  F533 CD 6C           VMJ  ($6C) ; ($6C)($36)
10911  F535 FD C8           PSH  A
10912  F537 BE F6 A9        SJP  (ARX2BCD2_2) ; $F6A9
10913  F53A CD 64           VMJ  ($64) ; ($64)($32)
10914  F53C CD 56           VMJ  ($56) ; ($56)($2B)
10915  F53E E8              VEJ  (E8)
10916  F53F CD 62           VMJ  ($62) ; ($62)($31)
10917  F541 CD 58           VMJ  ($58) ; ($58)($2C)
10918  F543 93 19           BCS BCMD_ASN_9 ; $F52C
10919  F545 CD 64           VMJ  ($64) ; ($64)($32)
10920  F547 E8              VEJ  (E8)
10921  F548 CD 60           VMJ  ($60) ; ($60)($30)
10922  F54A CD 64           VMJ  ($64) ; ($64)($32)
10923  F54C CD 66           VMJ  ($66) ; ($66)($33)
10924  F54E E8              VEJ  (E8)
10925  F54F F0              VEJ  (F0)
10926  F550 93 26           BCS BCMD_ASN_9 ; $F52C
10927  F552 CD 62           VMJ  ($62) ; ($62)($31)
10928  F554 CD 58           VMJ  ($58) ; ($58)($2C)
10929  F556 93 2C           BCS BCMD_ASN_9 ; $F52C
10930  F558 E6              VEJ  (E6)
10931  F559 CD 64           VMJ  ($64) ; ($64)($32)
10932  F55B E8              VEJ  (E8)
10933  F55C F0              VEJ  (F0)
10934  F55D 93 33           BCS BCMD_ASN_9 ; $F52C
10935  F55F FD 8A           POP  A
10936  F561 BA F6 63        JMP  ARX2BCD2 ; $F663
10937  F564             
10938  F564             
10939  F564             ; Basic command DMS
10940  F564             BCMD_DMS: ; $F564
10941  F564 CD 54           VMJ  ($54) ; ($54)($2A)
10942  F566 CD 6C           VMJ  ($6C) ; ($6C)($36)
10943  F568 FD C8           PSH  A
10944  F56A CD 60           VMJ  ($60) ; ($60)($30)
10945  F56C CD 64           VMJ  ($64) ; ($64)($32)
10946  F56E CD 56           VMJ  ($56) ; ($56)($2B)
10947  F570 E8              VEJ  (E8)
10948  F571 CD 62           VMJ  ($62) ; ($62)($31)
10949  F573 CD 7E           VMJ  ($7E) ; ($7E)($3F)
10950  F575 E6              VEJ  (E6)
10951  F576 CD 64           VMJ  ($64) ; ($64)($32)
10952  F578 E8              VEJ  (E8)
10953  F579 F0              VEJ  (F0)
10954  F57A BE F6 A9        SJP  (ARX2BCD2_2) ; $F6A9
10955  F57D CD 80           VMJ  ($80) ; ($80)($40)
10956  F57F CD 56           VMJ  ($56) ; ($56)($2B)
10957  F581 E8              VEJ  (E8)
10958  F582 CD 62           VMJ  ($62) ; ($62)($31)
10959  F584 CD 7E           VMJ  ($7E) ; ($7E)($3F)
10960  F586 BE F6 3C        SJP  (ARXX)
10961  F589 E6              VEJ  (E6)
10962  F58A CD 64           VMJ  ($64) ; ($64)($32)
10963  F58C E8              VEJ  (E8)
10964  F58D F0              VEJ  (F0)
10965  F58E 93 64           BCS BCMD_ASN_9 ; $F52C
10966  F590             
10967  F590             
10968  F590             
10969  F590             BCMD_SGN: ; $F590 *** valid??
10970  F590 FD 8A           POP  A
10971  F592 CD 52           VMJ  ($52) ; ($52)($29
10972  F594 BA F6 3C        JMP  ARXX ; $F63C
10973  F597             
10974  F597             
10975  F597             
10976  F597             ; Basic command ABS
10977  F597             BCMD_ABS: ; $F597
10978  F597 E9 7A 01 00     ANI  (ARX + $01),$00
10979  F59B 8E 1F           BCH BCMD_PI_1 ; $F5BC
10980  F59D             
10981  F59D             ; Basic command SGN
10982  F59D 48 7A           LDI  XH,$7A
10983  F59F 4A 01           LDI  XL,$01
10984  F5A1 45              LIN  X
10985  F5A2 28              STA  UH
10986  F5A3 05              LDA  (X)
10987  F5A4 FD C8           PSH  A
10988  F5A6 EC              VEJ  (EC)
10989  F5A7 FD 8A           POP  A
10990  F5A9 BF F0           BII  A,$F0
10991  F5AB 9B 12           BZS $F59B
10992  F5AD A4              LDA  UH
10993  F5AE 4A 01           LDI  XL,$01
10994  F5B0 41              SIN  X
10995  F5B1 4B 10           ORI  (X),$10
10996  F5B3 9E 1A           BCH $F59B
10997  F5B5             
10998  F5B5             
10999  F5B5             
11000  F5B5             ; $F5B5 Basic command PI, Loads PI to AR-Y.
11001  F5B5             BCMD_PI: ; 
11002  F5B5 CD 54           VMJ  ($54) ; ($54)($2A)
11003  F5B7 BE F8 75        SJP  ($F875)
11004  F5BA CD 56           VMJ  ($56) ; ($56)($2B)
11005  F5BC             
11006  F5BC             BCMD_PI_1: ; $F5BC
11007  F5BC 8E E7           BCH ARX2BCD2_9 ; $F6A5
11008  F5BE             
11009  F5BE             
11010  F5BE             
11011  F5BE             ; Basic command INT
11012  F5BE             BCMD_INT: ; $F5BE
11013  F5BE CD 54           VMJ  ($54) ; ($54)($2A)
11014  F5C0 CD 6C           VMJ  ($6C) ; ($6C)($36)
11015  F5C2 FD C8           PSH  A
11016  F5C4 CD 60           VMJ  ($60) ; ($60)($30)
11017  F5C6 FD 8A           POP  A
11018  F5C8 8B 0B           BZS BCMD_INT_1 ; $F5D5
11019  F5CA 4A 11           LDI  XL,$11
11020  F5CC 6A 06           LDI  UL,$06
11021  F5CE             
11022  F5CE             BCMD_INT_3: ; $F5CE
11023  F5CE 45              LIN  X
11024  F5CF 89 07           BZR BCMD_INT_2 ; $F5D8
11025  F5D1 88 05           LOP  UL,BCMD_INT_3 ; $F5CE
11026  F5D3             
11027  F5D3             BCMD_INT_4: ; $F5D3
11028  F5D3 B5 80           LDI  A,$80
11029  F5D5             
11030  F5D5             BCMD_INT_1: ; $F5D5
11031  F5D5 CD 52           VMJ  ($52) ; ($52)($29
11032  F5D7 9A              RTN
11033  F5D8             
11034  F5D8             BCMD_INT_2: ; $F5D8
11035  F5D8 CD 6A           VMJ  ($6A) ; ($6A)($35)
11036  F5DA F0              VEJ  (F0)
11037  F5DB 9E 0A           BCH BCMD_INT_4 ; $F5D3
11038  F5DD             
11039  F5DD             
11040  F5DD             ; Basic command RND
11041  F5DD CD 54           VMJ  ($54) ; ($54)($2A)
11042  F5DF ED 7A 01 80     BII  (ARX + $01),$80
11043  F5E3 89 10           BZR RANDGEN_1 ; $F5F5
11044  F5E5 ED 7A 00 80     BII  (ARX),$80
11045  F5E9 8B 10           BZS RANDGEN_2 ; $F5FB
11046  F5EB             
11047  F5EB             
11048  F5EB             
11049  F5EB             ; $F5EB Determines random number in AR-X
11050  F5EB             RANDGEN: ; 
11051  F5EB CD 5E           VMJ  ($5E) ; ($5E)($2F)
11052  F5ED             
11053  F5ED             RANDGEN_3: ; $F5ED
11054  F5ED CD 5C           VMJ  ($5C) ; ($5C)($2E)
11055  F5EF EB 7A 00 FF     ORI  (ARX),$FF
11056  F5F3 E8              VEJ  (E8)
11057  F5F4 9A              RTN
11058  F5F5             
11059  F5F5             RANDGEN_1: ; $F5F5
11060  F5F5 E9 7A 01 00     ANI  (ARX + $01),$00
11061  F5F9 9E 0E           BCH RANDGEN_3 ; $F5ED
11062  F5FB             
11063  F5FB             RANDGEN_2: ; $F5FB
11064  F5FB ED 7A 02 F0     BII  (ARX + $02),$F0
11065  F5FF 9B 16           BZS RANDGEN
11066  F601 CD 80           VMJ  ($80) ; ($80)($40)
11067  F603 BE F5 EB        SJP  (RANDGEN)
11068  F606 CD 68           VMJ  ($68) ; ($68)($34)
11069  F608 A5 7A 10        LDA  (ARY)
11070  F60B B7 0A           CPI  A,$0A
11071  F60D 83 09           BCS RANDGEN_4 ; $F618
11072  F60F CD 7E           VMJ  ($7E) ; ($7E)($3F)
11073  F611 CD 60           VMJ  ($60) ; ($60)($30)
11074  F613 E8              VEJ  (E8)
11075  F614 CD 6A           VMJ  ($6A) ; ($6A)($35)
11076  F616 F0              VEJ  (F0)
11077  F617 9A              RTN
11078  F618             
11079  F618             RANDGEN_4: ; $F618
11080  F618 BA F1 5D        JMP  SQR_ROOT_1 ; $F15D
11081  F61B             
11082  F61B             
11083  F61B             ; $F618 Generates RANDOM number and updates RND pointer
11084  F61B CD 82           VMJ  ($82) ; ($82)($41)
11085  F61D             
11086  F61D             ; $F61B (5C) Generates RANDOM number and updates RND pointers.
11087  F61D EE              VEJ  (EE)
11088  F61E EA              VEJ  (EA)
11089  F61F EE              VEJ  (EE)
11090  F620 EE              VEJ  (EE)
11091  F621 4A 07           LDI  XL,$07
11092  F623 5A 17           LDI  YL,$17
11093  F625 6A 05           LDI  UL,$05
11094  F627 FB              SEC
11095  F628             
11096  F628             RANDGEN_5: ; $F628
11097  F628 57              LDE  Y
11098  F629 8C              DCA  (X)
11099  F62A 43              SDE  X
11100  F62B 88 05           LOP  UL,RANDGEN_5 ; $F628
11101  F62D E9 7A 01 00     ANI  (ARX + $01),$00
11102  F631 58 7B           LDI  YH,$7B
11103  F633 5A 01           LDI  YL,$01
11104  F635 4A 01           LDI  XL,$01
11105  F637 BE F7 33        SJP  (XREG2YREG2) ; $F733
11106  F63A 58 7A           LDI  YH,$7A
11107  F63C             
11108  F63C             
11109  F63C             ; $F63C Sets the 11th and 12th digit of the result to 00
11110  F63C             ; Sets Byte 7 in the AR-X to 00.
11111  F63C             ARXX: ; 
11112  F63C E9 7A 07 00     ANI  (ARX + $07),$00
11113  F640 9A              RTN
11114  F641             
11115  F641             
11116  F641             
11117  F641             ; Basic command RANDOM
11118  F641             BCMD_RANDOM: ; $F641
11119  F641 FD 98           PSH  Y
11120  F643 CD 54           VMJ  ($54) ; ($54)($2A)
11121  F645 BE F7 53        SJP  (CLR_SM_ARX)
11122  F648 BE E5 B4        SJP  (TIME2ARX)
11123  F64B A5 7A 06        LDA  (ARX + $06)
11124  F64E B9 77           ANI  A,$77
11125  F650 BB 20           ORI  A,$20
11126  F652 AE 7A 12        STA  (ARY + $02)
11127  F655 CD 5E           VMJ  ($5E) ; ($5E)($2F)
11128  F657 EE              VEJ  (EE)
11129  F658 CD 5C           VMJ  ($5C) ; ($5C)($2E)
11130  F65A FD 1A           POP  Y
11131  F65C E2              VEJ  (E2)
11132  F65D             
11133  F65D             
11134  F65D             ; $F65D Converts AR-X into BCD form (absolute value).
11135  F65D             ARX2BCD_ABS: 
11136  F65D CD 6C           VMJ  ($6C) ; ($6C)($36)
11137  F65F 8E 02           BCH ARX2BCD2
11138  F661             
11139  F661             
11140  F661             ; (E8) $F661 Converts AR-X to BCD form (absolute value) 
11141  F661             ; Converts AR-X into BCD format, whereby the absolute value (positive number) is formed.  
11142  F661 B5 00           LDI  A,$00
11143  F663             
11144  F663             
11145  F663             
11146  F663             ; (52) $F663 Converts AR-X to BCD form
11147  F663             ; Converts the result in the AR-X into the correct BCD format. With overflow 
11148  F663             ; C=1. AR-X is set to 0 if below the permissible value range.
11149  F663             ARX2BCD2: ; $F663
11150  F663 FD C8           PSH  A
11151  F665 4A 01           LDI  XL,$01
11152  F667 6A 06           LDI  UL,$06
11153  F669             
11154  F669             ARX2BCD2_4: ; $F669
11155  F669 45              LIN  X
11156  F66A 89 04           BZR ARX2BCD2_3 ; $F670
11157  F66C 88 05           LOP  UL,ARX2BCD2_4 ; F669
11158  F66E 8E 32           BCH ARX2BCD2_5 ; $F6A2
11159  F670             
11160  F670             ARX2BCD2_3: ; $F670
11161  F670 4A 01           LDI  XL,$01
11162  F672 47              LDE  X
11163  F673 8B 06           BZS ARX2BCD2_6 ; $F67B
11164  F675 4F 01           ADI  (X),$01
11165  F677 CD 74           VMJ  ($74) ; ($74)($3A)
11166  F679 9E 0B           BCH ARX2BCD2_3 ; $F670
11167  F67B             
11168  F67B             ARX2BCD2_6: ; $F67B
11169  F67B ED 7A 02 F0     BII  (ARX + $02),$F0
11170  F67F 89 07           BZR ARX2BCD2_7 ; $F688
11171  F681 EF 7A 00 FF     ADI  (ARX),$FF
11172  F685 EA              VEJ  (EA)
11173  F686 9E 0D           BCH ARX2BCD2_6 ; $F67B
11174  F688             
11175  F688             ARX2BCD2_7: ; $F688
11176  F688 A5 7A 00        LDA  (ARX)
11177  F68B BF 80           BII  A,$80
11178  F68D 89 0D           BZR ARX2BCD2_8 ; $F69C
11179  F68F B7 64           CPI  A,$64
11180  F691             
11181  F691             ARX2BCD2_10: ; $F691
11182  F691 FD 8A           POP  A
11183  F693 AE 7A 01        STA  (ARX + $01)
11184  F696 81 0D           BCR ARX2BCD2_9 ; $F6A5
11185  F698             
11186  F698             ARX2BCD2_1: ; $F698
11187  F698 68 25           LDI  UH,$25
11188  F69A FB              SEC
11189  F69B 9A              RTN
11190  F69C             
11191  F69C             ARX2BCD2_8: ; $F69C
11192  F69C BD FF           EAI  $FF
11193  F69E B7 63           CPI  A,$63
11194  F6A0 91 11           BCR ARX2BCD2_10 ; $F691
11195  F6A2             
11196  F6A2             ARX2BCD2_5: ; $F698
11197  F6A2 EC              VEJ  (EC)
11198  F6A3 FD 8A           POP  A
11199  F6A5             
11200  F6A5             ARX2BCD2_9: ; $F6A5
11201  F6A5 68 00           LDI  UH,$00
11202  F6A7 F9              REC
11203  F6A8 9A              RTN
11204  F6A9             
11205  F6A9             
11206  F6A9             ; Limit result to 2 decimal places
11207  F6A9             ARX2BCD2_2: ; $F6A9
11208  F6A9 BE F7 53        SJP  (CLR_SM_ARX)
11209  F6AC 4A 00           LDI  XL,$00
11210  F6AE 05              LDA  (X)
11211  F6AF F9              REC
11212  F6B0 B3 02           ADI  A,$02
11213  F6B2 8E 06           BCH XFER_DEC_ARX2ARY_1 ; $F6BA
11214  F6B4             
11215  F6B4             
11216  F6B4             
11217  F6B4             ; $F6B4 TTransfers decimal places from AR-X to AR-Y, whereby their position 
11218  F6B4             ; from AR-X is retained.
11219  F6B4             XFER_DEC_ARX2ARY: ; 
11220  F6B4 BE F7 53        SJP  (CLR_SM_ARX)
11221  F6B7 4A 00           LDI  XL,$00
11222  F6B9 05              LDA  (X)
11223  F6BA             
11224  F6BA             XFER_DEC_ARX2ARY_1: ; $F6BA
11225  F6BA BF 80           BII  A,$80
11226  F6BC 89 1D           BZR XFER_DEC_ARX2ARY_2 ; $F6DB
11227  F6BE B7 0B           CPI  A,$0B
11228  F6C0 83 18           BCS XFER_DEC_ARX2ARY_3 ; $F6DA
11229  F6C2 B3 05           ADI  A,$05
11230  F6C4             
11231  F6C4             XFER_DEC_ARX2ARY_6: ; $F6C4
11232  F6C4 D5              SHR
11233  F6C5 0A              STA  XL
11234  F6C6 BB 10           ORI  A,$10
11235  F6C8 1A              STA  YL
11236  F6C9 83 14           BCS XFER_DEC_ARX2ARY_4 ; $F6DF
11237  F6CB             
11238  F6CB             XFER_DEC_ARX2ARY_5: ; $F6CB
11239  F6CB 05              LDA  (X)
11240  F6CC 49 00           ANI  (X),$00
11241  F6CE             
11242  F6CE             XFER_DEC_ARX2ARY_7: ; $F6CE
11243  F6CE 51              SIN  Y
11244  F6CF 40              INC  XL
11245  F6D0 4E 08           CPI  XL,$08
11246  F6D2 91 09           BCR XFER_DEC_ARX2ARY_5 ; $F6CB
11247  F6D4 A5 7A 00        LDA  (ARX)
11248  F6D7 AE 7A 10        STA  (ARY)
11249  F6DA             
11250  F6DA             XFER_DEC_ARX2ARY_3: ; $F6DA
11251  F6DA 9A              RTN
11252  F6DB             
11253  F6DB             XFER_DEC_ARX2ARY_2: ; $F6DB
11254  F6DB B5 04           LDI  A,$04
11255  F6DD 9E 1B           BCH XFER_DEC_ARX2ARY_6 ; $F6C4
11256  F6DF             
11257  F6DF             XFER_DEC_ARX2ARY_4: ; $F6DF
11258  F6DF 05              LDA  (X)
11259  F6E0 49 F0           ANI  (X),$F0
11260  F6E2 B9 0F           ANI  A,$0F
11261  F6E4 9E 18           BCH XFER_DEC_ARX2ARY_7 ; $F6CE
11262  F6E6             
11263  F6E6             
11264  F6E6             
11265  F6E6             ; (7C) $F6E6 Determines the sign of the result and puts it on the stack
11266  F6E6             ; Sign test. Put the result of a sign combination (AR-X and AR-Y) on the stack.
11267  F6E6             ; Ditto for sign of AR-Y. For further calculations set AR to 00.
11268  F6E6             SIGN_TEST: ; 
11269  F6E6 FD 2A           POP  U
11270  F6E8 4A 01           LDI  XL,$01
11271  F6EA 5A 11           LDI  YL,$11
11272  F6EC 15              LDA  (Y)
11273  F6ED 59 00           ANI  (Y),$00
11274  F6EF FD C8           PSH  A
11275  F6F1 0D              EOR  (X)
11276  F6F2 49 00           ANI  (X),$00
11277  F6F4 FD C8           PSH  A
11278  F6F6 46              DEC  X
11279  F6F7 56              DEC  Y
11280  F6F8 FD A8           PSH  U
11281  F6FA 9A              RTN
11282  F6FB             
11283  F6FB             
11284  F6FB             
11285  F6FB             ; (6C) $F6FB Loads signs from AR-X into Accumulator and clears signs from AR-X.
11286  F6FB             LDA_SGN_ARX: ; 
11287  F6FB 4A 01           LDI  XL,$01
11288  F6FD 05              LDA  (X)
11289  F6FE 49 00           ANI  (X),$00
11290  F700 9A              RTN
11291  F701             
11292  F701             
11293  F701             
11294  F701             ; $F701 Transfers AR-Y to AR-S
11295  F701             XFER_ARY2ARS:  ; 
11296  F701 4A 10           LDI  XL,$10
11297  F703 5A 30           LDI  YL,$30
11298  F705 8E 3A           BCH XFER_ARY2ARX2_1 ; $F741
11299  F707             
11300  F707             
11301  F707             
11302  F707             ; $F707 (80) Transfers AR-X to AR-S
11303  F707             XFER_ARX2ARS:  ; 
11304  F707 CD 54           VMJ  ($54) ; ($54)($2A)
11305  F709 5A 30           LDI  YL,$30
11306  F70B 8E 04           BCH XFER_ARX2ARY_1 ; $F711
11307  F70D             
11308  F70D             
11309  F70D             ; (E6) $F70D Transfers AR-X to AR-Y
11310  F70D             XFER_ARX2ARY: ; 
11311  F70D CD 54           VMJ  ($54) ; ($54)($2A)
11312  F70F 5A 10           LDI  YL,$10
11313  F711             
11314  F711             XFER_ARX2ARY_1: ; $F711
11315  F711 4A 00           LDI  XL,$00
11316  F713 8E 2C           BCH XFER_ARY2ARX2_1 ; $F741
11317  F715             
11318  F715             
11319  F715             
11320  F715             ; (68) $F715 Transfers AR-S to AR-Y
11321  F715             XFER_ARS2ARY: ; 
11322  F715 4A 30           LDI  XL,$30
11323  F717 5A 10           LDI  YL,$10
11324  F719 8E 26           BCH XFER_ARY2ARX2_1 ; $F741
11325  F71B             
11326  F71B             
11327  F71B             
11328  F71B             ; $F71B Transfers sign and mantissa from AR-Y to AR-X
11329  F71B             XFER_SM_ARY2ARX: ;
11330  F71B 4A 11           LDI  XL,$11
11331  F71D 8E 02           BCH XFER_SM_ARZ2ARX_1 ; $F721
11332  F71F             
11333  F71F             
11334  F71F             
11335  F71F             ; Transfers sign and mantissa from AR-Z to AR-X
11336  F71F             XFER_SM_ARZ2ARX: ; $F71F
11337  F71F 4A 09           LDI  XL,$09
11338  F721             
11339  F721             XFER_SM_ARZ2ARX_1: ; $F721
11340  F721 5A 01           LDI  YL,$01
11341  F723 8E 0E           BCH XREG2YREG2 ; XFER_SM_ARX2ARZ 
11342  F725             
11343  F725             
11344  F725             
11345  F725             ; $F725 Transfers sign and mantissa from AR-Z to AR-X
11346  F725             XFER_SM_ARY2ARZ: ; 
11347  F725 4A 11           LDI  XL,$11
11348  F727 8E 08           BCH XFER_SM_ARX2ARZ_1 ; $F731
11349  F729             
11350  F729             
11351  F729             
11352  F729             ; (82) $F729 The sign and mantissa of the BCD value in AR-X are transferred to AR-Y.
11353  F729             XFER_SM_ARX2ARY: ; 
11354  F729 4A 01           LDI  XL,$01
11355  F72B 5A 11           LDI  YL,$11
11356  F72D 8E 04           BCH XREG2YREG2
11357  F72F             
11358  F72F             
11359  F72F             
11360  F72F             ; $F733 Block shift: 7 bytes from (X-Reg) to (Y-Reg)
11361  F72F             ; Save UL+1 bytes from X-Reg to Y-Reg.
11362  F72F             XFER_SM_ARX2ARZ: ; 
11363  F72F 4A 01           LDI  XL,$01
11364  F731             
11365  F731             XFER_SM_ARX2ARZ_1: ; $F731
11366  F731 5A 09           LDI  YL,$09
11367  F733             
11368  F733             
11369  F733             
11370  F733             ; Transfers AR-S to AR-X
11371  F733             XREG2YREG2:
11372  F733 6A 06           LDI  UL,$06
11373  F735 8E 0C           BCH XFER_ARY2ARX2_2 ; $F743
11374  F737             
11375  F737             ; $F737 Transfer AR-S to AR-X.
11376  F737             XFER_ARY2ARX:
11377  F737 CD 54           VMJ  ($54) ; ($54)($2A)
11378  F739 4A 30           LDI  XL,$30
11379  F73B 8E 02           BCH XFER_ARY2ARX2_3 ; $F73F
11380  F73D             
11381  F73D             
11382  F73D             
11383  F73D             ; $F73D Transfers AR-S to AR-X
11384  F73D             XFER_ARY2ARX2: ; 
11385  F73D 4A 10           LDI  XL,$10
11386  F73F             
11387  F73F             XFER_ARY2ARX2_3: ; $F73F
11388  F73F 5A 00           LDI  YL,$00
11389  F741             
11390  F741             XFER_ARY2ARX2_1: ; $F741
11391  F741 6A 07           LDI  UL,$07
11392  F743             
11393  F743             XFER_ARY2ARX2_2: ; $F743
11394  F743 F5              TIN
11395  F744 88 03           LOP  UL,XFER_ARY2ARX2_2 ; $F743
11396  F746 9A              RTN
11397  F747             
11398  F747             
11399  F747             
11400  F747             ;------------------------------------------------------------------------------
11401  F747             ; Clear sign and mantissa of arithmetic registers
11402  F747             ;             Address: AR-Y: F747 (70)
11403  F747             ;                      AR-Z: F74B
11404  F747             ;                      AR-W: F74F
11405  F747             ;                      AR-X: F753 (76)
11406  F747             ;          Parameter:	XH must contain 7A
11407  F747             ;
11408  F747             ; Modified Registers:	X-Reg, Accumulator
11409  F747             ;   Error conditions:	None
11410  F747             ;------------------------------------------------------------------------------
11411  F747             ; (70) Clears the sign and mantissa of AR-Y
11412  F747             CLR_SM_ARY: ; $F747
11413  F747 4A 11           LDI  XL,$11
11414  F749 8E 16           BCH CLR_7_XREG
11415  F74B             
11416  F74B             ;  Clears the sign and mantissa of AR-Z
11417  F74B             CLR_SM_ARZ: ; $F74B
11418  F74B 4A 09           LDI  XL,$09
11419  F74D 8E 12           BCH CLR_7_XREG
11420  F74F             
11421  F74F             ; Clears sign and mantissa of AR-W
11422  F74F             CLR_SM_ARW: ; $F74F
11423  F74F 4A 29           LDI  XL,$29
11424  F751 8E 0E           BCH CLR_7_XREG
11425  F753             
11426  F753             ; (76) Clears arithmetic register AR-X
11427  F753             CLR_SM_ARX: ; $F753
11428  F753 4A 10           LDI  XL,$10
11429  F755 8E 04           BCH CLR_SM_ARX3
11430  F757             
11431  F757             
11432  F757             ;------------------------------------------------------------------------------
11433  F757             ; Clears arithmetic registers
11434  F757             ;            Address: AR-X: F757 (EC)
11435  F757             ;               AR-Y: F753
11436  F757             ;          Parameter: XH must contain 7A
11437  F757             ;
11438  F757             ; Modified Registers: X-Reg, U-Reg, Accumulator
11439  F757             ;   Error conditions: None
11440  F757             ;------------------------------------------------------------------------------
11441  F757             CLR_ARITHMETIC_REGS: ; $F757
11442  F757 48 7A           LDI  XH,$7A
11443  F759 4A 00           LDI  XL,$00
11444  F75B             
11445  F75B             ; Clears 8 bytes from (X-Reg).
11446  F75B             CLR_SM_ARX3: ; $F75B
11447  F75B 6A 07           LDI  UL,$07
11448  F75D 8E 04           BCH CLR_N_XREG
11449  F75F             
11450  F75F             ; (76) Clears sign and mantissa in AR-X
11451  F75F             CLR_SM_XREG: ; $F75F
11452  F75F 4A 01           LDI  XL,$01
11453  F761             
11454  F761             ; Clear 7 bytes from (X-Reg).
11455  F761             CLR_7_XREG: ; $F761
11456  F761 6A 06           LDI  UL,$06
11457  F763             
11458  F763             
11459  F763             
11460  F763             ;------------------------------------------------------------------------------
11461  F763             ; (BA) Delete UL+1 bytes from (X-Reg)
11462  F763             ;            Address: AR-X: F763 (BA)
11463  F763             ;          Parameter: None
11464  F763             ; 
11465  F763             ; Modified Registers: X-Reg, U-Reg, Accumulator
11466  F763             ;   Error conditions: None
11467  F763             ;------------------------------------------------------------------------------
11468  F763             CLR_N_XREG: ; $F763
11469  F763 B5 00           LDI  A,$00
11470  F765             
11471  F765             CLR_N_XREG_1: ; $F765
11472  F765 41              SIN  X
11473  F766 88 03           LOP  UL,$F765
11474  F768 9A              RTN
11475  F769             
11476  F769             
11477  F769             
11478  F769             ; AR-W shift one nibble to the right (/10)
11479  F769             ARW_SHR_4BITS: ; $F769
11480  F769 4A 28           LDI  XL,$28
11481  F76B 8E 0A           BCH X_REG_SHR_4BITS
11482  F76D             
11483  F76D             
11484  F76D             
11485  F76D             ; Push AR-Z right one nibble (/10)
11486  F76D             ARZ_SHR_4BITS: ; $F76D
11487  F76D 4A 08           LDI  XL,$08
11488  F76F 8E 06           BCH X_REG_SHR_4BITS
11489  F771             
11490  F771             
11491  F771             
11492  F771             ; Shift AR-Y one nibble to the right (/10)
11493  F771             ARY_SHR_4BITS: ; $F771
11494  F771 4A 10           LDI  XL,$10
11495  F773 8E 02           BCH X_REG_SHR_4BITS
11496  F775             
11497  F775             
11498  F775             
11499  F775             ; (74) Push AR-X one nibble to the right (/10)
11500  F775             ARX_SHR_4BITS: ; $F775
11501  F775 4A 00           LDI  XL,$00
11502  F777             
11503  F777             
11504  F777             
11505  F777             ; Shift 7 bytes from (X-Reg) one nibble to the right (/10)
11506  F777             X_REG_SHR_4BITS: ; $F777
11507  F777 6A 06           LDI  UL,$06
11508  F779 B5 00           LDI  A,$00
11509  F77B             
11510  F77B             X_REG_SHR_4BITS_1: ; $F77B
11511  F77B 44              INC  X
11512  F77C D3              DRR  (X)
11513  F77D 88 04           LOP  UL,X_REG_SHR_4BITS_1 ; $F77B
11514  F77F 9A              RTN
11515  F780 4A 0F           LDI  XL,$0F
11516  F782 6A 05           LDI  UL,$05
11517  F784             
11518  F784             X_REG_SHR_4BITS_2: ; $F784
11519  F784 46              DEC  X
11520  F785 45              LIN  X
11521  F786 43              SDE  X
11522  F787 88 05           LOP  UL,X_REG_SHR_4BITS_2 ; $F784
11523  F789 49 00           ANI  (X),$00
11524  F78B 9A              RTN
11525  F78C             
11526  F78C             
11527  F78C             
11528  F78C             ; Push AR-S left one nibble (*10)
11529  F78C             ARS_SHL_4BITS: ; $F78C
11530  F78C 48 7A           LDI  XH,$7A
11531  F78E 4A 37           LDI  XL,$37
11532  F790 6A 04           LDI  UL,$04
11533  F792 8E 0C           BCH ARX_SHL_4BITS_1 ; $F7A0
11534  F794             
11535  F794             
11536  F794             
11537  F794             ; Push AR-W one nibble to the left (*10)
11538  F794             ARW_SHL_4BITS: ; $F794
11539  F794 4A 30           LDI  XL,$30
11540  F796 8E 06           BCH ARX_SHL_4BITS_2 ; $F79E
11541  F798             
11542  F798             
11543  F798             
11544  F798             ; Push AR-Z left one nibble (*10)
11545  F798             ARZ_SHL_4BITS: ; $F798
11546  F798 4A 10           LDI  XL,$10
11547  F79A 8E 02           BCH ARX_SHL_4BITS_2 ; $F79E
11548  F79C             
11549  F79C             
11550  F79C             
11551  F79C             ; (EA) Push AR-X left one nibble (*10)
11552  F79C             ARX_SHL_4BITS: ; $F79C
11553  F79C 4A 08           LDI  XL,$08
11554  F79E             
11555  F79E             ARX_SHL_4BITS_2: ; $F79E
11556  F79E 6A 06           LDI  UL,$06
11557  F7A0             
11558  F7A0             ARX_SHL_4BITS_1: ; $F7A0
11559  F7A0 B5 00           LDI  A,$00
11560  F7A2             
11561  F7A2             ARX_SHL_4BITS_3: ; $F7A2
11562  F7A2 46              DEC  X
11563  F7A3 D7              DRL  (X)
11564  F7A4 88 04           LOP  UL,ARX_SHL_4BITS_3 ; $F7A2
11565  F7A6 9A              RTN
11566  F7A7             
11567  F7A7             
11568  F7A7             
11569  F7A7             ; (5E) Transfer random number from RND pointer to AR-X
11570  F7A7             RND2ARX: ; $F7A7
11571  F7A7 5A 01           LDI  YL,$01
11572  F7A9 48 7B           LDI  XH,$7B
11573  F7AB 4A 01           LDI  XL,$01
11574  F7AD BE F7 33        SJP  (XREG2YREG2) ; F8A5
11575  F7B0             
11576  F7B0             
11577  F7B0             
11578  F7B0             ;------------------------------------------------------------------------------
11579  F7B0             ; (5A) Make pointer to arithmetic register
11580  F7B0             ; Position high bytes in X-Reg and Y-Reg on arithmetic registers
11581  F7B0             ;            Address: F7B0 (54)
11582  F7B0             ;   Entry parameters: None
11583  F7B0             ;
11584  F7B0             ; Modified registers: XH and YH are set to 7A
11585  F7B0             ;   Error conditions: None
11586  F7B0             ;------------------------------------------------------------------------------
11587  F7B0             SET_HB_XYREGS: ; $F7B0
11588  F7B0 48 7A           LDI  XH,$7A
11589  F7B2 58 7A           LDI  YH,$7A
11590  F7B4 9A              RTN
11591  F7B5             
11592  F7B5             
11593  F7B5             
11594  F7B5             ; (64) Swaps AR-X with AR-S
11595  F7B5             SWAP_AARX_ARY: ; $F7B5
11596  F7B5 5A 30           LDI  YL,$30
11597  F7B7 8E 02           BCH SWAP_ARX_ARY_1 ; $F7BB
11598  F7B9             
11599  F7B9             
11600  F7B9             
11601  F7B9             ; (66) Swaps AR-X with AR-Y
11602  F7B9             SWAP_ARX_ARY: ; $F7B9
11603  F7B9 5A 10           LDI  YL,$10
11604  F7BB             
11605  F7BB             SWAP_ARX_ARY_1: ; $F7BB
11606  F7BB 4A 00           LDI  XL,$00
11607  F7BD 6A 07           LDI  UL,$07
11608  F7BF             
11609  F7BF             
11610  F7BF             
11611  F7BF             ; (UL+1) Swap Bytes
11612  F7BF             SWAP_BYTES: ; $F7BF
11613  F7BF 05              LDA  (X)
11614  F7C0 28              STA  UH
11615  F7C1 15              LDA  (Y)
11616  F7C2 41              SIN  X
11617  F7C3 A4              LDA  UH
11618  F7C4 51              SIN  Y
11619  F7C5 88 08           LOP  UL,SWAP_BYTES
11620  F7C7 9A              RTN
11621  F7C8             
11622  F7C8             
11623  F7C8             
11624  F7C8             ; Add AR-U to AR-X
11625  F7C8             ADD_ARU_ARX: ; $F7C8
11626  F7C8 5A 1F           LDI  YL,$1F
11627  F7CA 8E 02           BCH ADD_ARU_ARX_16 ; $F7CE
11628  F7CC             
11629  F7CC             ; (EE) $F7CC Add the sign and mantissa of AR-X and AR-Y and store them in AR-X.
11630  F7CC 5A 17           LDI  YL,$17
11631  F7CE             
11632  F7CE             ; (72) $F7CE Adds the mantissa of the AR-Y to the AR-X.
11633  F7CE             ADD_ARU_ARX_16: ; 
11634  F7CE 4A 07           LDI  XL,$07
11635  F7D0             
11636  F7D0             ADD_ARU_ARX_26: ; $F7D0
11637  F7D0 F9              REC
11638  F7D1 6A 06           LDI  UL,$06
11639  F7D3             
11640  F7D3             ADD_ARU_ARX_17: ; $F7D3
11641  F7D3 57              LDE  Y
11642  F7D4 8C              DCA  (X)
11643  F7D5 43              SDE  X
11644  F7D6 88 05           LOP  UL,ADD_ARU_ARX_17 ; $F7D3
11645  F7D8 9A              RTN
11646  F7D9             
11647  F7D9             
11648  F7D9             ; $F7D9 AR-X=AR-X-AR-V.
11649  F7D9             ADD_ARU_ARX_6: ; 
11650  F7D9 5A 27           LDI  YL,$27
11651  F7DB 8E 02           BCH ADD_ARU_ARX_8 ; $F7DF
11652  F7DD             
11653  F7DD             ; (7A) $F7DD AR-X=AR-X-AR-V.
11654  F7DD 5A 17           LDI  YL,$17
11655  F7DF             
11656  F7DF             ; $F7DF Subtract from AR-X the AR pointed to by Y-Reg on entry.
11657  F7DF             ADD_ARU_ARX_8: ; $F7DF
11658  F7DF 4A 07           LDI  XL,$07
11659  F7E1             
11660  F7E1             ; $F7E1 From the arithmetic register pointed to by X-Reg, subtract AR pointed to by Y-Reg.
11661  F7E1             ADD_ARU_ARX_11: ; 
11662  F7E1 FB              SEC
11663  F7E2 6A 06           LDI  UL,$06
11664  F7E4             
11665  F7E4             ADD_ARU_ARX_18: ; $F7E4
11666  F7E4 05              LDA  (X)
11667  F7E5 1C              DCS  (Y)
11668  F7E6 43              SDE  X
11669  F7E7 56              DEC  Y
11670  F7E8 88 06           LOP  UL,ADD_ARU_ARX_18 ; $F7E4
11671  F7EA 9A              RTN
11672  F7EB             
11673  F7EB             ; $F7EB Calculates the decimal to AR-X in AR-X.
11674  F7EB             ADD_ARU_ARX_3: ; 
11675  F7EB 4A 07           LDI  XL,$07
11676  F7ED FB              SEC
11677  F7EE 6A 06           LDI  UL,$06
11678  F7F0             
11679  F7F0             ADD_ARU_ARX_19: ; $F7F0
11680  F7F0 B5 00           LDI  A,$00
11681  F7F2 0C              DCS  (X)
11682  F7F3 43              SDE  X
11683  F7F4 88 06           LOP  UL,ADD_ARU_ARX_19 ; $F7F0
11684  F7F6 9A              RTN
11685  F7F7             
11686  F7F7             ADD_ARU_ARX_2: ; $F7F7
11687  F7F7 D5              SHR
11688  F7F8 81 0B           BCR ADD_ARU_ARX_10 ; $F805
11689  F7FA FD C8           PSH  A
11690  F7FC 04              LDA  XL
11691  F7FD B9 F8           ANI  A,$F8
11692  F7FF 0A              STA  XL
11693  F800 BE F7 77        SJP  (X_REG_SHR_4BITS)
11694  F803 FD 8A           POP  A
11695  F805             
11696  F805             ; $F805 Accumulator contains the number of places by which the AR pointed 
11697  F805             ; to by the X-Reg is shifted to the right
11698  F805             ADD_ARU_ARX_10: ; 
11699  F805 BF FF           BII  A,$FF
11700  F807 8B 32           BZS ADD_ARU_ARX_20 ; $F83B
11701  F809 FD 5A           STX  Y
11702  F80B BD FF           EAI  $FF
11703  F80D FB              SEC
11704  F80E 12              ADC  YL
11705  F80F 1A              STA  YL
11706  F810 6A 06           LDI  UL,$06
11707  F812             
11708  F812             ADD_ARU_ARX_22: ; $F812
11709  F812 14              LDA  YL
11710  F813 B9 07           ANI  A,$07
11711  F815 8B 01           BZS ADD_ARU_ARX_21 ; $F818
11712  F817 57              LDE  Y
11713  F818             
11714  F818             ADD_ARU_ARX_21: ; $F818
11715  F818 43              SDE  X
11716  F819 88 09           LOP  UL,ADD_ARU_ARX_22 ; $F812
11717  F81B 9A              RTN
11718  F81C             
11719  F81C             ADD_ARU_ARX_5: ; $F81C
11720  F81C 68 01           LDI  UH,$01
11721  F81E 8E 02           BCH ADD_ARU_ARX_23 ; $F822
11722  F820             
11723  F820             ADD_ARU_ARX_4: ; $F820
11724  F820 68 02           LDI  UH,$02
11725  F822             
11726  F822             ADD_ARU_ARX_23: ; $F822
11727  F822 4A 17           LDI  XL,$17
11728  F824 5A 1F           LDI  YL,$1F
11729  F826             
11730  F826             ADD_ARU_ARX_25: ; $F826
11731  F826 6A 06           LDI  UL,$06
11732  F828 F9              REC
11733  F829             
11734  F829             ADD_ARU_ARX_24: ; $F829
11735  F829 05              LDA  (X)
11736  F82A 8C              DCA  (X)
11737  F82B 53              SDE  Y
11738  F82C 46              DEC  X
11739  F82D 88 06           LOP  UL,ADD_ARU_ARX_24 ; $F829
11740  F82F FD 62           DEC  UH
11741  F831 81 08           BCR ADD_ARU_ARX_20 ; $F83B
11742  F833 B5 0F           LDI  A,$0F
11743  F835 FD CA           ADR  X
11744  F837 FD DA           ADR  Y
11745  F839 9E 15           BCH ADD_ARU_ARX_25 ; $F826
11746  F83B             
11747  F83B             ADD_ARU_ARX_20: ; $F83B
11748  F83B 9A              RTN
11749  F83C             
11750  F83C             ADD_ARU_ARX_9: ; $F83C
11751  F83C A5 7A 08        LDA  (ARZ)
11752  F83F 9B 06           BZS ADD_ARU_ARX_20 ; $F83B
11753  F841 DF              DEC  A
11754  F842 4A 0F           LDI  XL,$0F
11755  F844 BE F7 F7        SJP  (ADD_ARU_ARX_2) ; $F7F7
11756  F847             
11757  F847             ADD_ARU_ARX_27: ; $F847
11758  F847 4A 17           LDI  XL,$17
11759  F849 5A 0F           LDI  YL,$0F
11760  F84B 9E 7D           BCH ADD_ARU_ARX_26 ; $F7D0
11761  F84D             
11762  F84D             ADD_ARU_ARX_12: ; $F84D
11763  F84D A5 7A 08        LDA  (ARZ)
11764  F850 9B 17           BZS ADD_ARU_ARX_20 ; $F83B
11765  F852 DF              DEC  A
11766  F853 4A 0F           LDI  XL,$0F
11767  F855 BE F8 05        SJP  (ADD_ARU_ARX_10) ; $F805
11768  F858 9E 13           BCH ADD_ARU_ARX_27 ; $F847
11769  F85A             
11770  F85A             
11771  F85A             ; $F85A Loads auxiliary constants to AR-Y according to the evaluation of the
11772  F85A             ;  display according to 'RAD' or 'DEG'.
11773  F85A             ADD_ARU_ARX_13: ; 
11774  F85A A5 76 4F        LDA  (DISP_BUFF + $4F)
11775  F85D BF 04           BII  A,$04
11776  F85F F9              REC
11777  F860 9B 27           BZS ADD_ARU_ARX_20 ; $F83B
11778  F862 BF 02           BII  A,$02
11779  F864 89 19           BZR ADD_ARU_ARX_28 ; $F87F
11780  F866 4A 98           LDI  XL,$98
11781  F868             
11782  F868             ADD_ARU_ARX_31: ; $F868
11783  F868 6A 07           LDI  UL,$07
11784  F86A 48 FC           LDI  XH,$FC
11785  F86C             
11786  F86C             ADD_ARU_ARX_33: ; $F86C
11787  F86C 5A 10           LDI  YL,$10
11788  F86E             
11789  F86E             ADD_ARU_ARX_29: ; $F86E
11790  F86E F5              TIN
11791  F86F 88 03           LOP  UL,ADD_ARU_ARX_29 ; $F86E
11792  F871 48 7A           LDI  XH,$7A
11793  F873 FB              SEC
11794  F874             
11795  F874             ADD_ARU_ARX_42: ; $F874
11796  F874 9A              RTN
11797  F875             
11798  F875             ; $F875  Transfers PI to AR-Y.
11799  F875 4A F8           LDI  XL,$F8
11800  F877 6A 07           LDI  UL,$07
11801  F879 8E 1D           BCH ADD_ARU_ARX_30 ; $F898
11802  F87B             
11803  F87B             ; $F87B Transfers auxiliary constants to AR-Y.
11804  F87B             ADD_ARU_ARX_7: ; $F87B
11805  F87B 4A 60           LDI  XL,$60
11806  F87D 9E 17           BCH ADD_ARU_ARX_31 ; $F868
11807  F87F             
11808  F87F             ADD_ARU_ARX_28: ; $F87F
11809  F87F B5 E9           LDI  A,$E9
11810  F881 8E 0E           BCH ADD_ARU_ARX_32 ; $F891
11811  F883             
11812  F883             
11813  F883             ; $F883 Loads AR-Y with auxiliary constant.
11814  F883             ADD_ARU_ARX_14: ; $F883
11815  F883 B5 EF           LDI  A,$EF
11816  F885 8E 0A           BCH ADD_ARU_ARX_32 ; $F891
11817  F887             
11818  F887             ; $F887 Loads AR-Y with auxiliary constant.
11819  F887             ADD_ARU_ARX_15: ; $F887
11820  F887 B5 F2           LDI  A,$F2
11821  F889 8E 06           BCH ADD_ARU_ARX_32 ; $F891
11822  F88B             
11823  F88B             ; (62) $F88B Transfers 0.6 to AR-V (FF 00 60 ...).
11824  F88B B5 F5           LDI  A,$F5
11825  F88D 8E 02           BCH ADD_ARU_ARX_32 ; $F891
11826  F88F             
11827  F88F             ; (6A) $F88F Transfers numerical value 1 to AR-Y.
11828  F88F B5 EC           LDI  A,$EC
11829  F891             
11830  F891             ADD_ARU_ARX_32: ; $F891
11831  F891 1A              STA  YL
11832  F892 CD 70           VMJ  ($70) ; ($70)($38)
11833  F894 14              LDA  YL
11834  F895 0A              STA  XL
11835  F896 6A 02           LDI  UL,$02
11836  F898             
11837  F898             ADD_ARU_ARX_30: ; $F898
11838  F898 48 FB           LDI  XH,$FB
11839  F89A 9E 30           BCH ADD_ARU_ARX_33 ; $F86C
11840  F89C             
11841  F89C             ; $F89C AR-X=AR-X to the power of AR-Y.
11842  F89C CD 54           VMJ  ($54) ; ($54)($2A)
11843  F89E 4A 02           LDI  XL,$02
11844  F8A0 47              LDE  X
11845  F8A1 8B 7D           BZS ADD_ARU_ARX_34 ; $F920
11846  F8A3 4D 80           BII  (X),$80
11847  F8A5 89 39           BZR ADD_ARU_ARX_45 ; $F8E0
11848  F8A7 ED 7A 12 FF     BII  (ARY + $02),$FF
11849  F8AB 8B 2D           BZS ADD_ARU_ARX_35 ; $F8DA
11850  F8AD B5 00           LDI  A,$00
11851  F8AF FD C8           PSH  A
11852  F8B1             
11853  F8B1             ADD_ARU_ARX_41: ; $F8B1
11854  F8B1 BE F7 01        SJP  (XFER_ARY2ARS)
11855  F8B4 BE F1 65        SJP  (BCMD_LOG)
11856  F8B7 83 09           BCS ADD_ARU_ARX_36 ; $F8C2
11857  F8B9 CD 68           VMJ  ($68) ; ($68)($34)
11858  F8BB CD 7E           VMJ  ($7E) ; ($7E)($3F)
11859  F8BD 83 03           BCS ADD_ARU_ARX_36 ; $F8C2
11860  F8BF BE F1 D4        SJP  (EXPONENT)
11861  F8C2             
11862  F8C2             ADD_ARU_ARX_36: ; $F8C2
11863  F8C2 FD 8A           POP  A
11864  F8C4 83 0A           BCS ADD_ARU_ARX_37 ; $F8D0
11865  F8C6 BF F0           BII  A,$F0
11866  F8C8 8B 0D           BZS ADD_ARU_ARX_38 ; $F8D7
11867  F8CA D5              SHR
11868  F8CB 83 06           BCS $F8D3
11869  F8CD D9              SHL
11870  F8CE 81 07           BCR ADD_ARU_ARX_38 ; $F8D7
11871  F8D0             
11872  F8D0             ADD_ARU_ARX_37: ; $F8D0
11873  F8D0 BA F1 5D        JMP  SQR_ROOT_1 ; $F15D
11874  F8D3 EB 7A 01 80     ORI  (ARX + $01),$80
11875  F8D7             
11876  F8D7             ADD_ARU_ARX_38: ; $F8D7
11877  F8D7 BA F0 63        JMP  MULTIPLY_7 ; $F063
11878  F8DA             
11879  F8DA             ADD_ARU_ARX_35: ; $F8DA
11880  F8DA CD 6A           VMJ  ($6A) ; ($6A)($35)
11881  F8DC CD 56           VMJ  ($56) ; ($56)($2B)
11882  F8DE 9E 09           BCH ADD_ARU_ARX_38 ; $F8D7
11883  F8E0             
11884  F8E0             ADD_ARU_ARX_45: ; $F8E0
11885  F8E0 49 00           ANI  (X),$00
11886  F8E2 CD 80           VMJ  ($80) ; ($80)($40)
11887  F8E4 CD 56           VMJ  ($56) ; ($56)($2B)
11888  F8E6 A5 7A 00        LDA  (ARX)
11889  F8E9 BF 80           BII  A,$80
11890  F8EB 99 1D           BZR ADD_ARU_ARX_37 ; $F8D0
11891  F8ED B7 0B           CPI  A,$0B
11892  F8EF B5 00           LDI  A,$00
11893  F8F1 83 20           BCS ADD_ARU_ARX_39 ; $F913
11894  F8F3 CD 6C           VMJ  ($6C) ; ($6C)($36)
11895  F8F5 FD C8           PSH  A
11896  F8F7 CD 60           VMJ  ($60) ; ($60)($30)
11897  F8F9 FB              SEC
11898  F8FA 5A 11           LDI  YL,$11
11899  F8FC 6A 06           LDI  UL,$06
11900  F8FE 55              LIN  Y
11901  F8FF 99 3F           BZR ADD_ARU_ARX_36 ; $F8C2
11902  F901 88 05           LOP  UL,$F8FE
11903  F903 FD 8A           POP  A
11904  F905 AE 7A 01        STA  (ARX + $01)
11905  F908 A5 7A 00        LDA  (ARX)
11906  F90B B3 04           ADI  A,$04
11907  F90D D5              SHR
11908  F90E 0A              STA  XL
11909  F90F 83 0B           BCS ADD_ARU_ARX_40 ; $F91C
11910  F911 42              DEC  XL
11911  F912 05              LDA  (X)
11912  F913             
11913  F913             ADD_ARU_ARX_39: ; $F913
11914  F913 BB F0           ORI  A,$F0
11915  F915 FD C8           PSH  A
11916  F917 E6              VEJ  (E6)
11917  F918 CD 64           VMJ  ($64) ; ($64)($32)
11918  F91A 9E 6B           BCH ADD_ARU_ARX_41 ; $F8B1
11919  F91C             
11920  F91C             ADD_ARU_ARX_40: ; $F91C
11921  F91C 05              LDA  (X)
11922  F91D F1              AEX
11923  F91E 9E 0D           BCH ADD_ARU_ARX_39 ; $F913
11924  F920             
11925  F920             ADD_ARU_ARX_34: ; $F920
11926  F920 4A 12           LDI  XL,$12
11927  F922 47              LDE  X
11928  F923 9B 55           BZS ADD_ARU_ARX_37 ; $F8D0
11929  F925 4D 80           BII  (X),$80
11930  F927 9B 52           BZS ADD_ARU_ARX_38 ; $F8D7
11931  F929 9E 5B           BCH ADD_ARU_ARX_37 ; $F8D0
11932  F92B             
11933  F92B             
11934  F92B             ; $F92B Convert AR-X from integer to BCD format.
11935  F92B             ADD_ARU_ARX_1: ; $F92B
11936  F92B B5 A0           LDI  A,$A0
11937  F92D A7 7A 04        CPA  (ARX + $04)
11938  F930 91 BE           BCR ADD_ARU_ARX_42 ; $F874
11939  F932 48 7A           LDI  XH,$7A
11940  F934 A5 7A 07        LDA  (ARX + $07)
11941  F937 F9              REC
11942  F938 B3 B0           ADI  A,$B0
11943  F93A 81 12           BCR ADD_ARU_ARX_43 ; $F94E
11944  F93C CD 6C           VMJ  ($6C) ; ($6C)($36)
11945  F93E FD C8           PSH  A
11946  F940 4A 06           LDI  XL,$06
11947  F942 6A 05           LDI  UL,$05
11948  F944             
11949  F944             ADD_ARU_ARX_44: ; $F944
11950  F944 B5 00           LDI  A,$00
11951  F946 8C              DCA  (X)
11952  F947 43              SDE  X
11953  F948 88 06           LOP  UL,ADD_ARU_ARX_44 ; $F944
11954  F94A FD 8A           POP  A
11955  F94C CD 52           VMJ  ($52) ; ($52)($29
11956  F94E             
11957  F94E             ADD_ARU_ARX_43: ; $F94E
11958  F94E BA F6 3C        JMP  ARXX ; $F63C
11959  F951 E4              VEJ  (E4)
11960  F952 E4              VEJ  (E4)
11961  F953 E4              VEJ  (E4)
11962  F954 E4              VEJ  (E4)
11963  F955 E4              VEJ  (E4)
11964  F956 E4              VEJ  (E4)
11965  F957             
11966  F957             
11967  F957             
11968  F957             ;------------------------------------------------------------------------------
11969  F957             ;  Tokenizer program: Converts subsets of ASCII character strings into tokens, 
11970  F957             ;                     provided these could be fount in the token tables. 
11971  F957             ;                     The input buffer is compressed in the process. All Basic 
11972  F957             ;                     commands tokenized to 2 bytes, insert codes are deleted 
11973  F957             ;                     and spaces outside of strings as well.
11974  F957             ;            Address: F957
11975  F957             ; 
11976  F957             ;         Parameters: Y-Reg must point to the input buffer
11977  F957             ; Modified Registers: All
11978  F957             ;   Error conditions: Error 28 when strings contain tokens.
11979  F957             ;------------------------------------------------------------------------------
11980  F957             TOKENIZE_INBUF: ; $F957
11981  F957 68 00           LDI  UH,$00
11982  F959             
11983  F959             ; $F959 Tokenizer (string flag already in UH).
11984  F959             TOKENIZE_INBUF_4: ; $F959
11985  F959 A5 78 8B        LDA  (INBUFPTR_L)
11986  F95C 1A              STA  YL
11987  F95D 58 7B           LDI  YH,$7B
11988  F95F FD 18           LDX  Y
11989  F961             
11990  F961             TOKENIZE_INBUF_1: ; $F961
11991  F961 55              LIN  Y
11992  F962 B7 27           CPI  A,$27
11993  F964 9B 05           BZS TOKENIZE_INBUF_1 ; $F961
11994  F966 B7 0D           CPI  A,$0D
11995  F968 89 04           BZR TOKENIZE_INBUF_2 ; $F96E
11996  F96A 68 00           LDI  UH,$00
11997  F96C 8E AA           BCH VAR_TYPE_1 ; $FA18
11998  F96E             
11999  F96E             TOKENIZE_INBUF_2: ; $F96E
12000  F96E B7 22           CPI  A,$22
12001  F970 89 2F           BZR VAR_TYPE_2 ; $F9A1
12002  F972 FD 62           DEC  UH
12003  F974 8B 02           BZS TOKENIZE_INBUF_3 ; $F978
12004  F976 68 01           LDI  UH,$01
12005  F978             
12006  F978             TOKENIZE_INBUF_3: ; $F978
12007  F978 41              SIN  X
12008  F979 9E 1A           BCH TOKENIZE_INBUF_1 ; $F961
12009  F97B             
12010  F97B             
12011  F97B             
12012  F97B             ; $F97B ; $F87B Convert input line into tokens and use formula interpreter
12013  F97B             VAR_TYPE: ; $F97B
12014  F97B 68 00           LDI  UH,$00
12015  F97D ED 78 85 80     BII  (CURVARTYPE),$80 ; $7885
12016  F981 89 02           BZR VAR_TYPE_3 ; $F985
12017  F983 68 01           LDI  UH,$01
12018  F985             
12019  F985             VAR_TYPE_3: ; $F985
12020  F985 BE F9 59        SJP  (TOKENIZE_INBUF_4) ; $F959
12021  F988 8B 15           BZS VAR_TYPE_4 ; $F99F
12022  F98A 06              CPA  XL
12023  F98B 83 0B           BCS VAR_TYPE_5 ; $F998
12024  F98D A5 78 85        LDA  (CURVARTYPE); $7885
12025  F990 DB              ROL
12026  F991 83 06           BCS VAR_TYPE_6 ; $F999
12027  F993 CD 0C           VMJ  ($0C)
12028  F995             
12029  F995             VAR_TYPE_8: ; $F995
12030  F995 C8              VEJ  (C8) \ ABRF(VAR_TYPE_7) ; $F99D
12030  F996 06          
12031  F997 62              DEC  UL
12032  F998             
12033  F998             VAR_TYPE_5: ; $F998
12034  F998 9A              RTN
12035  F999             
12036  F999             VAR_TYPE_6: ; $F999
12037  F999 DE              VEJ  (DE) \ ABRF(VAR_TYPE_4) ; $F99F
12037  F99A 04          
12038  F99B 9E 08           BCH VAR_TYPE_8 ; $F995
12039  F99D             
12040  F99D             VAR_TYPE_7: ; $F99D
12041  F99D 68 01           LDI  UH,$01
12042  F99F             
12043  F99F             VAR_TYPE_4: ; $F99F
12044  F99F F9              REC
12045  F9A0 9A              RTN
12046  F9A1             
12047  F9A1             VAR_TYPE_2: ; $F9A1
12048  F9A1 6C 00           CPI  UH,$00
12049  F9A3 8B 06           BZS VAR_TYPE_9 ; $F9AB
12050  F9A5 B7 E0           CPI  A,$E0
12051  F9A7 91 31           BCR TOKENIZE_INBUF_3 ; $F978
12052  F9A9 8E 6D           BCH VAR_TYPE_1 ; $FA18
12053  F9AB             
12054  F9AB             VAR_TYPE_9: ; $F9AB
12055  F9AB B7 20           CPI  A,$20
12056  F9AD 9B 4E           BZS TOKENIZE_INBUF_1 ; $F961
12057  F9AF B7 41           CPI  A,$41
12058  F9B1 91 3B           BCR TOKENIZE_INBUF_3 ; $F978
12059  F9B3 B7 5B           CPI  A,$5B
12060  F9B5 81 09           BCR $F9C0
12061  F9B7 B7 E0           CPI  A,$E0
12062  F9B9 91 43           BCR TOKENIZE_INBUF_3 ; $F978
12063  F9BB 28              STA  UH
12064  F9BC 55              LIN  Y
12065  F9BD 2A              STA  UL
12066  F9BE 8E 49           BCH VAR_TYPE_10 ; $FA09
12067  F9C0 FD 88           PSH  X
12068  F9C2 28              STA  UH
12069  F9C3 6A 60           LDI  UL,$60
12070  F9C5 48 C0           LDI  XH,$C0
12071  F9C7             
12072  F9C7             ; $F9C7 work off. Search Token Table
12073  F9C7 A5 79 D0        LDA  (PU_PV)
12074  F9CA             
12075  F9CA             VAR_TYPE_22: ; $F9CA
12076  F9CA FD C8           PSH  A
12077  F9CC 4A 1E           LDI  XL,$1E
12078  F9CE A4              LDA  UH
12079  F9CF B9 1F           ANI  A,$1F
12080  F9D1 D9              SHL
12081  F9D2 FD CA           ADR  X
12082  F9D4 45              LIN  X
12083  F9D5 8B 69           BZS VAR_TYPE_11 ; $FA40
12084  F9D7 FD C8           PSH  A
12085  F9D9 05              LDA  (X)
12086  F9DA 0A              STA  XL
12087  F9DB FD 8A           POP  A
12088  F9DD 08              STA  XH
12089  F9DE             
12090  F9DE             VAR_TYPE_20: ; $F9DE
12091  F9DE FD 98           PSH  Y
12092  F9E0             
12093  F9E0             VAR_TYPE_12: ; $F9E0
12094  F9E0 55              LIN  Y
12095  F9E1 B7 20           CPI  A,$20
12096  F9E3 9B 05           BZS VAR_TYPE_12 ; $F9E0
12097  F9E5 B7 27           CPI  A,$27
12098  F9E7 9B 09           BZS VAR_TYPE_12 ; $F9E0
12099  F9E9 B7 2E           CPI  A,$2E
12100  F9EB 89 08           BZR VAR_TYPE_13 ; $F9F5
12101  F9ED             
12102  F9ED             VAR_TYPE_14: ; $F9ED
12103  F9ED B5 E0           LDI  A,$E0
12104  F9EF F7              CIN
12105  F9F0 93 05           BCS VAR_TYPE_14 ; $F9ED
12106  F9F2 46              DEC  X
12107  F9F3 8E 08           BCH VAR_TYPE_15 ; $F9FD
12108  F9F5             
12109  F9F5             VAR_TYPE_13: ; $F9F5
12110  F9F5 F7              CIN
12111  F9F6 89 38           BZR VAR_TYPE_16 ; $FA30
12112  F9F8 05              LDA  (X)
12113  F9F9 B7 E0           CPI  A,$E0
12114  F9FB 91 1D           BCR VAR_TYPE_12 ; $F9E0
12115  F9FD             
12116  F9FD             VAR_TYPE_15: ; $F9FD
12117  F9FD 45              LIN  X
12118  F9FE 28              STA  UH
12119  F9FF 05              LDA  (X)
12120  FA00 2A              STA  UL
12121  FA01 FD 0A           POP  X
12122  FA03 FD 8A           POP  A
12123  FA05 CD 1E           VMJ  ($1E)
12124  FA07 FD 0A           POP  X
12125  FA09             
12126  FA09             VAR_TYPE_10: ; $FA09
12127  FA09 A4              LDA  UH
12128  FA0A 41              SIN  X
12129  FA0B 24              LDA  UL
12130  FA0C 41              SIN  X
12131  FA0D 6C F1           CPI  UH,$F1
12132  FA0F 68 00           LDI  UH,$00
12133  FA11 99 B2           BZR TOKENIZE_INBUF_1 ; $F961
12134  FA13 6E AB           CPI  UL,$AB
12135  FA15 99 B6           BZR TOKENIZE_INBUF_1 ; $F961
12136  FA17             
12137  FA17             VAR_TYPE_17: ; $FA17
12138  FA17 55              LIN  Y
12139  FA18             
12140  FA18             VAR_TYPE_1: ; $FA18
12141  FA18 41              SIN  X
12142  FA19 B7 0D           CPI  A,$0D
12143  FA1B 99 06           BZR VAR_TYPE_17 ; $FA17
12144  FA1D 56              DEC  Y
12145  FA1E 46              DEC  X
12146  FA1F FD 88           PSH  X
12147  FA21             
12148  FA21             VAR_TYPE_18: ; $FA21
12149  FA21 0E              STA  (X)
12150  FA22 40              INC  XL
12151  FA23 91 04           BCR VAR_TYPE_18 ; $FA21
12152  FA25 FD 0A           POP  X
12153  FA27 A5 78 8B        LDA  (INBUFPTR_L)
12154  FA2A 1A              STA  YL
12155  FA2B FD 62           DEC  UH
12156  FA2D 68 1C           LDI  UH,$1C
12157  FA2F 9A              RTN
12158  FA30             
12159  FA30             VAR_TYPE_16: ; $FA30
12160  FA30 B5 E0           LDI  A,$E0
12161  FA32             
12162  FA32             VAR_TYPE_19: ; $FA32
12163  FA32 F7              CIN
12164  FA33 93 03           BCS VAR_TYPE_19 ; $FA32
12165  FA35 44              INC  X
12166  FA36 44              INC  X
12167  FA37 44              INC  X
12168  FA38 45              LIN  X
12169  FA39 44              INC  X
12170  FA3A B9 10           ANI  A,$10
12171  FA3C FD 1A           POP  Y
12172  FA3E 9B 62           BZS VAR_TYPE_20 ; $F9DE
12173  FA40             
12174  FA40             VAR_TYPE_11: ; $FA40
12175  FA40 FD 8A           POP  A
12176  FA42 CD 1E           VMJ  ($1E)
12177  FA44             
12178  FA44             VAR_TYPE_23: ; $FA44
12179  FA44 24              LDA  UL
12180  FA45 BE FA 58        SJP  (DEC_OPN)
12181  FA48 2A              STA  UL
12182  FA49 83 06           BCS VAR_TYPE_21 ; $FA51
12183  FA4B CD 3C           VMJ  ($3C)
12184  FA4D 9B 85           BZS VAR_TYPE_22 ; $F9CA
12185  FA4F 9E 0D           BCH VAR_TYPE_23 ; $FA44
12186  FA51             
12187  FA51             VAR_TYPE_21: ; $FA51
12188  FA51 FD 0A           POP  X
12189  FA53 A4              LDA  UH
12190  FA54 68 00           LDI  UH,$00
12191  FA56 9E E0           BCH TOKENIZE_INBUF_3 ; $F978
12192  FA58             
12193  FA58             
12194  FA58             
12195  FA58             ; Decrements accumulator (OPN byte) in 2K steps
12196  FA58             DEC_OPN: ; $FA58
12197  FA58 BF 3C           BII  A,$3C
12198  FA5A 8B 05           BZS DEC_OPN_1 ; $FA61
12199  FA5C FB              SEC
12200  FA5D B1 04           SBI  A,$04
12201  FA5F F9              REC
12202  FA60 9A              RTN
12203  FA61             
12204  FA61             DEC_OPN_1: ; $FA61
12205  FA61 DB              ROL
12206  FA62 B5 DC           LDI  A,$DC
12207  FA64 9A              RTN
12208  FA65             
12209  FA65             
12210  FA65             
12211  FA65             ; Sets PV bit and PV byte according to Carry bit 0 or 1.
12212  FA65             SET_PV: ; $FA65
12213  FA65 B9 FE           ANI  A,$FE
12214  FA67 FD BE           RIE
12215  FA69 B8              RPV
12216  FA6A 81 02           BCR SET_PV_1 ; $FA6E
12217  FA6C A8              SPV
12218  FA6D DD              INC  A
12219  FA6E             
12220  FA6E             SET_PV_1: ; $FA6E
12221  FA6E AE 79 D0        STA  (PU_PV)
12222  FA71 FD 81           SIE
12223  FA73 9A              RTN
12224  FA74             
12225  FA74             
12226  FA74             
12227  FA74             
12228  FA74             ; (3C) $FA74 Checks whether a certain token table (whose right-shifted 
12229  FA74             ; high-byte address is in the accumulator, exists. If not, C=0.
12230  FA74             TOKEN_CHECK: ; $FA74
12231  FA74 D9              SHL
12232  FA75             
12233  FA75             ; $FA75 Checks whether there is a corresponding token table for a token.
12234  FA75             TOKEN_CHECK_1: ; $FA75
12235  FA75 08              STA  XH
12236  FA76 A5 79 D0        LDA  (PU_PV)
12237  FA79 FD C8           PSH  A
12238  FA7B BE FA 65        SJP  (SET_PV)
12239  FA7E 4A 00           LDI  XL,$00
12240  FA80 05              LDA  (X)
12241  FA81 0A              STA  XL
12242  FA82 FD 8A           POP  A
12243  FA84 4E 55           CPI  XL,$55
12244  FA86 89 A2           BZR PVBANK2
12245  FA88 9A              RTN
12246  FA89             
12247  FA89             
12248  FA89             
12249  FA89             ; (1C) $FA89 Processes tokens corresponding to data bytes
12250  FA89             TOKEN_PROCESS: ; $FA89
12251  FA89 FD 0A           POP  X
12252  FA8B 45              LIN  X
12253  FA8C FD 88           PSH  X
12254  FA8E 6C F2           CPI  UH,$F2
12255  FA90 83 50           BCS TOKEN_PROCESS_1 ; $FAE2
12256  FA92 FD C8           PSH  A
12257  FA94 E9 79 D1 FC     ANI  (OPN),$FC
12258  FA98 A5 79 D1        LDA  (OPN)
12259  FA9B 6C F0           CPI  UH,$F0
12260  FA9D 89 05           BZR TOKEN_PROCESS_2 ; $FAA4
12261  FA9F             
12262  FA9F             TOKEN_PROCESS_9: ; $FA9F
12263  FA9F FD C8           PSH  A
12264  FAA1             
12265  FAA1             TOKEN_PROCESS_4: ; $FAA1
12266  FAA1 D9              SHL
12267  FAA2 8E 0C           BCH TOKEN_PROCESS_3 ; $FAB0
12268  FAA4             
12269  FAA4             TOKEN_PROCESS_2: ; $FAA4
12270  FAA4 B5 60           LDI  A,$60
12271  FAA6 93 07           BCS TOKEN_PROCESS_4 ; $FAA1
12272  FAA8 FB              SEC
12273  FAA9 A4              LDA  UH
12274  FAAA B9 07           ANI  A,$07
12275  FAAC F1              AEX
12276  FAAD D1              ROR
12277  FAAE 6C E8           CPI  UH,$E8
12278  FAB0             
12279  FAB0             TOKEN_PROCESS_3: ; $FAB0
12280  FAB0 BE FA 75        SJP  (TOKEN_CHECK_1) ; $FA75
12281  FAB3 81 10           BCR TOKEN_PROCESS_5 ; $FAC5
12282  FAB5 FD C8           PSH  A
12283  FAB7 4A 51           LDI  XL,$51
12284  FAB9             
12285  FAB9             TOKEN_PROCESS_10: ; $FAB9
12286  FAB9 44              INC  X
12287  FABA             
12288  FABA             TOKEN_PROCESS_11: ; $FABA
12289  FABA 44              INC  X
12290  FABB 44              INC  X
12291  FABC 45              LIN  X
12292  FABD B9 0F           ANI  A,$0F
12293  FABF 89 26           BZR TOKEN_PROCESS_6 ; $FAE7
12294  FAC1 FD 8A           POP  A
12295  FAC3 CD 1E           VMJ  ($1E)
12296  FAC5             
12297  FAC5             TOKEN_PROCESS_5: ; $FAC5
12298  FAC5 FD 8A           POP  A
12299  FAC7 6C F0           CPI  UH,$F0
12300  FAC9 89 17           BZR TOKEN_PROCESS_1 ; $FAE2
12301  FACB A7 79 D1        CPA  (OPN)
12302  FACE 89 04           BZR TOKEN_PROCESS_7 ; $FAD4
12303  FAD0 B5 60           LDI  A,$60
12304  FAD2 8E 05           BCH TOKEN_PROCESS_8 ; $FAD9
12305  FAD4             
12306  FAD4             TOKEN_PROCESS_7: ; $FAD4
12307  FAD4 BE FA 58        SJP  (DEC_OPN)
12308  FAD7 83 07           BCS $FAE0
12309  FAD9             
12310  FAD9             TOKEN_PROCESS_8: ; $FAD9
12311  FAD9 A7 79 D1        CPA  (OPN)
12312  FADC 9B 0A           BZS TOKEN_PROCESS_7 ; $FAD4
12313  FADE 9E 41           BCH TOKEN_PROCESS_9 ; $FA9F
12314  FAE0 FD 8A           POP  A
12315  FAE2             
12316  FAE2             TOKEN_PROCESS_1: ; $FAE2
12317  FAE2 B5 00           LDI  A,$00
12318  FAE4 68 1B           LDI  UH,$1B
12319  FAE6 9A              RTN
12320  FAE7             
12321  FAE7             TOKEN_PROCESS_6: ; $FAE7
12322  FAE7 FD CA           ADR  X
12323  FAE9 45              LIN  X
12324  FAEA A6              CPA  UH
12325  FAEB 99 34           BZR TOKEN_PROCESS_10 ; $FAB9
12326  FAED 45              LIN  X
12327  FAEE 26              CPA  UL
12328  FAEF 99 37           BZR TOKEN_PROCESS_11 ; $FABA
12329  FAF1 6C F0           CPI  UH,$F0
12330  FAF3 89 06           BZR TOKEN_PROCESS_12 ; $FAFB
12331  FAF5 FD 8A           POP  A
12332  FAF7 FD 2A           POP  U
12333  FAF9 8E 03           BCH TOKEN_PROCESS_13 ; $FAFE
12334  FAFB             
12335  FAFB             TOKEN_PROCESS_12: ; $FAFB
12336  FAFB FD 2A           POP  U
12337  FAFD A4              LDA  UH
12338  FAFE             
12339  FAFE             TOKEN_PROCESS_13: ; $FAFE
12340  FAFE FD C8           PSH  A
12341  FB00 24              LDA  UL
12342  FB01 8B 77           BZS PVBANK2_1 ; $FB7A
12343  FB03 D5              SHR
12344  FB04 83 34           BCS PVBANK2_2 ; $FB3A
12345  FB06 FD C8           PSH  A
12346  FB08 46              DEC  X
12347  FB09 47              LDE  X
12348  FB0A 2A              STA  UL
12349  FB0B 47              LDE  X
12350  FB0C 28              STA  UH
12351  FB0D             
12352  FB0D             TOKEN_PROCESS_14: ; $FB0D
12353  FB0D 46              DEC  X
12354  FB0E 05              LDA  (X)
12355  FB0F B7 80           CPI  A,$80
12356  FB11 91 06           BCR TOKEN_PROCESS_14 ; $FB0D
12357  FB13 FD 8A           POP  A
12358  FB15 D1              ROR
12359  FB16 83 08           BCS TOKEN_PROCESS_15 ; $FB20
12360  FB18 FD 8A           POP  A
12361  FB1A D5              SHR
12362  FB1B 05              LDA  (X)
12363  FB1C B9 0F           ANI  A,$0F
12364  FB1E 8E 0D           BCH PVBANK2_3 ; $FB2D
12365  FB20             
12366  FB20             TOKEN_PROCESS_15: ; $FB20
12367  FB20 45              LIN  X
12368  FB21 B9 0F           ANI  A,$0F
12369  FB23 DF              DEC  A
12370  FB24 2A              STA  UL
12371  FB25             
12372  FB25             TOKEN_PROCESS_16: ; $FB25
12373  FB25 F5              TIN
12374  FB26 88 03           LOP  UL,TOKEN_PROCESS_16 ; $FB25
12375  FB28 FD 8A           POP  A
12376  FB2A             
12377  FB2A             
12378  FB2A             
12379  FB2A             ; (1E) $FB2A Performs PV banking according to PV byte $79D0.
12380  FB2A             PVBANK2: ; $FB2A
12381  FB2A D1              ROR
12382  FB2B B5 EF           LDI  A,$EF
12383  FB2D             
12384  FB2D             PVBANK2_3: ; $FB2D
12385  FB2D FD C8           PSH  A
12386  FB2F A5 79 D0        LDA  (PU_PV)
12387  FB32 BE FA 65        SJP  (SET_PV)
12388  FB35 FD 8A           POP  A
12389  FB37 9A              RTN
12390  FB38             
12391  FB38             ; $FB38 Execution of functions and trace.
12392  FB38             PVBANK2_10: ; $FB38
12393  FB38 FD C8           PSH  A
12394  FB3A             
12395  FB3A             PVBANK2_2: ; $FB3A
12396  FB3A 6A 28           LDI  UL,$28
12397  FB3C 68 FB           LDI  UH,$FB
12398  FB3E FD A8           PSH  U
12399  FB40 FD 6A           STX  U
12400  FB42 65              LIN  U
12401  FB43 08              STA  XH
12402  FB44 65              LIN  U
12403  FB45 0A              STA  XL
12404  FB46 65              LIN  U
12405  FB47 D9              SHL
12406  FB48 D9              SHL
12407  FB49 83 2A           BCS PVBANK2_4 ; $FB75
12408  FB4B 2A              STA  UL
12409  FB4C 68 12           LDI  UH,$12
12410  FB4E A5 78 8C        LDA  (NUMARGS)
12411  FB51 DF              DEC  A
12412  FB52 89 25           BZR PVBANK2_5 ; $FB79
12413  FB54 B5 B2           LDI  A,$B2
12414  FB56 A7 7A 04        CPA  (ARX + $04)
12415  FB59 B5 00           LDI  A,$00
12416  FB5B D1              ROR
12417  FB5C 68 11           LDI  UH,$11
12418  FB5E 22              ADC  UL
12419  FB5F D9              SHL
12420  FB60 83 17           BCS PVBANK2_5 ; $FB79
12421  FB62 6E 80           CPI  UL,$80
12422  FB64 81 0F           BCR PVBANK2_4 ; $FB75
12423  FB66 84              LDA  XH
12424  FB67 B7 80           CPI  A,$80
12425  FB69 BB 80           ORI  A,$80
12426  FB6B 08              STA  XH
12427  FB6C 81 07           BCR PVBANK2_4 ; $FB75
12428  FB6E FD 88           PSH  X
12429  FB70 D2              VEJ  (D2) \ ABRF($FB77) \ ABYT($80)
12429  FB71 05          
12429  FB72 80          
12430  FB73 FD 0A           POP  X
12431  FB75             
12432  FB75             PVBANK2_4: ; $FB75
12433  FB75 FD 5E           STX  P
12434  FB77 FD 0A           POP  X
12435  FB79             
12436  FB79             PVBANK2_5: ; $FB79
12437  FB79 9A              RTN
12438  FB7A             
12439  FB7A             PVBANK2_1: ; $FB7A
12440  FB7A FD 6A           STX  U
12441  FB7C 65              LIN  U
12442  FB7D 08              STA  XH
12443  FB7E 65              LIN  U
12444  FB7F 0A              STA  XL
12445  FB80 D8              VEJ  (D8)
12446  FB81 89 10           BZR PVBANK2_6 ; $FB93
12447  FB83 B5 20           LDI  A,$20
12448  FB85 6D 60           BII  (U),$60
12449  FB87 89 0C           BZR PVBANK2_7 ; $FB95
12450  FB89 68 1A           LDI  UH,$1A
12451  FB8B 45              LIN  X
12452  FB8C A9 76 4F        AND  (DISP_BUFF + $4F)
12453  FB8F 8B 0B           BZS PVBANK2_8 ; $FB9C
12454  FB91             
12455  FB91             PVBANK2_9: ; $FB91
12456  FB91 FD 5E           STX  P
12457  FB93             
12458  FB93             PVBANK2_6: ; $FB93
12459  FB93 B5 00           LDI  A,$00
12460  FB95             
12461  FB95             PVBANK2_7: ; $FB95
12462  FB95 2D              EOR  (U)
12463  FB96 B9 60           ANI  A,$60
12464  FB98 99 09           BZR PVBANK2_9 ; $FB91
12465  FB9A 68 01           LDI  UH,$01
12466  FB9C             
12467  FB9C             PVBANK2_8: ; $FB9C
12468  FB9C E0              VEJ  (E0)
12469  FB9D             
12470  FB9D             
12471  FB9D             
12472  FB9D             ; (3E) $FB9D Determine and run through the trace routine.
12473  FB9D             TRACE2: ; 
12474  FB9D AE 78 8E        STA  (TRACE)
12475  FBA0 B7 02           CPI  A,$02
12476  FBA2 A5 78 8D        LDA  (TRACE_ON)
12477  FBA5 8B 21           BZS TRACE2_1 ; $FBC8
12478  FBA7 81 12           BCR TRACE2_2 ; $FBBB
12479  FBA9 B7 58           CPI  A,$58
12480  FBAB 8B 0E           BZS TRACE2_2 ; $FBBB
12481  FBAD CD 3C           VMJ  ($3C)
12482  FBAF 89 08           BZR TRACE2_3 ; $FBB9
12483  FBB1 4A 1D           LDI  XL,$1D
12484  FBB3 BE FB 38        SJP  (PVBANK2_10) ; $FB38
12485  FBB6 A4              LDA  UH
12486  FBB7 89 0E           BZR TRACE2_4 ; $FBC7
12487  FBB9             
12488  FBB9             TRACE2_3: ; $FBB9
12489  FBB9 B5 58           LDI  A,$58
12490  FBBB             
12491  FBBB             TRACE2_2: ; $FBBB
12492  FBBB 68 00           LDI  UH,$00
12493  FBBD CD 3C           VMJ  ($3C)
12494  FBBF 4A 1D           LDI  XL,$1D
12495  FBC1 89 03           BZR TRACE2_5 ; $FBC6
12496  FBC3 BE FB 38        SJP  (PVBANK2_10) ; $FB38
12497  FBC6             
12498  FBC6             TRACE2_5: ; $FBC6
12499  FBC6 A4              LDA  UH
12500  FBC7             
12501  FBC7             TRACE2_4: ; $FBC7
12502  FBC7 9A              RTN
12503  FBC8             
12504  FBC8             TRACE2_1: ; $FBC8
12505  FBC8 93 11           BCS TRACE2_3 ; $FBB9
12506  FBCA 9A              RTN
12507  FBCB             
12508  FBCB             
12509  FBCB             
12510  FBCB             ; $FBCB Transfer string to output buffer or output to string buffer
12511  FBCB             STRXFR: ; $FBCB
12512  FBCB FD 98           PSH  Y
12513  FBCD 48 7B           LDI  XH,$7B
12514  FBCF 58 7B           LDI  YH,$7B
12515  FBD1 4A 10           LDI  XL,$10
12516  FBD3 5A 60           LDI  YL,$60
12517  FBD5 81 04           BCR STRXFR_1 ;$FBDB
12518  FBD7 4A 60           LDI  XL,$60
12519  FBD9 5A 10           LDI  YL,$10
12520  FBDB             
12521  FBDB             STRXFR_1: ; $FBDB
12522  FBDB 6A 4F           LDI  UL,$4F
12523  FBDD BA DC 28        JMP  ISARXBCD_13 ; $DC28
12524  FBE0 E4              VEJ  (E4)
12525  FBE1 E4              VEJ  (E4)
12526  FBE2 E4              VEJ  (E4)
12527  FBE3 E4              VEJ  (E4)
12528  FBE4 E4              VEJ  (E4)
12529  FBE5 E4              VEJ  (E4)
12530  FBE6 E4              VEJ  (E4)
12531  FBE7 E4              VEJ  (E4)
12532  FBE8 E4              VEJ  (E4)
12533  FBE9             
12534  FBE9             
12535  FBE9             
12536  FBE9             ; Auxiliary constants for arithmetic routines
12537  FBE9             AUX_CONST: ; $FBE9
12538  FBE9 FF 00 90        .BYTE  $FF,$00,$90                      ; 0.9
12539  FBEC 00 00 10        .BYTE  $00,$00,$10                      ; 1
12540  FBEF 01 00 90        .BYTE  $01,$00,$90                      ; 90
12541  FBF2 02 00 18        .BYTE  $02,$00,$18                      ; 180
12542  FBF5 FF 00 60        .BYTE  $FF,$00,$60                      ; 0.6
12543  FBF8 00 00 31 41     .BYTE  $00,$00,$31,$41,$59,$26,$53,$59  ; PI= 3.14159265359
12543  FBFC 59 26 53 59 
12544  FC00 00 00 30 10     .BYTE  $00,$00,$30,$10,$29,$99,$56,$64  ; 3.01029995664
12544  FC04 29 99 56 64 
12545  FC08 00 00 41 39     .BYTE  $00,$00,$41,$39,$26,$85,$15,$82  ; 4.13926851582
12545  FC0C 26 85 15 82 
12546  FC10 00 00 43 21     .BYTE  $00,$00,$43,$21,$37,$37,$82,$64  ; 4.32137378264
12546  FC14 37 37 82 64 
12547  FC18 00 00 43 40     .BYTE  $00,$00,$43,$40,$77,$47,$93,$19  ; 4.34077479319
12547  FC1C 77 47 93 19 
12548  FC20 00 00 43 42     .BYTE  $00,$00,$43,$42,$72,$76,$86,$27  ; 4.34272768627
12548  FC24 72 76 86 27 
12549  FC28 00 00 43 42     .BYTE  $00,$00,$43,$42,$92,$31,$04,$45  ; 4.34292310445
12549  FC2C 92 31 04 45 
12550  FC30 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$26,$47,$56  ; 4.34294264756
12550  FC34 94 26 47 56 
12551  FC38 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$46,$01,$89  ; 4.34294460189
12551  FC3C 94 46 01 89 
12552  FC40 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$47,$97,$32  ; 4.34294479732
12552  FC44 94 47 97 32 
12553  FC48 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$16,$86  ; 4.34294481686
12553  FC4C 94 48 16 86 
12554  FC50 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$18,$82  ; 4.34294481882
12554  FC54 94 48 18 82 
12555  FC58 00 00 43 42     .BYTE  $00,$00,$43,$42,$94,$48,$19,$01  ; 4.34294481901
12555  FC5C 94 48 19 01 
12556  FC60 FF 00 43 42     .BYTE  $FF,$00,$43,$42,$94,$48,$19,$03  ; 0.434294481903
12556  FC64 94 48 19 03 
12557  FC68 00 00 45 00     .BYTE  $00,$00,$45,$00,$00,$00,$00,$00  ; 4.5
12557  FC6C 00 00 00 00 
12558  FC70 00 00 57 10     .BYTE  $00,$00,$57,$10,$59,$31,$37,$50  ; 5.7105931375
12558  FC74 59 31 37 50 
12559  FC78 00 00 57 29     .BYTE  $00,$00,$57,$29,$38,$69,$76,$83  ; 5.72938697683
12559  FC7C 38 69 76 83 
12560  FC80 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$60,$41,$45  ; 5.72957604145
12560  FC84 57 60 41 45 
12561  FC88 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$79,$32,$21  ; 5.72957793221
12561  FC8C 57 79 32 21 
12562  FC90 00 00 57 29     .BYTE  $00,$00,$57,$29,$57,$79,$51,$11  ; 5.72957795111
12562  FC94 57 79 51 11 
12563  FC98 01 00 57 29     .BYTE  $01,$00,$57,$29,$57,$79,$51,$31  ; 57.2957595131
12563  FC9C 57 79 51 31 
12564  FCA0             
12565  FCA0             
12566  FCA0             
12567  FCA0             CHARSET: ; $FCA0
12568  FCA0 00 00 00 00     .BYTE  $00,$00,$00,$00,$00  ; Space
12568  FCA4 00 
12569  FCA5 00 00 5F 00     .BYTE  $00,$00,$5F,$00,$00  ; !
12569  FCA9 00 
12570  FCAA 00 03 04 03     .BYTE  $00,$03,$04,$03,$00  ; "
12570  FCAE 00 
12571  FCAF 22 7F 22 7F     .BYTE  $22,$7F,$22,$7F,$22  ; #
12571  FCB3 22 
12572  FCB4 24 2A 7F 2A     .BYTE  $24,$2A,$7F,$2A,$12  ; $
12572  FCB8 12 
12573  FCB9 23 13 08 64     .BYTE  $23,$13,$08,$64,$62  ; %
12573  FCBD 62 
12574  FCBE 36 49 55 22     .BYTE  $36,$49,$55,$22,$50  ; &
12574  FCC2 50 
12575  FCC3 63 41 41 41     .BYTE  $63,$41,$41,$41,$63  ; Insert
12575  FCC7 63 
12576  FCC8 00 1C 22 41     .BYTE  $00,$1C,$22,$41,$00  ; (
12576  FCCC 00 
12577  FCCD 00 41 22 1C     .BYTE  $00,$41,$22,$1C,$00  ; )
12577  FCD1 00 
12578  FCD2 14 08 3E 08     .BYTE  $14,$08,$3E,$08,$14  ; *
12578  FCD6 14 
12579  FCD7 08 08 3E 08     .BYTE  $08,$08,$3E,$08,$08  ; +
12579  FCDB 08 
12580  FCDC 00 58 38 00     .BYTE  $00,$58,$38,$00,$00  ; '
12580  FCE0 00 
12581  FCE1 08 08 08 08     .BYTE  $08,$08,$08,$08,$08  ; -
12581  FCE5 08 
12582  FCE6 00 60 60 00     .BYTE  $00,$60,$60,$00,$00  ; .
12582  FCEA 00 
12583  FCEB 20 10 08 04     .BYTE  $20,$10,$08,$04,$02  ; /
12583  FCEF 02 
12584  FCF0 3E 51 49 45     .BYTE  $3E,$51,$49,$45,$3E  ; 0
12584  FCF4 3E 
12585  FCF5 00 42 7F 40     .BYTE  $00,$42,$7F,$40,$00  ; 1
12585  FCF9 00 
12586  FCFA 42 61 51 49     .BYTE  $42,$61,$51,$49,$46  ; 2
12586  FCFE 46 
12587  FCFF 41 49 4D 4B     .BYTE  $41,$49,$4D,$4B,$31  ; 3
12587  FD03 31 
12588  FD04 18 14 12 7F     .BYTE  $18,$14,$12,$7F,$10  ; 4
12588  FD08 10 
12589  FD09 27 45 45 45     .BYTE  $27,$45,$45,$45,$39  ; 5
12589  FD0D 39 
12590  FD0E 3C 4A 49 49     .BYTE  $3C,$4A,$49,$49,$30  ; 6
12590  FD12 30 
12591  FD13 01 01 79 05     .BYTE  $01,$01,$79,$05,$03  ; 7
12591  FD17 03 
12592  FD18 36 49 49 49     .BYTE  $36,$49,$49,$49,$36  ; 8
12592  FD1C 36 
12593  FD1D 06 49 49 29     .BYTE  $06,$49,$49,$29,$1E  ; 9
12593  FD21 1E 
12594  FD22 00 36 36 00     .BYTE  $00,$36,$36,$00,$00  ; :
12594  FD26 00 
12595  FD27 00 5B 3B 00     .BYTE  $00,$5B,$3B,$00,$00  ; 
12595  FD2B 00 
12596  FD2C 08 14 22 41     .BYTE  $08,$14,$22,$41,$00  ; 
12596  FD30 00 
12597  FD31 14 14 14 14     .BYTE  $14,$14,$14,$14,$14  ; =
12597  FD35 14 
12598  FD36 00 41 22 14     .BYTE  $00,$41,$22,$14,$08  ; 
12598  FD3A 08 
12599  FD3B 02 01 51 09     .BYTE  $02,$01,$51,$09,$06  ; ?
12599  FD3F 06 
12600  FD40 32 49 79 41     .BYTE  $32,$49,$79,$41,$3E  ; 
12600  FD44 3E 
12601  FD45 7C 12 11 12     .BYTE  $7C,$12,$11,$12,$7C  ; A
12601  FD49 7C 
12602  FD4A 41 7F 49 49     .BYTE  $41,$7F,$49,$49,$36  ; B
12602  FD4E 36 
12603  FD4F 3E 41 41 41     .BYTE  $3E,$41,$41,$41,$22  ; C
12603  FD53 22 
12604  FD54 41 7F 41 41     .BYTE  $41,$7F,$41,$41,$3E  ; D
12604  FD58 3E 
12605  FD59 7F 49 49 49     .BYTE  $7F,$49,$49,$49,$41  ; E
12605  FD5D 41 
12606  FD5E 7F 09 09 09     .BYTE  $7F,$09,$09,$09,$01  ; F
12606  FD62 01 
12607  FD63 3E 41 41 49     .BYTE  $3E,$41,$41,$49,$39  ; G
12607  FD67 39 
12608  FD68 7F 08 08 08     .BYTE  $7F,$08,$08,$08,$7F  ; H
12608  FD6C 7F 
12609  FD6D 00 41 7F 41     .BYTE  $00,$41,$7F,$41,$00  ; I
12609  FD71 00 
12610  FD72 20 40 41 3F     .BYTE  $20,$40,$41,$3F,$01  ; J
12610  FD76 01 
12611  FD77 7F 08 14 22     .BYTE  $7F,$08,$14,$22,$41  ; K
12611  FD7B 41 
12612  FD7C 7F 40 40 40     .BYTE  $7F,$40,$40,$40,$40  ; L
12612  FD80 40 
12613  FD81 7F 02 0C 02     .BYTE  $7F,$02,$0C,$02,$7F  ; M
12613  FD85 7F 
12614  FD86 7F 04 08 10     .BYTE  $7F,$04,$08,$10,$7F  ; N
12614  FD8A 7F 
12615  FD8B 3E 41 41 41     .BYTE  $3E,$41,$41,$41,$3E  ; O
12615  FD8F 3E 
12616  FD90 7F 09 09 09     .BYTE  $7F,$09,$09,$09,$06  ; P
12616  FD94 06 
12617  FD95 3E 41 51 21     .BYTE  $3E,$41,$51,$21,$5E  ; Q
12617  FD99 5E 
12618  FD9A 7F 09 19 29     .BYTE  $7F,$09,$19,$29,$46  ; R
12618  FD9E 46 
12619  FD9F 26 49 49 49     .BYTE  $26,$49,$49,$49,$32  ; S
12619  FDA3 32 
12620  FDA4 01 01 7F 01     .BYTE  $01,$01,$7F,$01,$01  ; T
12620  FDA8 01 
12621  FDA9 3F 40 40 40     .BYTE  $3F,$40,$40,$40,$3F  ; U
12621  FDAD 3F 
12622  FDAE 07 18 60 18     .BYTE  $07,$18,$60,$18,$07  ; V
12622  FDB2 07 
12623  FDB3 7F 20 18 20     .BYTE  $7F,$20,$18,$20,$7F  ; W
12623  FDB7 7F 
12624  FDB8 63 14 08 14     .BYTE  $63,$14,$08,$14,$63  ; X
12624  FDBC 63 
12625  FDBD 03 04 78 04     .BYTE  $03,$04,$78,$04,$03  ; Y
12625  FDC1 03 
12626  FDC2 61 51 49 45     .BYTE  $61,$51,$49,$45,$43  ; Z
12626  FDC6 43 
12627  FDC7 10 20 7F 01     .BYTE  $10,$20,$7F,$01,$01  ; 
12627  FDCB 01 
12628  FDCC 15 16 7C 16     .BYTE  $15,$16,$7C,$16,$15  ; 
12628  FDD0 15 
12629  FDD1 41 3F 01 3F     .BYTE  $41,$3F,$01,$3F,$41  ; 
12629  FDD5 41 
12630  FDD6 18 04 02 04     .BYTE  $18,$04,$02,$04,$18  ;
12630  FDDA 18 
12631  FDDB 40 40 40 40     .BYTE  $40,$40,$40,$40,$40  ; 
12631  FDDF 40 
12632  FDE0 00 00 00 00     .BYTE  $00,$00,$00,$00,$00  ; 
12632  FDE4 00 
12633  FDE5 38 44 44 3C     .BYTE  $38,$44,$44,$3C,$40  ; a
12633  FDE9 40 
12634  FDEA 7F 48 44 44     .BYTE  $7F,$48,$44,$44,$38  ; b
12634  FDEE 38 
12635  FDEF 38 44 44 44     .BYTE  $38,$44,$44,$44,$20  ; c
12635  FDF3 20 
12636  FDF4 38 44 44 48     .BYTE  $38,$44,$44,$48,$7F  ; d
12636  FDF8 7F 
12637  FDF9 38 54 54 54     .BYTE  $38,$54,$54,$54,$18  ; e
12637  FDFD 18 
12638  FDFE 00 08 7E 09     .BYTE  $00,$08,$7E,$09,$02  ; f
12638  FE02 02 
12639  FE03 08 54 54 3C     .BYTE  $08,$54,$54,$3C,$00  ; g
12639  FE07 00 
12640  FE08 7F 04 04 78     .BYTE  $7F,$04,$04,$78,$00  ; h
12640  FE0C 00 
12641  FE0D 00 00 7D 00     .BYTE  $00,$00,$7D,$00,$00  ; i
12641  FE11 00 
12642  FE12 20 40 44 3D     .BYTE  $20,$40,$44,$3D,$00  ; j
12642  FE16 00 
12643  FE17 7F 10 28 44     .BYTE  $7F,$10,$28,$44,$00  ; k
12643  FE1B 00 
12644  FE1C 00 00 7F 00     .BYTE  $00,$00,$7F,$00,$00  ; l
12644  FE20 00 
12645  FE21 78 04 78 04     .BYTE  $78,$04,$78,$04,$78  ; m
12645  FE25 78 
12646  FE26 7C 08 04 04     .BYTE  $7C,$08,$04,$04,$78  ; n
12646  FE2A 78 
12647  FE2B 38 44 44 44     .BYTE  $38,$44,$44,$44,$38  ; o
12647  FE2F 38 
12648  FE30 7C 14 14 14     .BYTE  $7C,$14,$14,$14,$08  ; p
12648  FE34 08 
12649  FE35 18 24 14 7C     .BYTE  $18,$24,$14,$7C,$40  ; q
12649  FE39 40 
12650  FE3A 7C 08 04 04     .BYTE  $7C,$08,$04,$04,$00  ; r
12650  FE3E 00 
12651  FE3F 48 54 54 54     .BYTE  $48,$54,$54,$54,$20  ; s
12651  FE43 20 
12652  FE44 04 3E 44 20     .BYTE  $04,$3E,$44,$20,$00  ; t
12652  FE48 00 
12653  FE49 3C 40 40 20     .BYTE  $3C,$40,$40,$20,$7C  ; u
12653  FE4D 7C 
12654  FE4E 1C 20 40 20     .BYTE  $1C,$20,$40,$20,$1C  ; v
12654  FE52 1C 
12655  FE53 3C 40 30 40     .BYTE  $3C,$40,$30,$40,$3C  ; w
12655  FE57 3C 
12656  FE58 44 24 7C 48     .BYTE  $44,$24,$7C,$48,$44  ; x
12656  FE5C 44 
12657  FE5D 0C 50 50 3C     .BYTE  $0C,$50,$50,$3C,$00  ; y
12657  FE61 00 
12658  FE62 44 64 54 4C     .BYTE  $44,$64,$54,$4C,$44  ; z
12658  FE66 44 
12659  FE67 00 08 77 41     .BYTE  $00,$08,$77,$41,$00  ; 
12659  FE6B 00 
12660  FE6C 00 00 77 00     .BYTE  $00,$00,$77,$00,$00  ; 
12660  FE70 00 
12661  FE71 00 41 77 08     .BYTE  $00,$41,$77,$08,$00  ; 
12661  FE75 00 
12662  FE76 08 04 08 10     .BYTE  $08,$04,$08,$10,$08  ; 
12662  FE7A 08 
12663  FE7B FF FF FF FF     .BYTE  $FF,$FF,$FF,$FF,$FF  ; Cursor block
12663  FE7F FF 
12664  FE80             
12665  FE80             
12666  FE80             
12667  FE80             ; Keyboard layout (basic function)
12668  FE80             KB_LAYOUT_NORM: ; $FE80
12669  FE80 0B 4E 59 01     .BYTE  $0B,$4E,$59,$01,$48,$38,$35,$32
12669  FE84 48 38 35 32 
12670  FE88 09 58 57 11     .BYTE  $09,$58,$57,$11,$53,$0F,$2D,$2E
12670  FE8C 53 0F 2D 2E 
12671  FE90 30 4D 55 15     .BYTE  $30,$4D,$55,$15,$4A,$37,$34,$31
12671  FE94 4A 37 34 31 
12672  FE98 0D 28 49 16     .BYTE  $0D,$28,$49,$16,$4B,$4F,$4C,$29
12672  FE9C 4B 4F 4C 29 
12673  FEA0 19 43 45 12     .BYTE  $19,$43,$45,$12,$44,$2F,$2A,$2B
12673  FEA4 44 2F 2A 2B 
12674  FEA8 20 56 52 13     .BYTE  $20,$56,$52,$13,$46,$50,$08,$3D
12674  FEAC 46 50 08 3D 
12675  FEB0 02 5A 51 1B     .BYTE  $02,$5A,$51,$1B,$41,$18,$1F,$0C
12675  FEB4 41 18 1F 0C 
12676  FEB8 0A 42 54 14     .BYTE  $0A,$42,$54,$14,$47,$39,$36,$33
12676  FEBC 47 39 36 33 
12677  FEC0             
12678  FEC0             
12679  FEC0             
12680  FEC0             ; Keyboard layout (shift function)
12681  FEC0             KB_LAYOUT_SH: ; $FEC0
12682  FEC0 5B 6E 79 01     .BYTE  $5B,$6E,$79,$01,$68,$38,$35,$32
12682  FEC4 68 38 35 32 
12683  FEC8 09 78 77 21     .BYTE  $09,$78,$77,$21,$73,$0F,$2C,$2E
12683  FECC 73 0F 2C 2E 
12684  FED0 30 6D 75 25     .BYTE  $30,$6D,$75,$25,$6A,$37,$34,$31
12684  FED4 6A 37 34 31 
12685  FED8 0D 3C 69 26     .BYTE  $0D,$3C,$69,$26,$6B,$6F,$6C,$3E
12685  FEDC 6B 6F 6C 3E 
12686  FEE0 19 63 65 22     .BYTE  $19,$63,$65,$22,$64,$3F,$3A,$3B
12686  FEE4 64 3F 3A 3B 
12687  FEE8 5E 76 72 23     .BYTE  $5E,$76,$72,$23,$66,$70,$1D,$40
12687  FEEC 66 70 1D 40 
12688  FEF0 02 7A 71 1B     .BYTE  $02,$7A,$71,$1B,$61,$1A,$1E,$1C
12688  FEF4 61 1A 1E 1C 
12689  FEF8 5D 62 74 24     .BYTE  $5D,$62,$74,$24,$67,$39,$36,$33
12689  FEFC 67 39 36 33 
12690  FF00             
12691  FF00             
12692  FF00             
12693  FF00             ; Table for CALL vectors
12694  FF00             CALL_VECTORS: ; $FF00                        Vector>Target, Vector>Target, Vector>Target, Vector>Target
12695  FF00 DC B7 DC B6     .BYTE  $DC,$B7,$DC,$B6,$DC,$C6,$D0,$65 ; $FF(00)>$DCB7, $FF(02)>$DCB6, $FF(04)>$DCC6, $FF(06)>$D065
12695  FF04 DC C6 D0 65 
12696  FF08 DD D9 DE 5E     .BYTE  $DD,$D9,$DE,$5E,$DE,$97,$D4,$61 ; $FF(08)>$DDD9, $FF(0A)>$DE5E, $FF(0C)>$DE97, $FF(0E)>$D461
12696  FF0C DE 97 D4 61 
12697  FF10 DD 2D DF 93     .BYTE  $DD,$2D,$DF,$93,$DF,$FA,$DF,$F5 ; $FF(10)>$DD2D, $FF(12)>$DF93, $FF(14)>$DFFA, $FF(16)>$DFF5
12697  FF14 DF FA DF F5 
12698  FF18 DF 80 D2 E6     .BYTE  $DF,$80,$D2,$E6,$FA,$89,$FB,$2A ; $FF(18)>$DF80, $FF(1A)>$D2E6, $FF(1C)>$FA89, $FF(1E)>$FB2A
12698  FF1C FA 89 FB 2A 
12699  FF20 DF 72 DF 63     .BYTE  $DF,$72,$DF,$63,$DE,$AF,$DB,$87 ; $FF(20)>$DF72, $FF(22)>$DF63, $FF(24)>$DEAF, $FF(26)>$DB87
12699  FF24 DE AF DB 87 
12700  FF28 DB B1 D0 3E     .BYTE  $DB,$B1,$D0,$3E,$DC,$A6,$D6,$C0 ; $FF(28)>$DBB1, $FF(2A)>$D03E, $FF(2C)>$DCA6, $FF(2E)>$D6C0
12700  FF2C DC A6 D6 C0 
12701  FF30 DC 16 D0 71     .BYTE  $DC,$16,$D0,$71,$DF,$23,$DF,$0F ; $FF(30)>$DC16, $FF(32)>$D071, $FF(34)>$DF23, $FF(36)>$DF0F
12701  FF34 DF 23 DF 0F 
12702  FF38 CE 9F CF FB     .BYTE  $CE,$9F,$CF,$FB,$FA,$74,$FB,$9D ; $FF(38)>$CE9F, $FF(3A)>$CFFB, $FF(3C)>$FA74, $FF(3E)>$FB9D
12702  FF3C FA 74 FB 9D 
12703  FF40 C4 01 CA 58     .BYTE  $C4,$01,$CA,$58,$CA,$7A,$CA,$80 ; $FF(40)>$C401, $FF(42)>$CA58, $FF(44)>$CA7A, $FF(46)>$CA80
12703  FF44 CA 7A CA 80 
12704  FF48 DC F9 DC FD     .BYTE  $DC,$F9,$DC,$FD,$DC,$E9,$DC,$ED ; $FF(48)>$DCF9, $FF(4A)>$DCFD, $FF(4C)>$DCE9, $FF(4E)>$DCED
12704  FF4C DC E9 DC ED 
12705  FF50 DA 71 F6 63     .BYTE  $DA,$71,$F6,$63,$F7,$B0,$F7,$3D ; $FF(50)>$DA71, $FF(52)>$F663, $FF(54)>$F7B0, $FF(56)>$F73D
12705  FF54 F7 B0 F7 3D 
12706  FF58 F0 84 E5 73     .BYTE  $F0,$84,$E5,$73,$F6,$1B,$F7,$A7 ; $FF(58)>$F084, $FF(5A)>$E573, $FF(5C)>$F61B, $FF(5E)>$F7A7
12706  FF5C F6 1B F7 A7 
12707  FF60 F6 B4 F8 8B     .BYTE  $F6,$B4,$F8,$8B,$F7,$B5,$F7,$B9 ; $FF(60)>$F6B4, $FF(62)>$F88B, $FF(64)>$F7B5, $FF(66)>$F7B9
12707  FF64 F7 B5 F7 B9 
12708  FF68 F7 15 F8 8F     .BYTE  $F7,$15,$F8,$8F,$F6,$FB,$F0,$80 ; $FF(68)>$F715, $FF(6A)>$F88F, $FF(6C)>$F6FB, $FF(6E)>$F080
12708  FF6C F6 FB F0 80 
12709  FF70 F7 47 F7 CE     .BYTE  $F7,$47,$F7,$CE,$F7,$75,$F7,$5F ; $FF(70)>$F747, $FF(72)>$F7CE, $FF(74)>$F775, $FF(76)>$F75F
12709  FF74 F7 75 F7 5F 
12710  FF78 F7 2F F7 DD     .BYTE  $F7,$2F,$F7,$DD,$F6,$E6,$F0,$1A ; $FF(78)>$F72F, $FF(7A)>$F7DD, $FF(7C)>$F6E6, $FF(7E)>$F01A
12710  FF7C F6 E6 F0 1A 
12711  FF80 F7 07 F7 29     .BYTE  $F7,$07,$F7,$29,$EF,$00,$EB,$40 ; $FF(80)>$F707, $FF(82)>$F729, $FF(84)>$EF00, $FF(86)>$EB40
12711  FF84 EF 00 EB 40 
12712  FF88 ED F6 ED 5B     .BYTE  $ED,$F6,$ED,$5B,$EE,$1F,$ED,$B1 ; $FF(88)>$EDF6, $FF(8A)>$ED5B, $FF(8C)>$EE1F, $FF(8E)>$EDB1
12712  FF8C EE 1F ED B1 
12713  FF90 ED AB ED 00     .BYTE  $ED,$AB,$ED,$00,$EC,$5C,$EA,$78 ; $FF(90)>$EDAB, $FF(92)>$ED00, $FF(94)>$EC5C, $FF(96)>$EA78
12713  FF94 EC 5C EA 78 
12714  FF98 EC 74 EC EB     .BYTE  $EC,$74,$EC,$EB,$EC,$B7,$E4,$A0 ; $FF(98)>$EC74, $FF(9A)>$ECEB, $FF(9C)>$ECB7, $FF(9E)>$E4A0
12714  FF9C EC B7 E4 A0 
12715  FFA0 E2 34 E6 55     .BYTE  $E2,$34,$E6,$55,$B8,$88,$E4,$51 ; $FF(A0)>$E234, $FF(A2)>$E655, $FF(A4)>$B888, $FF(A6)>$E451
12715  FFA4 B8 88 E4 51 
12716  FFA8 B8 8B B8 8E     .BYTE  $B8,$8B,$B8,$8E,$E8,$8C,$B8,$91 ; $FF(A8)>$B88B, $FF(AA)>$B88E, $FF(AC)>$E88C, $FF(AE)>$B891
12716  FFAC E8 8C B8 91 
12717  FFB0 B8 94 B8 97     .BYTE  $B8,$94,$B8,$97,$B8,$9A,$B8,$9D ; $FF(B0)>$B894, $FF(B2)>$B897, $FF(B4)>$B89A, $FF(B6)>$B89D
12717  FFB4 B8 9A B8 9D 
12718  FFB8 B8 A0 F7 63     .BYTE  $B8,$A0,$F7,$63,$E4,$B7,$E4,$A8 ; $FF(B8)>$B8A0, $FF(BA)>$F763, $FF(BC)>$E4B7, $FF(BE)>$E4A8
12718  FFBC E4 B7 E4 A8 
12719  FFC0 DD 08 DC D4     .BYTE  $DD,$08,$DC,$D4,$DC,$D5,$DD,$13 ; $FF(C0)>$DD08, $FF(C2)>$DCD4, $FF(C4)>$DCD5, $FF(C6)>$DD13
12719  FFC4 DC D5 DD 13 
12720  FFC8 DC C5 C0 01     .BYTE  $DC,$C5,$C0,$01,$DD,$C8,$D4,$5D ; $FF(C8)>$DCC5, $FF(CA)>$C001, $FF(CC)>$DDC8, $FF(CE)>$D45D
12720  FFCC DD C8 D4 5D 
12721  FFD0 D5 F9 DD 1A     .BYTE  $D5,$F9,$DD,$1A,$DE,$E3,$DE,$D1 ; $FF(D0)>$D5F9, $FF(D2)>$DD1A, $FF(D4)>$DEE3, $FF(D6)>$DED1
12721  FFD4 DE E3 DE D1 
12722  FFD8 DF 3B C0 0E     .BYTE  $DF,$3B,$C0,$0E,$DE,$BC,$D6,$DF ; $FF(D8)>$DF3B, $FF(DA)>$C00E, $FF(DC)>$DEBC, $FF(DE)>$D6DF
12722  FFDC DE BC D6 DF 
12723  FFE0 CD 8B C4 00     .BYTE  $CD,$8B,$C4,$00,$CD,$89,$F7,$0D ; $FF(E0)>$CD8B, $FF(E2)>$C400, $FF(E4)>$DEBC, $FF(E6)>$F70D
12723  FFE4 CD 89 F7 0D 
12724  FFE8 F6 61 F7 9C     .BYTE  $F6,$61,$F7,$9C,$F7,$57,$F7,$CC ; $FF(E8)>$F661, $FF(EA)>$F79C, $FF(EC)>$F757, $FF(EE)>$F7CC
12724  FFEC F7 57 F7 CC 
12725  FFF0 EF BA EE 71     .BYTE  $EF,$BA,$EE,$71,$DB,$BC,$DD,$B5 ; $FF(F0)>$EFBA, $FF(F2)>$EE71, $FF(F4)>$D8BC, $FF(F6)>$DDB5
12725  FFF4 DB BC DD B5 
12726  FFF8 E1 71 E2 2C     .BYTE  $E1,$71,$E2,$2C,$E2,$2B,$E0,$00 ; $FF(F8)>$E171, $FF(FA)>$E22C, $FF(FC)>$E22B, $FF(FE)>$E000
12726  FFFC E2 2B E0 00 
12727  10000             
12728  10000             .END
tasm: Number of errors = 0
